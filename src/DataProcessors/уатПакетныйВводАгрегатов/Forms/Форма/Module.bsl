
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("ТипАгрегата") Тогда
		ТипАгрегата = Параметры.Отбор.ТипАгрегата;
		Параметры.Отбор.Удалить("ТипАгрегата");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	Если Не ЗначениеЗаполнено(СерияКоличество) Тогда
		СерияКоличество = 2;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипАгрегата) Тогда
		Элементы.ТипАгрегата.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьЭлементовФормы();
	ПриИзмененииТипаАгрегата();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипАгрегатаПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовФормы();
	ПриИзмененииТипаАгрегата();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Модель) Тогда
		ТипАгрегата       = ПолучитьТипАгрегатаПоМодели(Модель);
		ПараметрВыработки = ПолучитьПараметрВыработкиПоМодели(Модель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МодельНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	Если ЗначениеЗаполнено(ТипАгрегата) тогда
		СтруктураПараметров.Вставить("ТипАгрегата", ТипАгрегата);
	КонецЕсли;
	
	ФормаВыбора = ПолучитьФорму("Справочник.уатМоделиАгрегатов.ФормаВыбора", СтруктураПараметров, Элемент);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура кнВыполнить(Команда)
	
	ТекстСообщения = "";
	Если Не ЗначениеЗаполнено(ТипАгрегата) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='not specified car part type;';ru='не указан тип агрегата;'") + Символы.ПС;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Модель) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='not specified model of car part;';ru='не указана модель агрегата;'") + Символы.ПС;
	КонецЕсли;
	Если СерияКоличество = 0 Или Не ЗначениеЗаполнено(СерияНачальныйНомер) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='serial number data is not specified;';ru='не указаны данные по серийным номерам;'") + Символы.ПС;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ТекстНСТР = НСтр("en='You can not perform batch generation for the following reasons:';ru='Невозможно выполнить пакетное формирование по следующим причинам:'") + " " + Символы.ПС + ТекстСообщения;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокСН();
	
	СписокАгрегатов = ПолучитьСписокАгрегатовПоСерийнымНомерам();
	Если СписокАгрегатов.Количество() Тогда
		ТекстСообщения = НСтр("en='For generated serial numbers in system are already have car parts. Continue?';ru='Для сформированных серийных номеров в системе уже имеются агрегаты. Продолжить?'");
		Для Каждого ТекЭлем ИЗ СписокАгрегатов Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + " " + ТекЭлем.Наименование + " (" + НСтр("en='serial number';ru='с/н'") + ": " + ТекЭлем.СерийныйНомер + ")";
		КонецЦикла;
		Ответ = Неопределено;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("кнВыполнитьЗавершение", ЭтотОбъект), ТекстСообщения,РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Нет, НСтр("en='Car part record';ru='Запись агрегата'"));
		Возврат;
	КонецЕсли;
	
	кнВыполнитьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьШаблон(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОбъектНастройки", "Справочник_уатСерииНоменклатуры");
	ПараметрыФормы.Вставить("ТипАгрегата",     ТипАгрегата);
	
	ОткрытьФорму("ОбщаяФорма.уатНастройкаШаблона", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьТипАгрегатаПоМодели(Модель)
	
	Возврат Модель.ТипАгрегата;
	
КонецФункции // ПолучитьТипАгрегатаПоМодели()

&НаСервереБезКонтекста
Функция ПолучитьПараметрВыработкиПоМодели(Модель)
	
	Возврат Модель.ПараметрВыработки;
	
КонецФункции // ПолучитьТипАгрегатаПоМодели()

&НаКлиенте
Процедура ПриИзмененииТипаАгрегата()
	
	Если ЗначениеЗаполнено(Модель) И ПолучитьТипАгрегатаПоМодели(Модель) <> ТипАгрегата Тогда
		Модель = ПредопределенноеЗначение("Справочник.уатМоделиАгрегатов.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСН()
	
	ОбрОб = РеквизитФормыВЗначение("Объект");
	СписокСН = ОбрОб.СоздатьСписокСерийныхНомеров(СерияНачальныйНомер, СерияКоличество);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокАгрегатовПоСерийнымНомерам()
	
	МассивРезультат = Новый Массив;
	ТЗ = уатОбщегоназначения.ПолучитьСписокАгрегатовПоСерийнымНомерам(СписокСН);
	Для Каждого ТекЭлемент Из ТЗ Цикл 
		СтрокаРезультат = Новый Структура;
		СтрокаРезультат.Вставить("Наименование",  ТекЭлемент.Значение.Наименование);
		СтрокаРезультат.Вставить("СерийныйНомер", ТекЭлемент.Значение.СерийныйНомер);
		МассивРезультат.Добавить(СтрокаРезультат);
	КонецЦикла;
	
	Возврат МассивРезультат;
	
КонецФункции

&НаСервере
Функция СоздатьАгрегаты()
	
	СписокСформированныхАгрегатов = Новый СписокЗначений;
	
	Для Каждого ТекЭлементСписка Из СписокСН Цикл
		СН = ТекЭлементСписка.Значение; 
		
		НовыйАгрегат = Справочники.уатСерииНоменклатуры.СоздатьЭлемент();
		НовыйАгрегат.ТипАгрегата       = ТипАгрегата;
		НовыйАгрегат.Модель            = Модель;
		НовыйАгрегат.Номенклатура      = Номенклатура;
		НовыйАгрегат.СерийныйНомер     = СН;
		НовыйАгрегат.Родитель          = ГруппаАгрегатов;
		НовыйАгрегат.ПараметрВыработки = ПараметрВыработки;
		Если ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
			НовыйАгрегат.Валюта = Валюта;
			НовыйАгрегат.ПервоначальнаяСтоимость = Цена;
		Иначе
			НовыйАгрегат.НачалоЭксплуатации = НачалоЭксплуатации;
			НовыйАгрегат.ГоденДо            = ГоденДо;
		КонецЕсли;
		
		Попытка 
			НовыйАгрегат.Записать();
		Исключение
			ТекстСообщения = НСтр("en='Failed to record car part:';ru='Не удалось записать агрегат:'") + " " + НовыйАгрегат.Наименование;
			уатОбщегоНазначенияСервер.СообщитьОбОшибке(Объект, ТекстСообщения,,,,);
			Продолжить;
		КонецПопытки;
		СписокСформированныхАгрегатов.Добавить(НовыйАгрегат.Ссылка);
	КонецЦикла;
	
	Возврат СписокСформированныхАгрегатов;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьИДоступностьЭлементовФормы()
	
	Если ТипАгрегата = ПредопределенноеЗначение("Справочник.уатТипыАгрегатов.Шина") Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаШины;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаАккумуляторы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнВыполнитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	кнВыполнитьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура кнВыполнитьФрагмент()
	
	СписокСформированныхАгрегатов = СоздатьАгрегаты();
	
	ЭтотОбъект.ЗакрыватьПриВыборе = Истина;
	ОповеститьОВыборе(СписокСформированныхАгрегатов);
	
КонецПроцедуры

#КонецОбласти
