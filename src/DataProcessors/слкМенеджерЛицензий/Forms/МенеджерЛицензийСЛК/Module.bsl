#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Обработки.слкМенеджерЛицензий.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);
	
	ЗаполнитьСерииКлючейЗащитыСервер();
	ОбновитьСтатусыСерийКлючейЗащитыСервер("ПодключитьЕслиНеЗапущен");
	
	Элементы.УправлениеОбщимиНастройками.Доступность = ПравоДоступа("АдминистрированиеДанных", Метаданные);
	Элементы.ТаблицаСерийКлючейЗащитыГруппаОбщиеНастройки.Доступность = ПравоДоступа("АдминистрированиеДанных", Метаданные);
	
	ИспользуетсяРазделениеДанных = Константы["ИспользоватьРазделениеПоОбластямДанных"].Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Контроль версии компоненты защиты.
	Если НЕ ИспользуетсяРазделениеДанных Тогда

		СообщениеИсключения = "";
		слкМенеджерЗащиты.ПроверитьАктуальностьВерсииКомпонентыЗащиты(ВерсияКомпонентыСЛК, СообщениеИсключения, Ложь);
			
		Если ЗначениеЗаполнено(СообщениеИсключения) Тогда
			ПоказатьПредупреждение(, СообщениеИсключения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если Модифицированность Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСохранитьНастройкиМенеджера", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сохранить настройки менеджера лицензий?'"), Режим, 0);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "слкИзмененСоставЛицензий" Тогда
		ОбновитьСтатусыСерийКлючейЗащитыСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыМенеджераЛицензийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаКонсольСервера Тогда
		ВыполнитьОбновлениеКонсолиСервера();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделКонсолиПриИзменении(Элемент)
	
	ВыполнитьОбновлениеКонсолиСервера();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСерийКлючейЗащиты

&НаКлиенте
Процедура ТаблицаСерийКлючейЗащитыПриАктивизацииСтроки(Элемент)
	
	ВыполнитьОбновлениеКонсолиСервераСерии();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСерийКлючейЗащитыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ВыполнитьОбновлениеКонсолиСервераСерии();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаФайлыДанных

&НаКлиенте
Процедура ТаблицаФайлыДанныхПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьКонсольСервера(Команда)

	ВыполнитьОбновлениеКонсолиСервера();

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьПриложениеКонсолиСервераСерии(Команда)

	ТекущиеДанные = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда	
		АдресКонсоли = АдресКонсолиСЛК(ТекущиеДанные.Серия);
	Иначе
		АдресКонсоли = АдресКонсолиСЛК("");
	КонецЕсли;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения, АдресКонсоли);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьПриложениеКонсолиСервера(Команда)

	ЗапуститьПриложение(АдресКонсолиСЛК(,, Истина));

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКонсольСервераСерии(Команда)
	
	ВыполнитьОбновлениеКонсолиСервераСерии();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСерииКлючейЗащиты(Команда)
	ЗаполнитьСерииКлючейЗащитыСервер();
КонецПроцедуры

#Область ОбращениеКМенеджеруЗащиты

&НаКлиенте
Процедура ПроверитьЛицензиюСеанса(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	СостояниеЛицензииСеанса = слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус");
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки, ТекущаяСерия.Серия);
	Иначе
		ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 %2'"),
			ТекущаяСерия.Серия,
			?(СостояниеЛицензииСеанса, НСтр("ru = 'подключен.'"), НСтр("ru = 'не подключен.'")));
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключить(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СохраненыПерсональныеНастройки Тогда
		СохранитьПерсональныеНастройкиМенеджераСерииЗащитыНаКлиенте();
	КонецЕсли;
	
	ОписаниеОшибки = "";
	слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПодключитьЕслиНеЗапущен");
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки);
	КонецЕсли;
	
	Оповестить("слкИзмененСоставЛицензий");
	
КонецПроцедуры

&НаКлиенте
Процедура Отключить(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "Отключить");
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки);
	КонецЕсли;
	
	Оповестить("слкИзмененСоставЛицензий");
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйНомерКлюча(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Если слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус") Тогда
		НомерКлюча = слкМенеджерЗащиты.ПолучитьНомерКлюча(ТекущаяСерия.Серия, ОписаниеОшибки);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 не подключен'"), ТекущаяСерия.Серия));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки, ТекущаяСерия.Серия);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Серийный номер ключа серии %1, лицензию которого занимает текущий сеанс: %2'"),
			ТекущаяСерия.Серия,
			НомерКлюча));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКлючей(Команда)
		
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Если слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус") Тогда
		СписокКлючей = слкМенеджерЗащиты.ПолучитьСписокКлючей(ТекущаяСерия.Серия, ОписаниеОшибки);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 не подключен'"), ТекущаяСерия.Серия));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки, ТекущаяСерия.Серия);
	Иначе
		
		СписокКлючейСтрокой = "";
		Для Ин = 0 По СписокКлючей.ВГраница() Цикл
			СписокКлючейСтрокой = СтрШаблон(НСтр("ru = '%1
				|
				|Номер ключа: %2, рег.номер: %3, кол-во лицензий: %4, дата активации: %5'"),
				СписокКлючейСтрокой,
				СписокКлючей[Ин].KeyNo,
				СписокКлючей[Ин].RegNo,
				СписокКлючей[Ин].LicenceCount,
				Формат(СписокКлючей[Ин].ActivationDate, "ДЛФ=D"));
		КонецЦикла;
		
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Список установленных на сервере СЛК ключей серии %1: %2'"), ТекущаяСерия.Серия, СписокКлючейСтрокой));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныеНомераКлючей(Команда)
		
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Если слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус") Тогда
		РегистрационныеНомераКлючей = слкМенеджерЗащиты.ПолучитьРегНомераКлючей(ТекущаяСерия.Серия, ОписаниеОшибки);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 не подключен'"), ТекущаяСерия.Серия));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки, ТекущаяСерия.Серия);
	Иначе
		ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Список регистрационных номеров установленных на сервере СЛК ключей серии %1:
			|%2'"), ТекущаяСерия.Серия, РегистрационныеНомераКлючей);
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныеНомераОсновныхКлючей(Команда)
		
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Если слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус") Тогда
		РегистрационныеНомераКлючей = слкМенеджерЗащиты.ПолучитьРегНомераКлючей(ТекущаяСерия.Серия, ОписаниеОшибки, 3);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 не подключен'"), ТекущаяСерия.Серия));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		слкМенеджерЗащиты.СообщитьОбОшибкеСЛК(ОписаниеОшибки, ТекущаяСерия.Серия);
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Список регистрационных номеров установленных на сервере СЛК ключей серии %1: %2'"),
			ТекущаяСерия.Серия, РегистрационныеНомераКлючей));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоЛицензий(Команда)
		
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = "";
	Если НЕ слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(ТекущаяСерия.Серия, ОписаниеОшибки, "ПроверитьСтатус") Тогда
		ПоказатьПредупреждение(,СтрШаблон(НСтр("ru = 'Менеджер лицензий серии ключей %1 не подключен'"), ТекущаяСерия.Серия));
		Возврат;
	КонецЕсли;
	
	ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Количество лицензий ключей серии %1:
		|	- общее: %2
		|	- использованных: %3
		|	- свободных: %4'"),
		ТекущаяСерия.Серия,
		слкМенеджерЗащиты.ПолучитьОбщееКоличествоЛицензий(ТекущаяСерия.Серия),
		слкМенеджерЗащиты.ПолучитьОбщееКоличествоЛицензий(ТекущаяСерия.Серия, 1),
		слкМенеджерЗащиты.ПолучитьОбщееКоличествоЛицензий(ТекущаяСерия.Серия, 2));
	ПоказатьПредупреждение(,ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область НастройкиМенеджераЗащиты

&НаКлиенте
Процедура СохранитьНастройкиМенеджераЗащиты(Команда)
	
	СохранитьНастройкиМенеджераЗащитыНаСервере();	
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПерсональныеНастройкиМенеджераЗащиты(Команда)
	
	СохранитьНастройкиМенеджераЗащитыНаСервере(Истина);	
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
	СохраненыПерсональныеНастройки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройкиМенеджераЗащиты(Команда)
	
	УдалитьНастройкиМенеджераЗащитыНаСервере();	
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПерсональныеНастройкиМенеджераЗащиты(Команда)
	
	УдалитьНастройкиМенеджераЗащитыНаСервере(Истина);	
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

#КонецОбласти

#Область НастройкиМенеджераСерииЗащиты

&НаКлиенте
Процедура СохранитьНастройкиМенеджераСерииЗащиты(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиМенеджераСерииЗащитыНаСервере(ТекущаяСерия.Серия);
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПерсональныеНастройкиМенеджераСерииЗащиты(Команда)
	
	СохранитьПерсональныеНастройкиМенеджераСерииЗащитыНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройкиМенеджераСерииЗащиты(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНастройкиМенеджераСерииЗащитыНаСервере(ТекущаяСерия.Серия);
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПерсональныеНастройкиМенеджераСерииЗащиты(Команда)
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНастройкиМенеджераСерииЗащитыНаСервере(ТекущаяСерия.Серия, Истина);
	
	Модифицированность = Ложь;	
	ЗаполнитьСерииКлючейЗащитыСервер();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	слкМенеджерЗащитыКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьПерсональныеНастройкиМенеджераСерииЗащитыНаКлиенте()
	
	ТекущаяСерия = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущаяСерия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиМенеджераСерииЗащитыНаСервере(ТекущаяСерия.Серия, Истина);
	
	Модифицированность = Ложь;
	ЗаполнитьСерииКлючейЗащитыСервер();
	
	СохраненыПерсональныеНастройки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаСохранитьНастройкиМенеджера(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    СохранитьНастройкиМенеджераЗащитыНаСервере();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСерииКлючейЗащитыСервер(Активные = Истина)
	
	Обработки.слкМенеджерЛицензий.ЗаполнитьСерииКлючейЗащитыСервер(ЭтотОбъект, Активные);
	
	ОбновитьСтатусыСерийКлючейЗащитыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыСерийКлючейЗащитыСервер(КомандаМенеджераЗащиты = "ПроверитьСтатус")
	
	Обработки.слкМенеджерЛицензий.ОбновитьСтатусыСерийКлючейЗащитыСервер(ЭтотОбъект, КомандаМенеджераЗащиты);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиМенеджераЗащитыНаСервере(ПерсональныеНастройки = Ложь)
	
	Для каждого СтрокаСерииКлючейЗащиты Из ТаблицаСерийКлючейЗащиты Цикл
		СохранитьНастройкиМенеджераСерииЗащитыНаСервере(СтрокаСерииКлючейЗащиты.Серия, ПерсональныеНастройки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкиМенеджераЗащитыНаСервере(ПерсональныеНастройки = Ложь)
	
	Для каждого СтрокаСерииКлючейЗащиты Из ТаблицаСерийКлючейЗащиты Цикл
		УдалитьНастройкиМенеджераСерииЗащитыНаСервере(СтрокаСерииКлючейЗащиты.Серия, ПерсональныеНастройки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиМенеджераСерииЗащитыНаСервере(Серия, ПерсональныеНастройки = Ложь)
	
	Обработки.слкМенеджерЛицензий.СохранитьНастройкиМенеджераСерииЗащитыНаСервере(ЭтотОбъект, Серия, ПерсональныеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкиМенеджераСерииЗащитыНаСервере(Серия, ПерсональныеНастройки = Ложь)
	
	Если ПерсональныеНастройки Тогда
		слкМенеджерЗащитыСервер.УдалитьПерсональныеНастройкиМенеджераСерииЗащиты(Серия);
	Иначе
		слкМенеджерЗащитыСервер.УдалитьНастройкиМенеджераСерииЗащиты(Серия);
	КонецЕсли;
	
КонецПроцедуры

#Область КонсольСервера

&НаКлиенте
Функция АдресКонсолиСЛК(Серия = Неопределено, РазделКонсоли = "", ОтображатьМеню = Ложь)
	
	МассивПараметров = Новый Массив;
	Если Серия <> Неопределено Тогда
		МассивПараметров.Добавить("serie=" + Серия);
		МассивПараметров.Добавить("header=false");
	КонецЕсли;
	Если НЕ ОтображатьМеню Тогда
		МассивПараметров.Добавить("menu=false");
	КонецЕсли;
	
	АдресКонсоли = АдресКонсолиСЛКИзТаблицы(Серия) + РазделКонсоли;
	Если МассивПараметров.Количество() > 0 Тогда
		АдресКонсоли = АдресКонсоли + "?" + СтрСоединить(МассивПараметров, "&");
	КонецЕсли;
	
	Возврат АдресКонсоли;
	
КонецФункции

&НаКлиенте
Функция АдресКонсолиСЛКИзТаблицы(Серия = Неопределено)
	
	СтрокаТаблицы = Неопределено;	
	Если Серия = Неопределено Тогда
			
		АктивныеСерииКлючей = ТаблицаСерийКлючейЗащиты.НайтиСтроки(Новый Структура("Запущен", Истина));	
		Если АктивныеСерииКлючей.Количество() > 0 Тогда
			// По первой из активных серий
			СтрокаТаблицы = АктивныеСерииКлючей[0];
		ИначеЕсли ТаблицаСерийКлючейЗащиты.Количество() > 0 Тогда
			// По первой из доступных серий
			СтрокаТаблицы = ТаблицаСерийКлючейЗащиты[0];
		КонецЕсли;
		
	Иначе
		
		СтрокиСерииСЛК = ТаблицаСерийКлючейЗащиты.НайтиСтроки(Новый Структура("Серия", Серия));	
		Если СтрокиСерииСЛК.Количество() > 0 Тогда
			// Из строки серии СЛК
			СтрокаТаблицы = СтрокиСерииСЛК[0];
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокаТаблицы <> Неопределено Тогда
		// По первой из доступных серий
		ИмяСервера = СтрокаТаблицы.Host;
		Порт = СтрокаТаблицы.Port;	
	Иначе
		// Значения по умолчанию
		ИмяСервера = "localhost";
		Порт = "9099";		
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"http://%1:%2/",
		?(ПустаяСтрока(ИмяСервера), "localhost", ИмяСервера),
		?(ПустаяСтрока(Порт), "9099", Порт)
	);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОбновлениеКонсолиСервераСерии()
	
	ТекущиеДанные = Элементы.ТаблицаСерийКлючейЗащиты.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда	
		АдресКонсольСервераСерии = АдресКонсолиСЛК(ТекущиеДанные.Серия);
	Иначе
		АдресКонсольСервераСерии = АдресКонсолиСЛК("");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбновлениеКонсолиСервера()
	
	АдресКонсольСервера = АдресКонсолиСЛК(, ?(РазделКонсоли = "main", "", РазделКонсоли));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти