
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНастройки();
	СформироватьТаблицуМаршрутовСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда 
		Возврат;
	КонецЕсли;
	
	СохранитьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбранныеМаршруты = Новый Массив;
	Для Каждого ТекСтрока Из Маршруты Цикл
		Если ТекСтрока.ФлагВыбора Тогда
			ВыбранныеМаршруты.Добавить(ТекСтрока.Маршрут);
		КонецЕсли;
	КонецЦикла;
	
	РезультатЗакрытия = Новый Структура;
	РезультатЗакрытия.Вставить("ТС", ВыбранныеТС(ВыбранныеМаршруты));
	РезультатЗакрытия.Вставить("Маршруты", ВыбранныеМаршруты);
	ОповеститьОВыборе(РезультатЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого ТекСтрока Из Маршруты Цикл
		ТекСтрока.ФлагВыбора = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого ТекСтрока Из Маршруты Цикл
		ТекСтрока.ФлагВыбора = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМаршрут(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", Элементы.СписокМаршрутов.ТекущиеДанные.Маршрут);
	Форма = ПолучитьФорму("Справочник.уатМаршруты.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
	Форма.ТолькоПросмотр = Истина;
	Форма.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокМаршрутов

&НаКлиенте
Процедура СписокМаршрутовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "СписокМаршрутовФлагВыбора" Тогда
		Если НЕ Элемент.ТекущиеДанные.ФлагВыбора Тогда
			Если СписокОтбора.НайтиПоЗначению(Элемент.ТекущиеДанные.Маршрут) = Неопределено Тогда 
				СписокОтбора.Добавить(Элемент.ТекущиеДанные.Маршрут) 
			КонецЕсли;
		Иначе
			СписокОтбора.Удалить(СписокОтбора.НайтиПоЗначению(Элемент.ТекущиеДанные.Маршрут));
		КонецЕсли;
	ИначеЕсли Поле.Имя = "СписокМаршрутовМаршрут" Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.Маршрут);
		Форма = ПолучитьФорму("Справочник.уатМаршруты.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
		Форма.ТолькоПросмотр = Истина;
		Форма.Открыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиКомпоновкиНастройкиОтбор

&НаКлиенте
Процедура НастройкиКомпоновкиНастройкиОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СформироватьТаблицуМаршрутовСервер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВыбранныеТС(ВыбранныеМаршруты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатМаршрутыТранспортныеСредства.ТС КАК ТС
	|ИЗ
	|	Справочник.уатМаршруты.ТранспортныеСредства КАК уатМаршрутыТранспортныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.уатМаршруты КАК уатМаршруты
	|		ПО уатМаршрутыТранспортныеСредства.Ссылка = уатМаршруты.Ссылка
	|ГДЕ
	|	уатМаршруты.Ссылка В(&ВыбранныеМаршруты)";
	
	Запрос.УстановитьПараметр("ВыбранныеМаршруты", ВыбранныеМаршруты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивРезультата = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивРезультата.Добавить(ВыборкаДетальныеЗаписи.ТС);
	КонецЦикла;
	
	Возврат МассивРезультата;

КонецФункции

&НаСервере
Функция ПолучитьМакетКомпоновки()
	Возврат Обработки.уатАРМЛогиста_уэ.ПолучитьМакет("КомпоновкаДанныхМаршруты");
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройки()
	
	МакетКомпоновки            = ПолучитьМакетКомпоновки();
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.НастройкиПоУмолчанию);
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда 
		НастройкиОтбораМаршрутов = ХранилищеНастроекДанныхФорм.Загрузить(
			"Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораТСПоМаршруту",
			"уатАРМЛогиста_НастройкиКомпоновщикаМаршрутов_Отбор"
		);
		Если Не НастройкиОтбораМаршрутов = Неопределено 
			И ТипЗнч(НастройкиОтбораМаршрутов) = Тип("ХранилищеЗначения") 
			И Не НастройкиОтбораМаршрутов.Получить() = Неопределено Тогда
			
			Для Каждого ТекОтбор Из НастройкиОтбораМаршрутов.Получить().Элементы Цикл 
				НовыйОтбор = НастройкиКомпоновки.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекОтбор);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// {pugili 05.11.2020}
	// Снимается признак использования для некорректных настроек, чтобы не получилась ошибка открытия формы.
	НастройкиКомпоновки.Восстановить();
	// {/pugili 05.11.2020}
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	ХранилищеНастроекДанныхФорм.Сохранить(
		"Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораТСПоМаршруту",
		"уатАРМЛогиста_НастройкиКомпоновщикаМаршрутов_Отбор",
		Новый ХранилищеЗначения(НастройкиКомпоновки.Настройки.Отбор)
	);
	
КонецПроцедуры
	
&НаСервере
Процедура СформироватьТаблицуМаршрутовСервер()
	
	ВыбранныеМаршруты = Новый Массив;
	Для Каждого ТекСтрока Из Маршруты Цикл
		Если ТекСтрока.ФлагВыбора Тогда
			ВыбранныеМаршруты.Добавить(ТекСтрока.Маршрут);
		КонецЕсли;
	КонецЦикла;
	Маршруты.Очистить();
	
	Настройки = НастройкиКомпоновки.ПолучитьНастройки();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ПолучитьМакетКомпоновки(), Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ДеревоМаршрутов = Новый ДеревоЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ПроцессорВывода.УстановитьОбъект(ДеревоМаршрутов);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для Каждого ТекМаршрут Из ДеревоМаршрутов.Строки Цикл
		
		ПривязанныеТС = "";
		Для Каждого ТекТС Из ТекМаршрут.Строки Цикл
			Если Не ПустаяСтрока(ПривязанныеТС) Тогда
				ПривязанныеТС = ПривязанныеТС + ", " + Строка(ТекТС.ТС);
			Иначе 
				ПривязанныеТС = Строка(ТекТС.ТС);
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока = Маршруты.Добавить();
		НоваяСтрока.Маршрут = ТекМаршрут.Маршрут;
		НоваяСтрока.ТС = ПривязанныеТС;
		Если ВыбранныеМаршруты.Найти(НоваяСтрока.Маршрут) <> Неопределено Тогда
			НоваяСтрока.ФлагВыбора = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти