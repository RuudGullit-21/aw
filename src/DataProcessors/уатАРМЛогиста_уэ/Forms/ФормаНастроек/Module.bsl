
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипКартографии = уатЭлектронныеКартыСервер.ПолучитьТипИспользуемыхЭлектронныхКарт();
	ТипАвторизации = уатЭлектронныеКартыСервер.ПолучитьНастройкуСервераКартографииМаршрутизации("Маршрутизация_ТипАвторизации");
	
	Если Параметры.Свойство("ФокусПараметрыПодбораТС") Тогда 
		Элементы.ГруппаСтраницыНастроек.ТекущаяСтраница = Элементы.ГруппаПараметрыПодбораТС;
	КонецЕсли;
	
	НастройкаУчитыватьГаражПриВыезде = Истина;
	
	Если Параметры.Свойство("ВариантНастройки") Тогда
		ВариантНастройки = Параметры.ВариантНастройки;
		ЗаполнитьНастройкиПоВарианту = Истина;
		Элементы.ГруппаВариантНастройкиОсновная.Видимость = Ложь;
		ПеречитатьНастройкиИзСправочника();
	КонецЕсли;

	Если НЕ Константы.уатИспользоватьАвтоматическуюМаршрутизацию_уэ.Получить() Тогда
		Элементы.ГруппаНастройкиМаршрутизацииОбщая.Видимость   = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗаполнитьНастройкиПоВарианту Тогда 
		ВариантНастройки = ВладелецФормы.ВариантНастройки;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВладелецФормы,
			ПолучитьНастройкиАРМЛогиста());
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВладелецФормы,
			ПолучитьНастройкиОптимизацииАРМЛогиста());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВариантНастройки) Тогда
		ПеречитатьНастройкиИзСправочника();
	КонецЕсли; 
	
	ПрочитатьНастройкиВнешнийМаршрутизатор();
	УстановитьВидимостьДоступность();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантНастройкиПриИзменении(Элемент)
	
	ПеречитатьНастройкиИзСправочника();
	УстановитьВидимостьДоступность();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантНастройкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПолучитьСписокВыбораВариантаНастройки("", ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантНастройкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" И Ожидание > 0 Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПолучитьСписокВыбораВариантаНастройки(Текст, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПечататьМаршрутныеЛистыПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОрганизацияМЛИсточникПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПроверятьНахождениеВЗонеПоФактическомуМестоположениюТСПриИзменении(Элемент)
	Если НастройкаПроверятьНахождениеВЗонеПоФактическомуМестоположениюТС Тогда
		Если НастройкаВремяАктуальностиКоординат = 0 Тогда
			НастройкаВремяАктуальностиКоординат = 60;
		КонецЕсли;
	Иначе
		Если НастройкаВремяАктуальностиКоординат <> 0 Тогда
			НастройкаВремяАктуальностиКоординат = 0;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИндивидуальныйГаражТСПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСжатияМаксВремяПриИзменении(Элемент)
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(НастройкаСжатияМаксВремя);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСжиматьЗаказыПриИзменении(Элемент)
	
	Если НастройкаСжиматьЗаказы Тогда 
		НастройкаУчитыватьСекцииТранспортныхСредств = Ложь;
		НастройкаСмешиватьГрузыВСекциях             = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьСекцииТранспортныхСредствПриИзменении(Элемент)
	
	Если НастройкаУчитыватьСекцииТранспортныхСредств Тогда 
		НастройкаСжиматьЗаказы          = Ложь;
		НастройкаИспользоватьРасчетТары = Ложь;
		
	Иначе 
		НастройкаСмешиватьГрузыВСекциях = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьДоступностьТСпоРадиусуПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВремяВыездаИзГаражаПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
	
КонецПроцедуры


&НаКлиенте
Процедура СтрокаРежимОптимизацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НастройкаРежимОптимизации",       НастройкаРежимОптимизации);
	ПараметрыФормы.Вставить("НастройкаПараметрРазмераЗаказа",  НастройкаПараметрРазмераЗаказа);
	ПараметрыФормы.Вставить("НастройкаПриоритетМаршрутизации", НастройкаПриоритетМаршрутизации);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормаНастроекРежимаОптимизации", ЭтотОбъект);
	ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаНастроекРежимаОптимизации", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИспользоватьРасчетТарыПриИзменении(Элемент)
	
	Если НастройкаИспользоватьРасчетТары Тогда 
		НастройкаУчитыватьСекцииТранспортныхСредств = Ложь;
		НастройкаСмешиватьГрузыВСекциях             = Ложь;
		
	Иначе 
		НастройкаУчитыватьГруппировкуВМаршрутномЛисте = Ложь;
		НастройкаУчитыватьУпаковкуВПаллетыВМЛ         = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьГруппировкуВМаршрутномЛистеПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьУпаковкуВПаллетыВМЛПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаГруппироватьПунктыВОднуМашинуПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмМаршрутизацииОчередейПриИзменении(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НастройкаРежимОптимизации;
	НастройкаАлгоритмМаршрутизации		 = 0;
	НастройкаАлгоритмМаршрутизацииСтрока = "Очередей";
	
	НастройкаУчитыватьГруппировкуВМаршрутномЛисте = Ложь;
	НастройкаУчитыватьУпаковкуВПаллетыВМЛ         = Ложь;
	НастройкаУчитыватьНаправленияПеревозки        = Ложь;
	НастройкаУчитыватьСекцииТранспортныхСредств   = Ложь;
	НастройкаСмешиватьГрузыВСекциях               = Ложь;
	НастройкаИспользоватьМногорейсовыеМаршруты    = Ложь;
	НастройкаРежимОптимизации                     = 0;
	НастройкаУчитыватьГруппыСовместимости         = Ложь;
	НастройкаГруппироватьПунктыВОднуМашину        = Ложь;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмМаршрутизацииКларкаРайтаПриИзменении(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НастройкаРежимОптимизации;
	НастройкаАлгоритмМаршрутизации		 = 1;
	НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" Тогда 
		НастройкаИндивидуальныйГаражТС = 0;
	КонецЕсли;
	
	НастройкаРежимОптимизации = 0;
	НастройкаУчитыватьГруппыСовместимости  = Ложь;
	НастройкаГруппироватьПунктыВОднуМашину = Ложь;
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмОптимизацииОчередейПриИзменении(Команда)  
	ЭтотОбъект.ТекущийЭлемент = Элементы.Оптимизация_НастройкаРежимОптимизации;

	НастройкаАлгоритмОптимизации = "Очередей";
	
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмОптимизацииЯндексПриИзменении(Команда)  
	ЭтотОбъект.ТекущийЭлемент = Элементы.Оптимизация_НастройкаРежимОптимизации;

	НастройкаАлгоритмОптимизации = "Яндекс";
	
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмОптимизацииRarusVRPПриИзменении(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.Оптимизация_НастройкаРежимОптимизации;

	НастройкаАлгоритмОптимизации = "RarusVRP";
	
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьМаксимальноеКоличествоГрузовПриИзменении(Элемент)
	НастройкаУчитыватьМаксимальноеКоличествоУпаковок = Ложь;
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьМаксимальноеКоличествоУпаковокПриИзменении(Элемент)
	НастройкаУчитыватьМаксимальноеКоличествоГрузов = Ложь;
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмВнешнейМаршрутизацииПриИзменении(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НастройкаРежимОптимизации;
	НастройкаАлгоритмМаршрутизации		 = 3;
	НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	
	НастройкаМаршрутизацияВФоновомРежиме           = Ложь;
	НастройкаКларкРайтРежимДоставки                = 0;
	НастройкаИндивидуальныйГаражТС                 = 0;
	НастройкаУчитыватьГруппировкуВМаршрутномЛисте  = Ложь;
	НастройкаУчитыватьУпаковкуВПаллетыВМЛ          = Ложь;
	НастройкаУчитыватьНаправленияПеревозки         = Ложь;
	НастройкаУчитыватьСекцииТранспортныхСредств    = Ложь;
	НастройкаСмешиватьГрузыВСекциях                = Ложь;
	НастройкаИспользоватьМногорейсовыеМаршруты     = Ложь;
	НастройкаМаксимальнаяПродолжительностьМаршрута = 0;
	НастройкаМаксимальноеРасстояниеМаршрута        = 0;
	НастройкаМаксимальноеЧислоЗаказовМаршрута      = 0;
	НастройкаМаксимальноеЧислоПунктовМаршрута      = 0;
	НастройкаВремяВыездаИзГаража                   = 0;
	НастройкаРежимОптимизации                      = 0;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмВнешнейМаршрутизацииRarusVRPПриИзменении(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НастройкаРежимОптимизации;
	НастройкаАлгоритмМаршрутизации		 = 4;
	НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	
	НастройкаМаршрутизацияВФоновомРежиме           = Ложь;
	НастройкаКларкРайтРежимДоставки                = 0;
	НастройкаИндивидуальныйГаражТС                 = 0;
	НастройкаУчитыватьГруппировкуВМаршрутномЛисте  = Ложь;
	НастройкаУчитыватьУпаковкуВПаллетыВМЛ          = Ложь;
	НастройкаУчитыватьНаправленияПеревозки         = Ложь;
	НастройкаУчитыватьСекцииТранспортныхСредств    = Ложь;
	НастройкаСмешиватьГрузыВСекциях                = Ложь;
	НастройкаИспользоватьМногорейсовыеМаршруты     = Ложь;
	НастройкаМаксимальнаяПродолжительностьМаршрута = 0;
	НастройкаМаксимальноеРасстояниеМаршрута        = 0;
	НастройкаМаксимальноеЧислоЗаказовМаршрута      = 0;
	НастройкаМаксимальноеЧислоПунктовМаршрута      = 0;
	НастройкаВремяВыездаИзГаража                   = 0;
	НастройкаРежимОптимизации                      = 0;
	
	НастройкаВозвратВГаражСобственныеТС = Истина;
	НастройкаВозвратВГаражПривлеченныеТС = Истина;
	НастройкаВозвратВГаражВиртуальныеТС = Истина;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАлгоритмМаршрутизацииФиксМаршрутов(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НастройкаРежимОптимизации;
	НастройкаАлгоритмМаршрутизации		 = 5;
	НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	
	НастройкаМаршрутизацияВФоновомРежиме           = Ложь;
	НастройкаКларкРайтРежимДоставки                = 0;
	НастройкаИндивидуальныйГаражТС                 = 0;
	НастройкаУчитыватьГруппировкуВМаршрутномЛисте  = Ложь;
	НастройкаУчитыватьУпаковкуВПаллетыВМЛ          = Ложь;
	НастройкаУчитыватьНаправленияПеревозки         = Ложь;
	НастройкаУчитыватьСекцииТранспортныхСредств    = Ложь;
	НастройкаСмешиватьГрузыВСекциях                = Ложь;
	НастройкаИспользоватьМногорейсовыеМаршруты     = Ложь;
	НастройкаМаксимальнаяПродолжительностьМаршрута = 0;
	НастройкаМаксимальноеРасстояниеМаршрута        = 0;
	НастройкаМаксимальноеЧислоЗаказовМаршрута      = 0;
	НастройкаМаксимальноеЧислоПунктовМаршрута      = 0;
	НастройкаВремяВыездаИзГаража                   = 0;
	НастройкаРежимОптимизации                      = 0;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаКларкРайтРежимДоставкиСоСкладаПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаКларкРайтРежимДоставкиНаСкладПриИзменении(Элемент)
	
	НастройкаУчитыватьГруппировкуВМаршрутномЛисте = Ложь;
	НастройкаУчитыватьУпаковкуВПаллетыВМЛ         = Ложь;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПонижающийКоэффициентЗагрузкиКузоваПоОбъемуПриИзменении(Элемент)
	
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОптимизацияПонижающийКоэффициентЗагрузкиКузоваПоОбъемуПриИзменении(Элемент)
	
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузоваОптимизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесуПриИзменении(Элемент)
	
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОптимизацияПонижающийКоэффициентЗагрузкиКузоваПоВесуПриИзменении(Элемент)
	
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузоваОптимизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВнешнийМаршрутизатор_routing_modeПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(НастройкаВнешнийМаршрутизатор_routing_mode) Тогда
		НастройкаВнешнийМаршрутизатор_routing_mode = "truck";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВнешнийМаршрутизатор_qualityПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(НастройкаВнешнийМаршрутизатор_quality) Тогда
		НастройкаВнешнийМаршрутизатор_quality = "normal";
	КонецЕсли;

	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчетЖесткихГабаритовГрузаПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИспользоватьЗакреплениеТСЗаказовНаТСзаГеозонамиПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьОкнаПоЗаказамПриМаршрутизацииПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьОкнаПоЗаказамПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРежимОптимизацииПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчитыватьГруппыСовместимостиПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУчетГеозонПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАдресВыездаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(НастройкаВремяВыездаТранспортныхСредств) И НЕ ЗначениеЗаполнено(НастройкаВремяВозвратаТранспортныхСредств) Тогда
		НастройкаВремяВыездаТранспортныхСредств			 = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(НастройкаАдресВыезда,"ВремядоступностиС");
		НастройкаВремяВозвратаТранспортныхСредств		 = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(НастройкаАдресВыезда,"ВремядоступностиПо");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВремяВозвратаТранспортныхСредствПриИзменении(Элемент)
	НастройкаВремяВозвратаТранспортныхСредств = НастройкаВремяВозвратаТранспортныхСредств - Секунда(НастройкаВремяВозвратаТранспортныхСредств);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОптимизацияВремяВозвратаТранспортныхСредствПриИзменении(Элемент)
	Оптимизация_НастройкаВремяВозвратаТранспортныхСредств = Оптимизация_НастройкаВремяВозвратаТранспортныхСредств - Секунда(Оптимизация_НастройкаВремяВозвратаТранспортныхСредств);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСохранятьЭтапыМаршрутизацииПриИзменении(Элемент)
	Элементы.НастройкаУказыватьНаименованиеЭтапаВручную.Видимость = НастройкаСохранятьЭтапыМаршрутизации;
КонецПроцедуры

&НаКлиенте
Процедура НастрокаРежимОтображенияМЛПриИзменении(Элемент)
	ТекстВопроса = НСтр("en='All generated routes will be cleared. Continue?';
	|ru='Все не сохраненные изменения в Маршрутных листах будут потеряны. Продолжить?'");
	ПоказатьВопрос(
	Новый ОписаниеОповещения("НастрокаРежимОтображенияМЛПриИзмененииВопрос", ЭтотОбъект),
	ТекстВопроса,
	РежимДиалогаВопрос.ОКОтмена);
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиСкладаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "depot");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиЗаказаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "location");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиКурьераИлиАвтомобиляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "vehicle");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиСменыКурьераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда 
		ПараметрыОткрытия = Новый Структура("ТипПресета", "vehicle-shift");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиГлобальныеОпцииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "options");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиСкладаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "depot");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиЗаказаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "location");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиКурьераИлиАвтомобиляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "vehicle");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиСменыКурьераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "vehicle-shift");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиГлобальныеОпцииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
	Если ТипАвторизации = "OAuth-токен" Тогда
		ПараметрыОткрытия = Новый Структура("ТипПресета", "options");
		ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораПресетов", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроекПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиГлобальныеОпции_ПриоритетНастроекПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиСкладаПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиЗаказаПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиКурьераИлиАвтомобиляПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиСменыКурьераПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПресетНастройкиГлобальныеОпцииПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиСкладаПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиЗаказаПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиКурьераИлиАвтомобиляПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиСменыКурьераПриИзменении(Элемент) 
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

&НаКлиенте
Процедура Оптимизация_ПресетНастройкиГлобальныеОпцииПриИзменении(Элемент)
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьНастройкиВнешнийМаршрутизатор();
	
	ПараметрыЗакрытия = Новый Структура();
	ПараметрыЗакрытия.Вставить("ВариантНастройки",  ВариантНастройки);
	ПараметрыЗакрытия.Вставить("СтруктураНастроек", ПолучитьСтруктуруНастроек());
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСжатие(Команда)
	
	Если НастройкаСжиматьЗаказы Тогда 
		Элементы.НастроитьСжатие.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНовыйВариантНастройки(Команда)
	
	ТекстВопроса = НСтр("ru = 'Будет создан новый элемент справочника ""Вариант настройки"".'") + Символы.ПС 
		+ НСтр("ru='Продолжить?';en='Do you want to continue?'");
		
	ПоказатьВопрос(
		Новый ОписаниеОповещения("СохранитьНовыйВариантНастройкиОтвет", ЭтотОбъект),
		ТекстВопроса,
		РежимДиалогаВопрос.ДаНет
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)   
	ЗаписатьНастройкиВнешнийМаршрутизатор();
	СохранитьНастройкиСервер(ВариантНастройки, ПолучитьСтруктуруНастроек());
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрСредняяСкоростьДвижения(Команда)
	
	ОткрытьФорму("РегистрСведений.уатСредняяСкоростьДвижения.ФормаСписка",, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьШтрафы(Команда)
	
	ОткрытьФорму(
		"Обработка.уатАРМЛогиста_уэ.Форма.НастройкаШтрафовВнешнийМаршрутизатор",
		Новый Структура("НастройкиВнешнийМаршрутизатор, флRarusVRP", НастройкиВнешнийМаршрутизатор,
		НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP"),
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("Подключаемый_НастроитьШтрафыЗавершение", ЭтотОбъект)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьГруппыСовместимости(Команда)
	
	ОткрытьФорму(
		"Обработка.уатАРМЛогиста_уэ.Форма.НастройкаНесовместимыхГрупп",
		Новый Структура("НастройкиВнешнийМаршрутизатор", НастройкиВнешнийМаршрутизатор),
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("Подключаемый_НастроитьГруппыСовместимостиЗавершение", ЭтотОбъект)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьНесовместимыеГеозоны(Команда)
	
	ОткрытьФорму(
		"Обработка.уатАРМЛогиста_уэ.Форма.НастройкаНесовместимыхГеозон",
		Новый Структура("НастройкиВнешнийМаршрутизатор", НастройкиВнешнийМаршрутизатор),
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("Подключаемый_НастроитьНесовместимыеГеозоныЗавершение", ЭтотОбъект)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьГруппыПунктов(Команда)
	
	ОткрытьФорму(
		"Обработка.уатАРМЛогиста_уэ.Форма.НастройкаГруппПунктов",
		Новый Структура("НастройкиВнешнийМаршрутизатор", НастройкиВнешнийМаршрутизатор),
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("Подключаемый_НастроитьГруппыПунктов", ЭтотОбъект)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиЯндекс(Команда)
	
	ОткрытьФорму("ОбщаяФорма.уатНастройкиЭлектронныхКарт");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиRarusVRP(Команда)
	ОткрытьФорму("ОбщаяФорма.уатНастройкиRarusVRP_уэ");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Если Элементы.НастройкаКопийПечатныхФормМЛ.Доступность <> НастройкаПечататьМаршрутныеЛисты Тогда
		Элементы.НастройкаКопийПечатныхФормМЛ.Доступность = НастройкаПечататьМаршрутныеЛисты;
	КонецЕсли;
	Если Элементы.НастройкаПечататьСразуНаПринтер.Доступность <> НастройкаПечататьМаршрутныеЛисты Тогда
		Элементы.НастройкаПечататьСразуНаПринтер.Доступность = НастройкаПечататьМаршрутныеЛисты;
	КонецЕсли;
	Если Элементы.НастройкаПечатнаяФормаМЛ.Доступность <> НастройкаПечататьМаршрутныеЛисты Тогда
		Элементы.НастройкаПечатнаяФормаМЛ.Доступность = НастройкаПечататьМаршрутныеЛисты;
	КонецЕсли;
	Если Элементы.НастройкаОрганизацияМЛ.Доступность <> (НастройкаОрганизацияМЛИсточник = 2) Тогда
		Элементы.НастройкаОрганизацияМЛ.Доступность = (НастройкаОрганизацияМЛИсточник = 2);
	КонецЕсли;
	Элементы.ФормаСохранитьНастройки.Видимость = ЗначениеЗаполнено(ВариантНастройки);
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	УстановитьВидимостьИДоступностьЭлементовДляОптимизации();
	
	Элементы.НастройкаВремяАктуальностиКоординат.Видимость = НастройкаПроверятьНахождениеВЗонеПоФактическомуМестоположениюТС;
	
	Элементы.РадиусДоступностиТС.Доступность = УчитыватьДоступностьТСпоРадиусу;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации()
	
	НастройкиФункциональныхОпций = ПолучитьНастройкиФункциональныхОпций();
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Ингит" Тогда
		НастройкаАлгоритмМаршрутизации		 = 0;
		НастройкаАлгоритмМаршрутизацииСтрока = "Очередей";
	КонецЕсли;
	
	Если ТипКартографии = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка") Тогда 
		Элементы.ГруппаМаршрутизацияРежимОптимизации.Видимость = Ложь;		
	Иначе 
		Элементы.ГруппаМаршрутизацияРежимОптимизации.Видимость = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока <> "ФиксМаршруты"
		И НастройкаАлгоритмМаршрутизацииСтрока <> "Яндекс"
		И НастройкаАлгоритмМаршрутизацииСтрока <> "RarusVRP"
		И НастройкаКларкРайтРежимДоставки = 2 Тогда
		НастройкаКларкРайтРежимДоставки = 1;
	КонецЕсли;
	
	Элементы.НастройкаВремяВыездаИндивидуальный.Видимость                         = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.НастройкаВремяВыездаОбщий.Видимость                                  = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	
	Элементы.НастройкаУчитыватьОкнаПоЗаказамПриМаршрутизацииНастройка.Видимость   = (НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Или НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP")
		И НастройкаУчитыватьОкнаПоЗаказамПриМаршрутизации;
		
	Элементы.НастройкаДействиеСПросроченнымиЗаказами.Видимость                    = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаКластеризации.Видимость                                     = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаНастройкаСжиматьЗаказы.Видимость                               = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастроитьСжатие.Видимость                                            = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаСжатияМаксОбъем.Видимость                                   = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" Тогда
		Элементы.НастройкаСжатияМаксОбъем.Подсказка = НСтр("ru = 'Максимальный объем сжатого заказа. Если указано 0, то используется 1/3 от среднего объема ТС, с учетом коэффициента загрузки кузова по объему.'");
	Иначе
		Элементы.НастройкаСжатияМаксОбъем.Подсказка = НСтр("ru = 'Максимальный объем сжатого заказа. Если указано 0, то используется 1/3 от среднего объема ТС.'");
	КонецЕсли;
	Элементы.НастройкаСжатияМаксВес.Видимость                                     = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" Тогда
		Элементы.НастройкаСжатияМаксВес.Подсказка = НСтр("ru = 'Максимальный вес сжатого заказа. Если указано 0, то используется 1/3 от средней грузоподъемности ТС, с учетом коэффициента загрузки кузова по весу.'");
	Иначе
		Элементы.НастройкаСжатияМаксВес.Подсказка = НСтр("ru = 'Максимальный вес сжатого заказа. Если указано 0, то используется 1/3 от средней грузоподъемности ТС.'");
	КонецЕсли;
	Элементы.НастройкаСжатияМаксУпак.Видимость                                    = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.НастройкаСжатияМаксВремя.Видимость                                   = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.НастройкаСжатияМаксРасстояние.Видимость                              = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.ГруппаНастройкаМаршрутизацияВФоновомРежиме.Видимость                 = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.ГруппаНастройкаИспользоватьВПриоритетеСобственныйТранспорт.Видимость = НЕ (НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" И НастройкаРежимОптимизации = 2) И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаУчитыватьОграниченияПоЗагрузкеТС.Видимость                     = НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.ГруппаНастройкаКларкРайтРежимДоставки.Видимость                      = НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.ГруппаНастройкаУчитыватьНаправленияПеревозки.Видимость               = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаМаксимальнаяПродолжительностьМаршрута.Видимость             = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаМаксимальноеРасстояниеМаршрута.Видимость                    = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ОткрытьРегистрСредняяСкоростьДвижения.Видимость                      = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" И НЕ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.НастройкаМаксимальноеЧислоПунктовМаршрута.Видимость                  = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ГруппаНастройкаУчитыватьСекцииТранспортныхСредств.Видимость          = НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.ГруппаНастройкаУчитыватьСекцииТранспортныхСредств.Доступность        = НастройкиФункциональныхОпций.уатИспользоватьРазмещениеВСекциях_уэ;
	Элементы.ГруппаНастройкаСмешиватьГрузыВСекциях.Видимость                      = НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	Элементы.ГруппаНастройкаСмешиватьГрузыВСекциях.Доступность                    = НастройкиФункциональныхОпций.уатИспользоватьРазмещениеВСекциях_уэ;
	Элементы.ГруппаНастройкаИспользоватьМногорейсовыеМаршруты.Видимость           = НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт";
	// {pugili 11.11.2020}
	Элементы.ГруппаНастройкаИспользоватьХарактеристикиЗаказовНаТС.Видимость       = (НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP")
		И НастройкиФункциональныхОпций.уатИспользоватьХарактеристикиЗаказовНаТС_уэ;
	// {/pugili 11.11.2020}
	Элементы.ОткрытьФормуНастройкиЯндекс.Видимость                                = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ОткрытьФормуНастройкиRarusVRP.Видимость                              = НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.ГруппаЭкспертныеНастройкиRarusVRP.Видимость                          = НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.НастройкаRarusVRPСредняяСкорость.Видимость                           = НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.НастройкаRarusVRPУчитыватьПропускнуюСпособностьСклада.Видимость      = НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	
	Элементы.ГруппаПараметрыМаршрутногоЛиста.Видимость                            = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаСклад.Видимость                                                = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаВремяВыезда.Видимость                                          = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаНастройкаУчитыватьОкнаПоЗаказамПриМаршрутизации.Видимость      = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	
	
	Элементы.ГруппаНастройкаПонижающийКоэффициентЗагрузкиКузова.Видимость = (НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Или НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты");
	Элементы.ГруппаНастройкаУчитыватьРазрешенныеТипыТС.Видимость          = (НастройкаАлгоритмМаршрутизацииСтрока = "Очередей" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт");
	Элементы.НастройкаИндивидуальныйГаражТС.Видимость                     = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей";
	Элементы.НастройкаОбщийГаражТС.Видимость                              = НастройкаАлгоритмМаршрутизацииСтрока = "Очередей";
	
	Элементы.НастройкаАлгоритмВнешнейМаршрутизации.Видимость           = Истина;
	
	Элементы.НастройкаВыездСоСкладаСобственныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездСоСкладаПривлеченныеТС.Видимость            = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездСоСкладаВиртуальныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездСоСкладаСобственныеТС.Доступность           = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездСоСкладаПривлеченныеТС.Доступность          = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездСоСкладаВиртуальныеТС.Доступность           = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.ГруппаНастройкаУчетГеозон.Видимость                       = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ГруппаНастройкаУчетГеозон.Доступность                     = ТипАвторизации = "OAuth-токен";
	Если НЕ Элементы.ГруппаНастройкаУчетГеозон.Доступность Тогда
		НастройкаУчетГеозон = Ложь;
	КонецЕсли;
	
	Элементы.НастройкаВыездИзГаражаСобственныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездИзГаражаПривлеченныеТС.Видимость            = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВыездИзГаражаВиртуальныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";

	// {pugili 09.11.2020}
	Элементы.НастройкаВозвратВГаражСобственныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВозвратВГаражПривлеченныеТС.Видимость            = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	Элементы.НастройкаВозвратВГаражВиртуальныеТС.Видимость             = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты";
	// {/pugili 09.11.2020}
	
	Элементы.НастройкаКларкРайтРежимДоставкиСоСклада.Видимость         = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.Видимость          = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаУчитыватьГаражПриВыезде.Видимость                = НЕ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	
	Элементы.НастройкаРежимДопланирования.Видимость                    = НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты" ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Тогда
		Элементы.НастройкаРежимДопланирования.Подсказка = 
			НСтр("ru='Допланирование позволяет добавлять новые Заказы на ТС в существующие неотправленные Маршрутные листы.
			|Во всех Маршрутных листах могут удаляться ранее размещенные Заказы на ТС и меняться последовательность пунктов.'");
	Иначе
		Элементы.НастройкаРежимДопланирования.Подсказка =
		НСтр("ru='Допланирование позволяет добавлять новые Заказы на ТС в существующие неотправленные Маршрутные листы.
			|При этом в Маршрутных листах не могут удаляться ранее размещенные Заказы на ТС и меняться их последовательность.'");
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты" Тогда
		Элементы.НастройкиРаспределенияПоМаршрутам.Видимость = Истина;
	Иначе
		Элементы.НастройкиРаспределенияПоМаршрутам.Видимость = Ложь;
	КонецЕсли;
	
	// {pugili 11.11.2020}
	Если НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.СписокВыбора.Очистить();
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.СписокВыбора.Добавить(1, Нстр("ru = 'Без ограничений'"));
		Элементы.ГруппаНастройкаКларкРайтРежимДоставки.ОтображатьЗаголовок = Истина;
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.Подсказка 
			= НСтр("ru='Перевозка заказов между произвольными пунктами'");
		Элементы.НастройкаКларкРайтРежимДоставкиСоСклада.Подсказка 
			= НСтр("ru='Погрузка по всем заказам выполняется на одном складе.
			|Рекомендуется использовать для заказов с нулевым временем стоянки в пункте отправления'");
	Иначе
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.СписокВыбора.Очистить();
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.СписокВыбора.Добавить(1, Нстр("ru = 'Клиенты ➞ Склад'; en = 'Clients ➞ Warehouse'"));
		Элементы.ГруппаНастройкаКларкРайтРежимДоставки.ОтображатьЗаголовок = Ложь;
		Элементы.НастройкаКларкРайтРежимДоставкиНаСклад.Подсказка = "";
		Элементы.НастройкаКларкРайтРежимДоставкиСоСклада.Подсказка = "";
	КонецЕсли;
	// {/pugili 11.11.2020}
	
	Элементы.НастройкаИспользоватьЗакреплениеТСЗаказовНаТСзаГеозонами.Видимость = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Или НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP";
	Элементы.НастройкаРежимОптимизации.Видимость                    = Не НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаУчетЖесткихГабаритовГруза.Видимость           = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ГруппаНастройкаГруппироватьПунктыВОднуМашину.Видимость = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаМаксимальнаяПродолжительностьСмены.Видимость  = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаМаксимальныйПробегЗаСмену.Видимость           = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаМинимальноеКоличествоОстановок.Видимость      = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаМаксимальноеКоличествоОстановок.Видимость     = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";

	Элементы.ГруппаПунктыВыдачи.Видимость                          = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.НастройкаУчетЖесткихГабаритовГрузаНастройка.Видимость = Элементы.НастройкаУчетЖесткихГабаритовГруза.Видимость
		И НастройкаУчетЖесткихГабаритовГруза;
		
	Элементы.НастройкаПривязкаКГеозоне.Видимость = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс"
		И НастройкаИспользоватьЗакреплениеТСЗаказовНаТСзаГеозонами;
	Элементы.ГруппаНастройкаRarusVRPТипПунктовГеозон.Видимость = НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP"
		И НастройкаИспользоватьЗакреплениеТСЗаказовНаТСзаГеозонами;
		
	Если НЕ ЗначениеЗаполнено(НастройкаУчетЖесткихГабаритовГрузаНастройка) Тогда
		НастройкаУчетЖесткихГабаритовГрузаНастройка = "rigid";
	КонецЕсли;
	
	Если НастройкаУчетЖесткихГабаритовГруза Тогда
		Элементы.НастройкаУчетЖесткихГабаритовГруза.Заголовок = Нстр("ru = 'Режим учета габаритов груза:'");
	Иначе
		Элементы.НастройкаУчетЖесткихГабаритовГруза.Заголовок = Нстр("ru = 'Учет жестких габаритов груза'");
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Тогда 
		 
		Если НЕ НастройкаВыездСоСкладаСобственныеТС 
			И НЕ НастройкаВыездИзГаражаСобственныеТС Тогда
			НастройкаВыездСоСкладаСобственныеТС = Истина;
		КонецЕсли;
		
		Если НЕ НастройкаВыездИзГаражаПривлеченныеТС 
			И НЕ НастройкаВыездСоСкладаПривлеченныеТС Тогда
			НастройкаВыездСоСкладаПривлеченныеТС = Истина;
		КонецЕсли;

		Если НЕ НастройкаВыездИзГаражаВиртуальныеТС 
			И НЕ НастройкаВыездСоСкладаВиртуальныеТС Тогда
			НастройкаВыездСоСкладаВиртуальныеТС = Истина;
		КонецЕсли;

		Элементы.ДекорацияСклад.Заголовок         = Нстр("ru = 'Склад:'; en = 'Warehouse:'");
		
		Элементы.НастройкаЧасовойПояс.Видимость                                             = Истина;
		Элементы.НастройкаКоличествоДнейПланирования.Видимость                              = Истина;
		Элементы.НастройкаВременноеОкноДействуетЕжедневно.Видимость                         = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_solver_time_limit.Видимость                  = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_quality.Видимость                            = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_thread_count.Видимость                       = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_flexible_start_time.Видимость                = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_critical_lateness_risk_probability.Видимость = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_minimize_lateness_risk.Видимость             = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_restart_on_drop.Видимость                    = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_weighted_drop_penalty.Видимость              = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_proximity_factor.Видимость                   = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_global_proximity_factor.Видимость            = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_routing_mode.Видимость                       = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_avoid_tolls.Видимость                        = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_default_speed_km_h.Видимость                 = Истина;
		Элементы.НастройкаВнешнийМаршрутизатор_travel_time_multiplier.Видимость             = Истина;
		
	Иначе 
		//Элементы.НастройкаКларкРайтРежимДоставкиСоСклада.СписокВыбора.Очистить();
		//Элементы.НастройкаКларкРайтРежимДоставкиСоСклада.СписокВыбора.Добавить(0, Нстр("ru = 'Склад ➞ Клиенты'; en = 'Warehouse ➞ Clients'"));
		Элементы.ДекорацияСклад.Заголовок         = Нстр("ru = 'Адрес выезда и возвращения:'; en = 'Address of departure and return:'");    

		Элементы.НастройкаЧасовойПояс.Видимость                                             = Ложь;
		Элементы.НастройкаКоличествоДнейПланирования.Видимость                              = Ложь;
		Элементы.НастройкаВременноеОкноДействуетЕжедневно.Видимость                         = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_solver_time_limit.Видимость                  = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_quality.Видимость                            = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_thread_count.Видимость                       = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_critical_lateness_risk_probability.Видимость = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_minimize_lateness_risk.Видимость             = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_restart_on_drop.Видимость                    = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_weighted_drop_penalty.Видимость              = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_flexible_start_time.Видимость                = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_proximity_factor.Видимость                   = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_global_proximity_factor.Видимость            = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_routing_mode.Видимость                       = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_avoid_tolls.Видимость                        = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_default_speed_km_h.Видимость                 = Ложь;
		Элементы.НастройкаВнешнийМаршрутизатор_travel_time_multiplier.Видимость             = Ложь;
		
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс"
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда
		
		Элементы.ДекорацияВыездСоСклада.Заголовок = Нстр("ru = 'Время выезда ТС со склада:'");
		
		Если Элементы.НастройкаРежимОптимизации.СписокВыбора.НайтиПоЗначению(2) = Неопределено Тогда
			Элементы.НастройкаРежимОптимизации.СписокВыбора.Добавить(2, Нстр("ru = 'По стоимости'"));
		КонецЕсли;
		
		Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Тогда
			Элементы.НастроитьШтрафы.Видимость = Истина;
		Иначе
			Элементы.НастроитьШтрафы.Видимость = НастройкаРежимОптимизации = 2;
		КонецЕсли;
		
		Если НастройкиФункциональныхОпций.уатИспользоватьГруппыСовместимостиЗаказовНаТС_уэ Тогда 
			Элементы.ГруппаНастройкаУчитыватьГруппыСовместимости.Видимость = Истина;
		Иначе 
			Элементы.ГруппаНастройкаУчитыватьГруппыСовместимости.Видимость = Ложь;
		КонецЕсли;
	Иначе
		
		Элементы.ДекорацияВыездСоСклада.Заголовок = Нстр("ru = 'Время выезда ТС из гаража:'; en = 'Time of departure of vehicle from garage:'");
		
		НастройкаРежимОптимизацииСтоимость = Элементы.НастройкаРежимОптимизации.СписокВыбора.НайтиПоЗначению(2);
		Если НастройкаРежимОптимизацииСтоимость <> Неопределено Тогда
			Элементы.НастройкаРежимОптимизации.СписокВыбора.Удалить(НастройкаРежимОптимизацииСтоимость);
		КонецЕсли;
		Элементы.НастроитьШтрафы.Видимость = Ложь;
		
		Элементы.ГруппаНастройкаУчитыватьГруппыСовместимости.Видимость = Ложь;
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда
		Элементы.НастройкаУчитыватьГруппыСовместимости.Подсказка = НСтр(
			"ru = 'Для алгоритма маршрутизации Rarus VRP учитывается только первая из указанных в Заказе на ТС групп совместимости'");
	Иначе
		Элементы.НастройкаУчитыватьГруппыСовместимости.Подсказка = "";
	КонецЕсли;
	
	Элементы.НастройкаВнешнийМаршрутизатор_solver_time_limit.Доступность = НастройкаВнешнийМаршрутизатор_quality = "manual";
	Элементы.НастройкаВнешнийМаршрутизатор_thread_count.Доступность      = НастройкаВнешнийМаршрутизатор_quality = "manual";
	Элементы.НастроитьГруппыСовместимости.Доступность                    = НастройкаУчитыватьГруппыСовместимости;
	Элементы.НастроитьГруппыПунктов.Доступность                          = НастройкаГруппироватьПунктыВОднуМашину;
    Элементы.НастроитьНесовместимыеГеозоны.Доступность                   = НастройкаУчетГеозон;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт"
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс"
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда 
		Элементы.НастройкаАдресВыезда.Доступность = Истина;
		
	ИначеЕсли Элементы.НастройкаОбщийГаражТС.Видимость И НастройкаИндивидуальныйГаражТС = 0 Тогда 
		Элементы.НастройкаАдресВыезда.Доступность = Истина;
		
	Иначе 
		Элементы.НастройкаАдресВыезда.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.НастройкаУчитыватьСекцииТранспортныхСредств.Доступность  = НЕ НастройкаСжиматьЗаказы И НЕ НастройкаИспользоватьРасчетТары;
	Элементы.НастройкаИспользоватьРасчетТары.Доступность              = НастройкиФункциональныхОпций.уатИспользоватьРасчетТары_уэ И НЕ НастройкаУчитыватьСекцииТранспортныхСредств;
	Элементы.НастройкаСжиматьЗаказы.Доступность                       = НЕ НастройкаУчитыватьСекцииТранспортныхСредств;
	Элементы.НастроитьСжатие.Доступность                              = НастройкаСжиматьЗаказы;
	Элементы.НастройкаСмешиватьГрузыВСекциях.Доступность              = НастройкаУчитыватьСекцииТранспортныхСредств;
		
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" Тогда 
		Если НастройкаКларкРайтРежимДоставки = 0 Тогда 
			Элементы.ГруппаНастройкаИспользоватьРасчетТары.Видимость                       = Истина;
			Элементы.ГруппаНастройкаУчитыватьГруппировкуВМаршрутномЛисте.Видимость         = Истина;
			Элементы.ГруппаНастройкаВесОтдельнойГруппировки.Видимость                      = ?(НастройкаУчитыватьГруппировкуВМаршрутномЛисте, НастройкиФункциональныхОпций.уатИспользоватьГруппировкуГрузов_уэ, Ложь);
			Элементы.ГруппаНастройкаУчитыватьУпаковкуВПаллетыВМЛ.Видимость                 = Истина;
			Элементы.ГруппаНастройкаПонижающийКоэффициентЗагрузкиПаллетыПоОбъему.Видимость = ?(НастройкаУчитыватьУпаковкуВПаллетыВМЛ, НастройкиФункциональныхОпций.уатИспользоватьРазмещениеНаПаллетах_уэ, Ложь);
			
		Иначе 
			Элементы.ГруппаНастройкаИспользоватьРасчетТары.Видимость                       = Ложь;
			Элементы.ГруппаНастройкаУчитыватьГруппировкуВМаршрутномЛисте.Видимость         = Ложь;
			Элементы.ГруппаНастройкаВесОтдельнойГруппировки.Видимость                      = Ложь;
			Элементы.ГруппаНастройкаУчитыватьУпаковкуВПаллетыВМЛ.Видимость                 = Ложь;
			Элементы.ГруппаНастройкаПонижающийКоэффициентЗагрузкиПаллетыПоОбъему.Видимость = Ложь;
		КонецЕсли;
		
	Иначе 
		Элементы.ГруппаНастройкаИспользоватьРасчетТары.Видимость                       = Ложь;
		Элементы.ГруппаНастройкаУчитыватьГруппировкуВМаршрутномЛисте.Видимость         = Ложь;
		Элементы.ГруппаНастройкаВесОтдельнойГруппировки.Видимость                      = Ложь;
		Элементы.ГруппаНастройкаУчитыватьУпаковкуВПаллетыВМЛ.Видимость                 = Ложь;
		Элементы.ГруппаНастройкаПонижающийКоэффициентЗагрузкиПаллетыПоОбъему.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.НастройкаУчитыватьГруппировкуВМаршрутномЛисте.Доступность = НастройкаИспользоватьРасчетТары И НастройкиФункциональныхОпций.уатИспользоватьГруппировкуГрузов_уэ;
	Элементы.НастройкаУчитыватьУпаковкуВПаллетыВМЛ.Доступность         = НастройкаИспользоватьРасчетТары И НастройкиФункциональныхОпций.уатИспользоватьРазмещениеНаПаллетах_уэ;
	
	Если Не НастройкаСжиматьЗаказы И Элементы.НастроитьСжатие.Видимость Тогда 
		Элементы.НастроитьСжатие.Видимость = Ложь;
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт" И НастройкаКларкРайтРежимДоставки = 0 Тогда 
		Элементы.ГруппаНастройкаУчитыватьОкноПогрузкиТерминалов.Видимость = Истина;
		
	Иначе 
		Элементы.ГруппаНастройкаУчитыватьОкноПогрузкиТерминалов.Видимость = Ложь;
	КонецЕсли;
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс"
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда
		Элементы.НастройкаВремяВыездаОбщий.СписокВыбора.Очистить();
		Элементы.НастройкаВремяВыездаОбщий.СписокВыбора.Добавить(1, НСтр("ru = 'определяется по смене с:'"));
		Элементы.НастройкаВремяВозвратаТранспортныхСредств.Видимость = Истина;
		НастройкаВремяВыездаИзГаража = 1;
	Иначе 
		Элементы.НастройкаВремяВыездаОбщий.СписокВыбора.Очистить();
		Элементы.НастройкаВремяВыездаОбщий.СписокВыбора.Добавить(1, НСтр("en = 'common for all vehicles:'; ru = 'общее для всех ТС:'"));
		Элементы.НастройкаВремяВозвратаТранспортныхСредств.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Видимость  = Истина;
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс"
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда 
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Заголовок = НСтр("ru = 'Максимальное количество грузов'");
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Подсказка = НСтр("ru = 'При детализации ""Заказ"" грузом считается весь заказ, при детализации ""Товары"", ""Грузовые места"" грузом считается строка табличной части. Если указано 0 - ограничение не используется.'");
	Иначе 
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Заголовок = НСтр("en = 'Max. number of orders'; ru = 'Макс.число заказов'");
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Подсказка = НСтр("en = 'The maximum number of orders that will be allocated to the vehicle. If 0 is specified, the restriction is not used.'; ru = 'Максимальное количество заказов, которые будут распределены на транспортное средство. Если указано 0 - ограничение не используется.'");
	КонецЕсли;
	
	Элементы.НастройкаУчитыватьМаксимальноеКоличествоГрузов.Видимость         = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ГруппаНастройкаУчитыватьМаксимальноеКоличествоУпаковок.Видимость = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Тогда
		Если НЕ НастройкаУчитыватьМаксимальноеКоличествоГрузов
			И НЕ НастройкаУчитыватьМаксимальноеКоличествоУпаковок Тогда
			НастройкаУчитыватьМаксимальноеКоличествоГрузов = Истина;
		КонецЕсли;
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Заголовок = НСтр("en = 'Max. number'; ru = 'Макс.число'");
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Заголовок = НСтр("en = 'Max. number'; ru = 'Макс.число'");
		Элементы.НастройкаМаксимальноеЧислоЗаказовМаршрута.Видимость  = НастройкаУчитыватьМаксимальноеКоличествоГрузов;
	КонецЕсли;
	
	Элементы.НастройкаВремяВыездаТранспортныхСредств.ТолькоПросмотр   = НастройкаВремяВыездаИзГаража = 0;
	Элементы.НастройкаВремяВозвратаТранспортныхСредств.ТолькоПросмотр = НастройкаВремяВыездаИзГаража = 0;
	
	Элементы.НастройкаПредставлениеЗаказаНаТС.Видимость               = НастройкаРежимОтображенияМЛ = 1;

	СтрокаРежимОптимизации = "";
	Для Каждого ТекСтрока Из НастройкаПриоритетМаршрутизации Цикл 
		Если ТекСтрока.Значение = "КритерийОптимальности" Тогда 
			Если НастройкаРежимОптимизации = 1 Тогда 
				// расстояние
				СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + "расстояние";
				
			Иначе
				// время
				СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + "время в пути";
			КонецЕсли;
			
		ИначеЕсли ТекСтрока.Значение = "РазмерЗаказа" Тогда 
			Если НастройкаПараметрРазмераЗаказа = 1 Тогда 
				// по объему
				СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + "объем заказа";
				
			ИначеЕсли НастройкаПараметрРазмераЗаказа = 2 Тогда 
				// по количеству упаковок
				СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + "количество упаковок заказа";
				
			Иначе 
				// по весу
				СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + "вес заказа";
			КонецЕсли;
			
		Иначе 
			СтрокаРежимОптимизации = СтрокаРежимОптимизации + ?(СтрокаРежимОптимизации="", "", ", ") + ТекСтрока.Представление;
		КонецЕсли;
	КонецЦикла;
	СтрокаРежимОптимизации = "" + (ВРег(Лев(СтрокаРежимОптимизации, 1))) + (Прав(СтрокаРежимОптимизации, СтрДлина(СтрокаРежимОптимизации)-1)) + ".";
	
	
	Элементы.НастройкаАлгоритмМаршрутизацииОчередей.Картинка	    = ?(НастройкаАлгоритмМаршрутизацииСтрока = "Очередей",
		БиблиотекаКартинок.уатОчередейВыбран, БиблиотекаКартинок.уатОчередей);
	Элементы.НастройкаАлгоритмМаршрутизацииКларкаРайта.Картинка	    = ?(НастройкаАлгоритмМаршрутизацииСтрока = "КларкРайт",
		БиблиотекаКартинок.уатКларкРайтВыбран, БиблиотекаКартинок.уатКларкРайт);
	Элементы.НастройкаАлгоритмВнешнейМаршрутизации.Картинка		    = ?(НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс",
		БиблиотекаКартинок.уатЯндексВыбран, БиблиотекаКартинок.уатЯндекс);
	Элементы.НастройкаАлгоритмВнешнейМаршрутизацииRarusVRP.Картинка = ?(НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP",
		БиблиотекаКартинок.уатRarusVRPВыбран, БиблиотекаКартинок.уатRarusVRP);
	Элементы.НастройкаАлгоритмМаршрутизацииФиксМаршрутов.Картинка   = ?(НастройкаАлгоритмМаршрутизацииСтрока = "ФиксМаршруты",
		БиблиотекаКартинок.уатФиксМаршрутыВыбран, БиблиотекаКартинок.уатФиксМаршруты);
	Элементы.НастройкаУказыватьНаименованиеЭтапаВручную.Видимость   = НастройкаСохранятьЭтапыМаршрутизации;
	
	
	Элементы.ГруппаЭкспертныеНастройки.Видимость                       = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	Элементы.ГруппаПресеты.Видимость                                   = НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс";
	
	// Пресеты 
	// Получение списка пресетов возможно только с OAuth-токеном 
	
	Элементы.ПресетНастройкиСклада.Доступность                  = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиЗаказа.Доступность                  = ТипАвторизации = "OAuth-токен"; 
	Элементы.ПресетНастройкиКурьераИлиАвтомобиля.Доступность    = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиСменыКурьера.Доступность            = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиГлобальныеОпции.Доступность         = ТипАвторизации = "OAuth-токен";
	
	Элементы.ПресетНастройкиСклада_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиЗаказа_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиСменыКурьера_ПриоритетНастроек.Доступность         = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиГлобальныеОпции_ПриоритетНастроек.Доступность      = ТипАвторизации = "OAuth-токен";
	
	Если НЕ ТипАвторизации = "OAuth-токен" Тогда 
		ПресетНастройкиСклада = "";
		ПресетНастройкиЗаказа = ""; 
		ПресетНастройкиКурьераИлиАвтомобиля = "";
		ПресетНастройкиСменыКурьера         = "";
		ПресетНастройкиГлобальныеОпции      = "";
	
		ПресетНастройкиСклада_ПриоритетНастроек = "пользовательские";
		ПресетНастройкиЗаказа_ПриоритетНастроек = "пользовательские";
		ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = "пользовательские";
		ПресетНастройкиСменыКурьера_ПриоритетНастроек         = "пользовательские";
		ПресетНастройкиГлобальныеОпции_ПриоритетНастроек      = "пользовательские";
	КонецЕсли;
		
	Элементы.ДекорацияПресеты2.Ширина = ?(ТипАвторизации = "OAuth-токен", 44, 42);
	
	Элементы.ПресетНастройкиСклада.КнопкаВыбора                  = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиЗаказа.КнопкаВыбора                  = ТипАвторизации = "OAuth-токен"; 
	Элементы.ПресетНастройкиКурьераИлиАвтомобиля.КнопкаВыбора    = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиСменыКурьера.КнопкаВыбора            = ТипАвторизации = "OAuth-токен";
	Элементы.ПресетНастройкиГлобальныеОпции.КнопкаВыбора         = ТипАвторизации = "OAuth-токен";
	
	Если НЕ ЗначениеЗаполнено(ПресетНастройкиСклада) Тогда
		ПресетНастройкиСклада_ПриоритетНастроек = "пользовательские";
		Элементы.ПресетНастройкиСклада_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПресетНастройкиЗаказа) Тогда
		ПресетНастройкиЗаказа_ПриоритетНастроек = "пользовательские";
		Элементы.ПресетНастройкиЗаказа_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПресетНастройкиКурьераИлиАвтомобиля) Тогда
		ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = "пользовательские";
		Элементы.ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПресетНастройкиСменыКурьера) Тогда
		ПресетНастройкиСменыКурьера_ПриоритетНастроек = "пользовательские";
		Элементы.ПресетНастройкиСменыКурьера_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПресетНастройкиГлобальныеОпции) Тогда
		ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";
		Элементы.ПресетНастройкиГлобальныеОпции_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаЭкспертныеНастройкиПанель.Доступность  = ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";
	Элементы.ДекорацияЭкспертныеНастройкиПресет.Видимость = НЕ ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьИДоступностьЭлементовДляОптимизации()

	Если НастройкаАлгоритмОптимизации = "" Тогда
		НастройкаАлгоритмОптимизации = "Очередей";
	КонецЕсли;
	
	Элементы.ГруппаОптимизацииРежимОптимизации.Видимость         = НастройкаАлгоритмОптимизации = "Очередей";
	Элементы.Оптимизация_ОткрытьФормуНастройкиRarusVRP.Видимость = НастройкаАлгоритмОптимизации = "RarusVRP";
	Элементы.ГруппаНастройкаОптимизацииСжиматьЗаказы.Видимость   = НастройкаАлгоритмОптимизации = "Яндекс";
	Элементы.НастройкаУчитыватьОкнаПоЗаказамНастройка.Видимость  = (НастройкаАлгоритмОптимизации = "Яндекс" Или НастройкаАлгоритмОптимизации = "RarusVRP")
		И Оптимизация_НастройкаУчитыватьОкнаПоЗаказам;
	Элементы.ГруппаОптимизацияНастройкаПонижающийКоэффициентЗагрузкиКузова.Видимость = НастройкаАлгоритмОптимизации = "Яндекс" Или НастройкаАлгоритмОптимизации = "RarusVRP";
	Элементы.ГруппаОптимизацияНастройкиВыездаИВозвращения.Видимость                  = НастройкаАлгоритмОптимизации = "Яндекс" Или НастройкаАлгоритмОптимизации = "RarusVRP";
	Элементы.НастройкаОптимизацияЧасовойПояс.Видимость                               = НастройкаАлгоритмОптимизации = "Яндекс";
	Элементы.ГруппаОптимизацииЭкспертныеНастройки.Видимость                          = НастройкаАлгоритмОптимизации = "Яндекс";
	
	Элементы.Оптимизация_НастройкаРежимОптимизации.Видимость    = НастройкаАлгоритмОптимизации = "Очередей";
	Элементы.ГруппаНастройкаОптимизацииВФоновомРежиме.Видимость = НастройкаАлгоритмОптимизации = "Очередей";
	
	Если НастройкаАлгоритмОптимизации = "Яндекс" Или НастройкаАлгоритмОптимизации = "RarusVRP" Тогда
		НастройкаОптимизацияВремяВыездаОбщий = 1;
		Элементы.НастройкаОптимизацияВремяВозвратаТранспортныхСредств.Видимость = Истина;
		Оптимизация_НастройкаВремяВыездаИзГаража = 1;
		Элементы.ДекорацияОптимизацияВыездСоСклада.Заголовок = Нстр("ru = 'Склад:'; en = 'Warehouse:'");
	Иначе 
		НастройкаОптимизацияВремяВыездаОбщий = 1;
		Элементы.НастройкаОптимизацияВремяВозвратаТранспортныхСредств.Видимость = Ложь;   
		Элементы.ДекорацияОптимизацияВыездСоСклада.Заголовок = Нстр("ru = 'Адрес выезда и возвращения:'; en = 'Address of departure and return:'");  
	КонецЕсли;

	Элементы.НастройкаОптимизацияВремяВыездаТранспортныхСредств.ТолькоПросмотр   = Оптимизация_НастройкаВремяВыездаИзГаража = 0;
	Элементы.НастройкаОптимизацияВремяВозвратаТранспортныхСредств.ТолькоПросмотр = Оптимизация_НастройкаВремяВыездаИзГаража = 0;
	
	Элементы.НастройкаАлгоритмОптимизацииОчередей.Картинка = ?(НастройкаАлгоритмОптимизации = "Очередей",
		БиблиотекаКартинок.уатОчередейВыбран, БиблиотекаКартинок.уатОчередей);
	Элементы.НастройкаАлгоритмОптимизацииЯндекс.Картинка   = ?(НастройкаАлгоритмОптимизации = "Яндекс",
		БиблиотекаКартинок.уатЯндексВыбран, БиблиотекаКартинок.уатЯндекс);
	Элементы.НастройкаАлгоритмОптимизацииRarusVRP.Картинка = ?(НастройкаАлгоритмОптимизации = "RarusVRP",
		БиблиотекаКартинок.уатRarusVRPВыбран, БиблиотекаКартинок.уатRarusVRP);
		
	Элементы.ГруппаОптимизацииЭкспертныеНастройки.Видимость            = НастройкаАлгоритмОптимизации = "Яндекс";
	Элементы.ГруппаОптимизацииПресеты.Видимость                        = НастройкаАлгоритмОптимизации = "Яндекс";
	
	Элементы.Оптимизация_ПресетНастройкиСклада.Доступность                = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиЗаказа.Доступность                = ТипАвторизации = "OAuth-токен"; 
	Элементы.Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля.Доступность  = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиСменыКурьера.Доступность          = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиГлобальныеОпции.Доступность       = ТипАвторизации = "OAuth-токен";
	
	Элементы.Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек.Доступность = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек.Доступность         = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек.Доступность      = ТипАвторизации = "OAuth-токен";
	
	Если НЕ ТипАвторизации = "OAuth-токен" Тогда 
		Оптимизация_ПресетНастройкиСклада = "";
		Оптимизация_ПресетНастройкиЗаказа = ""; 
		Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля = "";
		Оптимизация_ПресетНастройкиСменыКурьера         = "";
		Оптимизация_ПресетНастройкиГлобальныеОпции      = "";
		
		Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек = "пользовательские";
		Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек = "пользовательские";
		Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = "пользовательские";
		Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек         = "пользовательские";
		Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек      = "пользовательские";
	КонецЕсли;
	
	Элементы.ДекорацияПресеты3.Ширина = ?(ТипАвторизации = "OAuth-токен", 44, 42);
	
	Элементы.Оптимизация_ПресетНастройкиСклада.КнопкаВыбора                = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиЗаказа.КнопкаВыбора                = ТипАвторизации = "OAuth-токен"; 
	Элементы.Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля.КнопкаВыбора  = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиСменыКурьера.КнопкаВыбора          = ТипАвторизации = "OAuth-токен";
	Элементы.Оптимизация_ПресетНастройкиГлобальныеОпции.КнопкаВыбора       = ТипАвторизации = "OAuth-токен";
	
	Если НЕ ЗначениеЗаполнено(Оптимизация_ПресетНастройкиСклада) Тогда
		Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек = "пользовательские";
		Элементы.Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Оптимизация_ПресетНастройкиЗаказа) Тогда
		Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек = "пользовательские";
		Элементы.Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля) Тогда
		Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = "пользовательские";
		Элементы.Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Оптимизация_ПресетНастройкиСменыКурьера) Тогда
		Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек = "пользовательские";
		Элементы.Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Оптимизация_ПресетНастройкиГлобальныеОпции) Тогда
		Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";
		Элементы.Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек.Доступность = Ложь;
	КонецЕсли;       
	
	Элементы.ГруппаОптимизацииЭкспертныеНастройкиПанель.Доступность  = Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";
	Элементы.ДекорацияОптимизацииЭкспертныеНастройкиПресет.Видимость = НЕ Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек = "пользовательские";

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормаНастроекРежимаОптимизации(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НастройкаРежимОптимизации       = РезультатЗакрытия.НастройкаРежимОптимизации;
	НастройкаПараметрРазмераЗаказа  = РезультатЗакрытия.НастройкаПараметрРазмераЗаказа;
	НастройкаПриоритетМаршрутизации = РезультатЗакрытия.НастройкаПриоритетМаршрутизации;
	
	УстановитьВидимостьИДоступностьЭлементовДляМаршрутизации();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиФункциональныхОпций()
	
	НастройкиФункциональныхОпций = Новый Структура();
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьРазмещениеНаПаллетах_уэ",           Константы.уатИспользоватьРазмещениеНаПаллетах_уэ.Получить());
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьГруппировкуГрузов_уэ",              Константы.уатИспользоватьГруппировкуГрузов_уэ.Получить());
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьРазмещениеВСекциях_уэ",             Константы.уатИспользоватьРазмещениеВСекциях_уэ.Получить());
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьГруппыСовместимостиЗаказовНаТС_уэ", Константы.уатИспользоватьГруппыСовместимостиЗаказовНаТС_уэ.Получить());
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьХарактеристикиЗаказовНаТС_уэ",      Константы.уатИспользоватьХарактеристикиЗаказовНаТС_уэ.Получить());
	НастройкиФункциональныхОпций.Вставить("уатИспользоватьРасчетТары_уэ",                     Константы.уатИспользоватьРасчетТары_уэ.Получить());
	
	Возврат НастройкиФункциональныхОпций;
	
КонецФункции // ПолучитьНастройкиФункциональныхОпций()

&НаКлиенте
Процедура ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова()
	
	ШаблонНадписи = НСтр("ru = 'ТС будет загружено на %1%% от объема кузова и на %2%% от грузоподъемности из характеристик, указанных в модели'");
	
	ПонижающийКоэффициентЗагрузкиКузоваНадпись = СтрШаблон(
		ШаблонНадписи,
		Формат(НастройкаПонижающийКоэффициентЗагрузкиКузоваПоОбъему, "ЧДЦ=; ЧН=0; ЧГ=0"),
		Формат(НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесу, "ЧДЦ=; ЧН=0; ЧГ=0")
	);
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" 
		ИЛИ НастройкаАлгоритмМаршрутизацииСтрока = "RarusVRP" Тогда
		ПонижающийКоэффициентЗагрузкиКузоваНадпись = ПонижающийКоэффициентЗагрузкиКузоваНадпись + НСтр(" ru = '.
			|Ограничения по количеству упаковок в ТС применяться не будут.'");
	КонецЕсли;
	
	Элементы.НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесу.Подсказка = ПонижающийКоэффициентЗагрузкиКузоваНадпись;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузоваОптимизации()
	
	ШаблонНадписи = НСтр("ru = 'ТС будет загружено на %1%% от объема кузова и на %2%% от грузоподъемности из характеристик, указанных в модели'");
	
	ПонижающийКоэффициентЗагрузкиКузоваНадпись = СтрШаблон(
		ШаблонНадписи,
		Формат(Оптимизация_НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесу, "ЧДЦ=; ЧН=0; ЧГ=0"),
		Формат(Оптимизация_НастройкаПонижающийКоэффициентЗагрузкиКузоваПоОбъему, "ЧДЦ=; ЧН=0; ЧГ=0")
	);
	
	Если НастройкаАлгоритмМаршрутизацииСтрока = "Яндекс" Тогда
		ПонижающийКоэффициентЗагрузкиКузоваНадпись = ПонижающийКоэффициентЗагрузкиКузоваНадпись + НСтр(" ru = '.
			|Ограничения по количеству упаковок в ТС применяться не будут.'");
	КонецЕсли;
	
	Элементы.НастройкаОптимизацияПонижающийКоэффициентЗагрузкиКузоваПоОбъему.Подсказка = ПонижающийКоэффициентЗагрузкиКузоваНадпись;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруНастроек()
	
	СтруктураНастроек = Новый Структура(
		ПолучитьНастройкиАРМЛогиста() + "," + ПолучитьНастройкиОптимизацииАРМЛогиста());
		
	НастройкиМаршрутизации = Новый Структура();
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСклада",				 ПресетНастройкиСклада);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиЗаказа",				 ПресетНастройкиЗаказа);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля",	 ПресетНастройкиКурьераИлиАвтомобиля);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСменыКурьера",			 ПресетНастройкиСменыКурьера);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиГлобальныеОпции",		 ПресетНастройкиГлобальныеОпции);
	
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСклада_ПриоритетНастроек",				 ПресетНастройкиСклада_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиЗаказа_ПриоритетНастроек",				 ПресетНастройкиЗаказа_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек", ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСменыКурьера_ПриоритетНастроек",		 ПресетНастройкиСменыКурьера_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиГлобальныеОпции_ПриоритетНастроек",		 ПресетНастройкиГлобальныеОпции_ПриоритетНастроек);
	
	НастройкиМаршрутизации.Вставить("critical_lateness_risk_probability", НастройкаВнешнийМаршрутизатор_critical_lateness_risk_probability);
	НастройкиМаршрутизации.Вставить("matrix_router",                      НастройкаВнешнийМаршрутизатор_matrix_router);
	НастройкиМаршрутизации.Вставить("flexible_start_time",                НастройкаВнешнийМаршрутизатор_flexible_start_time);
	НастройкиМаршрутизации.Вставить("minimize_lateness_risk",             НастройкаВнешнийМаршрутизатор_minimize_lateness_risk);
	НастройкиМаршрутизации.Вставить("quality",                            НастройкаВнешнийМаршрутизатор_quality);
	НастройкиМаршрутизации.Вставить("restart_on_drop",                    НастройкаВнешнийМаршрутизатор_restart_on_drop);
	НастройкиМаршрутизации.Вставить("solver_time_limit",                  НастройкаВнешнийМаршрутизатор_solver_time_limit);
	НастройкиМаршрутизации.Вставить("thread_count",                       НастройкаВнешнийМаршрутизатор_thread_count);
	НастройкиМаршрутизации.Вставить("weighted_drop_penalty",              НастройкаВнешнийМаршрутизатор_weighted_drop_penalty);
	НастройкиМаршрутизации.Вставить("proximity_factor",                   НастройкаВнешнийМаршрутизатор_proximity_factor);
	НастройкиМаршрутизации.Вставить("global_proximity_factor",            НастройкаВнешнийМаршрутизатор_global_proximity_factor);
	НастройкиМаршрутизации.Вставить("default_speed_km_h",                 НастройкаВнешнийМаршрутизатор_default_speed_km_h);
	НастройкиМаршрутизации.Вставить("travel_time_multiplier",             НастройкаВнешнийМаршрутизатор_travel_time_multiplier);
	НастройкиМаршрутизации.Вставить("routing_mode",                       НастройкаВнешнийМаршрутизатор_routing_mode);
	НастройкиМаршрутизации.Вставить("avoid_tolls",                        НастройкаВнешнийМаршрутизатор_avoid_tolls);
	
	НастройкиОптимизации = Новый Структура();
	НастройкиОптимизации.Вставить("ПресетНастройкиСклада",				 Оптимизация_ПресетНастройкиСклада);
	НастройкиОптимизации.Вставить("ПресетНастройкиЗаказа",				 Оптимизация_ПресетНастройкиЗаказа);
	НастройкиОптимизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля", Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля);
	НастройкиОптимизации.Вставить("ПресетНастройкиСменыКурьера",		 Оптимизация_ПресетНастройкиСменыКурьера);
	НастройкиОптимизации.Вставить("ПресетНастройкиГлобальныеОпции",		 Оптимизация_ПресетНастройкиГлобальныеОпции);
	
	НастройкиОптимизации.Вставить("ПресетНастройкиСклада_ПриоритетНастроек",				 Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиЗаказа_ПриоритетНастроек",				 Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек",	 Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиСменыКурьера_ПриоритетНастроек",			 Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиГлобальныеОпции_ПриоритетНастроек",		 Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек);
	
	НастройкиОптимизации.Вставить("weighted_drop_penalty",				 Оптимизация_weighted_drop_penalty);
	НастройкиОптимизации.Вставить("flexible_start_time",				 Оптимизация_flexible_start_time);
	НастройкиОптимизации.Вставить("proximity_factor",					 Оптимизация_proximity_factor);

	ТаблицаПунктыВыдачи = Новый Массив();
	Для Каждого ТекСтрока Из НастройкаПунктыВыдачи Цикл
		ТаблицаПунктыВыдачи.Добавить(Строка(ТекСтрока.Значение));
	КонецЦикла;
	НастройкиМаршрутизации.Вставить("ТаблицаПунктыВыдачи",                ТаблицаПунктыВыдачи);
	
	СтруктураНастроек.Вставить("ЭкспертныеНастройки",			 НастройкиМаршрутизации); 
	СтруктураНастроек.Вставить("ЭкспертныеНастройкиОптимизации", НастройкиОптимизации);

	ЗаполнитьЗначенияСвойств(СтруктураНастроек, ЭтотОбъект);

	Возврат СтруктураНастроек;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНовыйВариантНастройкиОтвет(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("СтруктураНастроек", ПолучитьСтруктуруНастроек());
	Оповещение = Новый ОписаниеОповещения("СохранитьНовыйВариантНастройкиСохранение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.уатВариантыНастроекАРМЛогиста.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНовыйВариантНастройкиСохранение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВариантНастройки = РезультатЗакрытия;
	
	ПеречитатьНастройкиИзСправочника();
	УстановитьВидимостьДоступность();
	ОбновитьНадписьПонижающийКоэффициентЗагрузкиКузова();
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьНастройкиИзСправочника()
	
	Попытка
		Обработки.уатАРМЛогиста_уэ.ЗаполнитьНастройкиВФормеПоСтруктуре(ЭтотОбъект, ВариантНастройки, ПолучитьСтруктуруНастроек());
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ВосстановитьНастройкиОтборовЗон(КоллекцияХранимыхОтборов, КоллекцияНовыхОтборов)
	
	Для Каждого ТекУзел Из КоллекцияХранимыхОтборов Цикл 
		НовУзел = КоллекцияНовыхОтборов.Добавить();
		ЗаполнитьЗначенияСвойств(НовУзел, ТекУзел);
		ВосстановитьНастройкиОтборовЗон(ТекУзел.Строки, НовУзел.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокВыбораВариантаНастройки(Текст, ДанныеВыбора)
	
	АвторизованныйПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	
	ТекОтветственный = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		АвторизованныйПользователь,
		"ОсновнойОтветственный"
	);
	
	Если Не ЗначениеЗаполнено(ТекОтветственный) Тогда 
		ТекОтветственный = АвторизованныйПользователь;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекОтветственный", ТекОтветственный);
	Запрос.УстановитьПараметр("СтрокаПодбора",    "" + Текст + "%");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатВариантыНастроекАРМЛогиста.Ссылка КАК Ссылка,
	|	уатВариантыНастроекАРМЛогиста.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА уатВариантыНастроекАРМЛогиста.Ответственный = &ТекОтветственный
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	Справочник.уатВариантыНастроекАРМЛогиста КАК уатВариантыНастроекАРМЛогиста
	|ГДЕ
	|	НЕ уатВариантыНастроекАРМЛогиста.ПометкаУдаления
	|	И уатВариантыНастроекАРМЛогиста.Наименование ПОДОБНО &СтрокаПодбора
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	ДанныеВыбора = Новый СписокЗначений();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		врПозицияОтсечения = СтрДлина(Текст);
		
		тПредставление = Новый ФорматированнаяСтрока(
			Новый ФорматированнаяСтрока(
				Лев(Выборка.Наименование, врПозицияОтсечения),
				?(Выборка.Порядок = 1, Новый Шрифт(,, Истина), Новый Шрифт()),
				ЦветаСтиля.уатЦветТекстаПриАвтоподборе
			),
			Новый ФорматированнаяСтрока(
				Прав(Выборка.Наименование, СтрДлина(Выборка.Наименование)-врПозицияОтсечения),
				?(Выборка.Порядок = 1, Новый Шрифт(,, Истина), Новый Шрифт()),
			)
		);
		
		ДанныеВыбора.Добавить(Выборка.Ссылка, тПредставление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиВнешнийМаршрутизатор()
	
	НастройкиМаршрутизации = уатЗащищенныеФункцииСервер_уэ.ПрочитатьНастройкиВнешнийМаршрутизатор(НастройкиВнешнийМаршрутизатор);
	
	Если НастройкиМаршрутизации = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПресетНастройкиСклада               = НастройкиМаршрутизации.ПресетНастройкиСклада;
	ПресетНастройкиЗаказа               = НастройкиМаршрутизации.ПресетНастройкиЗаказа;
	ПресетНастройкиКурьераИлиАвтомобиля = НастройкиМаршрутизации.ПресетНастройкиКурьераИлиАвтомобиля;
	ПресетНастройкиСменыКурьера         = НастройкиМаршрутизации.ПресетНастройкиСменыКурьера;
	ПресетНастройкиГлобальныеОпции      = НастройкиМаршрутизации.ПресетНастройкиГлобальныеОпции;
	
	ПресетНастройкиСклада_ПриоритетНастроек               = НастройкиМаршрутизации.ПресетНастройкиСклада_ПриоритетНастроек;
	ПресетНастройкиЗаказа_ПриоритетНастроек               = НастройкиМаршрутизации.ПресетНастройкиЗаказа_ПриоритетНастроек;
	ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = НастройкиМаршрутизации.ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек;
	ПресетНастройкиСменыКурьера_ПриоритетНастроек         = НастройкиМаршрутизации.ПресетНастройкиСменыКурьера_ПриоритетНастроек;
	ПресетНастройкиГлобальныеОпции_ПриоритетНастроек      = НастройкиМаршрутизации.ПресетНастройкиГлобальныеОпции_ПриоритетНастроек;
	
	НастройкаВнешнийМаршрутизатор_critical_lateness_risk_probability = НастройкиМаршрутизации.critical_lateness_risk_probability;
	НастройкаВнешнийМаршрутизатор_matrix_router                      = НастройкиМаршрутизации.matrix_router;
	НастройкаВнешнийМаршрутизатор_minimize_lateness_risk             = НастройкиМаршрутизации.minimize_lateness_risk;
	НастройкаВнешнийМаршрутизатор_quality                            = НастройкиМаршрутизации.quality;
	НастройкаВнешнийМаршрутизатор_restart_on_drop                    = НастройкиМаршрутизации.restart_on_drop;
	НастройкаВнешнийМаршрутизатор_solver_time_limit                  = НастройкиМаршрутизации.solver_time_limit;
	НастройкаВнешнийМаршрутизатор_thread_count                       = НастройкиМаршрутизации.thread_count;
	НастройкаВнешнийМаршрутизатор_weighted_drop_penalty              = НастройкиМаршрутизации.weighted_drop_penalty;
	НастройкаВнешнийМаршрутизатор_flexible_start_time                = НастройкиМаршрутизации.flexible_start_time;
	НастройкаВнешнийМаршрутизатор_proximity_factor                   = НастройкиМаршрутизации.proximity_factor;
	НастройкаВнешнийМаршрутизатор_global_proximity_factor            = НастройкиМаршрутизации.global_proximity_factor;
	НастройкаВнешнийМаршрутизатор_routing_mode                       = НастройкиМаршрутизации.routing_mode;
	НастройкаВнешнийМаршрутизатор_avoid_tolls                        = НастройкиМаршрутизации.avoid_tolls;
	НастройкаВнешнийМаршрутизатор_default_speed_km_h                 = НастройкиМаршрутизации.default_speed_km_h;
	НастройкаВнешнийМаршрутизатор_travel_time_multiplier             = НастройкиМаршрутизации.travel_time_multiplier;
	
	НастройкаПунктыВыдачиСтрока = "";
	Для Каждого ТекСтрока Из НастройкиМаршрутизации.ТаблицаПунктыВыдачи Цикл 
		НастройкаПунктыВыдачи.Добавить(ТекСтрока);
		НастройкаПунктыВыдачиСтрока = ?(ЗначениеЗаполнено(НастройкаПунктыВыдачиСтрока), НастройкаПунктыВыдачиСтрока + "; ", "")
		+ Справочники.уатПунктыНазначения.ПолучитьСсылку(Новый УникальныйИдентификатор(ТекСтрока)).Наименование;
	КонецЦикла; 
	
	НастройкиОптимизации = уатЗащищенныеФункцииСервер_уэ.ПрочитатьНастройкиВнешнийМаршрутизатор(НастройкиОптимизацииВнешнийМаршрутизатор);
	
	Если НастройкиОптимизации = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Оптимизация_ПресетНастройкиСклада               = НастройкиОптимизации.ПресетНастройкиСклада;
	Оптимизация_ПресетНастройкиЗаказа               = НастройкиОптимизации.ПресетНастройкиЗаказа;
	Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля = НастройкиОптимизации.ПресетНастройкиКурьераИлиАвтомобиля;
	Оптимизация_ПресетНастройкиСменыКурьера         = НастройкиОптимизации.ПресетНастройкиСменыКурьера;
	Оптимизация_ПресетНастройкиГлобальныеОпции      = НастройкиОптимизации.ПресетНастройкиГлобальныеОпции;
	
	Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек               = НастройкиОптимизации.ПресетНастройкиСклада_ПриоритетНастроек;
	Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек               = НастройкиОптимизации.ПресетНастройкиЗаказа_ПриоритетНастроек;
	Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек = НастройкиОптимизации.ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек;
	Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек         = НастройкиОптимизации.ПресетНастройкиСменыКурьера_ПриоритетНастроек;
	Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек      = НастройкиОптимизации.ПресетНастройкиГлобальныеОпции_ПриоритетНастроек;
	
	Оптимизация_weighted_drop_penalty              = НастройкиОптимизации.weighted_drop_penalty;
	Оптимизация_flexible_start_time                = НастройкиОптимизации.flexible_start_time;
	Оптимизация_proximity_factor                   = НастройкиОптимизации.proximity_factor;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиВнешнийМаршрутизатор()
	
	НастройкиМаршрутизации = Новый Структура();
	
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСклада",				 ПресетНастройкиСклада);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиЗаказа",				 ПресетНастройкиЗаказа);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля",	 ПресетНастройкиКурьераИлиАвтомобиля);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСменыКурьера",			 ПресетНастройкиСменыКурьера);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиГлобальныеОпции",		 ПресетНастройкиГлобальныеОпции);
	
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСклада_ПриоритетНастроек",				 ПресетНастройкиСклада_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиЗаказа_ПриоритетНастроек",				 ПресетНастройкиЗаказа_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек", ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиСменыКурьера_ПриоритетНастроек",		 ПресетНастройкиСменыКурьера_ПриоритетНастроек);
	НастройкиМаршрутизации.Вставить("ПресетНастройкиГлобальныеОпции_ПриоритетНастроек",		 ПресетНастройкиГлобальныеОпции_ПриоритетНастроек);

	НастройкиМаршрутизации.Вставить("critical_lateness_risk_probability", НастройкаВнешнийМаршрутизатор_critical_lateness_risk_probability);
	НастройкиМаршрутизации.Вставить("matrix_router",                      НастройкаВнешнийМаршрутизатор_matrix_router);
	НастройкиМаршрутизации.Вставить("flexible_start_time",                НастройкаВнешнийМаршрутизатор_flexible_start_time);
	НастройкиМаршрутизации.Вставить("minimize_lateness_risk",             НастройкаВнешнийМаршрутизатор_minimize_lateness_risk);
	НастройкиМаршрутизации.Вставить("quality",                            НастройкаВнешнийМаршрутизатор_quality);
	НастройкиМаршрутизации.Вставить("restart_on_drop",                    НастройкаВнешнийМаршрутизатор_restart_on_drop);
	НастройкиМаршрутизации.Вставить("solver_time_limit",                  НастройкаВнешнийМаршрутизатор_solver_time_limit);
	НастройкиМаршрутизации.Вставить("thread_count",                       НастройкаВнешнийМаршрутизатор_thread_count);
	НастройкиМаршрутизации.Вставить("weighted_drop_penalty",              НастройкаВнешнийМаршрутизатор_weighted_drop_penalty);
	НастройкиМаршрутизации.Вставить("proximity_factor",                   НастройкаВнешнийМаршрутизатор_proximity_factor);
	НастройкиМаршрутизации.Вставить("global_proximity_factor",            НастройкаВнешнийМаршрутизатор_global_proximity_factor);
	НастройкиМаршрутизации.Вставить("routing_mode",                       НастройкаВнешнийМаршрутизатор_routing_mode);
	НастройкиМаршрутизации.Вставить("avoid_tolls",                        НастройкаВнешнийМаршрутизатор_avoid_tolls);
	НастройкиМаршрутизации.Вставить("default_speed_km_h",                 НастройкаВнешнийМаршрутизатор_default_speed_km_h);
	
	ТаблицаПунктыВыдачи = Новый Массив();
	Для Каждого ТекСтрока Из НастройкаПунктыВыдачи Цикл
		ТаблицаПунктыВыдачи.Добавить(Строка(ТекСтрока.Значение));
	КонецЦикла;
	НастройкиМаршрутизации.Вставить("ТаблицаПунктыВыдачи",                ТаблицаПунктыВыдачи);


	уатЗащищенныеФункцииСервер_уэ.ЗаписатьНастройкиВнешнийМаршрутизатор(НастройкиВнешнийМаршрутизатор, НастройкиМаршрутизации);
	
	НастройкиОптимизации = Новый Структура();
	НастройкиОптимизации.Вставить("ПресетНастройкиСклада",				 Оптимизация_ПресетНастройкиСклада);
	НастройкиОптимизации.Вставить("ПресетНастройкиЗаказа",				 Оптимизация_ПресетНастройкиЗаказа);
	НастройкиОптимизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля", Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля);
	НастройкиОптимизации.Вставить("ПресетНастройкиСменыКурьера",		 Оптимизация_ПресетНастройкиСменыКурьера);
	НастройкиОптимизации.Вставить("ПресетНастройкиГлобальныеОпции",		 Оптимизация_ПресетНастройкиГлобальныеОпции);
	
	НастройкиОптимизации.Вставить("ПресетНастройкиСклада_ПриоритетНастроек",				 Оптимизация_ПресетНастройкиСклада_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиЗаказа_ПриоритетНастроек",				 Оптимизация_ПресетНастройкиЗаказа_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек",	 Оптимизация_ПресетНастройкиКурьераИлиАвтомобиля_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиСменыКурьера_ПриоритетНастроек",			 Оптимизация_ПресетНастройкиСменыКурьера_ПриоритетНастроек);
	НастройкиОптимизации.Вставить("ПресетНастройкиГлобальныеОпции_ПриоритетНастроек",		 Оптимизация_ПресетНастройкиГлобальныеОпции_ПриоритетНастроек);
	
	НастройкиОптимизации.Вставить("flexible_start_time",                Оптимизация_flexible_start_time);
	НастройкиОптимизации.Вставить("weighted_drop_penalty",              Оптимизация_weighted_drop_penalty);
	НастройкиОптимизации.Вставить("proximity_factor",                   Оптимизация_proximity_factor);

	уатЗащищенныеФункцииСервер_уэ.ЗаписатьНастройкиВнешнийМаршрутизатор(НастройкиОптимизацииВнешнийМаршрутизатор, НастройкиОптимизации);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НастроитьШтрафыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НастройкиВнешнийМаршрутизатор = РезультатЗакрытия.НастройкиВнешнийМаршрутизатор;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НастроитьГруппыСовместимостиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НастройкиВнешнийМаршрутизатор = РезультатЗакрытия.НастройкиВнешнийМаршрутизатор;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НастроитьНесовместимыеГеозоныЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НастройкиВнешнийМаршрутизатор = РезультатЗакрытия.НастройкиВнешнийМаршрутизатор;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НастроитьГруппыПунктов(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	НастройкиВнешнийМаршрутизатор = РезультатЗакрытия.НастройкиВнешнийМаршрутизатор;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиСервер(ВариантНастройки, СтруктураНастроек)
	Настроки = ВариантНастройки.Ссылка.ПолучитьОбъект();
	Настроки.НастройкиХранилище = Новый ХранилищеЗначения(СтруктураНастроек, Новый СжатиеДанных(9));
	Попытка
		Настроки.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПунктыВыдачиСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыФормыВыбора = Новый Структура("ИмяОбъектаВыбора, СписокОбъектов", "ПунктыНазначения", НастройкаПунктыВыдачи);
	
	ОткрытьФорму("Обработка.уатАРМЛогиста_уэ.Форма.ФормаВыбораСправочников",ПараметрыФормыВыбора,
	,,,,Новый ОписаниеОповещения("НастройкаПунктыВыдачиСтрокаНачалоВыбораЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПунктыВыдачиСтрокаНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(РезультатЗакрытия) = Тип("Массив") Тогда
		
		НастройкаПунктыВыдачиСтрока = "";
		НастройкаПунктыВыдачи.Очистить();
		
		Для Каждого ТекСтрока Из РезультатЗакрытия Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока) Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкаПунктыВыдачиСтрока = ?(ЗначениеЗаполнено(НастройкаПунктыВыдачиСтрока), НастройкаПунктыВыдачиСтрока + "; ", "")
			+ ТекСтрока;
			НастройкаПунктыВыдачи.Добавить(ТекСтрока.УникальныйИдентификатор());
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПунктыВыдачиСтрокаОчистка(Элемент, СтандартнаяОбработка)
	НастройкаПунктыВыдачиСтрока = "";
	НастройкаПунктыВыдачи.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура НастрокаРежимОтображенияМЛПриИзмененииВопрос(РезультатВопроса, ВидОперации) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда 
		НастройкаРежимОтображенияМЛ = НЕ НастройкаРежимОтображенияМЛ;
	КонецЕсли;
	Элементы.НастройкаПредставлениеЗаказаНаТС.Видимость = НастройкаРежимОтображенияМЛ = 1;
	
КонецПроцедуры

Функция ПолучитьНастройкиАРМЛогиста() 
	
	НастройкиАРМЛогиста = "НастройкаАдресВыезда,
		|НастройкаКонтрольВременныхОконЗаказов,
		|НастройкаКластеризации,
		|НастройкаАлгоритмМаршрутизации,
		|НастройкаАлгоритмМаршрутизацииСтрока,
		|НастройкаКопийПечатныхФормМЛ,
		|НастройкаАвтоматическоеОбновлениеПриЗаписиДокументов,
		|НастройкаАвтоматическийПересчетВремениИРасстояния,
		|НастройкаОрганизацияМЛ,
		|НастройкаОрганизацияМЛИсточник,
		|НастройкаОткрыватьФормыДокументов,
		|НастройкаПечататьМаршрутныеЛисты,
		|НастройкаПечататьСразуНаПринтер,
		|НастройкаПечатнаяФормаМЛ,
		|НастройкаПриОткрытииЗаполнятьСпискомТС,
		|НастройкаРежимОптимизации,
		|НастройкаСжиматьЗаказы,
		|НастройкаМаршрутизацияВФоновомРежиме,
		|ПериодАвтообновления,
		|НастройкаРежимИзмененияДокументовИзПланировщика,
		|НастройкаВыделятьТекущийЗаказНаПланировщике,
		|НастройкаВремяМеждуПунктамиПоУмолчанию,
		|УчитыватьМодельИТипТС,
		|УчитыватьДоступностьТСпоСостоянию,
		|УчитыватьДоступностьТСпоРадиусу,
		|РадиусДоступностиТС,
		|УчитыватьПросроченныеДокументы,
		|УчитыватьETA,
		|ОтображатьЭлектронныеКартыПриОткрытии,
		|НастройкаПроверятьНахождениеВЗонеПоФактическомуМестоположениюТС,
		|НастройкаВремяАктуальностиКоординат,
		|НастройкаИндивидуальныйГаражТС,
		|УчитыватьОграниченияПоЗагрузкеТС,
		|НастройкаРежимДобавленияЗаказовВМаршруты,
		|НастройкаМаксимальнаяПродолжительностьМаршрута,
		|НастройкаМаксимальноеРасстояниеМаршрута,
		|НастройкаМаксимальноеЧислоЗаказовМаршрута,
		|НастройкаМаксимальноеЧислоПунктовМаршрута,
		|НастройкаВремяВыездаТранспортныхСредств,
		|НастройкаВремяВозвратаТранспортныхСредств,
		|НастройкаВремяНачалаПланирования,
		|НастройкаВремяОкончанияПланирования,
		|НастройкаУчитыватьОкнаПоЗаказамПриМаршрутизации,
		|НастройкаСжатияМаксВес,
		|НастройкаСжатияМаксВремя,
		|НастройкаСжатияМаксОбъем,
		|НастройкаСжатияМаксРасстояние,
		|НастройкаСжатияМаксУпак,
		|НастройкаУчитыватьРазрешенныеТипыТС,
		|НастройкаУчитыватьОкноПогрузкиТерминалов,
		|НастройкаИспользоватьВПриоритетеСобственныйТранспорт,
		|НастройкаКларкРайтРежимДоставки,
		|НастройкаВремяВыездаИзГаража,
		|НастройкаПараметрРазмераЗаказа,
		|НастройкаПриоритетМаршрутизации,
		|НастройкаПонижающийКоэффициентЗагрузкиКузоваПоОбъему,
		|НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесу,
		|НастройкаУчитыватьГруппировкуВМаршрутномЛисте,
		|НастройкаВесОтдельнойГруппировки,
		|НастройкаУчитыватьУпаковкуВПаллетыВМЛ,
		|НастройкаПонижающийКоэффициентЗагрузкиПаллетыПоОбъему,
		|РаспределениеПоМаршрутамУчитыватьГрузоподьемность,
		|РаспределениеПоМаршрутамУчитыватьКоличество,
		|РаспределениеПоМаршрутамУчитыватьОбъем,
		|НастройкаУчитыватьНаправленияПеревозки,
		|НастройкаИспользоватьРасчетТары,
		|НастройкаУчитыватьСекцииТранспортныхСредств,
		|НастройкаСмешиватьГрузыВСекциях,
		|НастройкаИспользоватьМногорейсовыеМаршруты,
		|НастройкаИспользоватьХарактеристикиЗаказовНаТС,
		|НастройкиВнешнийМаршрутизатор, 
		|НастройкиОптимизацииВнешнийМаршрутизатор,
		|НастройкаЧасовойПояс,
		|НастройкаКоличествоДнейПланирования,
		|НастройкаВременноеОкноДействуетЕжедневно,
		|НастройкаЗаездНаСкладСобственныеТС,
		|НастройкаЗаездНаСкладПривлеченныеТС,
		|НастройкаЗаездНаСкладВиртуальныеТС,
		|НастройкаВыездСоСкладаСобственныеТС,
		|НастройкаВыездСоСкладаПривлеченныеТС,
		|НастройкаВыездСоСкладаВиртуальныеТС,
		|НастройкаВыездИзГаражаСобственныеТС,
		|НастройкаВыездИзГаражаПривлеченныеТС,
		|НастройкаВыездИзГаражаВиртуальныеТС,
		|НастройкаВозвратВГаражСобственныеТС,
		|НастройкаВозвратВГаражПривлеченныеТС,
		|НастройкаВозвратВГаражВиртуальныеТС,
		|НастройкаСохранятьЭтапыМаршрутизации,
		|НастройкаУказыватьНаименованиеЭтапаВручную,
		|НастройкаУстанавливатьФлагСозданАвтоматическиМЛ,
		|НастройкаУчитыватьГруппыСовместимости,
		|НастройкаГруппироватьПунктыВОднуМашину,
		|НастройкаДействиеСПросроченнымиЗаказами,
		|НастройкаУчетЖесткихГабаритовГруза,
		|НастройкаУчетЖесткихГабаритовГрузаНастройка,
		|НастройкаУчитыватьОкнаПоЗаказамПриМаршрутизацииНастройка,
		|НастройкаRarusVRPРежимЗапуска,
		|НастройкаRarusVRPLocalSearchMetaheuristic,
		|НастройкаRarusVRPFirstSolutionStrategy,
		|НастройкаRarusVRPУчитыватьПропускнуюСпособностьСклада,
		|НастройкаRarusVRPЛимитВремени,
		|НастройкаRarusVRPПередаватьРасстояния,
		|НастройкаRarusVRPСредняяСкорость,
		|НастройкаRarusVRPТипПунктовГеозон,
		|НастройкаНеРассчитыватьВыработку,
		|НастройкаРежимДопланирования,
		|НастройкаНесколькоМаршрутныхЛистовНаТС,
		|НастройкаРежимОтображенияМЛ,
		|НастройкаЗаполненияСпискаЗаказов,
		|НастройкаРежимОткрытияКарты,
		|НастройкаРежимОткрытияПланировщика,
		|НастройкаМинимальноеКоличествоОстановок,
		|НастройкаМаксимальноеКоличествоОстановок,
		|НастройкаМаксимальнаяПродолжительностьСмены,
		|НастройкаМаксимальныйПробегЗаСмену,
		|НастройкаПредставлениеЗаказаНаТС,
		|НастройкаИспользоватьЗакреплениеТСЗаказовНаТСзаГеозонами,
		|НастройкаПривязкаКГеозоне,
		|НастройкаУчитыватьМаксимальноеКоличествоГрузов,
		|НастройкаУчитыватьМаксимальноеКоличествоУпаковок,
		|НастройкаУчетГеозон";
	
	Возврат НастройкиАРМЛогиста;
	
КонецФункции

Функция ПолучитьНастройкиОптимизацииАРМЛогиста() 
	
	НастройкиАРМЛогиста = "НастройкаАлгоритмОптимизации,
		|Оптимизация_НастройкаВремяВозвратаТранспортныхСредств,
		|Оптимизация_НастройкаВремяВыездаИзГаража,
		|Оптимизация_НастройкаВремяВыездаТранспортныхСредств,
		|Оптимизация_НастройкаМаршрутизацияВФоновомРежиме,
		|Оптимизация_НастройкаПонижающийКоэффициентЗагрузкиКузоваПоВесу,
		|Оптимизация_НастройкаПонижающийКоэффициентЗагрузкиКузоваПоОбъему,
		|Оптимизация_НастройкаРежимОптимизации,
		|Оптимизация_НастройкаСжиматьЗаказы,
		|Оптимизация_НастройкаУчитыватьОкнаПоЗаказам,
		|Оптимизация_НастройкаУчитыватьОкнаПоЗаказамНастройка,
		|Оптимизация_НастройкаЧасовойПояс";
	
	Возврат НастройкиАРМЛогиста;
	
КонецФункции

#КонецОбласти
