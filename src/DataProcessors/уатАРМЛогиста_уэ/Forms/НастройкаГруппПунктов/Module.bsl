
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("НастройкиВнешнийМаршрутизатор", НастройкиВнешнийМаршрутизатор);
	
	НастройкиМаршрутизации = уатЗащищенныеФункцииСервер_уэ.ПрочитатьНастройкиВнешнийМаршрутизатор(НастройкиВнешнийМаршрутизатор);
	
	Для Каждого ТекГруппа Из НастройкиМаршрутизации.ТаблицаГруппПунктов Цикл 
		НовСтрокаГруппы = ТаблицаНесовместимыхГрупп.Добавить();
		Если ТипЗнч(ТекГруппа) = Тип("Структура") Тогда
			НовСтрокаГруппы.Неразрывная = ТекГруппа.Неразрывная;
			НовСтрокаГруппы.Неделимая   = ТекГруппа.Неделимая;
			ТекЭлементыСовместимости    = ТекГруппа.ЭлементыСовместимости;
		Иначе
			ТекЭлементыСовместимости = ТекГруппа;
		КонецЕсли;
	
		Для Каждого ТекЭлемент Из ТекЭлементыСовместимости Цикл 
			ТекGUID = Новый УникальныйИдентификатор(ТекЭлемент);
			СсылкаНаЭлемент = Справочники.уатПунктыНазначения.ПолучитьСсылку(ТекGUID);
			
			ЭлементОбъект = СсылкаНаЭлемент.ПолучитьОбъект();
			Если ЭлементОбъект = Неопределено Или ЭлементОбъект.ЭтоНовый() Тогда 
				Продолжить;
			КонецЕсли;
			
			НовЭлемент = НовСтрокаГруппы.НесовместимыеЭлементы.Добавить();
			НовЭлемент.Пункт = СсылкаНаЭлемент;
		КонецЦикла;
		
		Если НовСтрокаГруппы.НесовместимыеЭлементы.Количество() = 0 Тогда 
			ТаблицаНесовместимыхГрупп.Удалить(НовСтрокаГруппы);
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьПредставленияГруппНесовместимости();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТаблицаНесовместимыхГруппНесовместимыеЭлементы

&НаКлиенте
Процедура ТаблицаНесовместимыхГруппНесовместимыеЭлементыПриИзменении(Элемент)
	
	ОбновитьПредставленияГруппНесовместимости();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройкиНесовместимости(Команда)
	
	НесовместимыеГруппы = Новый Массив();
	
	Для Каждого ТекГруппа Из ТаблицаНесовместимыхГрупп Цикл 
		ЭлементыСовместимости = Новый Массив();
		
		Для Каждого ТекЭлемент Из ТекГруппа.НесовместимыеЭлементы Цикл 
			Если Не ЗначениеЗаполнено(ТекЭлемент.Пункт) Тогда 
				Продолжить;
			КонецЕсли;
			
			ЭлементыСовместимости.Добавить(Строка(ТекЭлемент.Пункт.УникальныйИдентификатор()));
		КонецЦикла;
		
		Если ЭлементыСовместимости.Количество() Тогда 
			НесовместимыеГруппы.Добавить(Новый Структура("ЭлементыСовместимости, Неразрывная, Неделимая",
				ЭлементыСовместимости, ТекГруппа.Неразрывная, ТекГруппа.Неделимая));
		КонецЕсли;
	КонецЦикла;
	
	НастройкиМаршрутизации = Новый Структура();
	НастройкиМаршрутизации.Вставить("ТаблицаГруппПунктов", НесовместимыеГруппы);
	
	уатЗащищенныеФункцииСервер_уэ.ЗаписатьНастройкиВнешнийМаршрутизатор(НастройкиВнешнийМаршрутизатор, НастройкиМаршрутизации);
	
	Закрыть(Новый Структура("НастройкиВнешнийМаршрутизатор", НастройкиВнешнийМаршрутизатор));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПредставленияГруппНесовместимости()
	
	Для Каждого ТекГруппа Из ТаблицаНесовместимыхГрупп Цикл 
		ТекГруппа.ПредставлениеГруппы = "";
		
		Для Каждого ТекЭлемент Из ТекГруппа.НесовместимыеЭлементы Цикл 
			Если Не ЗначениеЗаполнено(ТекЭлемент.Пункт) Тогда 
				Продолжить;
			КонецЕсли;
			
			ТекГруппа.ПредставлениеГруппы = ТекГруппа.ПредставлениеГруппы
				+ ?(ТекГруппа.ПредставлениеГруппы = "", "", ", ") + Строка(ТекЭлемент.Пункт);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
