
#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФормаНастройкиШаблонов_ЗаполнитьДоступныеПараметры();  
	ФормаНастройкиШаблонов_ЗаполнитьТекстШаблонов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаказГрузоотправителя_ТелоШаблонаПриИзменении(Элемент)
	ЗаказГрузоотправителя_ТелоШаблона.ПолучитьHTML(ЗаказГрузоотправителя_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура ПунктыНазначения_ТелоШаблонаПриИзменении(Элемент)
	ПунктыНазначения_ТелоШаблона.ПолучитьHTML(ПунктыНазначения_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура Контрагенты_ТелоШаблонаПриИзменении(Элемент)
	Контрагенты_ТелоШаблона.ПолучитьHTML(Контрагенты_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура ТС_ТелоШаблонаПриИзменении(Элемент)
	ТС_ТелоШаблона.ПолучитьHTML(ТС_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура Маршруты_ТелоШаблонаПриИзменении(Элемент)
	Маршруты_ТелоШаблона.ПолучитьHTML(Маршруты_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура МаршрутныйЛист_ТелоШаблонаПриИзменении(Элемент)
	МаршрутныйЛист_ТелоШаблона.ПолучитьHTML(МаршрутныйЛист_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура МаршрутныйЛистЗаказ_ТелоШаблонаПриИзменении(Элемент)
	МаршрутныйЛистЗаказ_ТелоШаблона.ПолучитьHTML(МаршрутныйЛистЗаказ_ТекстШаблона, Новый Структура); 
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛист_ТелоШаблонаПриИзменении(Элемент)
	ПутевойЛист_ТелоШаблона.ПолучитьHTML(ПутевойЛист_ТекстШаблона, Новый Структура); 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПунктыНазначения_ДоступныеПараметры

&НаКлиенте
Процедура ПунктыНазначения_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = "";
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ПунктыНазначения_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.ПунктыНазначения_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ПунктыНазначения_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
    ПараметрыПеретаскивания.Значение = ТекстДляВставки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПунктыНазначения_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = ПунктыНазначения_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = ПунктыНазначения_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.ПунктыНазначения_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура ПунктыНазначения_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.ПунктыНазначения_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтрагенты_ДоступныеПараметры

&НаКлиенте
Процедура Контрагенты_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = "";  
	
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = Контрагенты_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.Контрагенты_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = Контрагенты_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки; 
	
КонецПроцедуры

&НаКлиенте
Процедура Контрагенты_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = Контрагенты_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = Контрагенты_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.Контрагенты_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура Контрагенты_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.Контрагенты_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТС_ДоступныеПараметры

&НаКлиенте
Процедура ТС_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = ""; 
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ТС_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.ТС_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ТС_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла; 
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТС_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = ТС_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = ТС_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.ТС_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура ТС_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.ТС_ТелоШаблона;
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМаршруты_ДоступныеПараметры

&НаКлиенте
Процедура Маршруты_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = "";
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = Маршруты_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.Маршруты_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = Маршруты_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла; 
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки;
	
КонецПроцедуры

&НаКлиенте
Процедура Маршруты_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = Маршруты_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = Маршруты_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.Маршруты_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура Маршруты_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.Маршруты_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаказГрузоотправителя_ДоступныеПараметры

&НаКлиенте
Процедура ЗаказГрузоотправителя_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = ""; 
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ЗаказГрузоотправителя_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.ЗаказГрузоотправителя_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ЗаказГрузоотправителя_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказГрузоотправителя_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = ЗаказГрузоотправителя_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = ЗаказГрузоотправителя_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.ЗаказГрузоотправителя_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказГрузоотправителя_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.ЗаказГрузоотправителя_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМаршрутныйЛист_ДоступныеПараметры

&НаКлиенте
Процедура МаршрутныйЛист_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = ""; 
	
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = МаршрутныйЛист_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.МаршрутныйЛист_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = МаршрутныйЛист_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла; 
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки; 
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутныйЛист_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = МаршрутныйЛист_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = МаршрутныйЛист_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.МаршрутныйЛист_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПутевойЛист_ДоступныеПараметры

&НаКлиенте
Процедура ПутевойЛист_ДоступныеПараметрыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	
	ПеретаскиваемыеОбъекты = ПараметрыПеретаскивания.Значение;
	ТекстДляВставки = "";
	Разделитель = "";  
	#Если ВебКлиент Тогда
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ПутевойЛист_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТекстДляВставки) Тогда
			ДобавитьВТекстСообщенияПараметр(ТекстДляВставки); 
		КонецЕсли;
		ТекущийЭлемент = Элементы.ПутевойЛист_ТелоШаблона;
	#Иначе
		Для каждого ПеретаскиваемыйОбъект Из ПеретаскиваемыеОбъекты Цикл
			ЭлементДерева = ПутевойЛист_ДоступныеПараметры.НайтиПоИдентификатору(ПеретаскиваемыйОбъект);
			Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ФорматВывода = ?(ПустаяСтрока(ЭлементДерева.Формат), "", "{" + ЭлементДерева.Формат +"}");
				ТекстДляВставки = ТекстДляВставки + Разделитель + "[" + ЭлементДерева.ПолноеПредставление + ФорматВывода + "]";
				Разделитель = " ";
			КонецЕсли;
		КонецЦикла; 
	#КонецЕсли
	ПараметрыПеретаскивания.Значение = ТекстДляВставки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛист_ДоступныеПараметрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Реквизит = ПутевойЛист_ДоступныеПараметры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЭлементДерева = ПутевойЛист_ДоступныеПараметры.НайтиПоИдентификатору(Реквизит.ПолучитьИдентификатор());
	Если ЭлементДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДобавитьВТекстСообщенияПараметр();
	КонецЕсли;
	ТекущийЭлемент = Элементы.ПутевойЛист_ТелоШаблона;
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛист_ДоступныеПараметрыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ТекущийЭлемент = Элементы.ПутевойЛист_ТелоШаблона;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьШаблоны(Команда) 
	СохранитьШаблоныСервер();
	ОбновитьПовторноИспользуемыеЗначения();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаказГрузоотправителя_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("ЗаказГрузоотправителя");
КонецПроцедуры

&НаКлиенте
Процедура ПунктыНазначения_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("ПунктыНазначения");
КонецПроцедуры

&НаКлиенте
Процедура Контрагенты_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("Контрагенты");
КонецПроцедуры

&НаКлиенте
Процедура ТС_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("ТС");
КонецПроцедуры

&НаКлиенте
Процедура Маршруты_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("Маршруты");
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛист_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("ПутевойЛист");
КонецПроцедуры

&НаКлиенте
Процедура МаршрутныйЛист_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("МаршрутныйЛист");
КонецПроцедуры

&НаКлиенте
Процедура МаршрутныйЛистЗаказ_ВосстановитьПоУмолчанию(Команда)
	ПолучитьТекстШаблонаПоУмолчаниюСервер("МаршрутныйЛистЗаказ");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФорматВывода(Команда)
	
	Если Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПунктыНазначения Тогда
		ТекущиеДанные = Элементы.ПунктыНазначения_ДоступныеПараметры.ТекущиеДанные;
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаКонтрагенты Тогда
		ТекущиеДанные = Элементы.Контрагенты_ДоступныеПараметры.ТекущиеДанные;  
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаТС Тогда
		ТекущиеДанные = Элементы.ТС_ДоступныеПараметры.ТекущиеДанные;  
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршруты Тогда
		ТекущиеДанные = Элементы.Маршруты_ДоступныеПараметры.ТекущиеДанные;
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаЗаказГрузоотправителя Тогда
		ТекущиеДанные = Элементы.ЗаказГрузоотправителя_ДоступныеПараметры.ТекущиеДанные; 
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршрутныйЛист Тогда
		ТекущиеДанные = Элементы.МаршрутныйЛист_ДоступныеПараметры.ТекущиеДанные;
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПутевойЛист Тогда
		ТекущиеДанные = Элементы.ПутевойЛист_ДоступныеПараметры.ТекущиеДанные;
	КонецЕсли; 
	
	Если ТекущиеДанные <> Неопределено Тогда
		ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ТекущиеДанные.ПолучитьИдентификатор());
		Обработчик = Новый ОписаниеОповещения("ПослеВыбораФорматаРеквизита", ЭтотОбъект, ДополнительныеПараметры);
		
		Диалог = Новый КонструкторФорматнойСтроки;
		Диалог.ДоступныеТипы = ТекущиеДанные.Тип;
		Диалог.Текст         = ТекущиеДанные.Формат;
		Диалог.Показать(Обработчик);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьШаблоныСервер()  

	НастройкиШаблонов = Новый Структура(); 
	НастройкиШаблонов.Вставить("ПунктыНазначения",      ПолучитьТекстШаблона("ПунктыНазначения"));
	НастройкиШаблонов.Вставить("Контрагенты",           ПолучитьТекстШаблона("Контрагенты")); 
	НастройкиШаблонов.Вставить("ТС",                    ПолучитьТекстШаблона("ТС")); 
	НастройкиШаблонов.Вставить("Маршруты",              ПолучитьТекстШаблона("Маршруты"));
	НастройкиШаблонов.Вставить("ЗаказГрузоотправителя", ПолучитьТекстШаблона("ЗаказГрузоотправителя"));
	НастройкиШаблонов.Вставить("ПутевойЛист",           ПолучитьТекстШаблона("ПутевойЛист"));
	НастройкиШаблонов.Вставить("МаршрутныйЛист",        ПолучитьТекстШаблона("МаршрутныйЛист"));
	НастройкиШаблонов.Вставить("МаршрутныйЛистЗаказ",   ПолучитьТекстШаблона("МаршрутныйЛистЗаказ"));
	
	Константы.уатНастройкиШаблоновИнформацииДляКарты.Установить(Новый ХранилищеЗначения(НастройкиШаблонов, Новый СжатиеДанных(9)));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстШаблона(ВидОбъекта)  
	ВариантПреобразования   = "ПредставлениеВПараметры";

	Если ВидОбъекта = "ПунктыНазначения" Тогда
		ТекстШаблона = ПунктыНазначения_ТекстШаблона; 
		ВложенияВHTML = Новый Структура();
		ПунктыНазначения_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML); 
	ИначеЕсли ВидОбъекта = "Контрагенты" Тогда
		ТекстШаблона = Контрагенты_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		Контрагенты_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
	ИначеЕсли ВидОбъекта = "ТС" Тогда
		ТекстШаблона = ТС_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		ТС_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
	ИначеЕсли ВидОбъекта = "Маршруты" Тогда
		ТекстШаблона = Маршруты_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		Маршруты_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
	ИначеЕсли ВидОбъекта = "ЗаказГрузоотправителя" Тогда
		ТекстШаблона = ЗаказГрузоотправителя_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		ЗаказГрузоотправителя_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
	ИначеЕсли ВидОбъекта = "МаршрутныйЛист" Тогда
		ТекстШаблона = МаршрутныйЛист_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		МаршрутныйЛист_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
	ИначеЕсли ВидОбъекта = "МаршрутныйЛистЗаказ" Тогда
		ТекстШаблона = МаршрутныйЛистЗаказ_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		МаршрутныйЛистЗаказ_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);
		ВидОбъекта    = "МаршрутныйЛист";
	ИначеЕсли ВидОбъекта = "ПутевойЛист" Тогда
		ТекстШаблона = ПутевойЛист_ТекстШаблона;
		ВложенияВHTML = Новый Структура();
		ПутевойЛист_ТелоШаблона.ПолучитьHTML(ТекстШаблона, ВложенияВHTML);

	КонецЕсли;
	
	ДеревоПараметровШаблона = РеквизитФормыВЗначение(ВидОбъекта + "_ДоступныеПараметры");
	

	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(СтрЗаменить(ТекстШаблона, "&quot;", """"), ДеревоПараметровШаблона, ВариантПреобразования);
	ТекстШаблона = Сред(ТекстШаблона, СтрНайти(ТекстШаблона, "<body>") + 7);
	ТекстШаблона = Лев(ТекстШаблона, СтрНайти(ТекстШаблона, "</body>") -2);
	
	ДлинаСообщения = СтрДлина(ТекстШаблона);
	Текст          = ТекстШаблона;
	Позиция = СтрНайти(Текст, "[");
	Пока Позиция > 0 Цикл
		Если Позиция + 1 > ДлинаСообщения Тогда
			Прервать;
		КонецЕсли;
		ПозицияОкончание = СтрНайти(Текст, "]", НаправлениеПоиска.СНачала, Позиция + 1);
		Если ПозицияОкончание > 0 Тогда
			НайденныйПараметр = Сред(Текст, Позиция + 1, ПозицияОкончание - Позиция - 1);
			ТекНайденныйПараметр = СтрЗаменить(НайденныйПараметр, "..", "."); 
			ТекстШаблона = СтрЗаменить(ТекстШаблона, НайденныйПараметр, ТекНайденныйПараметр);
		ИначеЕсли ПозицияОкончание = 0 Тогда
			ПозицияОкончание = Позиция + 1;
		КонецЕсли;
		Если ПозицияОкончание > ДлинаСообщения Тогда
			Прервать;
		КонецЕсли;
		Позиция = СтрНайти(Текст, "[", НаправлениеПоиска.СНачала, ПозицияОкончание);
	КонецЦикла;
	Возврат ТекстШаблона;
КонецФункции

&НаСервере
Процедура ФормаНастройкиШаблонов_ЗаполнитьДоступныеПараметры()
	
	ЗаполнитьДоступныеПараметры_ПунктыНазначения();
	ЗаполнитьДоступныеПараметры_Контрагенты();
	ЗаполнитьДоступныеПараметры_ТС();
	ЗаполнитьДоступныеПараметры_Маршруты();
	ЗаполнитьДоступныеПараметры_ЗаказГрузоотправителя();
	ЗаполнитьДоступныеПараметры_МаршрутныйЛист();
	ЗаполнитьДоступныеПараметры_ПутевойЛист();
	
КонецПроцедуры  

&НаСервере
Процедура ФормаНастройкиШаблонов_ЗаполнитьТекстШаблонов()
	
	ХранилищеШаблонов = Константы.уатНастройкиШаблоновИнформацииДляКарты.Получить();
	Если ХранилищеШаблонов = Неопределено Тогда 
		НастройкиШаблонов = Неопределено;
	Иначе 
		НастройкиШаблонов = ХранилищеШаблонов.Получить();
	КонецЕсли;
	
	Если НастройкиШаблонов = Неопределено Тогда 
		НастройкиШаблонов = Новый Структура();
	КонецЕсли;
	
	СписокВсехПараметров = РеквизитФормыВЗначение("ПунктыНазначения_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("ПунктыНазначения") Тогда  
		ПунктыНазначения_ТекстШаблона = НастройкиШаблонов.ПунктыНазначения;
	Иначе 
		ПунктыНазначения_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("ПунктыНазначения");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ПунктыНазначения_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	ПунктыНазначения_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	
	
	СписокВсехПараметров = РеквизитФормыВЗначение("Контрагенты_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("Контрагенты") Тогда  
		Контрагенты_ТекстШаблона = НастройкиШаблонов.Контрагенты;
	Иначе 
		Контрагенты_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("Контрагенты");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(Контрагенты_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	Контрагенты_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	
	
	СписокВсехПараметров = РеквизитФормыВЗначение("ТС_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("ТС") Тогда  
		ТС_ТекстШаблона = НастройкиШаблонов.ТС;
	Иначе 
		ТС_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("ТС");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ТС_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	ТС_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	
	
	СписокВсехПараметров = РеквизитФормыВЗначение("Маршруты_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("Маршруты") Тогда
		Маршруты_ТекстШаблона = НастройкиШаблонов.Маршруты;
	Иначе 
		Маршруты_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("Маршруты");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(Маршруты_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	Маршруты_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	
	
	СписокВсехПараметров = РеквизитФормыВЗначение("ЗаказГрузоотправителя_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("ЗаказГрузоотправителя") Тогда  
		ЗаказГрузоотправителя_ТекстШаблона = НастройкиШаблонов.ЗаказГрузоотправителя;
	Иначе 
		ЗаказГрузоотправителя_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("ЗаказГрузоотправителя");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ЗаказГрузоотправителя_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	ЗаказГрузоотправителя_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура); 
	
	
	СписокВсехПараметров = РеквизитФормыВЗначение("МаршрутныйЛист_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("МаршрутныйЛист") Тогда  
		МаршрутныйЛист_ТекстШаблона = НастройкиШаблонов.МаршрутныйЛист;
	Иначе 
		МаршрутныйЛист_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("МаршрутныйЛист");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(МаршрутныйЛист_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	МаршрутныйЛист_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);

	Если НастройкиШаблонов.Свойство("МаршрутныйЛистЗаказ") Тогда  
		МаршрутныйЛистЗаказ_ТекстШаблона = НастройкиШаблонов.МаршрутныйЛистЗаказ;
	Иначе 
		МаршрутныйЛистЗаказ_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("МаршрутныйЛистЗаказ");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(МаршрутныйЛистЗаказ_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	МаршрутныйЛистЗаказ_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);

	СписокВсехПараметров = РеквизитФормыВЗначение("ПутевойЛист_ДоступныеПараметры");
	Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиШаблонов.Свойство("ПутевойЛист") Тогда  
		ПутевойЛист_ТекстШаблона = НастройкиШаблонов.ПутевойЛист;
	Иначе 
		ПутевойЛист_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию("ПутевойЛист");
	КонецЕсли;  
	ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ПутевойЛист_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
	ПутевойЛист_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);

КонецПроцедуры

&НаСервере
Процедура ПолучитьТекстШаблонаПоУмолчаниюСервер(ВидОбъекта)
	
	Если ВидОбъекта = "ПунктыНазначения" Тогда
		СписокВсехПараметров = РеквизитФормыВЗначение("ПунктыНазначения_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		ПунктыНазначения_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ПунктыНазначения_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		ПунктыНазначения_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
		
	ИначеЕсли ВидОбъекта = "Контрагенты" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("Контрагенты_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		Контрагенты_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(Контрагенты_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		Контрагенты_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура); 
	ИначеЕсли ВидОбъекта = "ТС" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("ТС_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		ТС_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ТС_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		ТС_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);   
	ИначеЕсли ВидОбъекта = "Маршруты" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("Маршруты_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		Маршруты_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(Маршруты_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		Маршруты_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	ИначеЕсли ВидОбъекта = "ЗаказГрузоотправителя" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("ЗаказГрузоотправителя_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		ЗаказГрузоотправителя_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ЗаказГрузоотправителя_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		ЗаказГрузоотправителя_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
		
	ИначеЕсли ВидОбъекта = "МаршрутныйЛист" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("МаршрутныйЛист_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		МаршрутныйЛист_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(МаршрутныйЛист_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		МаршрутныйЛист_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
	ИначеЕсли ВидОбъекта = "МаршрутныйЛистЗаказ" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("МаршрутныйЛист_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		МаршрутныйЛистЗаказ_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(МаршрутныйЛистЗаказ_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		МаршрутныйЛистЗаказ_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);
		
	
	ИначеЕсли ВидОбъекта = "ПутевойЛист" Тогда 
		СписокВсехПараметров = РеквизитФормыВЗначение("ПутевойЛист_ДоступныеПараметры");
		Если СписокВсехПараметров.Строки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		ПутевойЛист_ТекстШаблона = уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаПоУмолчанию(ВидОбъекта);
		ТекстШаблона = ШаблоныСообщенийСлужебный.ПреобразоватьТекстШаблона(уатЭлектронныеКартыСервер.ПолучитьТекстШаблонаHTML(ПутевойЛист_ТекстШаблона), СписокВсехПараметров, "ПараметрыВПредставление");
		ПутевойЛист_ТелоШаблона.УстановитьHTML(ТекстШаблона, Новый Структура);

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ПунктыНазначения()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Справочник.уатПунктыНазначения");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатПунктыНазначения";
	УзелРеквизитовОбъектаНазначения.Представление       = "Пункты назначения";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Пункты назначения";
	
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатПунктыНазначения");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатПунктыНазначения.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатПунктыНазначения" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Имя = "уатПунктыНазначения.ВремяДоступностиС" Тогда
			РеквизитОбъектаНазначения.Формат = "ДФ=ЧЧ:мм; ДП=00:00";
		ИначеЕсли РеквизитОбъектаНазначения.Имя = "уатПунктыНазначения.ВремяДоступностиПо" Тогда
			РеквизитОбъектаНазначения.Формат = "ДФ=ЧЧ:мм; ДП=23:59";
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("ПунктыНазначения_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "ПунктыНазначения_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_Контрагенты()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Справочник.Контрагенты");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "Контрагенты";
	УзелРеквизитовОбъектаНазначения.Представление       = "Контрагенты";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Контрагенты";
	
	ЗаполнитьДоступныеПараметры_Контрагенты_ДанныеПункта(Реквизиты);
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "Контрагенты");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "Контрагенты.") Тогда
			РеквизитОбъектаНазначения.Имя = "Контрагенты" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("Контрагенты_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "Контрагенты_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_Маршруты()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Справочник.уатМаршруты");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатМаршруты";
	УзелРеквизитовОбъектаНазначения.Представление       = "Маршруты";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Маршруты";
	
	ЗаполнитьДоступныеПараметры_Маршруты_ДанныеПункта(Реквизиты);
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатМаршруты");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатМаршруты.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатМаршруты" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("Маршруты_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "Маршруты_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ТС()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Справочник.уатТС");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатТС";
	УзелРеквизитовОбъектаНазначения.Представление       = "Транспортные средства и оборудование";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Транспортные средства и оборудование";
	
	ЗаполнитьДоступныеПараметры_ТС_ТекущееСостояние(Реквизиты);
	
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатТС");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатТС.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатТС" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("ТС_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "ТС_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ЗаказГрузоотправителя()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Документ.уатЗаказГрузоотправителя");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатЗаказГрузоотправителя";
	УзелРеквизитовОбъектаНазначения.Представление       = "Заказ на ТС";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Заказ на ТС";
	
	ЗаполнитьДоступныеПараметры_ЗаказГрузоотправителя_ДанныеПункта(Реквизиты);
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатЗаказГрузоотправителя");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатЗаказГрузоотправителя.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатЗаказГрузоотправителя" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("ЗаказГрузоотправителя_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "ЗаказГрузоотправителя_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_МаршрутныйЛист()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Документ.уатМаршрутныйЛист");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатМаршрутныйЛист";
	УзелРеквизитовОбъектаНазначения.Представление       = "Маршрутный лист";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Маршрутный лист";
	
	ЗаполнитьДоступныеПараметры_МаршрутныйЛист_ДанныеЗаказа(Реквизиты); 
	ЗаполнитьДоступныеПараметры_МаршрутныйЛист_ДанныеПункта(Реквизиты);
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатМаршрутныйЛист");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатМаршрутныйЛист.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатМаршрутныйЛист" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("МаршрутныйЛист_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "МаршрутныйЛист_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ПутевойЛист()
	
	МетаданныеОбъект = Метаданные.НайтиПоПолномуИмени("Документ.уатПутевойЛист");
	
	Реквизиты = ДеревоРеквизитов();   
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначения.Имя                 = "уатПутевойЛист";
	УзелРеквизитовОбъектаНазначения.Представление       = "Путевой лист";
	УзелРеквизитовОбъектаНазначения.ПолноеПредставление = "Путевой лист";
	
	ЗаполнитьДоступныеПараметры_ПутевойЛист_ДанныеПункта(Реквизиты);
	ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитовОбъектаНазначения.Строки, МетаданныеОбъект,,, "уатПутевойЛист");  
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначения.Строки Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, "уатПутевойЛист.") Тогда
			РеквизитОбъектаНазначения.Имя = "уатПутевойЛист" + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначения.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьПолныеПредставления(Реквизиты.Строки);
	
	СписокРеквизитов = РеквизитФормыВЗначение("ПутевойЛист_ДоступныеПараметры");
	ЗаполнитьДеревоРеквизитов(СписокРеквизитов, Реквизиты);
	ЗначениеВРеквизитФормы(СписокРеквизитов, "ПутевойЛист_ДоступныеПараметры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ЗаказГрузоотправителя_ДанныеПункта(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеПункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные пункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные пункта";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Пункт";
	НоваяСтрока.Представление       = "Пункт";
	НоваяСтрока.ПолноеПредставление = "Пункт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатПунктыНазначения");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ОтправительПолучатель";
	НоваяСтрока.Представление       = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.ПолноеПредставление = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.Контрагенты, СправочникСсылка.Склады");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ТипТочкиМаршрута";
	НоваяСтрока.Представление       = "Операция";
	НоваяСтрока.ПолноеПредставление = "Операция";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("ПеречислениеСсылка.уатТипыТочекМаршрута");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.КонтактноеЛицо";
	НоваяСтрока.Представление       = "Контактное лицо";
	НоваяСтрока.ПолноеПредставление = "Контактное лицо";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ПрибытиеПлан";
	НоваяСтрока.Представление       = "Прибытие план";
	НоваяСтрока.ПолноеПредставление = "Прибытие план";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.УбытиеПлан";
	НоваяСтрока.Представление       = "Убытие план";
	НоваяСтрока.ПолноеПредставление = "Убытие план";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Стоянка";
	НоваяСтрока.Представление       = "Стоянка";
	НоваяСтрока.ПолноеПредставление = "Стоянка";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Число");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ОкноС";
	НоваяСтрока.Представление       = "Окно с";
	НоваяСтрока.ПолноеПредставление = "Окно с";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";  
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ОкноПо";
	НоваяСтрока.Представление       = "Окно по";
	НоваяСтрока.ПолноеПредставление = "Окно по";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ПутевойЛист_ДанныеПункта(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеПункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные пункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные пункта";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Пункт";
	НоваяСтрока.Представление       = "Пункт";
	НоваяСтрока.ПолноеПредставление = "Пункт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатПунктыНазначения");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Заказ";
	НоваяСтрока.Представление       = "Заказ на ТС";
	НоваяСтрока.ПолноеПредставление = "Заказ на ТС";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("ДокументСсылка.уатЗаказГрузоотправителя");

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Дата";
	НоваяСтрока.Представление       = "Дата (план)";
	НоваяСтрока.ПолноеПредставление = "Дата (план)";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ДатаФакт";
	НоваяСтрока.Представление       = "Дата (факт)";
	НоваяСтрока.ПолноеПредставление = "Дата (факт)";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";

	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И (СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник")
				ИЛИ СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Документ")) Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_МаршрутныйЛист_ДанныеПункта(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеПункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные пункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные пункта";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ПредставлениеМЛ";
	НоваяСтрока.Представление       = "Представление МЛ";
	НоваяСтрока.ПолноеПредставление = "Представление МЛ";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Строка");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ТС";
	НоваяСтрока.Представление       = "ТС";
	НоваяСтрока.ПолноеПредставление = "ТС";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатТС");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Пункт";
	НоваяСтрока.Представление       = "Пункт";
	НоваяСтрока.ПолноеПредставление = "Пункт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатПунктыНазначения");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Выполнен";
	НоваяСтрока.Представление       = "Выполнен";
	НоваяСтрока.ПолноеПредставление = "Выполнен";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Булево");

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ПрибытиеПлан";
	НоваяСтрока.Представление       = "Прибытие план";
	НоваяСтрока.ПолноеПредставление = "Прибытие план";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ПрибытиеФакт";
	НоваяСтрока.Представление       = "Прибытие факт";
	НоваяСтрока.ПолноеПредставление = "Прибытие факт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.УбытиеПлан";
	НоваяСтрока.Представление       = "Убытие план";
	НоваяСтрока.ПолноеПредставление = "Убытие план";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.УбытиеФакт";
	НоваяСтрока.Представление       = "Убытие факт";
	НоваяСтрока.ПолноеПредставление = "Убытие факт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ОтклонениеПрибытие";
	НоваяСтрока.Представление       = "Отклонение";
	НоваяСтрока.ПолноеПредставление = "Отклонение";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Строка");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Стоянка";
	НоваяСтрока.Представление       = "Стоянка";
	НоваяСтрока.ПолноеПредставление = "Стоянка";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Строка");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Опоздание";
	НоваяСтрока.Представление       = "Опоздание";
	НоваяСтрока.ПолноеПредставление = "Опоздание";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Строка");
	
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И (СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник")
				ИЛИ СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Документ")) Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_МаршрутныйЛист_ДанныеЗаказа(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеЗаказа";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные заказа";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные заказа";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.Заказ";
	НоваяСтрока.Представление       = "Заказ на ТС";
	НоваяСтрока.ПолноеПредставление = "Заказ на ТС";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("ДокументСсылка.уатЗаказГрузоотправителя");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ОтправительПолучатель";
	НоваяСтрока.Представление       = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.ПолноеПредставление = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.Контрагенты, СправочникСсылка.Склады");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ТипТочкиМаршрута";
	НоваяСтрока.Представление       = "Операция";
	НоваяСтрока.ПолноеПредставление = "Операция";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("ПеречислениеСсылка.уатТипыТочекМаршрута");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.КонтактноеЛицо";
	НоваяСтрока.Представление       = "Контактное лицо";
	НоваяСтрока.ПолноеПредставление = "Контактное лицо";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ОкноС";
	НоваяСтрока.Представление       = "Окно с";
	НоваяСтрока.ПолноеПредставление = "Окно с";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";  
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ОкноПо";
	НоваяСтрока.Представление       = "Окно по";
	НоваяСтрока.ПолноеПредставление = "Окно по";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='dd.MM.yyyy HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ВесБрутто";
	НоваяСтрока.Представление       = "Вес";
	НоваяСтрока.ПолноеПредставление = "Вес";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Число");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.Объем";
	НоваяСтрока.Представление       = "Объем";
	НоваяСтрока.ПолноеПредставление = "Объем";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Число");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.КоличествоМест";
	НоваяСтрока.Представление       = "Упак., шт.";
	НоваяСтрока.ПолноеПредставление = "Упак., шт.";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Число");

	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И (СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник")
				ИЛИ СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Документ")) Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_Контрагенты_ДанныеПункта(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеПункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные пункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные пункта";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Пункт";
	НоваяСтрока.Представление       = "Пункт";
	НоваяСтрока.ПолноеПредставление = "Пункт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатПунктыНазначения");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Основной";
	НоваяСтрока.Представление       = "Основной";
	НоваяСтрока.ПолноеПредставление = "Основной";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Булево");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.КонтактноеЛицо";
	НоваяСтрока.Представление       = "Контактное лицо";
	НоваяСтрока.ПолноеПредставление = "Контактное лицо";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ДоступенС";
	НоваяСтрока.Представление       = "Доступен с";
	НоваяСтрока.ПолноеПредставление = "Доступен с";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='HH:mm'";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.ДоступенПо";
	НоваяСтрока.Представление       = "Доступен по";
	НоваяСтрока.ПолноеПредставление = "Доступен по";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("Дата");
	НоваяСтрока.Формат              = "ДФ='HH:mm'";

	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_Маршруты_ДанныеПункта(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ДанныеПункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Данные пункта";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Данные пункта";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеПункта.Пункт";
	НоваяСтрока.Представление       = "Пункт";
	НоваяСтрока.ПолноеПредставление = "Пункт";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатПунктыНазначения");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ОтправительПолучатель";
	НоваяСтрока.Представление       = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.ПолноеПредставление = "Грузоотправитель / Грузополучатель";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.Контрагенты, СправочникСсылка.Склады");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ДанныеЗаказа.ТипТочкиМаршрута";
	НоваяСтрока.Представление       = "Операция";
	НоваяСтрока.ПолноеПредставление = "Операция";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("ПеречислениеСсылка.уатТипыТочекМаршрута");

	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПараметры_ТС_ТекущееСостояние(Реквизиты)
	
	УзелРеквизитовОбъектаНазначенияДанныеПункта = Реквизиты.Строки.Добавить();
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Имя                 = "ТекущееСостояние";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.Представление       = "Текущее состояние";
	УзелРеквизитовОбъектаНазначенияДанныеПункта.ПолноеПредставление = "Текущее состояние";

	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ТекущееСостояние.Состояние";
	НоваяСтрока.Представление       = "Состояние";
	НоваяСтрока.ПолноеПредставление = "Состояние";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.уатСостояниеТС");
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ТекущееСостояние.РегистраторСостояния";
	НоваяСтрока.Представление       = "Регистратор";
	НоваяСтрока.ПолноеПредставление = "Регистратор";
	
	НоваяСтрока = УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки.Добавить();
	НоваяСтрока.Имя                 = "ТекущееСостояние.Водитель";
	НоваяСтрока.Представление       = "Водитель";
	НоваяСтрока.ПолноеПредставление = "Водитель";
	НоваяСтрока.Тип                 = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	
	Для Каждого РеквизитОбъектаНазначения Из УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки Цикл
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено 
				И СтрНайти(РеквизитОбъектаНазначения.Имя, ".Ссылка") = 0
				И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, УзелРеквизитовОбъектаНазначенияДанныеПункта.Строки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоРеквизитов(Приемник, Источник, ЭтоОбщиеИлиПроизвольныеРеквизиты = Неопределено)
	
	Для Каждого СтрокаДерева Из Источник.Строки Цикл
		
		Если ЭтоОбщиеИлиПроизвольныеРеквизиты = Неопределено Тогда
			ОбщиеИлиПроизвольныеРеквизиты = Ложь;
		Иначе
			ОбщиеИлиПроизвольныеРеквизиты = ЭтоОбщиеИлиПроизвольныеРеквизиты;
		КонецЕсли;
		
		ИндексКартинкиЭлемент = ?(ОбщиеИлиПроизвольныеРеквизиты, 1, 3);
		ИндексКартинкиУзел = ?(ОбщиеИлиПроизвольныеРеквизиты, 0, 2);
		
		НоваяСтрока = Приемник.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
		
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			НоваяСтрока.ИндексКартинки = ИндексКартинкиУзел;
			ЗаполнитьДеревоРеквизитов(НоваяСтрока, СтрокаДерева, ОбщиеИлиПроизвольныеРеквизиты);
		Иначе
			НоваяСтрока.ИндексКартинки = ИндексКартинкиЭлемент;
		КонецЕсли;
	КонецЦикла;
	Приемник.Строки.Сортировать("Представление", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРеквизитыПоМетаданнымОбъекта(Реквизиты, МетаданныеОбъект, СписокРеквизитов = "", ИсключаяРеквизиты = "", Префикс = "")
	
	СведенияОСпискеРеквизитов = Новый Структура("СписокРеквизитов, СписокСодержитДанные");
	СведенияОСпискеРеквизитов.СписокРеквизитов     = СтрРазделить(ВРег(СписокРеквизитов), ",", Ложь);
	СведенияОСпискеРеквизитов.СписокСодержитДанные = (СведенияОСпискеРеквизитов.СписокРеквизитов.Количество() > 0);
	
	СведенияОИсключаемыхРеквизитах = Новый Структура("СписокРеквизитов, СписокСодержитДанные");
	СведенияОИсключаемыхРеквизитах.СписокРеквизитов = СтрРазделить(ВРег(ИсключаяРеквизиты), ",", Ложь);
	СведенияОИсключаемыхРеквизитах.СписокСодержитДанные = (СведенияОИсключаемыхРеквизитах.СписокРеквизитов.Количество() > 0);
	
	Если ТипЗнч(МетаданныеОбъект) = Тип("ОбъектМетаданных") И НЕ ОбщегоНазначения.ЭтоПеречисление(МетаданныеОбъект) Тогда
		Для каждого Реквизит Из МетаданныеОбъект.Реквизиты Цикл
			Если НЕ СтрНачинаетсяС(Реквизит.Имя, "Удалить") Тогда
				Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.Типы()[0] = Тип("ХранилищеЗначения") Тогда
					Продолжить;
				КонецЕсли;
				
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СкрываемыеСтандартныеРеквизиты(СведенияОИсключаемыхРеквизитах.СписокРеквизитов);
	СведенияОИсключаемыхРеквизитах.СписокСодержитДанные = Истина;
	Для каждого Реквизит Из МетаданныеОбъект.СтандартныеРеквизиты Цикл
		ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
	КонецЦикла;
	
	Если НЕ ОбщегоНазначения.ЭтоПеречисление(МетаданныеОбъект) Тогда
		ДобавитьРеквизитыСвойств(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов);
		ДобавитьРеквизитыКонтактнойИнформации(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкрываемыеСтандартныеРеквизиты(Массив)
	
	ДобавитьВМассивУникальноеЗначение(Массив, "ПометкаУдаления");
	ДобавитьВМассивУникальноеЗначение(Массив, "Проведен");
	ДобавитьВМассивУникальноеЗначение(Массив, "Предопределенный");
	ДобавитьВМассивУникальноеЗначение(Массив, "ИмяПредопределенныхДанных");
	ДобавитьВМассивУникальноеЗначение(Массив, "ЭтоГруппа");
	ДобавитьВМассивУникальноеЗначение(Массив, "Родитель");
	ДобавитьВМассивУникальноеЗначение(Массив, "Владелец");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПолныеПредставления(РеквизитыОбъектаНазначения, Представление = "")
	
	Совпадения = Новый Соответствие;
	Для Каждого РеквизитОбъектаНазначения Из РеквизитыОбъектаНазначения Цикл
		ПолноеПредставление = Представление + РеквизитОбъектаНазначения.Представление;
		Если РеквизитОбъектаНазначения.Строки.Количество() > 0 Тогда
			СформироватьПолныеПредставления(РеквизитОбъектаНазначения.Строки, ПолноеПредставление + ".");
		КонецЕсли;
		
		Если Совпадения[ПолноеПредставление] = Неопределено Тогда
			РеквизитОбъектаНазначения.ПолноеПредставление = ПолноеПредставление;
			Совпадения.Вставить(ПолноеПредставление, РеквизитОбъектаНазначения);
		Иначе
			Для ПорядковыйНомер = 1 По 100 Цикл
				ПолноеПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1.%2 (%3)", Представление, РеквизитОбъектаНазначения.Представление, ПорядковыйНомер);
				Если Совпадения[ПолноеПредставление] = Неопределено Тогда
					РеквизитОбъектаНазначения.ПолноеПредставление = ПолноеПредставление;
					Совпадения.Вставить(ПолноеПредставление, РеквизитОбъектаНазначения);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВМассивУникальноеЗначение(Массив, Значение)
	Если Массив.Найти(Значение) = Неопределено Тогда
		Массив.Добавить(ВРег(Значение));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция РазвернутьРеквизит(Знач Имя, Узел, СписокРеквизитов = "", ИсключаяРеквизиты = "") Экспорт
	
	Реквизит = Узел.Найти(Имя, "Имя", Ложь);
	Если Реквизит <> Неопределено Тогда
		РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Имя);
	Иначе
		Имя = Узел.Родитель.Имя + "." + Имя;
		Реквизит = Узел.Найти(Имя, "Имя", Ложь);
		Если СтрЧислоВхождений(Имя, ".") > 1 Тогда
			Возврат Реквизит.Строки;
		КонецЕсли;
		
		Если Реквизит <> Неопределено Тогда
			РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Имя);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Реквизит.Строки;
	
КонецФункции

&НаСервере
Процедура РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Знач Префикс)
	
	Если ТипЗнч(Реквизит.Тип) = Тип("ОписаниеТипов") Тогда
		УзелРеквизитов = Реквизит.Строки;
		Префикс = Префикс + ?(Прав(Префикс, 1) <> ".", ".", "");
		Для каждого Тип Из Реквизит.Тип.Типы() Цикл
			МетаданныеОбъект = Метаданные.НайтиПоТипу(Тип);
			Если МетаданныеОбъект <> Неопределено Тогда
				ПолучитьРеквизитыПоМетаданнымОбъекта(УзелРеквизитов, МетаданныеОбъект, СписокРеквизитов, ИсключаяРеквизиты, Префикс);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах)
	
	ИмяРеквизита = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		Если ТипЗнч(Реквизит) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
			ЗначенияСвойство = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Реквизит, "ИдентификаторДляФормул, ТипЗначения, ФорматСвойства");
			ИмяРеквизита   = "~Свойство." + ЗначенияСвойство.ИдентификаторДляФормул;
			Представление = Строка(Реквизит);
			Тип           = ЗначенияСвойство.ТипЗначения;
			Формат        = ЗначенияСвойство.ФорматСвойства;
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Если ТипЗнч(Реквизит) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
			ИдентификаторДляФормул = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизит, "ИдентификаторДляФормул");
			ИмяРеквизита  =  "~КИ." + ИдентификаторДляФормул;
			Представление = Строка(Реквизит);
			Тип           = Новый ОписаниеТипов("Строка");
			Формат        = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРеквизита = Неопределено Тогда
		ИмяРеквизита  = Реквизит.Имя;
		Представление = Реквизит.Представление();
		Тип           = Реквизит.Тип;
		Формат        = Реквизит.Формат;
	КонецЕсли;
	
	Если СведенияОСпискеРеквизитов.СписокСодержитДанные
		И СведенияОСпискеРеквизитов.СписокРеквизитов.Найти(ВРег(СокрЛП(ИмяРеквизита))) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОИсключаемыхРеквизитах.СписокСодержитДанные
		И СведенияОИсключаемыхРеквизитах.СписокРеквизитов.Найти(ВРег(СокрЛП(ИмяРеквизита))) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйСтрока = Реквизиты.Добавить();
	НовыйСтрока.Имя           = Префикс + "." + ИмяРеквизита;
	НовыйСтрока.Представление = Представление;
	НовыйСтрока.Тип           = Тип;
	НовыйСтрока.Формат        = Формат;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыКонтактнойИнформации(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Ссылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъект.ПолноеИмя()).ПустаяСсылка();
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		ВидыКонтактнойИнформацией = МодульУправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацииОбъекта(Ссылка);
		Если ВидыКонтактнойИнформацией.Количество() > 0 Тогда
			Для каждого ВидКонтактнойИнформацией Из ВидыКонтактнойИнформацией Цикл
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, ВидКонтактнойИнформацией.Ссылка, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыСвойств(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов)
	
	Свойства = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		ПустаяСсылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъект.ПолноеИмя()).ПустаяСсылка();
		ПолучатьДопСведения = МодульУправлениеСвойствами.ИспользоватьДопСведения(ПустаяСсылка);
		ПолучатьДопРеквизиты = МодульУправлениеСвойствами.ИспользоватьДопРеквизиты(ПустаяСсылка);
		
		Если ПолучатьДопРеквизиты Или ПолучатьДопСведения Тогда
			Свойства = МодульУправлениеСвойствами.СвойстваОбъекта(ПустаяСсылка, ПолучатьДопРеквизиты, ПолучатьДопСведения);
			Для каждого Свойство Из Свойства Цикл
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Свойство, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДеревоРеквизитов()
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	
	Реквизиты = Новый ДеревоЗначений;
	Реквизиты.Колонки.Добавить("Имя", ТипСтрока);
	Реквизиты.Колонки.Добавить("Представление", ТипСтрока);
	Реквизиты.Колонки.Добавить("Подсказка", ТипСтрока);
	Реквизиты.Колонки.Добавить("ПолноеПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(300));
	Реквизиты.Колонки.Добавить("Формат", ТипСтрока);
	Реквизиты.Колонки.Добавить("Тип", Новый ОписаниеТипов("ОписаниеТипов"));
	Реквизиты.Колонки.Добавить("ПроизвольныйПараметр", Новый ОписаниеТипов("Булево"));
	
	Возврат Реквизиты;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьВТекстСообщенияПараметр(ТекстПараметра = Неопределено)
	
	Если Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПунктыНазначения Тогда
		Реквизиты        = ПунктыНазначения_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.ПунктыНазначения_ДоступныеПараметры; 
		ТелоHTML         = ПунктыНазначения_ТелоШаблона;
		ЭлементыТелоHTML = Элементы.ПунктыНазначения_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаКонтрагенты Тогда
		Реквизиты        = Контрагенты_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.Контрагенты_ДоступныеПараметры; 
		ТелоHTML         = Контрагенты_ТелоШаблона;
		ЭлементыТелоHTML = Элементы.Контрагенты_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаТС Тогда
		Реквизиты        = ТС_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.ТС_ДоступныеПараметры; 
		ТелоHTML         = ТС_ТелоШаблона;   
		ЭлементыТелоHTML = Элементы.ТС_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршруты Тогда
		Реквизиты        = Маршруты_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.Маршруты_ДоступныеПараметры; 
		ТелоHTML         = Маршруты_ТелоШаблона;  
		ЭлементыТелоHTML = Элементы.Маршруты_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаЗаказГрузоотправителя Тогда
		Реквизиты        = ЗаказГрузоотправителя_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.ЗаказГрузоотправителя_ДоступныеПараметры; 
		ТелоHTML         = ЗаказГрузоотправителя_ТелоШаблона;
		ЭлементыТелоHTML = Элементы.ЗаказГрузоотправителя_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршрутныйЛист Тогда
		Реквизиты        = МаршрутныйЛист_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.МаршрутныйЛист_ДоступныеПараметры; 
		ТелоHTML         = МаршрутныйЛист_ТелоШаблона; 
		ЭлементыТелоHTML = Элементы.МаршрутныйЛист_ТелоШаблона
	ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПутевойЛист Тогда
		Реквизиты        = ПутевойЛист_ДоступныеПараметры;
		РеквизитыЭлемент = Элементы.ПутевойЛист_ДоступныеПараметры; 
		ТелоHTML         = ПутевойЛист_ТелоШаблона;
		ЭлементыТелоHTML = Элементы.ПутевойЛист_ТелоШаблона;
	КонецЕсли;
	
	Если РеквизитыЭлемент.ВыделенныеСтроки <> Неопределено Тогда
		Текст = ""; 
		Если ТекстПараметра <> Неопределено Тогда
			Текст = ТекстПараметра;
		Иначе
			Для каждого НомерСтроки Из РеквизитыЭлемент.ВыделенныеСтроки Цикл
				НайденнаяСтрока = Реквизиты.НайтиПоИдентификатору(НомерСтроки);
				Если НайденнаяСтрока <> Неопределено Тогда
					ФорматВывода = ?(ПустаяСтрока(НайденнаяСтрока.Формат), "", "{" + НайденнаяСтрока.Формат +"}");
					Текст = Текст + "[" + НайденнаяСтрока.ПолноеПредставление + ФорматВывода + "] ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ПустаяСтрока(ЭлементыТелоHTML.ВыделенныйТекст) Тогда
			ЗакладкаДляВставкиНачало = Неопределено;
			ЗакладкаДляВставкиКонец  = Неопределено;
			ЭлементыТелоHTML.ПолучитьГраницыВыделения(ЗакладкаДляВставкиНачало, ЗакладкаДляВставкиКонец);
			ТелоHTML.Вставить(ЗакладкаДляВставкиКонец, Текст);
		Иначе
			ЭлементыТелоHTML.ВыделенныйТекст = Текст;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФорматаРеквизита(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Если Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПунктыНазначения Тогда
			Реквизит = ПунктыНазначения_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаКонтрагенты Тогда
			Реквизит = Контрагенты_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки); 
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаТС Тогда
			Реквизит = ТС_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки); 
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршруты Тогда
			Реквизит = Маршруты_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаЗаказГрузоотправителя Тогда
			Реквизит = ЗаказГрузоотправителя_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаМаршрутныйЛист Тогда
			Реквизит = МаршрутныйЛист_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		ИначеЕсли Элементы.СтраницыОбъектов.ТекущаяСтраница = Элементы.СтраницаПутевойЛист Тогда
			Реквизит = ПутевойЛист_ДоступныеПараметры.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		КонецЕсли; 
		
		Если Реквизит <> Неопределено Тогда
			Реквизит.Формат = Результат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

