#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Маршрут", Маршрут);
	Параметры.Свойство("Рейс", Рейс);
	Параметры.Свойство("Выход", Выход);
	Параметры.Свойство("ПунктОтправления", ПунктОтправления);
	Параметры.Свойство("ПунктНазначения", ПунктНазначения);
	Параметры.Свойство("Грузоотправитель", Грузоотправитель);
	Параметры.Свойство("Грузополучатель", Грузополучатель);
	Параметры.Свойство("ДнейДоОтправления", ДнейДоОтправления);
	Параметры.Свойство("ДнейВПути", ДнейВПути);
	Параметры.Свойство("FTL", FTL);
	
	ПредставлениеРейса = Рейс.НомерРейса;
	ТекстНСтр = НСтр("ru='Выбрать дату и установить новое расписание для рейса ""%1"" до указанной даты'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.УстановитьНовоеРасписаниеДоРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.УстановитьНовоеРасписаниеДоПодсказка.Заголовок = ТекстНСтр;
	
	ТекстНСтр = НСтр("ru='Выбрать дату и установить новое расписание для рейса ""%1"", начиная с указанной даты'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.УстановитьНовоеРасписаниеОтРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.УстановитьНовоеРасписаниеОтПодсказка.Заголовок = ТекстНСтр;
	
	ТекстНСтр = НСтр("ru='Выбрать период и установить новое расписание для рейса ""%1"" на указанный период'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.УстановитьНовоеРасписаниеНаПериодРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.УстановитьНовоеРасписаниеНаПериодПодсказка.Заголовок = ТекстНСтр;
	
	ТекстНСтр = НСтр("ru='Выбрать дату и исключить из расписания рейс ""%1"" до указанной даты'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.ОтменитьРасписаниеДоРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.ОтменитьРасписаниеДоПодсказка.Заголовок = ТекстНСтр;
	
	ТекстНСтр = НСтр("ru='Выбрать дату и исключить из расписания рейс ""%1"", начиная с указанной даты'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.ОтменитьРасписаниеОтРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.ОтменитьРасписаниеОтПодсказка.Заголовок = ТекстНСтр;
	
	ТекстНСтр = НСтр("ru='Выбрать период и исключить из расписания рейс ""%1"" на указанный период'");
	ТекстНСтр = СтрШаблон(ТекстНСтр, СокрЛП(ПредставлениеРейса));
	Элементы.ОтменитьРасписаниеНаПериодРасширеннаяПодсказка.Заголовок = ТекстНСтр;
	Элементы.ОтменитьРасписаниеНаПериодПодсказка.Заголовок = ТекстНСтр;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьНовоеРасписаниеНаПериод(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеНаПериод;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовоеРасписаниеДо(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеДо;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовоеРасписаниеОт(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеОт;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРасписаниеДо(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеДо;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРасписаниеОт(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеОт;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРасписаниеНаПериод(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеНаПериод;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	ПустаяДата = Дата('00010101');
	Отказ = Ложь;
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеДо Тогда
		Если Не ЗначениеЗаполнено(КонецПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена дата'; en = 'Incorrect time'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли;
		ЗаписатьНовоеРасписание(ПустаяДата, КонецПериода);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеОт Тогда
		Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена дата'; en = 'Incorrect time'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли;
		ЗаписатьНовоеРасписание(НачалоПериода, ПустаяДата);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУстановитьНовоеРасписаниеНаПериод Тогда
		Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнено начало периода'; en = 'Incorrect time interval start'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(КонецПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнен конец периода'; en = 'Incorrect time interval end'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		Если Не Отказ И НачалоПериода > КонецПериода Тогда
			ТекстНСтр = НСтр("ru = 'Дата окончания действия периода должна быть больше даты начала действия периода';
				|en = 'Incorrect time period'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстНСтр);
			Отказ = Истина;
		КонецЕсли;
		Если Не Отказ Тогда
			ЗаписатьНовоеРасписание(НачалоПериода, КонецПериода);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеДо Тогда
		Если Не ЗначениеЗаполнено(КонецПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена дата'; en = 'Incorrect time'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли;
		УдалитьРасписаниеДо(КонецПериода);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеОт Тогда
		Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена дата'; en = 'Incorrect time'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли;
		УдалитьРасписаниеОт(НачалоПериода);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОтменитьРасписаниеНаПериод Тогда
		Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнено начало периода'; en = 'Incorrect time interval start'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(КонецПериода) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнен конец периода'; en = 'Incorrect time interval end'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		Если Не Отказ И НачалоПериода > КонецПериода Тогда
			ТекстНСтр = НСтр("ru = 'Дата окончания действия периода должна быть больше даты начала действия периода';
				|en = 'Incorrect time period'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстНСтр);
			Отказ = Истина;
		КонецЕсли;
		Если Не Отказ Тогда
			УдалитьРасписаниеНаПериод(НачалоПериода, КонецПериода);
		КонецЕсли;
	Иначе
		// Некорректная операция
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ИмяКлючевойОперации = "уатОперации.РасписаниеРейсов.ИзменениеРасписания";
		ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(ИмяКлючевойОперации, 1);
		
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборОперации;
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборОперации Тогда
		Элементы.ОК.Видимость = Ложь;
		Элементы.ФормаНазад.Видимость = Ложь;
	Иначе
		Элементы.ОК.Видимость = Истина;
		Элементы.ФормаНазад.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовоеРасписание(ДатаС, ДатаПо)
	ДатаУстановкиРасписания = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(Маршрут) Тогда
		Для Каждого ТекЭтап Из Маршрут.Этапы Цикл
			МенеджерЗаписиРейсы = РегистрыСведений.уатРасписаниеРейсов.СоздатьМенеджерЗаписи();
			МенеджерЗаписиРейсы.Маршрут = Маршрут;
			МенеджерЗаписиРейсы.Выход = Выход;
			МенеджерЗаписиРейсы.Рейс = Рейс;
			МенеджерЗаписиРейсы.УИДПункта = ТекЭтап.УИД;
			
			МенеджерЗаписиРейсы.ДнейДоОтправления = ДнейДоОтправления;
			МенеджерЗаписиРейсы.ДнейВПути = ДнейВПути;
			МенеджерЗаписиРейсы.FTL = FTL;
			
			МенеджерЗаписиРейсы.ДействуетС = ДатаС;
			МенеджерЗаписиРейсы.ДействуетПо = ДатаПо;
			МенеджерЗаписиРейсы.ДатаУстановки = ДатаУстановкиРасписания;
			
			МенеджерЗаписиРейсы.Записать();
		КонецЦикла;
	Иначе
		МенеджерЗаписиРейсы = РегистрыСведений.уатРасписаниеРейсов.СоздатьМенеджерЗаписи();
		МенеджерЗаписиРейсы.Рейс = Рейс;
		МенеджерЗаписиРейсы.ПунктОтправления = ПунктОтправления;
		МенеджерЗаписиРейсы.ПунктНазначения = ПунктНазначения;
		
		МенеджерЗаписиРейсы.ДнейДоОтправления = ДнейДоОтправления;
		МенеджерЗаписиРейсы.ДнейВПути = ДнейВПути;
		МенеджерЗаписиРейсы.FTL = FTL;
		
		МенеджерЗаписиРейсы.ДействуетС = ДатаС;
		МенеджерЗаписиРейсы.ДействуетПо = ДатаПо;
		МенеджерЗаписиРейсы.ДатаУстановки = ДатаУстановкиРасписания;
		МенеджерЗаписиРейсы.Грузоотправитель = Грузоотправитель;
		МенеджерЗаписиРейсы.Грузополучатель = Грузополучатель;
		
		МенеджерЗаписиРейсы.Записать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьРасписаниеДо(ДатаПо)
	НаборЗаписей = РегистрыСведений.уатРасписаниеРейсов.СоздатьНаборЗаписей();
	УстановитьОтборНабораЗаписей(НаборЗаписей);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатРасписаниеРейсов.Маршрут КАК Маршрут,
	|	уатРасписаниеРейсов.Выход КАК Выход,
	|	уатРасписаниеРейсов.Рейс КАК Рейс,
	|	уатРасписаниеРейсов.УИДПункта КАК УИДПункта,
	|	уатРасписаниеРейсов.ПунктОтправления КАК ПунктОтправления,
	|	уатРасписаниеРейсов.ПунктНазначения КАК ПунктНазначения,
	|	уатРасписаниеРейсов.Грузоотправитель КАК Грузоотправитель,
	|	уатРасписаниеРейсов.Грузополучатель КАК Грузополучатель,
	|	уатРасписаниеРейсов.ДатаУстановки КАК ДатаУстановки,
	|	ВЫБОР
	|		КОГДА уатРасписаниеРейсов.ДействуетС > &ДатаПо
	|			ТОГДА уатРасписаниеРейсов.ДействуетС
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&ДатаПо, ДЕНЬ, 1)
	|	КОНЕЦ КАК ДействуетС,
	|	уатРасписаниеРейсов.ДействуетПо КАК ДействуетПо,
	|	уатРасписаниеРейсов.Пн КАК Пн,
	|	уатРасписаниеРейсов.Вт КАК Вт,
	|	уатРасписаниеРейсов.Ср КАК Ср,
	|	уатРасписаниеРейсов.Чт КАК Чт,
	|	уатРасписаниеРейсов.Пт КАК Пт,
	|	уатРасписаниеРейсов.Сб КАК Сб,
	|	уатРасписаниеРейсов.Вс КАК Вс,
	|	уатРасписаниеРейсов.ДнейДоОтправления КАК ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути КАК ДнейВПути,
	|	уатРасписаниеРейсов.FTL КАК FTL,
	|	уатРасписаниеРейсов.ВремяПрибытия КАК ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия КАК ВремяУбытия
	|ПОМЕСТИТЬ втРасписания
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.ПунктОтправления = &ПунктОтправления
	|	И уатРасписаниеРейсов.ПунктНазначения = &ПунктНазначения
	|	И уатРасписаниеРейсов.Грузоотправитель = &Грузоотправитель
	|	И уатРасписаниеРейсов.Грузополучатель = &Грузополучатель
	|	И (уатРасписаниеРейсов.ДействуетПо > &ДатаПо
	|			ИЛИ уатРасписаниеРейсов.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Маршрут,
	|	уатРасписаниеРейсов.Вс,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Рейс,
	|	уатРасписаниеРейсов.Грузополучатель,
	|	уатРасписаниеРейсов.ДействуетПо,
	|	уатРасписаниеРейсов.FTL,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ПунктНазначения,
	|	уатРасписаниеРейсов.ВремяУбытия,
	|	уатРасписаниеРейсов.ПунктОтправления,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Грузоотправитель,
	|	уатРасписаниеРейсов.Выход,
	|	уатРасписаниеРейсов.УИДПункта,
	|	уатРасписаниеРейсов.ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути,
	|	уатРасписаниеРейсов.ДатаУстановки,
	|	ВЫБОР
	|		КОГДА уатРасписаниеРейсов.ДействуетС > &ДатаПо
	|			ТОГДА уатРасписаниеРейсов.ДействуетС
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&ДатаПо, ДЕНЬ, 1)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	уатРасписаниеРейсов.ДатаУстановки = МАКСИМУМ(уатРасписаниеРейсов.ДатаУстановки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписания.Маршрут КАК Маршрут,
	|	втРасписания.Выход КАК Выход,
	|	втРасписания.Рейс КАК Рейс,
	|	втРасписания.УИДПункта КАК УИДПункта,
	|	втРасписания.ПунктОтправления КАК ПунктОтправления,
	|	втРасписания.ПунктНазначения КАК ПунктНазначения,
	|	втРасписания.Грузоотправитель КАК Грузоотправитель,
	|	втРасписания.Грузополучатель КАК Грузополучатель,
	|	втРасписания.ДатаУстановки КАК ДатаУстановки,
	|	втРасписания.ДействуетС КАК ДействуетС,
	|	втРасписания.ДействуетПо КАК ДействуетПо,
	|	МАКСИМУМ(втРасписания.Пн) КАК Пн,
	|	МАКСИМУМ(втРасписания.Вт) КАК Вт,
	|	МАКСИМУМ(втРасписания.Ср) КАК Ср,
	|	МАКСИМУМ(втРасписания.Чт) КАК Чт,
	|	МАКСИМУМ(втРасписания.Пт) КАК Пт,
	|	МАКСИМУМ(втРасписания.Сб) КАК Сб,
	|	МАКСИМУМ(втРасписания.Вс) КАК Вс,
	|	МАКСИМУМ(втРасписания.ДнейДоОтправления) КАК ДнейДоОтправления,
	|	МАКСИМУМ(втРасписания.ДнейВПути) КАК ДнейВПути,
	|	МАКСИМУМ(втРасписания.FTL) КАК FTL,
	|	МАКСИМУМ(втРасписания.ВремяПрибытия) КАК ВремяПрибытия,
	|	МАКСИМУМ(втРасписания.ВремяУбытия) КАК ВремяУбытия
	|ИЗ
	|	втРасписания КАК втРасписания
	|
	|СГРУППИРОВАТЬ ПО
	|	втРасписания.Маршрут,
	|	втРасписания.Выход,
	|	втРасписания.Рейс,
	|	втРасписания.УИДПункта,
	|	втРасписания.ПунктОтправления,
	|	втРасписания.ПунктНазначения,
	|	втРасписания.Грузоотправитель,
	|	втРасписания.Грузополучатель,
	|	втРасписания.ДатаУстановки,
	|	втРасписания.ДействуетС,
	|	втРасписания.ДействуетПо";
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("Выход", Выход);
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.УстановитьПараметр("ПунктОтправления", ПунктОтправления);
	Запрос.УстановитьПараметр("ПунктНазначения", ПунктНазначения);
	Запрос.УстановитьПараметр("Грузоотправитель", Грузоотправитель);
	Запрос.УстановитьПараметр("Грузополучатель", Грузополучатель);
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("ДатаПо", ДатаПо);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	КонецЦикла;
	
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Процедура УдалитьРасписаниеОт(ДатаС)
	НаборЗаписей = РегистрыСведений.уатРасписаниеРейсов.СоздатьНаборЗаписей();
	УстановитьОтборНабораЗаписей(НаборЗаписей);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатРасписаниеРейсов.Маршрут КАК Маршрут,
	|	уатРасписаниеРейсов.Выход КАК Выход,
	|	уатРасписаниеРейсов.Рейс КАК Рейс,
	|	уатРасписаниеРейсов.УИДПункта КАК УИДПункта,
	|	уатРасписаниеРейсов.ПунктОтправления КАК ПунктОтправления,
	|	уатРасписаниеРейсов.ПунктНазначения КАК ПунктНазначения,
	|	уатРасписаниеРейсов.Грузоотправитель КАК Грузоотправитель,
	|	уатРасписаниеРейсов.Грузополучатель КАК Грузополучатель,
	|	уатРасписаниеРейсов.ДатаУстановки КАК ДатаУстановки,
	|	уатРасписаниеРейсов.ДействуетС КАК ДействуетС,
	|	ВЫБОР
	|		КОГДА уатРасписаниеРейсов.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|		КОГДА уатРасписаниеРейсов.ДействуетПо < &ДатаС
	|			ТОГДА уатРасписаниеРейсов.ДействуетПо
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|	КОНЕЦ КАК ДействуетПо,
	|	уатРасписаниеРейсов.Пн КАК Пн,
	|	уатРасписаниеРейсов.Вт КАК Вт,
	|	уатРасписаниеРейсов.Ср КАК Ср,
	|	уатРасписаниеРейсов.Чт КАК Чт,
	|	уатРасписаниеРейсов.Пт КАК Пт,
	|	уатРасписаниеРейсов.Сб КАК Сб,
	|	уатРасписаниеРейсов.Вс КАК Вс,
	|	уатРасписаниеРейсов.ДнейДоОтправления КАК ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути КАК ДнейВПути,
	|	уатРасписаниеРейсов.FTL КАК FTL,
	|	уатРасписаниеРейсов.ВремяПрибытия КАК ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия КАК ВремяУбытия
	|ПОМЕСТИТЬ втРасписания
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.ПунктОтправления = &ПунктОтправления
	|	И уатРасписаниеРейсов.ПунктНазначения = &ПунктНазначения
	|	И уатРасписаниеРейсов.Грузоотправитель = &Грузоотправитель
	|	И уатРасписаниеРейсов.Грузополучатель = &Грузополучатель
	|	И уатРасписаниеРейсов.ДействуетС < &ДатаС
	|
	|СГРУППИРОВАТЬ ПО
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Маршрут,
	|	уатРасписаниеРейсов.Вс,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Рейс,
	|	уатРасписаниеРейсов.Грузополучатель,
	|	уатРасписаниеРейсов.ДействуетС,
	|	уатРасписаниеРейсов.FTL,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ПунктНазначения,
	|	уатРасписаниеРейсов.ВремяУбытия,
	|	уатРасписаниеРейсов.ПунктОтправления,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Грузоотправитель,
	|	уатРасписаниеРейсов.Выход,
	|	уатРасписаниеРейсов.УИДПункта,
	|	уатРасписаниеРейсов.ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути,
	|	уатРасписаниеРейсов.ДатаУстановки,
	|	ВЫБОР
	|		КОГДА уатРасписаниеРейсов.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|		КОГДА уатРасписаниеРейсов.ДействуетПо < &ДатаС
	|			ТОГДА уатРасписаниеРейсов.ДействуетПо
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	уатРасписаниеРейсов.ДатаУстановки = МАКСИМУМ(уатРасписаниеРейсов.ДатаУстановки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписания.Маршрут КАК Маршрут,
	|	втРасписания.Выход КАК Выход,
	|	втРасписания.Рейс КАК Рейс,
	|	втРасписания.УИДПункта КАК УИДПункта,
	|	втРасписания.ПунктОтправления КАК ПунктОтправления,
	|	втРасписания.ПунктНазначения КАК ПунктНазначения,
	|	втРасписания.Грузоотправитель КАК Грузоотправитель,
	|	втРасписания.Грузополучатель КАК Грузополучатель,
	|	втРасписания.ДатаУстановки КАК ДатаУстановки,
	|	втРасписания.ДействуетС КАК ДействуетС,
	|	втРасписания.ДействуетПо КАК ДействуетПо,
	|	МАКСИМУМ(втРасписания.Пн) КАК Пн,
	|	МАКСИМУМ(втРасписания.Вт) КАК Вт,
	|	МАКСИМУМ(втРасписания.Ср) КАК Ср,
	|	МАКСИМУМ(втРасписания.Чт) КАК Чт,
	|	МАКСИМУМ(втРасписания.Пт) КАК Пт,
	|	МАКСИМУМ(втРасписания.Сб) КАК Сб,
	|	МАКСИМУМ(втРасписания.Вс) КАК Вс,
	|	МАКСИМУМ(втРасписания.ДнейДоОтправления) КАК ДнейДоОтправления,
	|	МАКСИМУМ(втРасписания.ДнейВПути) КАК ДнейВПути,
	|	МАКСИМУМ(втРасписания.FTL) КАК FTL,
	|	МАКСИМУМ(втРасписания.ВремяПрибытия) КАК ВремяПрибытия,
	|	МАКСИМУМ(втРасписания.ВремяУбытия) КАК ВремяУбытия
	|ИЗ
	|	втРасписания КАК втРасписания
	|
	|СГРУППИРОВАТЬ ПО
	|	втРасписания.Маршрут,
	|	втРасписания.Выход,
	|	втРасписания.Рейс,
	|	втРасписания.УИДПункта,
	|	втРасписания.ПунктОтправления,
	|	втРасписания.ПунктНазначения,
	|	втРасписания.Грузоотправитель,
	|	втРасписания.Грузополучатель,
	|	втРасписания.ДатаУстановки,
	|	втРасписания.ДействуетС,
	|	втРасписания.ДействуетПо";
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("Выход", Выход);
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.УстановитьПараметр("ПунктОтправления", ПунктОтправления);
	Запрос.УстановитьПараметр("ПунктНазначения", ПунктНазначения);
	Запрос.УстановитьПараметр("Грузоотправитель", Грузоотправитель);
	Запрос.УстановитьПараметр("Грузополучатель", Грузополучатель);
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("ДатаС", ДатаС);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	КонецЦикла;
	
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Процедура УдалитьРасписаниеНаПериод(ДатаС, ДатаПо)
	
	НаборЗаписей = РегистрыСведений.уатРасписаниеРейсов.СоздатьНаборЗаписей();
	УстановитьОтборНабораЗаписей(НаборЗаписей);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатРасписаниеРейсов.Маршрут КАК Маршрут,
	|	уатРасписаниеРейсов.Выход КАК Выход,
	|	уатРасписаниеРейсов.Рейс КАК Рейс,
	|	уатРасписаниеРейсов.УИДПункта КАК УИДПункта,
	|	уатРасписаниеРейсов.ПунктОтправления КАК ПунктОтправления,
	|	уатРасписаниеРейсов.ПунктНазначения КАК ПунктНазначения,
	|	уатРасписаниеРейсов.Грузоотправитель КАК Грузоотправитель,
	|	уатРасписаниеРейсов.Грузополучатель КАК Грузополучатель,
	|	уатРасписаниеРейсов.ДатаУстановки КАК ДатаУстановки,
	|	уатРасписаниеРейсов.ДействуетС КАК ДействуетС,
	|	ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1) КАК ДействуетПо,
	|	уатРасписаниеРейсов.Пн КАК Пн,
	|	уатРасписаниеРейсов.Вт КАК Вт,
	|	уатРасписаниеРейсов.Ср КАК Ср,
	|	уатРасписаниеРейсов.Чт КАК Чт,
	|	уатРасписаниеРейсов.Пт КАК Пт,
	|	уатРасписаниеРейсов.Сб КАК Сб,
	|	уатРасписаниеРейсов.Вс КАК Вс,
	|	уатРасписаниеРейсов.ДнейДоОтправления КАК ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути КАК ДнейВПути,
	|	уатРасписаниеРейсов.FTL КАК FTL,
	|	уатРасписаниеРейсов.ВремяПрибытия КАК ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия КАК ВремяУбытия
	|ПОМЕСТИТЬ втРасписанияПредварительно
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.ПунктОтправления = &ПунктОтправления
	|	И уатРасписаниеРейсов.ПунктНазначения = &ПунктНазначения
	|	И уатРасписаниеРейсов.Грузоотправитель = &Грузоотправитель
	|	И уатРасписаниеРейсов.Грузополучатель = &Грузополучатель
	|	И уатРасписаниеРейсов.ДействуетС <= ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|	И (уатРасписаниеРейсов.ДействуетПо >= ДОБАВИТЬКДАТЕ(&ДатаС, ДЕНЬ, -1)
	|			ИЛИ уатРасписаниеРейсов.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатРасписаниеРейсов.Маршрут,
	|	уатРасписаниеРейсов.Выход,
	|	уатРасписаниеРейсов.Рейс,
	|	уатРасписаниеРейсов.УИДПункта,
	|	уатРасписаниеРейсов.ПунктОтправления,
	|	уатРасписаниеРейсов.ПунктНазначения,
	|	уатРасписаниеРейсов.Грузоотправитель,
	|	уатРасписаниеРейсов.Грузополучатель,
	|	уатРасписаниеРейсов.ДатаУстановки,
	|	ДОБАВИТЬКДАТЕ(&ДатаПо, ДЕНЬ, 1),
	|	уатРасписаниеРейсов.ДействуетПо,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Вс,
	|	уатРасписаниеРейсов.ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути,
	|	уатРасписаниеРейсов.FTL,
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.ПунктОтправления = &ПунктОтправления
	|	И уатРасписаниеРейсов.ПунктНазначения = &ПунктНазначения
	|	И уатРасписаниеРейсов.Грузоотправитель = &Грузоотправитель
	|	И уатРасписаниеРейсов.Грузополучатель = &Грузополучатель
	|	И (уатРасписаниеРейсов.ДействуетС <= ДОБАВИТЬКДАТЕ(&ДатаПо, ДЕНЬ, 1)
	|				И уатРасписаниеРейсов.ДействуетПо >= ДОБАВИТЬКДАТЕ(&ДатаПо, ДЕНЬ, 1)
	|			ИЛИ уатРасписаниеРейсов.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатРасписаниеРейсов.Маршрут,
	|	уатРасписаниеРейсов.Выход,
	|	уатРасписаниеРейсов.Рейс,
	|	уатРасписаниеРейсов.УИДПункта,
	|	уатРасписаниеРейсов.ПунктОтправления,
	|	уатРасписаниеРейсов.ПунктНазначения,
	|	уатРасписаниеРейсов.Грузоотправитель,
	|	уатРасписаниеРейсов.Грузополучатель,
	|	уатРасписаниеРейсов.ДатаУстановки,
	|	уатРасписаниеРейсов.ДействуетС,
	|	уатРасписаниеРейсов.ДействуетПо,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Вс,
	|	уатРасписаниеРейсов.ДнейДоОтправления,
	|	уатРасписаниеРейсов.ДнейВПути,
	|	уатРасписаниеРейсов.FTL,
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.ПунктОтправления = &ПунктОтправления
	|	И уатРасписаниеРейсов.ПунктНазначения = &ПунктНазначения
	|	И уатРасписаниеРейсов.Грузоотправитель = &Грузоотправитель
	|	И уатРасписаниеРейсов.Грузополучатель = &Грузополучатель
	|	И (уатРасписаниеРейсов.ДействуетПо < &ДатаС
	|				И уатРасписаниеРейсов.ДействуетПо <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ уатРасписаниеРейсов.ДействуетС > &ДатаПо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписанияПредварительно.Маршрут КАК Маршрут,
	|	втРасписанияПредварительно.Выход КАК Выход,
	|	втРасписанияПредварительно.Рейс КАК Рейс,
	|	втРасписанияПредварительно.УИДПункта КАК УИДПункта,
	|	втРасписанияПредварительно.ПунктОтправления КАК ПунктОтправления,
	|	втРасписанияПредварительно.ПунктНазначения КАК ПунктНазначения,
	|	втРасписанияПредварительно.Грузоотправитель КАК Грузоотправитель,
	|	втРасписанияПредварительно.Грузополучатель КАК Грузополучатель,
	|	втРасписанияПредварительно.ДатаУстановки КАК ДатаУстановки,
	|	втРасписанияПредварительно.ДействуетС КАК ДействуетС,
	|	втРасписанияПредварительно.ДействуетПо КАК ДействуетПо,
	|	втРасписанияПредварительно.Пн КАК Пн,
	|	втРасписанияПредварительно.Вт КАК Вт,
	|	втРасписанияПредварительно.Ср КАК Ср,
	|	втРасписанияПредварительно.Чт КАК Чт,
	|	втРасписанияПредварительно.Пт КАК Пт,
	|	втРасписанияПредварительно.Сб КАК Сб,
	|	втРасписанияПредварительно.Вс КАК Вс,
	|	втРасписанияПредварительно.ДнейДоОтправления КАК ДнейДоОтправления,
	|	втРасписанияПредварительно.ДнейВПути КАК ДнейВПути,
	|	втРасписанияПредварительно.FTL КАК FTL,
	|	втРасписанияПредварительно.ВремяПрибытия КАК ВремяПрибытия,
	|	втРасписанияПредварительно.ВремяУбытия КАК ВремяУбытия
	|ПОМЕСТИТЬ втРасписания
	|ИЗ
	|	втРасписанияПредварительно КАК втРасписанияПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	втРасписанияПредварительно.Вт,
	|	втРасписанияПредварительно.ВремяУбытия,
	|	втРасписанияПредварительно.Выход,
	|	втРасписанияПредварительно.Ср,
	|	втРасписанияПредварительно.Маршрут,
	|	втРасписанияПредварительно.Пн,
	|	втРасписанияПредварительно.Рейс,
	|	втРасписанияПредварительно.Грузоотправитель,
	|	втРасписанияПредварительно.ДействуетПо,
	|	втРасписанияПредварительно.Вс,
	|	втРасписанияПредварительно.ВремяПрибытия,
	|	втРасписанияПредварительно.Чт,
	|	втРасписанияПредварительно.ПунктНазначения,
	|	втРасписанияПредварительно.Грузополучатель,
	|	втРасписанияПредварительно.Сб,
	|	втРасписанияПредварительно.FTL,
	|	втРасписанияПредварительно.ПунктОтправления,
	|	втРасписанияПредварительно.ДействуетС,
	|	втРасписанияПредварительно.Пт,
	|	втРасписанияПредварительно.УИДПункта,
	|	втРасписанияПредварительно.ДатаУстановки,
	|	втРасписанияПредварительно.ДнейДоОтправления,
	|	втРасписанияПредварительно.ДнейВПути
	|
	|ИМЕЮЩИЕ
	|	втРасписанияПредварительно.ДатаУстановки = МАКСИМУМ(втРасписанияПредварительно.ДатаУстановки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписания.Маршрут КАК Маршрут,
	|	втРасписания.Выход КАК Выход,
	|	втРасписания.Рейс КАК Рейс,
	|	втРасписания.УИДПункта КАК УИДПункта,
	|	втРасписания.ПунктОтправления КАК ПунктОтправления,
	|	втРасписания.ПунктНазначения КАК ПунктНазначения,
	|	втРасписания.Грузоотправитель КАК Грузоотправитель,
	|	втРасписания.Грузополучатель КАК Грузополучатель,
	|	втРасписания.ДатаУстановки КАК ДатаУстановки,
	|	втРасписания.ДействуетС КАК ДействуетС,
	|	втРасписания.ДействуетПо КАК ДействуетПо,
	|	МАКСИМУМ(втРасписания.Пн) КАК Пн,
	|	МАКСИМУМ(втРасписания.Вт) КАК Вт,
	|	МАКСИМУМ(втРасписания.Ср) КАК Ср,
	|	МАКСИМУМ(втРасписания.Чт) КАК Чт,
	|	МАКСИМУМ(втРасписания.Пт) КАК Пт,
	|	МАКСИМУМ(втРасписания.Сб) КАК Сб,
	|	МАКСИМУМ(втРасписания.Вс) КАК Вс,
	|	МАКСИМУМ(втРасписания.ДнейДоОтправления) КАК ДнейДоОтправления,
	|	МАКСИМУМ(втРасписания.ДнейВПути) КАК ДнейВПути,
	|	МАКСИМУМ(втРасписания.FTL) КАК FTL,
	|	МАКСИМУМ(втРасписания.ВремяПрибытия) КАК ВремяПрибытия,
	|	МАКСИМУМ(втРасписания.ВремяУбытия) КАК ВремяУбытия
	|ИЗ
	|	втРасписания КАК втРасписания
	|
	|СГРУППИРОВАТЬ ПО
	|	втРасписания.Маршрут,
	|	втРасписания.Выход,
	|	втРасписания.Рейс,
	|	втРасписания.УИДПункта,
	|	втРасписания.ПунктОтправления,
	|	втРасписания.ПунктНазначения,
	|	втРасписания.Грузоотправитель,
	|	втРасписания.Грузополучатель,
	|	втРасписания.ДатаУстановки,
	|	втРасписания.ДействуетС,
	|	втРасписания.ДействуетПо";
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("Выход", Выход);
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.УстановитьПараметр("ПунктОтправления", ПунктОтправления);
	Запрос.УстановитьПараметр("ПунктНазначения", ПунктНазначения);
	Запрос.УстановитьПараметр("Грузоотправитель", Грузоотправитель);
	Запрос.УстановитьПараметр("Грузополучатель", Грузополучатель);
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	Запрос.УстановитьПараметр("ДатаС", ДатаС);
	Запрос.УстановитьПараметр("ДатаПо", ДатаПо);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборНабораЗаписей(НаборЗаписей)
	Если ЗначениеЗаполнено(Маршрут) Тогда
		НаборЗаписей.Отбор.Маршрут.Значение = Маршрут;
		НаборЗаписей.Отбор.Маршрут.Использование = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Выход) Тогда
		НаборЗаписей.Отбор.Выход.Значение = Выход;
		НаборЗаписей.Отбор.Выход.Использование = Истина;
	КонецЕсли;
	НаборЗаписей.Отбор.Рейс.Значение = Рейс;
	НаборЗаписей.Отбор.Рейс.Использование = Истина;
	Если ЗначениеЗаполнено(ПунктОтправления) Тогда
		НаборЗаписей.Отбор.ПунктОтправления.Значение = ПунктОтправления;
		НаборЗаписей.Отбор.ПунктОтправления.Использование = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПунктНазначения) Тогда
		НаборЗаписей.Отбор.ПунктНазначения.Значение = ПунктНазначения;
		НаборЗаписей.Отбор.ПунктНазначения.Использование = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Грузоотправитель) Тогда
		НаборЗаписей.Отбор.Грузоотправитель.Значение = Грузоотправитель;
		НаборЗаписей.Отбор.Грузоотправитель.Использование = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Грузополучатель) Тогда
		НаборЗаписей.Отбор.Грузополучатель.Значение = Грузополучатель;
		НаборЗаписей.Отбор.Грузополучатель.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
