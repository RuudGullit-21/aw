#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбратноеГеокодированиеВФоне(Параметры, АдресРезультата) Экспорт
	
	РезультатГеокодирования = ItobГеографическиеСервисы.ОбратноеГеокодирование(Параметры.Широта, Параметры.Долгота);	
	ПоместитьВоВременноеХранилище(РезультатГеокодирования, АдресРезультата);
	
КонецПроцедуры

Процедура РасчетМаршрутаПоСтрокеКоординатВФоне(Параметры, АдресРезультата) Экспорт
	
	ТаблицаКоординат = ТаблицаИзСтрокиКоординат(Параметры.КоординатыСтрокой);
	ОшибкаРасчета = "";
	ТаблицаТочекМаршрута = ItobГеографическиеСервисы.РасчетМаршрута(ТаблицаКоординат, ОшибкаРасчета);
		
	Если ЗначениеЗаполнено(ОшибкаРасчета) Тогда
		ОшибкаРасчета = НСтр("ru = 'Ошибка расчета маршрута:'") + " " + ОшибкаРасчета;
	ИначеЕсли ТаблицаТочекМаршрута = Неопределено ИЛИ ТаблицаТочекМаршрута.Количество() = 0 Тогда
		ОшибкаРасчета = НСтр("ru = 'Ошибка расчета маршрута'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОшибкаРасчета) Тогда
		ПоместитьВоВременноеХранилище(ОшибкаРасчета, АдресРезультата);
			
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить( 
	"if(DrawpointsforPath_control.handler.lonlatsstring == """ + Параметры.КоординатыСтрокой + """){DrawPath_layer.removeAllFeatures();
	|var pointList = [];
	|var pt = null;
	|var drawn_path = [];
	|");
	ИтогРассчитанноеВремя = 0;
	ИтогРассчитанныйПуть = 0;
	
	Для СчетчикТочекМаршрута = 0 По ТаблицаТочекМаршрута.Количество()-1 Цикл
		ТекущаяСтрокаМаршрута = ТаблицаТочекМаршрута[СчетчикТочекМаршрута];
		Если ЗначениеЗаполнено(ТекущаяСтрокаМаршрута.Время) Тогда
			ИтогРассчитанноеВремя = ИтогРассчитанноеВремя + ТекущаяСтрокаМаршрута.Время;
			ИтогРассчитанныйПуть = ИтогРассчитанныйПуть + ТекущаяСтрокаМаршрута.Расстояние;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрокаМаршрута.Путь) Тогда
			Для каждого ТочкаТрека Из ТекущаяСтрокаМаршрута.Путь Цикл
			МассивСтрок.Добавить("
								 |pt = new OpenLayers.LonLat(");
			МассивСтрок.Добавить(XMLСтрока(ТочкаТрека.Долгота));
			МассивСтрок.Добавить(", ");
			МассивСтрок.Добавить(XMLСтрока(ТочкаТрека.Широта));
			МассивСтрок.Добавить(");
								 |pt.transform(m_map.displayProjection, m_map.getProjectionObject());
								 |pointList.push(new OpenLayers.Geometry.Point(pt.lon, pt.lat));
								 |");
			КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
	
	Если ИтогРассчитанноеВремя > 86400 Тогда
		ЗатрачиваемоеВремя = Формат('00010101' + ИтогРассчитанноеВремя, "ДФ='d""д ""hh"":""mm'");	
	Иначе
		ЗатрачиваемоеВремя = Формат('00010101' + ИтогРассчитанноеВремя, "ДФ='HH"":""mm'");	
	КонецЕсли; 
	
	ИнформацияПоТочкам = СтрШаблон("<tr><td><b>Длина пути %1 км, время %2.</b></td></tr>", 
									ИтогРассчитанныйПуть / 1000,
									ЗатрачиваемоеВремя 
									);
	ВыводимаяИнформация = "<table>%1</table>";
	МассивСтрок.Добавить( "
						  |var newLine = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(pointList)); 
						  |var myFirstLineStyle = OpenLayers.Util.applyDefaults(myFirstLineStyle, OpenLayers.Feature.Vector.style['default']);
						  |myFirstLineStyle.strokeColor = ""#320d45"";
						  |myFirstLineStyle.strokeOpacity = 0.5;
						  |myFirstLineStyle.strokeWidth = 4;
						  |newLine.style = myFirstLineStyle;
						  |drawn_path.push(newLine);
						  |DrawPath_layer.addFeatures(drawn_path);
						  |var out = """ + СтрШаблон(ВыводимаяИнформация, ИнформацияПоТочкам) + """;  
						  |infopanel_control.div.innerHTML = out;
						  |}");

	
	ПоместитьВоВременноеХранилище(СтрСоединить(МассивСтрок,""), АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаИзСтрокиКоординат(КоординатыСтрокой)
	
	МассивКоординат = СтрРазделить(КоординатыСтрокой, "%", Ложь);
	
	ТаблицаКоординат = Новый ТаблицаЗначений;
	ТаблицаКоординат.Колонки.Добавить("Широта", Новый ОписаниеТипов("Число"));
	ТаблицаКоординат.Колонки.Добавить("Долгота", Новый ОписаниеТипов("Число"));
	
	Для каждого Координата Из МассивКоординат Цикл
		ШиротаДолгота = СтрРазделить(Координата, ";");
		СтрокаТаблицыКоординат = ТаблицаКоординат.Добавить();
		СтрокаТаблицыКоординат.Широта = Число(ШиротаДолгота[0]);
		СтрокаТаблицыКоординат.Долгота = Число(ШиротаДолгота[1]);
	КонецЦикла; 
	
	
	Возврат ТаблицаКоординат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
