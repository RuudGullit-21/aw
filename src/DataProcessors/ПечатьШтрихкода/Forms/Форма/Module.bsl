
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Штрихкод     = "(01)04600822901507(11)161109(30)2434"; // "46120441";
	УголПоворота = 0;
	ТипШтрихкодаЗнач = 1;
	УровеньКоррекцииQR = 1;
	КоличествоСтрокGS1Databar = 2;
	ВертикальноеВыравнивание  = 1;
	ФлагФормирования   = Ложь;
	ПроходовГенерации = 3;
	ЛоготипРазмерПроцентОтШК = 10;
	ОтображатьТекст   = Истина;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ТипПлатформыКомпоненты = Строка(СистемнаяИнформация.ТипПлатформы);
	ВнешняяКомпонента = ГенерацияШтрихкодаСерверПовтИсп.ПодключитьКомпонентуГенерацииИзображенияШтрихкода(ТипПлатформыКомпоненты);
	ВерсияКомпоненты  = ВнешняяКомпонента.Версия;
	
	Для Каждого ЭлементВыбора Из Элементы.ТипШтрихкода.СписокВыбора Цикл
		Элементы.ТаблицаШтрихкодовТип.СписокВыбора.Добавить(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(Неопределено, ЭтаФорма, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
	ОбновитьШтрихкодBase64();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованияПоТипу(Неопределено, ЭтаФорма, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			Штрихкод = ТекКод; 
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	ОбновитьШтрихкодBase64();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействиеСформировать(Команда)
	
	ОчиститьСообщения();
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ЗначШтрихкод, ЗначТипШтрихкода)
	
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина = ШиринаШтрихкода;
	ПараметрыШтрихкода.Высота = ВысотаШтрихкода;
	ПараметрыШтрихкода.ТипКода = ЗначТипШтрихкода;
	ПараметрыШтрихкода.УголПоворота = Число(УголПоворота);
	ПараметрыШтрихкода.Штрихкод = ЗначШтрихкод;
	ПараметрыШтрихкода.ПрозрачныйФон = ПрозрачныйФон;
	ПараметрыШтрихкода.УровеньКоррекцииQR = УровеньКоррекцииQR;
	ПараметрыШтрихкода.ОтображатьТекст = ОтображатьТекст;
	ПараметрыШтрихкода.Масштабировать = Масштабировать;
	ПараметрыШтрихкода.СохранятьПропорции = СохранятьПропорции;
	ПараметрыШтрихкода.ВертикальноеВыравнивание  = ВертикальноеВыравнивание; 
	ПараметрыШтрихкода.GS1DatabarКоличествоСтрок = КоличествоСтрокGS1Databar;
	ПараметрыШтрихкода.ТипВходныхДанных = ?(ВходныеДанныеВBase64, 1, 0);
	ПараметрыШтрихкода.УбратьЛишнийФон = УбратьЛишнийФон;    
	Если ОтображатьЛоготип Тогда
		ПараметрыШтрихкода.ЛоготипКартинка = КартинкаBase64;
		ПараметрыШтрихкода.ЛоготипРазмерПроцентОтШК = ЛоготипРазмерПроцентОтШК;
	КонецЕсли;
	
	РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	
	Если НЕ РезультатШтрихкод.Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ошибка генерации штрихкода.'"));
	КонецЕсли;
	
	Возврат РезультатШтрихкод.Картинка;
	
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	Результат.Очистить();
	
	ВремОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ВремОбъект.ПолучитьМакет("Макет");
	
	Область = Макет.ПолучитьОбласть("Строка|Колонка");
	Рисунок = Область.Рисунки.ШтрихКод;
	
	Эталон = Справочники.ПодключаемоеОборудование.ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
	КоличествоМиллиметровВПикселеВысота = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	КоличествоМиллиметровВПикселеШирина = Эталон.Рисунки.Квадрат100Пикселей.Ширина / 100;
	ШиринаШтрихкода = Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина);
	ВысотаШтрихкода = Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота);
	
	Если ВходныеДанныеВBase64 Тогда 
		ВходныеДанные = ШтрихкодBASE64
	Иначе
		ВходныеДанные = Штрихкод
	КонецЕсли;
	
	Картинка = ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ВходныеДанные, ТипШтрихкодаЗнач);
	
	Рисунок.Картинка = Картинка;
	Результат.Вывести(Область);
	
КонецПроцедуры

&НаСервере
Процедура ГенерацияШтрихкодовНаСервере()
	
	Результат.Очистить();
	
	ВремОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ВремОбъект.ПолучитьМакет("Макет");
	
	Область = Макет.ПолучитьОбласть("Строка|Колонка");
	
	Рисунок = Область.Рисунки.ШтрихКод;
	
	Эталон = Справочники.ПодключаемоеОборудование.ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
	КоличествоМиллиметровВПикселеВысота = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	КоличествоМиллиметровВПикселеШирина = Эталон.Рисунки.Квадрат100Пикселей.Ширина / 100;
	ШиринаШтрихкода = Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина);
	ВысотаШтрихкода = Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота);
	
	НачалоОбработки = ТекущаяДата();
	
	Для Индекс = 1 По ПроходовГенерации Цикл
		Для Каждого ЭлементТаблицы Из ТаблицаШтрихкодов Цикл
			Если ВходныеДанныеВBase64 Тогда 
				ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(ЭлементТаблицы.Штрихкод);
				ВходныеДанные = Base64Строка(ДвоичныеДанныеСтроки);
			Иначе
				ВходныеДанные = ЭлементТаблицы.Штрихкод
			КонецЕсли;
			Картинка = ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ВходныеДанные, ЭлементТаблицы.Тип);
			Рисунок.Картинка = Картинка;
			Результат.Вывести(Область);
		КонецЦикла;
	КонецЦикла;
	
	КонецОбработки = ТекущаяДата();
	
	Элементы.ЗатраченоВремени.Заголовок =  НСтр("ru='Время (сек.):'") + (КонецОбработки - НачалоОбработки); 
	
КонецПроцедуры

&НаКлиенте
Процедура ГенерацияШтрихкодов(Команда)
	
	ОчиститьСообщения();
	ГенерацияШтрихкодовНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеТЗ()
	
	ДанныеТЗ = Новый ХранилищеЗначения(ТаблицаШтрихкодов.Выгрузить());
	Возврат XMLСтрока(ДанныеТЗ);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеТЗ(Данные)
	
	ДанныеТЗ = XMLЗначение(Тип("ХранилищеЗначения"), Данные).Получить();
	Если ТипЗнч(ДанныеТЗ) = Тип("ТаблицаЗначений") Тогда
		ТаблицаШтрихкодов.Загрузить(ДанныеТЗ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайла(Режим)
	
	ВыборФайла = Новый ДиалогВыбораФайла(Режим);
	ВыборФайла.ПолноеИмяФайла = "";
	Фильтр = "Таблица значений 1С(*.tbl)|*.tbl";
	ВыборФайла.Фильтр = Фильтр;
	ВыборФайла.МножественныйВыбор = Ложь;
	ВыборФайла.Выбрать(); 
	Возврат ВыборФайла.ПолноеИмяФайла;
	
КонецФункции

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	ИмяФайла = ПолучитьИмяФайла(РежимДиалогаВыбораФайла.Сохранение);
	Если ПустаяСтрока(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	ФайлТЗ = Новый ТекстовыйДокумент;
	ФайлТЗ.УстановитьТекст(ПолучитьДанныеТЗ());
	ФайлТЗ.Записать(ИмяФайла);      
	 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ИмяФайла = ПолучитьИмяФайла(РежимДиалогаВыбораФайла.Открытие);
	Если ПустаяСтрока(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	ФайлТЗ = Новый ТекстовыйДокумент;
	ФайлТЗ.Прочитать(ИмяФайла);
	ЗагрузитьДанныеТЗ(ФайлТЗ.ПолучитьТекст());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьШтрихкодBase64()
	
	ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(Штрихкод);
	ШтрихкодBase64 = Base64Строка(ДвоичныеДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Карт = Новый Картинка(ВыбранныеФайлы[0]);
		КартинкаBase64 = Base64Строка(Карт.ПолучитьДвоичныеДанные());
		ЛоготипКартинка = ПоместитьВоВременноеХранилище(Карт);
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗагрузитьКартинку(Команда)
	
	Обработчик = Новый ОписаниеОповещения("ЗагрузитьКартинкуВыборФайла", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выбор файла картинки PNG";
	Диалог.Фильтр = "PNG (*.png)|*.png";
	Диалог.ИндексФильтра = 0;
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Показать(Обработчик);
	
КонецПроцедуры

#КонецОбласти