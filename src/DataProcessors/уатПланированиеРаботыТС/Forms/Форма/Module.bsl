#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ВызватьИсключение НСтр("ru = 'Не поддерживается в мобильном клиенте.'")
	КонецЕсли;

	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ЗагрузитьНастройки();
	ЗагрузитьНастройкиВариантаОтчета();
	НастроитьОтборПоВидамМоделейТС();
	ДиаграммаГанта.ОтображатьЗаголовок = Ложь;
	ДиаграммаГанта.ОтображатьЛегенду = Ложь;
	ДиаграммаГанта.ОбластьПостроения.Право = 1;
	ДиаграммаГанта.ОбластьПостроения.Заголовок = НСтр("en='Vehicle / Condition';ru='ТС / Состояние'");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ОтображатьОборудованиеПрицепы = Истина;  
	ТекРелизПлатформы = ПолучитьТекРелизПлатформы();
	УстановитьВариантИнтерфейса(ТекРелизПлатформы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененоСостояниеТС" Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы  

&НаКлиенте
Процедура ВариантПросмотраДиаграммыПриИзменении(Элемент)
	ТекЭлементыОтбора = НастройкиКомпоновки.Настройки.Отбор.Элементы;	
	ЗагрузитьНастройкиВариантаОтчета(); 
	ПеренестиНастройкиОтбораПриСменеВариантаОтчета(ТекЭлементыОтбора);
	СформироватьОтчет();
	Элементы.ГруппаКомандыГанта.Видимость      = ВариантПросмотраДиаграммы = 0;
	Элементы.ГруппаКомандыГанта1.Видимость     = ВариантПросмотраДиаграммы = 0;
	ЭтаФорма.ДиаграммаГанта.ОтображатьЛегенду  = ВариантПросмотраДиаграммы = 1;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ФлажокНеактивныеТСПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры 

&НаКлиенте
Процедура ФлажокВыбывшиеТСПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыбор(Элемент, Значения, СтандартнаяОбработка, ТекДата)
	Если ТекДата <> Неопределено Тогда
		Если ТипЗнч(Значения) = Тип("ЗначениеДиаграммыГанта") Тогда
			Если ТипЗнч(Значения.Точка.Расшифровка) = Тип("СправочникСсылка.уатТС") Тогда
				СписокВыбораДокумента = Новый СписокЗначений;
				СписокВыбораДокумента.Добавить(1, НСтр("en='Vehicle disposition';ru='Диспозиция ТС'"));
				СписокВыбораДокумента.Добавить(2, НСтр("en='Job sheet to release vehicle';ru='Разнарядка на выпуск ТС'"));
				СписокВыбораДокумента.Добавить(3, НСтр("en='Repair list';ru='Ремонтный лист'"));
				СписокВыбораДокумента.Добавить(4, НСтр("en='Waybill';ru='Путевой лист'"));
				СписокВыбораДокумента.Добавить(5, НСтр("en='Order for repair';ru='Заявка на ремонт'"));
				СписокВыбораДокумента.Добавить(6, НСтр("en='Routing list';ru='Маршрутный лист'"));
				ВыбЭлемент = Неопределено;

				СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение1", ЭтотОбъект, Новый Структура("Значения, ТекДата", Значения, ТекДата)), НСтр("en='Create document';ru='Создать документ'"));
				
			ИначеЕсли ТипЗнч(Значения.Точка.Расшифровка) = Тип("СправочникСсылка.уатСостояниеТС") Тогда
				СписокВыбораДокумента = Новый СписокЗначений;
				Если Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.СформированПутевойЛист") Тогда
					СписокВыбораДокумента.Добавить(4, НСтр("en='Waybill';ru='Путевой лист'"));
					СписокВыбораДокумента.Добавить(2, НСтр("en='Daily vehicles plan';ru='Разнарядка на выпуск ТС'"));
					СписокВыбораДокумента.Добавить(1, НСтр("en='Vehicle disposition';ru='Диспозиция ТС'"));
				ИначеЕсли Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.СформированаРазнарядка") Тогда
					СписокВыбораДокумента.Добавить(2, НСтр("en='Daily vehicles plan';ru='Разнарядка на выпуск ТС'"));
					СписокВыбораДокумента.Добавить(1, НСтр("en='Vehicle disposition';ru='Диспозиция ТС'"));
				ИначеЕсли Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаКапитальномРемонте")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаСреднемРемонте")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаТекущемРемонте") Тогда
					СписокВыбораДокумента.Добавить(3, НСтр("en='Repair list';ru='Ремонтный лист'"));
					СписокВыбораДокумента.Добавить(1, НСтр("en='Vehicle disposition';ru='Диспозиция ТС'"));
				Иначе //создаем сразу диспозицию
					СоздатьНовыйДокумент(1, ТекДата, ТекДата + 3600, Значения.Точка.Родитель.Расшифровка, Значения.Точка.Расшифровка);
					Возврат;
				КонецЕсли;
				
				СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение", ЭтотОбъект, Новый Структура("Значения, ТекДата", Значения, ТекДата)), НСтр("en='Create document';ru='Создать документ'"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Значения = ДополнительныеПараметры.Значения;
    ТекДата = ДополнительныеПараметры.ТекДата;
    
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, ТекДата, ТекДата + 3600, Значения.Точка.Расшифровка);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Значения = ДополнительныеПараметры.Значения;
    ТекДата = ДополнительныеПараметры.ТекДата;
    
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, ТекДата, ТекДата + 3600, Значения.Точка.Родитель.Расшифровка, Значения.Точка.Расшифровка);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекОтбораНастройкиОтборПриИзменении(Элемент)
	СинхронизироватьОтборы(Элемент.ТекущиеДанные);
КонецПроцедуры  

&НаКлиенте
Процедура ОтображатьОборудованиеПрицепыПриИзменении(Элемент)
	
	МассивОтображаемыхВидовТС = Новый Массив();
	Если ОтображатьОборудованиеПрицепы Тогда
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.АвиационныйТранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Автотранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.ЖДТранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.МорскойТранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Оборудование"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Прицеп"));
	Иначе
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.АвиационныйТранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Автотранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.ЖДТранспорт"));
		МассивОтображаемыхВидовТС.Добавить(ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.МорскойТранспорт"));	
	КонецЕсли;
	МассивМоделейТСОтбор.ЗагрузитьЗначения(МассивОтображаемыхВидовТС);
	
	ЭлементыОтбора = НастройкиКомпоновки.Настройки.Отбор.Элементы;  
		
	Для Каждого Элемент Из ЭлементыОтбора Цикл 
		
		Если Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидМоделиТС") Тогда  
			
			Элемент.ПравоеЗначение = МассивМоделейТСОтбор;
			Элемент.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке; 
			Элемент.Использование  = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СформироватьОтчет();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Если Не Период = Неопределено Тогда
        ДатаНач = Период.ДатаНачала;
        ДатаКон = Период.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	СписокВыбораДокумента = Новый СписокЗначений;
	СписокВыбораДокумента.Добавить(1, НСтр("en='Vehicle disposition';ru='Диспозиция ТС'"));
	СписокВыбораДокумента.Добавить(2, НСтр("en='Daily vehicles plan';ru='Разнарядка на выпуск ТС'"));
	СписокВыбораДокумента.Добавить(3, НСтр("en='Repair list';ru='Ремонтный лист'"));
	СписокВыбораДокумента.Добавить(4, НСтр("en='Waybill';ru='Путевой лист'"));
	СписокВыбораДокумента.Добавить(5, НСтр("en='Order for repair';ru='Заявка на ремонт'"));
	СписокВыбораДокумента.Добавить(6, НСтр("en='Routing list';ru='Маршрутный лист'"));
	ВыбЭлемент = Неопределено;

	СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("СоздатьДокументЗавершение", ЭтотОбъект), НСтр("en='Create document';ru='Создать документ'"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        ТекТС = Неопределено;
        ТекСостояние = Неопределено;
        ТекСтрокаДерева = Элементы.ДеревоСостояний.ТекущиеДанные;
        Если ТекСтрокаДерева <> Неопределено Тогда
            ТекТС = ТекСтрокаДерева.ТС;
            ТекСостояние = ТекСтрокаДерева.Состояние;
        КонецЕсли;
        
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, , , ТекТС, ТекСостояние);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДокумент(ВидДокумента, Знач НачалоПериода = Неопределено, Знач ОкончаниеПериода = Неопределено, Знач ТекТС = Неопределено, Знач ТекСостояние = Неопределено)
	Если НачалоПериода = Неопределено Тогда
		НачалоПериода = ТекущаяДата();
	КонецЕсли;
	Если ОкончаниеПериода = Неопределено Тогда
		ОкончаниеПериода = КонецДня(НачалоПериода);
	КонецЕсли;
		
	Если ВидДокумента = 1 Тогда //Диспозиция ТС
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТС, Состояние, ДатаНачала, ДатаОкончания",
			НачалоПериода, Организация, ТекТС, ТекСостояние, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатДиспозицияТС.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 2 Тогда //Разнарядка
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, НоваяСтрока",
			НачалоПериода, Организация, Новый Структура("ТС, ДатаВыезда, ДатаВозвращения", ТекТС, НачалоПериода, ОкончаниеПериода)));
		ОткрытьФорму("Документ.уатРазнарядка.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 3 Тогда //РЛ
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТС, ДатаНачала, ДатаОкончания",
			НачалоПериода, Организация, ТекТС, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатРемонтныйЛист.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 4 Тогда //ПЛ
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТранспортноеСредство, ДатаВыезда, ДатаВозвращения",
			НачалоПериода, Организация, ТекТС, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатПутевойЛист.ФормаОбъекта", ПараметрыФормы);  
		
	ИначеЕсли ВидДокумента = 5 Тогда // Заявка на ремонт 
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТС, ДатаНачала, ДатаОкончания",
			НачалоПериода, Организация, ТекТС, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатЗаявкаНаРемонт.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 6 Тогда // МЛ  
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТС",
			НачалоПериода, Организация, ТекТС));
		ОткрытьФорму("Документ.уатМаршрутныйЛист.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСостоянийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	Попытка
		ТекСтрока = Элементы.ДеревоСостояний.ТекущиеДанные;
		Если ТекСтрока.Уровень = 1 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.ТС);
		ИначеЕсли ТекСтрока.Уровень = 2 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.Состояние);
		ИначеЕсли ТекСтрока.Уровень = 3 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.Документ);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеТочкиДиаграммаГанта(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.РазвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеТочкиДиаграммаГанта(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.СвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МасштабГантаПриИзменении(Элемент)
	Если МасштабГанта = 0 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Авто;
	ИначеЕсли МасштабГанта = 1 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	ИначеЕсли МасштабГанта = 2 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Год;
	ИначеЕсли МасштабГанта = 3 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Квартал;
	ИначеЕсли МасштабГанта = 4 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
	ИначеЕсли МасштабГанта = 5 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Неделя;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	КодВозврата = ПроверитьЗаполнениеРеквизитов();
	Если КодВозврата = 0 Тогда 
		ДокументВыводаДиаграммы = Новый ТабличныйДокумент();
		ПечатьНаСервере(ДокументВыводаДиаграммы);
		// выведем на печать
		ДокументВыводаДиаграммы.ОтображатьСетку     = Ложь;
		ДокументВыводаДиаграммы.ОтображатьЗаголовки = Истина;
		ДокументВыводаДиаграммы.ТолькоПросмотр      = Истина;
		ДокументВыводаДиаграммы.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
		ДокументВыводаДиаграммы.Показать();
	Иначе 
		Если КодВозврата = 1 Тогда 
			ТекстОшибки = НСтр("en='Begin of report cannot be greater than end period.';ru='Период начала отчета не может быть больше периода окончания.'");
		Иначе
			ТекстОшибки = НСтр("en='no data for print.';ru='отсутствуют данные для печати.'") + Символы.ПС 
				+ НСтр("en='Maybe the report not formed yet.';ru='Возможно отчет еще не сформирован.'");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьИнтерфейсДиаграммы(Команда)
	Если ИспользуетсяНовыйИнтерфейс Тогда
		Элементы.ГруппаСостояниеНовыйИнтерфейс.Видимость = Ложь;
		Элементы.ГруппаСостояниеСтарыйИнтерфейс.Видимость = Истина;
		ИспользуетсяНовыйИнтерфейс = Ложь;
	Иначе
		Элементы.ГруппаСостояниеНовыйИнтерфейс.Видимость = Истина;
		Элементы.ГруппаСостояниеСтарыйИнтерфейс.Видимость = Ложь;
		ИспользуетсяНовыйИнтерфейс = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Процедура СинхронизироватьОтборы(ТекДанные) 
	
	Если ТекДанные.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидМоделиТС") Тогда	
		СписокВыбранныхВидовМоделей = ТекДанные.ПравоеЗначение;
		ОтборОборудования = Ложь;
		ОтборПрицепов = Ложь;
		
		Для Каждого ТекВидМодели Из СписокВыбранныхВидовМоделей Цикл
			
			Если ТекВидМодели.Значение = ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Оборудование") Тогда
				ОтборОборудования = Истина; 
			ИначеЕсли ТекВидМодели.Значение = ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Прицеп") Тогда
				ОтборПрицепов = Истина;
			КонецЕсли;
			
		КонецЦикла; 
		
		Если ОтборПрицепов И ОтборОборудования Тогда
			ОтображатьОборудованиеПрицепы = Истина; 
		Иначе
			ОтображатьОборудованиеПрицепы = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетКомпоновки()   
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаКомпоновки");
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройки()
	
	ДатаНач      = НачалоМесяца(ТекущаяДата());
	ДатаКон      = КонецМесяца(ТекущаяДата());
	//МасштабГанта = 1;
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
	Если ДатаНач = '00010101' ИЛИ ДатаКон = '00010101' Тогда
		ТекстНСТР = НСтр("en='Not specified period of diagram!';ru='Не указан период построения диаграммы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если ДатаНач > ДатаКон Тогда
		ТекстНСТР = НСтр("en='The start date cannot be greater than period end date!';ru='Дата начала периода не может быть больше даты конца периода!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаСервере();
		
	// развернуть дерево
	Для Каждого ТекСтрока Из ДеревоСостояний.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСостояний.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	МасштабГантаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	ДеревоДанных = ПостроитьДеревоДанных();
	
	Если ВариантПросмотраДиаграммы = 0 Тогда
		ПостроитьДеревоСостояний(ДеревоДанных);
		ПостроитьДиаграммуГантаИерархически(ДеревоДанных, ЭтаФорма.ДиаграммаГанта);
	Иначе  
		ПостроитьДиаграммуГантаБезИерархии(ДеревоДанных, ЭтаФорма.ДиаграммаГанта);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПостроитьДеревоДанных()
	ДеревоДанных = Новый ДеревоЗначений;
	
	Настройки = НастройкиКомпоновки.ПолучитьНастройки();
	
	Для Каждого ТекПараметр Из Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда 
			ТекПараметр.Значение = ДатаНач;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда 
			ТекПараметр.Значение = ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон));
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("Организация") Тогда 
			ТекПараметр.Значение = Организация;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ОтображатьНеактивныеТС") Тогда 
			ТекПараметр.Значение = ФлажокНеактивныеТС;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ОтображатьВыбывшиеТС") Тогда 
			ТекПараметр.Значение = ФлажокВыбывшиеТС;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ВидыМоделейТС") Тогда 
			ТекПараметр.Значение = МассивМоделейТСОтбор;
			ТекПараметр.Использование = Истина;
		КонецЕсли;	
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	ТекМакетКомпоновки = ПолучитьМакетКомпоновки();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ТекМакетКомпоновки, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ДеревоДанных;
КонецФункции 

&НаСервере
Процедура ПостроитьДиаграммуГантаБезИерархии(ДеревоДанных, Диаграмма)
	Диаграмма.Очистить();
	
	Для Каждого ТекСостояние Из ДеревоДанных.Строки Цикл  
		Если ТекСостояние.Состояние = NULL Тогда
			Продолжить;
		КонецЕсли;
		
		СерияСостояние = Диаграмма.УстановитьСерию(ТекСостояние.Состояние);
		СерияСостояние.Расшифровка = ТекСостояние.Состояние;
		ЦветИнтервала = ТекСостояние.Состояние.ЦветСостояния.Получить();
		Если ТипЗнч(ЦветИнтервала) = Тип("Цвет") Тогда
			Если ЦветИнтервала.Вид <> ВидЦвета.WebЦвет Тогда
				ЦветИнтервала = WebЦвета.Черный;
			КонецЕсли;
		Иначе
			ЦветИнтервала = WebЦвета.Черный;
		КонецЕсли;
		СерияСостояние.Цвет = ЦветИнтервала;
		Для Каждого ТекТС Из ТекСостояние.Строки Цикл 
			ТочкаТС = Диаграмма.УстановитьТочку(ТекТС.ТС);
			Если ЗначениеЗаполнено(ТекТС.ТС.ДатаВыбытия) Тогда
				ПредставлениеТС = Строка(ТекТС.ТС) + " (выбыло)";
			Иначе
				ПредставлениеТС = Строка(ТекТС.ТС);
			КонецЕсли;
			ТочкаТС.Текст	= ПредставлениеТС;
			ТочкаТС.Расшифровка = ТекТС.ТС;
			Для Каждого ТекПериод Из ТекТС.Строки Цикл  
				
				ПредставлениеСостояния = Строка(ТекПериод.Состояние);
				ПредставлениеОснования = Строка(ТекПериод.Основание);
				
				ЗначениеПериод                  = Диаграмма.ПолучитьЗначение(ТочкаТС, СерияСостояние);
				ЗначениеПериод.Текст            = ПредставлениеОснования;
				Если ИспользуетсяНовыйИнтерфейс Тогда
					ЗначениеПериод.Данные.Начало    = ТекПериод.ПериодНачало;
					ЗначениеПериод.Данные.Окончание = ТекПериод.ПериодОкончание;
				КонецЕсли;
				Интервал                        = ЗначениеПериод.Добавить();
				Интервал.Начало                 = ТекПериод.ПериодНачало;
				Интервал.Конец                  = ТекПериод.ПериодОкончание;   
				
				
				Если ТипЗнч(ТекПериод.Основание) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
					НомерДокумента = НСтр("en='IL №';ru='МЛ №'") + Строка(ТекПериод.Основание.Номер);
					ТекстНадписи = СформироватьТекстЗагрузкиМЛ(НомерДокумента, 
					ТекТС.ТС.Модель.Грузоподъемность, ТекПериод.Основание.ВесБрутто,, 
					ТекТС.ТС.Модель.ОбъемКузова, ТекПериод.Основание.Объем);
					
					Подсказка = ТекстНадписи;
					Если ЗначениеЗаполнено(ТекПериод.Основание.АдресОтправления) Тогда
						Подсказка = Подсказка + "; " + НСтр("en='route:';ru='маршрут:'") + " " + ТекПериод.Основание.АдресОтправления;
					КонецЕсли;
					Если ЗначениеЗаполнено(ТекПериод.Основание.АдресНазначения) Тогда
						Подсказка = Подсказка + " - " + ТекПериод.Основание.АдресНазначения;
					КонецЕсли;	 
					Интервал.Текст = Подсказка;
				Иначе
					Интервал.Текст = ПредставлениеСостояния + ": " + ПредставлениеОснования; 
				КонецЕсли;
					
				Интервал.Расшифровка = ТекПериод.Основание;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Диаграмма.ПоказатьУровеньТочек(1);
	ДиаграммаГанта.ОбластьПостроения.Заголовок = "ТС";
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьДиаграммуГантаИерархически(ДеревоДанных, Диаграмма)
	Диаграмма.Очистить();
	
	Если ДеревоДанных.Строки.Количество() = 0 Тогда
		//ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
		//ДиаграммаГанта.УстановитьПолныйИнтервал(ТекущаяДата(), ТекущаяДата());
		Возврат;
	КонецЕсли;
	
	Диаграмма.ОтображатьПустыеЗначения = Ложь;
	//ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Истина;
	Диаграмма.АвтоОпределениеПолногоИнтервала = Ложь;
	Диаграмма.УстановитьПолныйИнтервал(ДатаНач, КонецДня(ДатаКон));
	
	СерияТС = Диаграмма.УстановитьСерию("ТС", Неопределено);
	СерияТС.ПриоритетЦвета = Ложь;
	Диаграмма.Обновление = Ложь;
	
	ЦветаДиаграммы = РаскраскаДиаграммы();
	
	//ТС
	Для Каждого ВыборкаТС Из ДеревоДанных.Строки Цикл 
		
		Если ЗначениеЗаполнено(ВыборкаТС.ТС.ДатаВыбытия) Тогда
			ПредставлениеТС = Строка(ВыборкаТС.ТС) + " (выбыло)";
		Иначе
			ПредставлениеТС = Строка(ВыборкаТС.ТС);
		КонецЕсли;
		
		ТочкаТС = Диаграмма.УстановитьТочку(ПредставлениеТС);
		ТочкаТС.ПриоритетЦвета = Истина;
		ТочкаТС.Цвет = ЦветаДиаграммы["ТемноБирюзовый"];
		ТочкаТС.ДополнительныйЦвет = ЦветаДиаграммы["ТемноКрасный"];
		ТочкаТС.Расшифровка = ВыборкаТС.ТС;
		
		ЗначениеТочкаТС = Диаграмма.ПолучитьЗначение(ТочкаТС, СерияТС);
		
		//Состояния
		Для Каждого ВыборкаСостояния Из ВыборкаТС.Строки Цикл
			Если ВыборкаСостояния.Состояние = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			ПредставлениеСостояние = Строка(ВыборкаСостояния.Состояние);
					
			ТочкаСостояние = Диаграмма.УстановитьТочку(ПредставлениеТС + " " + ПредставлениеСостояние, ТочкаТС.Значение);
			ТочкаСостояние.Текст = ПредставлениеСостояние;
			ТочкаСостояние.ПриоритетЦвета = Истина;
			
			Если ЗначениеЗаполнено(ПредставлениеСостояние) Тогда
				ТочкаСостояние.Цвет = ЦветаДиаграммы[ПредставлениеСостояние];
			Иначе
				ТочкаСостояние.Цвет = WebЦвета.Черный;
			КонецЕсли;
			ТочкаСостояние.ДополнительныйЦвет = ЦветаДиаграммы["Красный"];
			ТочкаСостояние.Расшифровка = ВыборкаСостояния.Состояние;
			
			ЗначениеТочкаСостояние = Диаграмма.ПолучитьЗначение(ТочкаСостояние, СерияТС);
			
			
			//Периоды
			Для Каждого ВыборкаПериоды Из ВыборкаСостояния.Строки Цикл
				ДатаНачалаИнтервала = Макс(ВыборкаПериоды.ПериодНачало, ДатаНач);
				ДатаКонцаИнтервала = Мин(ВыборкаПериоды.ПериодОкончание, ДатаКон);
				ПредставлениеОснования = Строка(ВыборкаПериоды.Основание);
				
				Если ИспользуетсяНовыйИнтерфейс Тогда
					ЗначениеТочкаСостояние.Данные.Начало    = ДатаНачалаИнтервала;
					ЗначениеТочкаСостояние.Данные.Окончание = ДатаКонцаИнтервала; 
				КонецЕсли;
				ЗначениеТочкаСостояние.Текст            = ПредставлениеОснования;
				
				// Рабочие интервалы
				НовыйИнтервал = ЗначениеТочкаСостояние.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаИнтервала;
				НовыйИнтервал.Конец = ДатаКонцаИнтервала;
				НовыйИнтервал.Расшифровка = ВыборкаПериоды.Основание;  	
				НовыйИнтервал.Текст = ПредставлениеСостояние + ": " + ВыборкаПериоды.Основание;	
				
				
				// Итог по ТС
				НовыйИнтервал = ЗначениеТочкаТС.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаИнтервала;
				НовыйИнтервал.Конец = ДатаКонцаИнтервала;
				
				Если ЗначениеЗаполнено(ПредставлениеСостояние) Тогда
					НовыйИнтервал.Цвет = ЦветаДиаграммы[ПредставлениеСостояние];
				Иначе
					ТочкаСостояние.Цвет = WebЦвета.Черный;
				КонецЕсли;
				
				НовыйИнтервал.Расшифровка = ВыборкаПериоды.Основание;
				Если НЕ ПустаяСтрока(НовыйИнтервал.Текст) Тогда
					НовыйИнтервал.Текст = НовыйИнтервал.Текст + ";" + Символы.ПС;
				КонецЕсли; 
				Если ТипЗнч(ВыборкаПериоды.Основание) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
					НомерДокумента = НСтр("en='IL №';ru='МЛ №'") + Строка(ВыборкаПериоды.Основание.Номер);
					ТекстНадписи = СформироватьТекстЗагрузкиМЛ(НомерДокумента, 
					ВыборкаТС.ТС.Модель.Грузоподъемность, ВыборкаПериоды.Основание.ВесБрутто,, 
					ВыборкаТС.ТС.Модель.ОбъемКузова, ВыборкаПериоды.Основание.Объем);
					
					Подсказка = ТекстНадписи;
					Если ЗначениеЗаполнено(ВыборкаПериоды.Основание.АдресОтправления) Тогда
						Подсказка = Подсказка + "; " + НСтр("en='route:';ru='маршрут:'") + " " + ВыборкаПериоды.Основание.АдресОтправления;
					КонецЕсли;
					Если ЗначениеЗаполнено(ВыборкаПериоды.Основание.АдресНазначения) Тогда
						Подсказка = Подсказка + " - " + ВыборкаПериоды.Основание.АдресНазначения;
					КонецЕсли;	 
					НовыйИнтервал.Текст = Подсказка;
				Иначе
					НовыйИнтервал.Текст = НовыйИнтервал.Текст + ПредставлениеСостояние + ": " + ВыборкаПериоды.Основание; 
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//ДиаграммаГанта.ПоказатьУровеньТочек(0);
	Диаграмма.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоСостояний(ДеревоДанных)
	ДеревоСостояний_ = РеквизитФормыВЗначение("ДеревоСостояний");;
	
	ДеревоСостояний_.Строки.Очистить();
	
	Для Каждого ВыборкаТС Из ДеревоДанных.Строки Цикл
		НоваяСтрокаТС = ДеревоСостояний_.Строки.Добавить();
		НоваяСтрокаТС.Группировка = Строка(ВыборкаТС.ТС);
		НоваяСтрокаТС.ТС = ВыборкаТС.ТС;
		НоваяСтрокаТС.Уровень = 1;
		
		Для Каждого ВыборкаСостояний Из ВыборкаТС.Строки Цикл
			Если ВыборкаСостояний.Состояние = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСостояние = НоваяСтрокаТС.Строки.Добавить();
			НоваяСтрокаСостояние.Группировка = ВыборкаСостояний.Состояние;
			НоваяСтрокаСостояние.ТС = ВыборкаТС.ТС;
			НоваяСтрокаСостояние.Состояние = ВыборкаСостояний.Состояние;
			НоваяСтрокаСостояние.Уровень = 2;
						
			Для Каждого ВыборкаДокументы Из ВыборкаСостояний.Строки Цикл
				НоваяСтрокаДокумент = НоваяСтрокаСостояние.Строки.Добавить();
				НоваяСтрокаДокумент.Группировка = КраткоеПредставлениеДокумента(ВыборкаДокументы.Основание);
				НоваяСтрокаДокумент.ТС = ВыборкаТС.ТС;
				НоваяСтрокаДокумент.Состояние = ВыборкаСостояний.Состояние;
				НоваяСтрокаДокумент.Документ = ВыборкаДокументы.Основание;
				НоваяСтрокаДокумент.Начало = ВыборкаДокументы.ПериодНачало;
				НоваяСтрокаДокумент.Окончание = ВыборкаДокументы.ПериодОкончание;
				НоваяСтрокаДокумент.Уровень = 3;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоСостояний_, "ДеревоСостояний");
КонецПроцедуры

&НаСервере
Функция КраткоеПредставлениеДокумента(ДокСсылка)
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		Рез = НСтр("en='Waybill';ru='Пут. лист'") + " " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатРемонтныйЛист") Тогда
		Рез = НСтр("en='Rep. list';ru='Рем. лист'") + " " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатКорректировкаЗаписейРегистров") Тогда
		Рез = НСтр("en='Correct.';ru='Коррект.'") + " " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатРазнарядка") Тогда
		Рез = НСтр("en='Daily vehicles plan';ru='Разнарядка'") + " " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатДиспозицияТС") Тогда
		Рез = НСтр("en='Disposition';ru='Диспозиция'") + " " + ДокСсылка.Номер;
	Иначе
		Рез = "" + ДокСсылка;
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

&НаСервере
Функция РаскраскаДиаграммы()
	РезСтруктура = Новый Соответствие;
	
	РезСтруктура.Вставить("ТемноБирюзовый", WebЦвета.ЛимонноЗеленый);
	РезСтруктура.Вставить("ТемноКрасный", WebЦвета.Малиновый);
	РезСтруктура.Вставить("Красный", WebЦвета.Красный); 
	
	ВыборкаСостояний = Справочники.уатСостояниеТС.Выбрать(); 
	
	Пока ВыборкаСостояний.Следующий() Цикл
		Если Не ВыборкаСостояний.ЭтоГруппа И Не ВыборкаСостояний.ПометкаУдаления Тогда
			ТекЦветСостояния           = ВыборкаСостояний.ЦветСостояния.Получить(); 
			ТекПредставлениеСостояния  = Строка(ВыборкаСостояний.Ссылка);
			РезСтруктура.Вставить(ТекПредставлениеСостояния, ТекЦветСостояния);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезСтруктура;
КонецФункции

&НаСервере
Процедура НастроитьОтборПоВидамМоделейТС() 
	МассивВидовТСПоУмолчанию = Новый Массив();
	МассивВидовТСПоУмолчанию.Добавить(Перечисления.уатВидыМоделейТС.Автотранспорт);
	МассивВидовТСПоУмолчанию.Добавить(Перечисления.уатВидыМоделейТС.Прицеп);
	МассивВидовТСПоУмолчанию.Добавить(Перечисления.уатВидыМоделейТС.Оборудование);
	
	МассивМоделейТСОтбор.ЗагрузитьЗначения(МассивВидовТСПоУмолчанию);
	
КонецПроцедуры  

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	// Варианты кодов: 0 - ошибок нет, 1 - ошибка дат, 2 - диаграмма не сформирована
	КодВозврата = 0;
	
	Если ДатаНач > ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон)) Тогда 
		КодВозврата = 1;
	ИначеЕсли ДиаграммаГанта.Серии.Количество() = 0 Тогда 
		КодВозврата = 2;
	КонецЕсли;
	
	Возврат КодВозврата;
	
КонецФункции 

&НаСервере
Процедура ПечатьНаСервере(ДокументВыводаДиаграммы)  
	
	ДокументВыводаДиаграммы = Новый ТабличныйДокумент(); 
	ОблДиаграммы = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ДиаграммаГанта").ПолучитьОбласть("ОбластьДиаграммыГанта");
	
	Результат = ПостроитьДеревоДанных();
	
	мДатаКон = ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон));
	
	// Устанавливаем заголовок диаграммы
	ОблДиаграммы.Область(1,2,1,2).Текст = "Планирование работы ТС за период " + ПредставлениеПериода(ДатаНач, мДатаКон);
	ДокументВыводаДиаграммы.Вывести(ОблДиаграммы);
	
	ДиаграммаПечати = ДокументВыводаДиаграммы.Рисунки.ДиаграммаГанта.Объект;
	ДиаграммаПечати.ОбластьПостроения.Заголовок = "ТС";
	
	Если ИспользуетсяНовыйИнтерфейс Тогда
		КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя); 
		ОписаниеТипаДата  = Новый ОписаниеТипов("Дата",,,,,КвалификаторыДаты);
		ДиаграммаПечати.КолонкиДанных.Добавить("Начало", ОписаниеТипаДата);
		ДиаграммаПечати.КолонкиДанных.Добавить("Окончание", ОписаниеТипаДата);
	КонецЕсли;
	
	// Копируем свойства диаграммы
	ЗаполнитьЗначенияСвойств(ДиаграммаПечати, ДиаграммаГанта, , "Обновление,СерияНаОсиТочек");
	ДиаграммаПечати.ОтображатьЗаголовок = Ложь;
	
	// Установим полный интервал
	Если НЕ ДиаграммаПечати.АвтоОпределениеПолногоИнтервала Тогда
		ДиаграммаПечати.УстановитьПолныйИнтервал(ДиаграммаГанта.НачалоПолногоИнтервала, ДиаграммаГанта.КонецПолногоИнтервала);
	КонецЕсли;   
	
	Если ВариантПросмотраДиаграммы = 0 Тогда
		ПостроитьДиаграммуГантаИерархически(Результат, ДиаграммаПечати);
	Иначе  
		ПостроитьДиаграммуГантаБезИерархии(Результат, ДиаграммаПечати);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьТекстЗагрузкиМЛ(СтрНомер, Грузоподъемность, ВесБрутто, ЗагрузкаПоВесу = 0,
		ОбъемКузова = 0, Объем, ЗагрузкаПоОбъему = 0)
	
	СтрГрузоподъемность = Строка(Окр(Грузоподъемность, 3));
	СтрВесБрутто        = Строка(Окр(ВесБрутто, 3));
	СтрЗагрузкаПоВесу   = Строка(Окр(ЗагрузкаПоВесу, 0));
	СтрОбъемКузова      = Строка(Окр(ОбъемКузова, 3));
	СтрОбъем            = Строка(Окр(Объем, 3));
	СтрЗагрузкаПоОбъему = Строка(Окр(ЗагрузкаПоОбъему, 0));
	
	ЕИВеса   = Константы.уатЕдиницаИзмеренияВеса.Получить();
	ЕИОбъема = Константы.уатЕдиницаИзмеренияОбъема.Получить();
	
	Возврат СтрНомер + " - "
		+ СтрВесБрутто + "/" + СтрГрузоподъемность + " " + ЕИВеса + " (" + СтрЗагрузкаПоВесу + "%); "
		+ СтрОбъем + "/" + СтрОбъемКузова + " " + ЕИОбъема + " (" + СтрЗагрузкаПоОбъему + "%)";
	
КонецФункции    
	
&НаСервере
Функция ПолучитьТекРелизПлатформы()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ВерсияПлатформы = СистемнаяИнформация.ВерсияПриложения;
	РелизПлатформы = Число(Сред(ВерсияПлатформы, 5, 2));
	Возврат РелизПлатформы;
	
КонецФункции 

&НаКлиенте
Процедура УстановитьВариантИнтерфейса(РелизПлатформы)
	
	Если РелизПлатформы >= 21 Тогда
		Элементы.ГруппаСостояниеСтарыйИнтерфейс.Видимость = Ложь;  
		ИспользуетсяНовыйИнтерфейс = Истина;
		
		ПользовательВиделПредупреждение = Ложь;
		ЗагрузитьНастройкиФормы(ПользовательВиделПредупреждение); 
		Если Не ПользовательВиделПредупреждение Тогда
			ТекстНСтр = НСтр("en='';ru='Установлен новый режим отображения диаграммы Ганта. В новом режиме таблица со списком документов отображается непосредственно в области построения диаграммы. Вернуться к старому интерфейсу можно в меню %1 на командной панели формы. Через несколько релизов прежний вариант интерфейса будет отключен.'");
			ТекстНСтр = СтрШаблон(ТекстНСтр, """Еще""");
			ПоказатьПредупреждение(, ТекстНСтр);
			ПользовательВиделПредупреждение = Истина;
			СохранитьНастройкиФормы(ПользовательВиделПредупреждение);
		КонецЕсли;
	Иначе
		Элементы.ГруппаСостояниеНовыйИнтерфейс.Видимость = Ложь;
		Элементы.ФормаИзменитьИнтерфейсДиаграммы.Видимость = Ложь;
		ИспользуетсяНовыйИнтерфейс = Ложь;
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Процедура ЗагрузитьНастройкиФормы(ПользовательВиделПредупреждение)
	
	Если Не ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда 
		Возврат;
	КонецЕсли; 
	
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить(
	"Обработка.уатПланирваниеРаботыТС.Формы.ОсновнаяФорма",
	"НастройкиФормы"); 
	
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		Если СтруктураНастроек.Свойство("ПредупреждениеПоказано") И СтруктураНастроек.ПредупреждениеПоказано Тогда
			ПользовательВиделПредупреждение = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиФормы(ПользовательВиделПредупреждение) 
	
	Если Не ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура();
	СтруктураНастроек.Вставить("ПредупреждениеПоказано", ПользовательВиделПредупреждение);
	
	ХранилищеНастроекДанныхФорм.Сохранить(
		"Обработка.уатПланирваниеРаботыТС.Формы.ОсновнаяФорма", 
		"НастройкиФормы", СтруктураНастроек);

	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиВариантаОтчета()  
	
	МакетКомпоновки  = ПолучитьМакетКомпоновки();
	URLСхемы         = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	
	Если ВариантПросмотраДиаграммы = 0 Тогда  
		НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.ВариантыНастроек.Основной.Настройки);	
	Иначе 
		НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.ВариантыНастроек.БезИерархии.Настройки);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиНастройкиОтбораПриСменеВариантаОтчета(ПереносимыеЭлементыОтбора)
	
	ТекущиеЭлементыОтбора = НастройкиКомпоновки.Настройки.Отбор.Элементы;
	ТекущиеЭлементыОтбора.Очистить();
	
	Для Каждого ЭлементОтбора Из ПереносимыеЭлементыОтбора Цикл
		НовыйОтбор = ТекущиеЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовыйОтбор, ЭлементОтбора);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
