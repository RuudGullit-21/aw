
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Пересчитать
//
// Параметры:
//  Терминал	  - СправочникСсылка.ItobТерминалы - ссылка на терминал.
//  ДатаНачала	  - Дата - дата начала.
//  ДатаОкончания - Дата - дата окончания. 
//
Процедура Пересчитать(Терминал = Неопределено, Знач ДатаНачала = Неопределено, Знач ДатаОкончания = Неопределено) Экспорт
	
	УдалитьДублиКалькуляции(Терминал);
	
	ДатаНачала = ?(ЗначениеЗаполнено(ДатаНачала), НачалоДня(ДатаНачала), '00010101');
	ДатаОкончания = ?(ЗначениеЗаполнено(ДатаОкончания), НачалоДня(ДатаОкончания), '39990101');
	
	ВсеТерминалы = Новый Массив;
	Если ЗначениеЗаполнено(Терминал) Тогда
		ВсеТерминалы.Добавить(Терминал);
	Иначе
		ВсеТерминалы = ВсеДопустимыеТерминалы(ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ДатаНачала));
	КонецЕсли; 	
	
	ДатыНачалаПересчетаПоТерминалам = Новый Соответствие;
	
	ТерминалыДляЗапроса = Новый Массив;
	ТерминалыСНайденнойКалькуляцией = Новый Массив;
	Если ЗначениеЗаполнено(ДатаНачала) Тогда
		РазделитьТерминалыПоСуществованиюКалькуляции(ВсеТерминалы, ТерминалыСНайденнойКалькуляцией, ТерминалыДляЗапроса, ДатаНачала);	
	Иначе
		ТерминалыДляЗапроса = ВсеТерминалы;
	КонецЕсли; 
	
	Для каждого ТерминалСКалькуляцией Из ТерминалыСНайденнойКалькуляцией Цикл
		ДатыНачалаПересчетаПоТерминалам.Вставить(ТерминалСКалькуляцией, ДатаНачала);	
	КонецЦикла; 
	
	ДатыНачалаСоСтороныССД = ПолучитьДатыПересчетаСоСтороныССД(ТерминалыДляЗапроса, ДатаНачала, ДатаОкончания);
	ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(ДатыНачалаПересчетаПоТерминалам, ДатыНачалаСоСтороныССД, Неопределено);	
	
	Выборка = РезультатЗапроса_ДанныеДляПерерасчета(ДатыНачалаПересчетаПоТерминалам, ДатаОкончания).Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.Калькуляция) Тогда
			СоздатьКалькуляцию(Выборка.ДатаКалькуляции, Выборка.Терминал);
		Иначе
			ИзменитьКалькуляцию(Выборка.Калькуляция);
		КонецЕсли; 		
	КонецЦикла;  
		
КонецПроцедуры

// Удаляет дубли документа "ItobКалькуляцияВыработки"
//  На каждый день должно присутствовать не более одного документа для каждого терминала.
//
// Параметры:
//  Терминал - СправочникСсылка.ItobТерминалы - ссылка на терминал.
//
Процедура УдалитьДублиКалькуляции(Терминал = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.День КАК День,
	               |	ВложенныйЗапрос.Терминал КАК Терминал,
	               |	ВложенныйЗапрос.КоличествоДокументов,
	               |	ItobКалькуляцияВыработки.Ссылка,
	               |	ItobКалькуляцияВыработки.ПометкаУдаления
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ) КАК День,
	               |		ItobКалькуляцияВыработки.Терминал КАК Терминал,
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ItobКалькуляцияВыработки.Ссылка) КАК КоличествоДокументов
	               |	ИЗ
	               |		Документ.ItobКалькуляцияВыработки КАК ItobКалькуляцияВыработки
	               |	ГДЕ
	               |		ВЫБОР
	               |				КОГДА &Терминал = НЕОПРЕДЕЛЕНО
	               |						ИЛИ &Терминал = ЗНАЧЕНИЕ(Справочник.ItobТерминалы.ПустаяСсылка)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ItobКалькуляцияВыработки.Терминал = &Терминал
	               |			КОНЕЦ
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ),
	               |		ItobКалькуляцияВыработки.Терминал
	               |	
	               |	ИМЕЮЩИЕ
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ItobКалькуляцияВыработки.Ссылка) > 1) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ItobКалькуляцияВыработки КАК ItobКалькуляцияВыработки
	               |		ПО (ВложенныйЗапрос.День = НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ))
	               |			И ВложенныйЗапрос.Терминал = ItobКалькуляцияВыработки.Терминал
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	День,
	               |	Терминал";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	КопияТЗ = ТЗ.Скопировать();
	КопияТЗ.Свернуть("День,Терминал",);
	
	Для каждого СтрокаКомбинации Из КопияТЗ Цикл
		СтруктураОтбора = Новый Структура("День,Терминал", СтрокаКомбинации.День, СтрокаКомбинации.Терминал);
		НайденныеСтроки = ТЗ.НайтиСтроки(СтруктураОтбора);
		      
		Для Счетчик = 1 По НайденныеСтроки.Количество()-1 Цикл
			ДокОбъект = НайденныеСтроки[Счетчик].Ссылка.ПолучитьОбъект();
			
			Если НЕ НайденныеСтроки[Счетчик].ПометкаУдаления Тогда
				ДокОбъект.УстановитьПометкуУдаления(Истина);			
			КонецЕсли;
			
			ItobРаботаС_БСП_КлиентСервер.СообщитьПользователю(НСтр("ru = 'Удален дубль калькуляции:'")+" "+ДокОбъект.Ссылка);
			
			ДокОбъект.Удалить();	                       
		КонецЦикла;
	КонецЦикла;

	Если КопияТЗ.Количество() > 0 Тогда
		ОбновитьНумерациюОбъектов(Метаданные());	
	КонецЕсли; 
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВсеДопустимыеТерминалы(НаДатуUTC0)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", НаДатуUTC0);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ItobТерминалы.Ссылка КАК Терминал
	|ИЗ
	|	Справочник.ItobТерминалы КАК ItobТерминалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиТрекеров.СрезПоследних(&НаДату, ) КАК ItobПривязкиТрекеровСрезПоследних
	|		ПО ItobТерминалы.Ссылка = ItobПривязкиТрекеровСрезПоследних.Терминал
	|			И (ItobПривязкиТрекеровСрезПоследних.ТерминалУстановлен)
	|ГДЕ
	|	НЕ ItobПривязкиТрекеровСрезПоследних.Объект ЕСТЬ NULL
	|	И НЕ ItobТерминалы.СерверСбораДанных = ЗНАЧЕНИЕ(Справочник.ItobСерверыСбораДанных.ПустаяСсылка)
	|	И НЕ ЕСТЬNULL(ItobТерминалы.СерверСбораДанных.Отключить, ИСТИНА)";
	
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Терминал");
	
КонецФункции
 
// Разделяет исходный массив терминалов на 2 по признаку существования калькуляции выработки по этому терминалу на дату калькуляции.
//
Процедура РазделитьТерминалыПоСуществованиюКалькуляции(Терминалы, ТерминалыСКалькуляцией, ТерминалыБезКалькуляции, ДатаКалькуляции)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Терминалы", Терминалы);
	Запрос.УстановитьПараметр("ДатаКалькуляции", ДатаКалькуляции);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ItobКалькуляцияВыработки.Ссылка КАК Ссылка,
	|	ItobКалькуляцияВыработки.Терминал КАК Терминал
	|ПОМЕСТИТЬ втКалькуляцииНаДату
	|ИЗ
	|	Документ.ItobКалькуляцияВыработки КАК ItobКалькуляцияВыработки
	|ГДЕ
	|	ItobКалькуляцияВыработки.Терминал В (&Терминалы)
	|	И НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ) = &ДатаКалькуляции
	|	И НЕ ItobКалькуляцияВыработки.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Терминал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ItobТерминалы.Ссылка КАК Терминал,
	|	ЕСТЬNULL(втКалькуляцииНаДату.Ссылка, ЗНАЧЕНИЕ(Документ.ItobКалькуляцияВыработки.ПустаяСсылка)) КАК Калькуляция
	|ИЗ
	|	Справочник.ItobТерминалы КАК ItobТерминалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКалькуляцииНаДату КАК втКалькуляцииНаДату
	|		ПО ItobТерминалы.Ссылка = втКалькуляцииНаДату.Терминал
	|ГДЕ
	|	ItobТерминалы.Ссылка В (&Терминалы)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Калькуляция) Тогда
			ТерминалыСКалькуляцией.Добавить(Выборка.Терминал);	
		Иначе
			ТерминалыБезКалькуляции.Добавить(Выборка.Терминал);
		КонецЕсли; 				
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьДатыПересчетаСоСтороныССД(Терминалы, ДатаНачала, ДатаОкончания)
	
	ДатыПересчетаСоСтороныССД = Новый Соответствие;
	
	СводныеДанныеСоСтороныССД = Новый ТаблицаЗначений;
	СводныеДанныеСоСтороныССД.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	СводныеДанныеСоСтороныССД.Колонки.Добавить("КодТерминала", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
	СводныеДанныеСоСтороныССД.Колонки.Добавить("СерверСбораДанных", Новый ОписаниеТипов("СправочникСсылка.ItobСерверыСбораДанных"));
	
	ДатаНачалаUTC0 = ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ДатаНачала);
	ПараметрыСдвигаВремени = ItobОперативныйМониторинг.ПолучитьПараметрыСдвигаВремени();
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Терминалы", Терминалы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ItobТерминалы.Код КАК КодТерминала,
	|	ItobТерминалы.СерверСбораДанных КАК СерверСбораДанных
	|ИЗ
	|	Справочник.ItobТерминалы КАК ItobТерминалы
	|ГДЕ
	|	ItobТерминалы.Ссылка В(&Терминалы)
	|ИТОГИ ПО
	|	СерверСбораДанных";
	
	ВыборкаСерверыСбораДанных = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСерверыСбораДанных.Следующий() Цикл
		ВыборкаДанныеЗапроса = ВыборкаСерверыСбораДанных.Выбрать();
		ДанныеТерминаловДляЗапроса = Новый Массив;
		Пока ВыборкаДанныеЗапроса.Следующий() Цикл
			ДанныеТерминаловДляЗапроса.Добавить(Новый Структура("КодТерминала, ЗапрашиваемыйПериод", ВыборкаДанныеЗапроса.КодТерминала, ДатаНачалаUTC0));
		КонецЦикла;
		
		ПараметрыЗапроса = ItobРепликация.ПараметрыЗапросаКДаннымТерминалов();
		ПараметрыЗапроса.ИсточникНастроекСервераСбораДанных = ВыборкаСерверыСбораДанных.СерверСбораДанных;
		ПараметрыЗапроса.ДанныеЗапроса = ДанныеТерминаловДляЗапроса;
		ПараметрыЗапроса.МаксимумЗаписейПоТерминалу = 1;
		ПараметрыЗапроса.ГруппироватьПоТерминалам = Ложь;
		ДанныеССервераСбораДанных = ItobРепликация.ДанныеТерминалов(ПараметрыЗапроса).Скопировать(, "КодТерминала, Период");
		
		Если ЗначениеЗаполнено(ПараметрыЗапроса.ТекстОшибки) Тогда
			ТекстСобытия = "Не удалось получить данные по выработке со стороны сервера сбора данных ( " + ВыборкаСерверыСбораДанных.СерверСбораДанных + " ). ";
			ТекстПредупреждения = ТекстСобытия
								  + Символы.ПС
								  + "Выработка будет пересчитана только на основании данных существующих калькуляций.";
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстПредупреждения
							  + Символы.ПС
							  + "Подробно об ошибке см. в журнале регистрации";
			Сообщение.Сообщить();
			
			ЗаписьЖурналаРегистрации(ТекстСобытия, 
								     УровеньЖурналаРегистрации.Ошибка,,, 
									 ТекстПредупреждения 
									 	+ Символы.ПС 
										+ "Ошибка при получении данных со стороны сервера сбора данных: "
										+ Символы.ПС
										+ ПараметрыЗапроса.ТекстОшибки); 
		КонецЕсли;
		
		ДанныеССервераСбораДанных.Колонки.Добавить("СерверСбораДанных", Новый ОписаниеТипов("СправочникСсылка.ItobСерверыСбораДанных"));
		ДанныеССервераСбораДанных.ЗаполнитьЗначения(ВыборкаСерверыСбораДанных.СерверСбораДанных, "СерверСбораДанных");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеССервераСбораДанных, СводныеДанныеСоСтороныССД);	
	КонецЦикла; 
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Терминалы", Терминалы);
	Запрос.УстановитьПараметр("ДанныеССД", СводныеДанныеСоСтороныССД);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияUTC0", ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ДатаОкончания));
	Запрос.УстановитьПараметр("СдвигВремени", ПараметрыСдвигаВремени.СдвигВремени);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	втДанныеССД.КодТерминала КАК КодТерминала,
	|	втДанныеССД.СерверСбораДанных КАК СерверСбораДанных,
	|	втДанныеССД.Период КАК Период
	|ПОМЕСТИТЬ втДанныеССД
	|ИЗ
	|	&ДанныеССД КАК втДанныеССД
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(втДанныеССД.Период, День) <= &ДатаОкончанияUTC0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СерверСбораДанных,
	|	КодТерминала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Терминал КАК Терминал,
	|	МИНИМУМ(ВложенныйЗапрос.ДатаПересчета) КАК ДатаПересчетаВыработки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ItobТерминалы.Ссылка КАК Терминал,
	|		НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(втДанныеССД.Период, СЕКУНДА, &СдвигВремени), ДЕНЬ) КАК ДатаПересчета
	|	ИЗ
	|		Справочник.ItobТерминалы КАК ItobТерминалы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеССД КАК втДанныеССД
	|			ПО ItobТерминалы.Код = втДанныеССД.КодТерминала
	|				И ItobТерминалы.СерверСбораДанных = втДанныеССД.СерверСбораДанных
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ItobКалькуляцияВыработки.Терминал,
	|		МИНИМУМ(НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ))
	|	ИЗ
	|		Документ.ItobКалькуляцияВыработки КАК ItobКалькуляцияВыработки
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ) >= &ДатаНачала
	|		И ItobКалькуляцияВыработки.Терминал В(&Терминалы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ItobКалькуляцияВыработки.Терминал) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Терминал";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДатыПересчетаСоСтороныССД.Вставить(Выборка.Терминал, Выборка.ДатаПересчетаВыработки);		
	КонецЦикла; 
	 
	
	Возврат ДатыПересчетаСоСтороныССД;
	
КонецФункции

Функция РезультатЗапроса_ДанныеДляПерерасчета(ДатыНачалаПересчетаПоТерминалам, ДатаОкончания)
	
	Терминалы = Новый Массив;
	Для каждого КлючИЗначение Из ДатыНачалаПересчетаПоТерминалам Цикл
		Терминалы.Добавить(КлючИЗначение.Ключ);	
	КонецЦикла; 
	
	АктуальностьПоТерминалам = Новый Соответствие;
	ПараметрыСдвигаВремени = ItobОперативныйМониторинг.ПолучитьПараметрыСдвигаВремени();
	ЗапросАктуальность = Новый Запрос;
	ЗапросАктуальность.УстановитьПараметр("Терминалы", Терминалы);
	ЗапросАктуальность.УстановитьПараметр("СдвигВремени", ПараметрыСдвигаВремени.СдвигВремени);
	ЗапросАктуальность.Текст = 
	"ВЫБРАТЬ
	|	ItobАктуальностьДанныхТерминалов.Терминал КАК Терминал,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ItobАктуальностьДанныхТерминалов.ДатаВремя, СЕКУНДА, &СдвигВремени), ДЕНЬ) КАК ДатаВремя
	|ИЗ
	|	РегистрСведений.ItobАктуальностьДанныхТерминалов КАК ItobАктуальностьДанныхТерминалов
	|ГДЕ
	|	ItobАктуальностьДанныхТерминалов.Терминал В (&Терминалы)";
	
	ВыборкаАктуальность = ЗапросАктуальность.Выполнить().Выбрать();
	Пока ВыборкаАктуальность.Следующий() Цикл
		АктуальностьПоТерминалам.Вставить(ВыборкаАктуальность.Терминал, ВыборкаАктуальность.ДатаВремя); 		
	КонецЦикла; 	
	 
	ДатыПерерасчета = Новый ТаблицаЗначений;
	ДатыПерерасчета.Колонки.Добавить("ДатаПерерасчета", Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ДатыПерерасчета.Колонки.Добавить("Терминал", Новый ОписаниеТипов("СправочникСсылка.ItobТерминалы"));	
	
	Для каждого КлючИЗначение Из ДатыНачалаПересчетаПоТерминалам Цикл
		ДатаОкончанияДляТерминала = ПодобратьДатуОкончанияДляТерминала(КлючИЗначение.Значение, АктуальностьПоТерминалам[КлючИЗначение.Ключ], ДатаОкончания);
		Если НЕ ЗначениеЗаполнено(ДатаОкончанияДляТерминала) Тогда
			Продолжить;	
		КонецЕсли; 
		
		ИнтервалПерерасчета = ИнтервалМеждуДнями(КлючИЗначение.Значение, ДатаОкончанияДляТерминала);
		Для каждого ДеньПерерасчета Из ИнтервалПерерасчета Цикл
			НовСтрока = ДатыПерерасчета.Добавить();
			НовСтрока.Терминал = КлючИЗначение.Ключ;
			НовСтрока.ДатаПерерасчета = ДеньПерерасчета;
		КонецЦикла; 
	КонецЦикла; 	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатыПерерасчета", ДатыПерерасчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыПерерасчета.Терминал КАК Терминал,
	|	ДатыПерерасчета.ДатаПерерасчета КАК ДатаПерерасчета
	|ПОМЕСТИТЬ втДатыПерерасчета
	|ИЗ
	|	&ДатыПерерасчета КАК ДатыПерерасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Терминал,
	|	ДатаПерерасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДатыПерерасчета.Терминал КАК Терминал,
	|	втДатыПерерасчета.ДатаПерерасчета КАК ДатаКалькуляции,
	|	ЕСТЬNULL(ItobКалькуляцияВыработки.Ссылка, ЗНАЧЕНИЕ(Документ.ItobКалькуляцияВыработки.ПустаяСсылка)) КАК Калькуляция
	|ИЗ
	|	втДатыПерерасчета КАК втДатыПерерасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ItobКалькуляцияВыработки КАК ItobКалькуляцияВыработки
	|		ПО втДатыПерерасчета.Терминал = ItobКалькуляцияВыработки.Терминал
	|			И (втДатыПерерасчета.ДатаПерерасчета = НАЧАЛОПЕРИОДА(ItobКалькуляцияВыработки.Дата, ДЕНЬ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКалькуляции,
	|	Терминал";

	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПодобратьДатуОкончанияДляТерминала(Знач ДатаНачала, Знач ДеньАктуальностиДанныхТерминала, Знач ДатаОкончанияОбщая)
	
	Если НЕ ЗначениеЗаполнено(ДеньАктуальностиДанныхТерминала)
		 ИЛИ ДатаНачала > ДатаОкончанияОбщая
		 ИЛИ ДатаНачала >= ДеньАктуальностиДанныхТерминала Тогда
		 
		Возврат '00010101';	
	КонецЕсли; 
		
	Результат = ДатаОкончанияОбщая;
	Если Результат >= ДеньАктуальностиДанныхТерминала Тогда	 
		Результат = ДеньАктуальностиДанныхТерминала - 24*3600;
	КонецЕсли;
	
	
	Возврат Результат;
	
КонецФункции
 
Функция ИнтервалМеждуДнями(Знач НачалоИнтервала, Знач КонецИнтервала)
	
	Результат = Новый Массив;
	
	текДень = НачалоИнтервала;
	Пока текДень <= КонецИнтервала Цикл
		Результат.Добавить(текДень);
		текДень = текДень + 24*3600;
	КонецЦикла; 
	
	
	Возврат Результат;
	
КонецФункции

Процедура СоздатьКалькуляцию(Дата, Терминал)
	
	НовКалькуляция = Документы.ItobКалькуляцияВыработки.СоздатьДокумент();
	НовКалькуляция.Дата = Дата;
	НовКалькуляция.Терминал = Терминал;
	НовКалькуляция.ЗаполнитьДанныеДокумента();
	НовКалькуляция.ДополнительныеСвойства.Вставить("НеЗаполнитьДанныеДокумента", Истина);
	НовКалькуляция.Записать(РежимЗаписиДокумента.Проведение);
	
	ItobРаботаС_БСП_КлиентСервер.СообщитьПользователю(НСтр("ru = 'Создана калькуляция выработки:'")+ " " + Терминал + " " + Дата);

КонецПроцедуры

Процедура ИзменитьКалькуляцию(Калькуляция)
	
	ДокОбъект = Калькуляция.ПолучитьОбъект();	
	
	Если ДокОбъект.ПометкаУдаления Тогда
		ДокОбъект.УстановитьПометкуУдаления(Ложь);	
	КонецЕсли;
	
	ДокОбъект.ЗаполнитьДанныеДокумента();
	ДокОбъект.ДополнительныеСвойства.Вставить("НеЗаполнитьДанныеДокумента", Истина);
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры
 
#КонецОбласти

#КонецЕсли
