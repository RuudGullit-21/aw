
#Область ОписаниеПеременных
	
&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти 

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаПредупреждениеРепликацияВФайловойБазе.Видимость = ОбщегоНазначения.ИнформационнаяБазаФайловая();
			
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("ItobЦентрСпутниковогоМониторинга.ПользователиИПраваДоступа") Тогда
		Элементы.ГруппаПараметрыПользователей.Видимость = Ложь;
	КонецЕсли; 
	
	// Обновление состояния элементов.
	УстановитьДоступность();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()	
	#Если Не ВебКлиент Тогда
	ОбновитьИнтерфейсПрограммы();
	#КонецЕсли	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ItobМинимальноеВремяСтоянкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobМинимальнаяСкоростьДвиженияПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobДопустимыйРадиусСтоянкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьCsmHandlierПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьГруппыПользователейПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.ИспользоватьГруппыПользователей
		И НаборКонстант.ItobИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда		
		НаборКонстант.ItobИспользоватьОграниченияПравДоступаНаУровнеЗаписей = Ложь;		
	КонецЕсли;
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьОграниченияПравДоступаНаУровнеЗаписейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobОсновноеПредставлениеОбъектовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьДинамическиеГруппировкиПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьНесколькоСерверовСбораДанныхПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьПланФактПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьУчетПоФактическимДаннымПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ItobРадиусЗоныПриходаНаТочкуПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ItobИспользоватьУниверсальнуюИнтеграциюПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
	Если НаборКонстант.ItobИспользоватьУниверсальнуюИнтеграцию Тогда
		
		ДлительнаяОперация = ЗаполнитьИдентификаторыНаСервере();
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, , ПараметрыОжидания);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВидыГруппировок(Команда)
	ОткрытьФорму("Справочник.ItobВидыГруппировок.ФормаСписка",,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, НеобходимоОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если НеобходимоОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ItobРаботаС_БСП_Клиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьГруппыПользователей" ИЛИ РеквизитПутьКДанным = "" Тогда
		ItobРаботаС_БСП_КлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ItobИспользоватьОграниченияПравДоступаНаУровнеЗаписей", "Доступность", НаборКонстант.ИспользоватьГруппыПользователей);
		ItobРаботаС_БСП_КлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "РегистрСведенийItobНастройкиПравДоступаГруппПользователейОткрытьСписок", "Доступность", НаборКонстант.ИспользоватьГруппыПользователей);	
			
	КонецЕсли;
					
	Если РеквизитПутьКДанным = "НаборКонстант.ItobИспользоватьДинамическиеГруппировки" ИЛИ РеквизитПутьКДанным = "" Тогда
		ItobРаботаС_БСП_КлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ВидыГруппировок", "Доступность", НаборКонстант.ItobИспользоватьДинамическиеГруппировки);		
			
	КонецЕсли;
		
	Если РеквизитПутьКДанным = "НаборКонстант.ItobИспользоватьНесколькоСерверовСбораДанных"  
		 ИЛИ РеквизитПутьКДанным = "" Тогда
		 
		ItobРаботаС_БСП_КлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаИспользуетсяНесколькоСерверовСбораДанных", "Видимость", НаборКонстант.ItobИспользоватьНесколькоСерверовСбораДанных);
		ItobРаботаС_БСП_КлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаИспользуетсяОдинСерверСбораДанных", "Видимость", НЕ НаборКонстант.ItobИспользоватьНесколькоСерверовСбораДанных);
	КонецЕсли; 	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция ЗаполнитьИдентификаторыНаСервере()
	
	ПараметрыЗадания = Новый Структура;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("ItobУниверсальнаяИнтеграция.ЗаполнитьИдентификаторыУниверсальнойИнтеграции", ПараметрыЗадания, ПараметрыВыполнения);	
	
КонецФункции

#КонецОбласти