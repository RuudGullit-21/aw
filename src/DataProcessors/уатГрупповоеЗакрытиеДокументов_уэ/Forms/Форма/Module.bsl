
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ДатаЗакрытия = ТекущаяДата();
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьЗаказы(Команда)
	Если ЗаказыНаТС.Количество() > 0 Тогда
		Ответ = Неопределено;
		ТекстНСТР = НСтр("en='Before completing the list will be cleared. Continue?';ru='Перед заполнением список будет очищен. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗаказыЗаПериодОтвет", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗаказыЗаПериодОткрытьФормуЗаполнения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаказыЗаПериодОтвет(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		ЗаказыНаТС.Очистить();
	КонецЕсли; 	
	
	ЗаполнитьЗаказыЗаПериодОткрытьФормуЗаполнения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаказыЗаПериодОткрытьФормуЗаполнения()
	Перем мсвУслуги, НоваяСтрока, ПараметрыФормы, ТекНоваяСтрока;
	
	ПараметрыФормы = Новый Структура("ВидДокумента, Организация", 0, Организация);
	ОткрытьФорму("Обработка.уатГрупповоеЗакрытиеДокументов_уэ.Форма.Заполнение", ПараметрыФормы, ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ЗаполнитьЗаказыЗаПериодЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаказыЗаПериодЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		ЗаказыНаТС.ЗагрузитьЗначения(Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМаршрутныеЛисты(Команда)
	Если МаршрутныеЛисты.Количество() > 0 Тогда
		Ответ = Неопределено;
		ТекстНСТР = НСтр("en='Before completing the list will be cleared. Continue?';ru='Перед заполнением список будет очищен. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьМаршрутныеЛистыЗаПериодОтвет", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьМаршрутныеЛистыЗаПериодОткрытьФормуЗаполнения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМаршрутныеЛистыЗаПериодОтвет(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		МаршрутныеЛисты.Очистить();
	КонецЕсли; 	
	
	ЗаполнитьМаршрутныеЛистыЗаПериодОткрытьФормуЗаполнения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМаршрутныеЛистыЗаПериодОткрытьФормуЗаполнения()
	Перем мсвУслуги, НоваяСтрока, ПараметрыФормы, ТекНоваяСтрока;
	
	ПараметрыФормы = Новый Структура("ВидДокумента, Организация", 1, Организация);
	ОткрытьФорму("Обработка.уатГрупповоеЗакрытиеДокументов_уэ.Форма.Заполнение", ПараметрыФормы, ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ЗаполнитьМаршрутныеЛистыЗаПериодЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМаршрутныеЛистыЗаПериодЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		МаршрутныеЛисты.ЗагрузитьЗначения(Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеЗаказов(Команда)
	мсвОшибок = Новый Массив;
	ЗакрытиеЗаказовСервер(мсвОшибок);
	ОбработкаОшибокПриЗакрытии(мсвОшибок);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеМЛ(Команда)
	мсвОшибок = Новый Массив;
	ЗакрытиеМЛСервер(мсвОшибок);
	ОбработкаОшибокПриЗакрытии(мсвОшибок);
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияТекущая(Команда)
	ДатаЗакрытия = ТекущаяДата();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗакрытиеЗаказовСервер(мсвОшибок)
	мсвЗакрытые = Новый Массив;
	Для Каждого ТекСтрока Из ЗаказыНаТС Цикл
		Если НЕ ТекСтрока.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		СообщениеОшибки = "";
		Документы.уатЗаказГрузоотправителя.ЗакрытиеДокумента(ТекСтрока.Значение, ДатаЗакрытия, СообщениеОшибки);
		Если СообщениеОшибки = "" Тогда
			мсвЗакрытые.Добавить(ТекСтрока);
		Иначе
			мсвОшибок.Добавить(СообщениеОшибки);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ТекЗакрыт Из мсвЗакрытые Цикл
		ЗаказыНаТС.Удалить(ТекЗакрыт);
	КонецЦикла;
	//ЗаказыНаТС.ЗаполнитьПометки(Ложь);
КонецПроцедуры

&НаСервере
Процедура ЗакрытиеМЛСервер(мсвОшибок)
	мсвЗакрытые = Новый Массив;
	Для Каждого ТекСтрока Из МаршрутныеЛисты Цикл
		Если НЕ ТекСтрока.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		СообщениеОшибки = "";
		Документы.уатМаршрутныйЛист.ЗакрытиеДокумента(ТекСтрока.Значение, ДатаЗакрытия, СообщениеОшибки);
		Если СообщениеОшибки = "" Тогда
			мсвЗакрытые.Добавить(ТекСтрока);
		Иначе
			мсвОшибок.Добавить(СообщениеОшибки);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ТекЗакрыт Из мсвЗакрытые Цикл
		МаршрутныеЛисты.Удалить(ТекЗакрыт);
	КонецЦикла;
	//МаршрутныеЛисты.ЗаполнитьПометки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОшибокПриЗакрытии(мсвОшибок)
	Если мсвОшибок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("МассивОшибок", мсвОшибок);
	ПараметрыОткрытия.Вставить("Пояснение",    НСтр("en='During the closing of documents was errors.';ru='В ходе закрытия документов возникли ошибки.'"));
	ПараметрыОткрытия.Вставить("Режим",        "Ошибка");
	ОткрытьФорму("Обработка.уатГрупповоеЗакрытиеДокументов_уэ.Форма.Ошибки", ПараметрыОткрытия, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
