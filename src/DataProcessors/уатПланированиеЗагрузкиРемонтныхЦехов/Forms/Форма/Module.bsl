#Область ОписаниеПеременных

&НаСервере
Перем РаскраскаДиаграммы;

&НаСервере
Перем СерияЦех;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ВызватьИсключение НСтр("ru = 'Не поддерживается в мобильном клиенте.'")
	КонецЕсли;
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ЗагрузитьНастройки();
	
	ДиаграммаГанта.ОтображатьЗаголовок = Ложь;
	ДиаграммаГанта.ОтображатьЛегенду = Ложь;
	ДиаграммаГанта.ОбластьПостроения.Право = 1;
	ДиаграммаГанта.ОбластьПостроения.Заголовок = НСтр("en='Workshop / Document';ru='Цех / Документ'");
	
	НастроитьШкалуДиаграммыГанта();
	
	НоваяСтрока = ПредставлениеДокументов.Добавить();
	НоваяСтрока.Представление = НСтр("en='Document';ru='Документ'");
	НоваяСтрока.Имя = "Документ";
	НоваяСтрока.Использование = Истина;
	НоваяСтрока = ПредставлениеДокументов.Добавить();
	НоваяСтрока.Представление = НСтр("en='Model';ru='Модель'");
	НоваяСтрока.Имя = "МодельТС";
	НоваяСтрока = ПредставлениеДокументов.Добавить();
	НоваяСтрока.Представление = НСтр("en='Vehicle';ru='Транспортное средство'");
	НоваяСтрока.Имя = "ТС";
	НоваяСтрока = ПредставлениеДокументов.Добавить();
	НоваяСтрока.Представление = НСтр("en='Master';ru='Мастер'");
	НоваяСтрока.Имя = "Мастер";
	НоваяСтрока = ПредставлениеДокументов.Добавить();
	НоваяСтрока.Представление = НСтр("en='Reason of request';ru='Причина обращения'");
	НоваяСтрока.Имя = "ПричинаОбращения"
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьДиаграммуГантаПриЗаписиЗаявкиНаРемонт" Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда 
		Возврат;
	КонецЕсли;
	
	ПолучитьСостояниеОтображенияЦехов();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДиаграммаГантаВыбор(Элемент, Значения, СтандартнаяОбработка, ТекДата)
	Если ТекДата<>Неопределено Тогда
		Если ТипЗнч(Значения)=Тип("ЗначениеДиаграммыГанта") Тогда //даблклик на пустом интервале
			Если ТипЗнч(Значения.Точка.Расшифровка) <> Тип("СправочникСсылка.уатЦеха") Тогда
				Возврат;
			КонецЕсли;
			
			СтандартнаяОбработка = Ложь;
			
			СписокДок = Новый СписокЗначений;
			СписокДок.Добавить(НСтр("en='Order for repair';ru='Заявка на ремонт'"));
			СписокДок.Добавить(НСтр("en='Repair list';ru='Ремонтный лист'"));
			ВыбЗнач = Неопределено;

			СписокДок.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение1", ЭтотОбъект, Новый Структура("Значения, ТекДата", Значения, ТекДата)), НСтр("en='Create document';ru='Создать документ'"));
			
		ИначеЕсли ТипЗнч(Значения) = Тип("Массив") Тогда //даблклик на занятом интервале
			мсвЗаявок = Новый Массив;
			флЭтоУровеньЦеха = Ложь;
			Для Каждого ЭлементЗначения Из Значения Цикл
				Если ТипЗнч(ЭлементЗначения) = Тип("ИнтервалДиаграммыГанта") Тогда
					мсвЗаявок.Добавить(ЭлементЗначения.Расшифровка);
				ИначеЕсли ТипЗнч(ЭлементЗначения) = Тип("ЗначениеДиаграммыГанта")
					И ТипЗнч(ЭлементЗначения.Точка.Расшифровка) = Тип("СправочникСсылка.уатЦеха") Тогда
					флЭтоУровеньЦеха = Истина;
				КонецЕсли;
			КонецЦикла;
			Если мсвЗаявок.Количество() > 0 Тогда
				СтандартнаяОбработка = Ложь;
				Если флЭтоУровеньЦеха Тогда
					СортироватьМассивЗаявок(мсвЗаявок);
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("ТекДата", ТекДата);
					ПараметрыФормы.Вставить("Цех", уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(мсвЗаявок[0], "Цех"));
					ПараметрыФормы.Вставить("мсвЗаявок", мсвЗаявок);
					
					ОткрытьФорму("Обработка.уатПланированиеЗагрузкиРемонтныхЦехов.Форма.Расшифровка", ПараметрыФормы, ЭтотОбъект);
				Иначе
					ПоказатьЗначение(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение", ЭтотОбъект), мсвЗаявок[0]);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Значения = ДополнительныеПараметры.Значения;
    ТекДата = ДополнительныеПараметры.ТекДата;
    
    
    ВыбЗнач = ВыбранныйЭлемент;
    Если ВыбЗнач <> Неопределено Тогда
        Если ВыбЗнач.Значение = НСтр("en='Order for repair';ru='Заявка на ремонт'") Тогда
            ПараметрыФормы = Новый Структура;
            ПараметрыФормы.Вставить("ДатаНачала", ТекДата);
            ПараметрыФормы.Вставить("ДатаОкончания", ТекДата + 3600);
            ПараметрыФормы.Вставить("Цех", Значения.Точка.Расшифровка);
            ПараметрыФормы.Вставить("Мастер", уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Значения.Точка.Расшифровка, "Мастер"));
            ОткрытьФорму("Документ.уатЗаявкаНаРемонт.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыФормы));
        Иначе
            ПараметрыФормы = Новый Структура;
            ПараметрыФормы.Вставить("ДатаНачала", ТекДата);
            ПараметрыФормы.Вставить("ДатаОкончания", ТекДата + 3600);
            ПараметрыФормы.Вставить("Цех", Значения.Точка.Расшифровка);
            ПараметрыФормы.Вставить("Мастер", уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Значения.Точка.Расшифровка, "Мастер"));
            ОткрытьФорму("Документ.уатРемонтныйЛист.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыФормы));
        КонецЕсли;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение(ДополнительныеПараметры) Экспорт
    Заглушка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СортироватьМассивЗаявок(мсвЗаявок)
	СписокЗаявок = Новый СписокЗначений;
	Для Каждого ТекЗаявка Из мсвЗаявок Цикл
		СписокЗаявок.Добавить(ТекЗаявка, уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекЗаявка, "Номер"));
	КонецЦикла;
	СписокЗаявок.СортироватьПоПредставлению();
	мсвЗаявок.Очистить();
	Для Каждого ТекЗаявка Из СписокЗаявок Цикл
		мсвЗаявок.Добавить(ТекЗаявка.Значение);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Если Не Период = Неопределено Тогда
        ДатаНач = Период.ДатаНачала;
        ДатаКон = Период.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для Каждого ТекСтрока Из ПредставлениеДокументов Цикл
		ТекСтрока.Использование = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для Каждого ТекСтрока Из ПредставлениеДокументов Цикл
		ТекСтрока.Использование = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДиаграмму(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.СвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДиаграмму(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.РазвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПериодНазад(Команда)
	ДатаНач = ДатаНач - 24*3600;
	ДатаКон = ДатаКон - 24*3600;
КонецПроцедуры

&НаКлиенте
Процедура ПериодВперед(Команда)
	ДатаНач = ДатаНач + 24*3600;
	ДатаКон = ДатаКон + 24*3600;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДиаграммы(Команда)
	Если ДатаНач = '00010101' ИЛИ ДатаКон = '00010101' Тогда
		ТекстНСТР = НСтр("en='Not specified period of diagram!';ru='Не указан период построения диаграммы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если ДатаНач > ДатаКон Тогда
		ТекстНСТР = НСтр("en='The start date cannot be greater than period end date!';ru='Дата начала периода не может быть больше даты конца периода!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	ДокументРезультат = ПечатьНаСервере();
	
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ОтображатьЗаголовки = Ложь;
	ДокументРезультат.ОтображатьСетку     = Ложь;
	ДокументРезультат.ТолькоПросмотр      = Истина;
	ДокументРезультат.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()  
	МакетПечати = Обработки.уатПланированиеЗагрузкиРемонтныхЦехов.ПолучитьМакет("МакетПечати");
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ОбластьЗаголовка = МакетПечати.ПолучитьОбласть("Заголовок");
	ОбластьДиаграммаГанта = МакетПечати.ПолучитьОбласть("Диаграмма");
	ОбластьЗаголовка.Параметры.Период = НСтр("en='Period from';ru='Период с'") + " " + Формат(ДатаНач, "ДФ=dd.MM.yyyy") + " " + НСтр("en='till';ru='по'") + " " + Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ДокументРезультат.Вывести(ОбластьЗаголовка);
	ДокументРезультат.Вывести(ОбластьДиаграммаГанта);
	
	//ДокументРезультат.УдалитьОбласть(ДокументРезультат.Область("R"+(ДокументРезультат.ВысотаТаблицы-14)+":R"+ДокументРезультат.ВысотаТаблицы), ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	ТекДиаграммаГанта = ДокументРезультат.Рисунки.ДиаграммаГанта.Объект;
	//ТекДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
	//ТекДиаграммаГанта.АвтоУстановкаТекстаСерий = Ложь;
	//ТекДиаграммаГанта.АвтоУстановкаТекстаТочек = Ложь;
	//ТекДиаграммаГанта.ВертикальнаяПрокрутка = Истина;
	ТекДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	
	СформироватьОтчетСервер(ТекДиаграммаГанта);
	
	// шкала ганта
	ЭлементыШкалы = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы;
	Для Каждого ТекЭлемент Из ЭлементыШкалы Цикл
		Если ТекЭлемент.Единица = ТипЕдиницыШкалыВремени.Час Тогда
			ТекЭлемент.Видимость = (ДатаНач = ДатаКон);
		ИначеЕсли ТекЭлемент.Единица = ТипЕдиницыШкалыВремени.День Тогда
			ТекЭлемент.Видимость = (ДатаНач <> ДатаКон);
		КонецЕсли;
	КонецЦикла;
	
	//Если ОтображатьЛегенду Тогда
	//	ОбластьПояснение = МакетПечати.ПолучитьОбласть("ПояснениеДиаграмма");
	//	ДокументРезультат.Вывести(ОбластьПояснение);
	//КонецЕсли;
	
	Возврат ДокументРезультат;
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьМакетКомпоновки()
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаКомпоновки");
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройки()
	
	ДатаНач = ТекущаяДата();
	ДатаКон = ТекущаяДата() + 10*24*3600; // на 10 дней вперед
	//МасштабГанта = 1;
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
		
	МакетКомпоновки  = ПолучитьМакетКомпоновки();
	URLСхемы         = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьШкалуДиаграммыГанта()
	Сч = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы.Количество() - 1;
	Пока Сч <> 0 Цикл
		ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы.Удалить(ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы[Сч]);
		Сч = Сч - 1;
	КонецЦикла;
	
	//ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
	ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы[0].Единица = ТипЕдиницыШкалыВремени.День;
	ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы[0].Кратность = 1;
	НовыйЭлементШкалы = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	НовыйЭлементШкалы.Единица = ТипЕдиницыШкалыВремени.Час;
	//НовыйЭлементШкалы.Кратность = 7;
	//ДиаграммаГанта.ЕдиницаПериодическогоВарианта=ТипЕдиницыШкалыВремени.День;
	//ДиаграммаГанта.КратностьПериодическогоВарианта=2;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСостояниеОтображенияЦехов(РодТочка = Неопределено)
	Если РодТочка = Неопределено Тогда
		РодТочка = ДиаграммаГанта;
	КонецЕсли;
	
	Для Каждого ТекТочка Из РодТочка.Точки Цикл
		Если ТипЗнч(ТекТочка.Расшифровка) = Тип("СправочникСсылка.уатЦеха") Тогда
			ТекЭлемент = СостояниеОтображенияЦехов.НайтиПоЗначению(ТекТочка.Расшифровка);
			Если ТекЭлемент = Неопределено Тогда
				ТекЭлемент = СостояниеОтображенияЦехов.Добавить(ТекТочка.Расшифровка);
			КонецЕсли;
			ТекЭлемент.Пометка = ДиаграммаГанта.РазвернутаТочка(ТекТочка);
			
			ПолучитьСостояниеОтображенияЦехов(ТекТочка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
	Если ДатаНач = '00010101' ИЛИ ДатаКон = '00010101' Тогда
		ТекстНСТР = НСтр("en='Not specified period of diagram!';ru='Не указан период построения диаграммы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если ДатаНач > ДатаКон Тогда
		ТекстНСТР = НСтр("en='The start date cannot be greater than period end date!';ru='Дата начала периода не может быть больше даты конца периода!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетСервер(ДиаграммаГанта);
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСервер(ТекДиаграммаГанта)
	ПолучитьСостояниеОтображенияЦехов();
	
	ДеревоДанных = Новый ДеревоЗначений;
	
	Настройки = НастройкиКомпоновки.ПолучитьНастройки();
	
	Для Каждого ТекПараметр Из Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда 
			ТекПараметр.Значение = ДатаНач;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда 
			ТекПараметр.Значение = ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон));
			ТекПараметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ПолучитьМакетКомпоновки(), Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ПостроитьДиаграммуГанта(ДеревоДанных, ТекДиаграммаГанта);
КонецПроцедуры

&НаСервере
Процедура ПостроитьДиаграммуГанта(ДеревоДанных, ТекДиаграммаГанта)
	РаскраскаДиаграммы = Новый Структура;
	РаскраскаДиаграммы.Вставить("Документ", WebЦвета.ЗеленоватоЛимонный);
	РаскраскаДиаграммы.Вставить("Цех", WebЦвета.ЛимонноЗеленый);
	РаскраскаДиаграммы.Вставить("ЦехПерегружен", WebЦвета.Малиновый);
	РаскраскаДиаграммы.Вставить("ЦехПерерыв", WebЦвета.СеребристоСерый);
	
	ТекДиаграммаГанта.Очистить();
	
	Если ДеревоДанных.Строки.Количество() = 0 Тогда
		//ТекДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
		//ТекДиаграммаГанта.УстановитьПолныйИнтервал(ТекущаяДата(), ТекущаяДата());
		Возврат;
	КонецЕсли;
	
	ТекДиаграммаГанта.ОтображатьПустыеЗначения = Ложь;
	//ТекДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Истина;
	ТекДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
	ТекДиаграммаГанта.УстановитьПолныйИнтервал(ДатаНач, КонецДня(ДатаКон));
	
	СерияЦех = ТекДиаграммаГанта.УстановитьСерию("Общая", Неопределено);
	СерияЦех.ПриоритетЦвета = Ложь;
	ТекДиаграммаГанта.Обновление = Ложь;
	
	ВывестиДиаграммуСДокументами(ДеревоДанных, ТекДиаграммаГанта);
		
	//ТекДиаграммаГанта.ПоказатьУровеньТочек(0);
	ТекДиаграммаГанта.Обновление = Истина;
КонецПроцедуры

&НаСервере
Функция ДиаграммаГанта_ПредставлениеДокумента(Документ)
	Рез = "";
	
	Для Каждого ТекПредст Из ПредставлениеДокументов Цикл
		Если НЕ ТекПредст.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекПредст.Имя = "ПричинаОбращения" Тогда
			ПредставлениеПоля = Лев(СокрЛП(Документ.ПричинаОбращения), 100);
		ИначеЕсли ТекПредст.Имя = "Документ" Тогда
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.уатЗаявкаНаРемонт") Тогда
				ПредставлениеПоля = НСтр("en='Request No.';ru='Заявка №'") + Документ.Номер;
			Иначе
				ПредставлениеПоля = НСтр("en='Rep. list №';ru='Рем. лист №'") + Документ.Номер;
			КонецЕсли;
		ИначеЕсли ТекПредст.Имя = "МодельТС" Тогда
			ПредставлениеПоля = Документ.ТС.Модель;
		ИначеЕсли ТекПредст.Имя = "ТС" Тогда
			ПредставлениеПоля = Строка(Документ.ТС);
		ИначеЕсли ТекПредст.Имя = "Мастер" Тогда
			ПредставлениеПоля = Документ.Мастер;
		КонецЕсли;
		
		Рез = Рез + ПредставлениеПоля + "; ";
	КонецЦикла;
	
	Если Рез <> "" Тогда
		Рез = Лев(Рез, СтрДлина(Рез)-2);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

&НаСервере
Функция ПолучитьГрафик(График, Знач НачалоГрафика, Знач ОкончаниеГрафика)
	ТаблицаГрафика = Новый ТаблицаЗначений;
	ТаблицаГрафика.Колонки.Добавить("Дата",					 Новый ОписаниеТипов("Дата",, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаГрафика.Колонки.Добавить("НачалоРабочегоВремени", Новый ОписаниеТипов("Дата",, Новый КвалификаторыДаты(ЧастиДаты.Время)));
	ТаблицаГрафика.Колонки.Добавить("КонецРабочегоВремени",  Новый ОписаниеТипов("Дата",, Новый КвалификаторыДаты(ЧастиДаты.Время)));
	
	// Проверка корректности параметров
	Если (НЕ ЗначениеЗаполнено(График)) ИЛИ (НЕ ЗначениеЗаполнено(НачалоГрафика))
		ИЛИ (НЕ ЗначениеЗаполнено(ОкончаниеГрафика)) Тогда
		
		Возврат ТаблицаГрафика;
	КонецЕсли;
	
	НачалоГрафика = НачалоДня(НачалоГрафика);
	ОкончаниеГрафика = НачалоДня(ОкончаниеГрафика);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ГрафикиРаботы.СоздатьВТРасписанияРаботыНаПериод(МенеджерВременныхТаблиц, График, НачалоГрафика, ОкончаниеГрафика);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасписанияРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|	РасписанияРаботы.ДатаГрафика КАК ДатаГрафика,
	|	ЕСТЬNULL(РасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ВремяНачала,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ДЕНЬ), ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) = 0
	|			ТОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ДЕНЬ)
	|		ИНАЧЕ ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	КОНЕЦ КАК ВремяОкончания
	|ПОМЕСТИТЬ втРасписаниеРаботы
	|ИЗ
	|	ВТРасписанияРаботы КАК РасписанияРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втРасписаниеРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|	втРасписаниеРаботы.ДатаГрафика КАК Дата,
	|	втРасписаниеРаботы.ВремяНачала КАК ВремяНачала,
	|	втРасписаниеРаботы.ВремяОкончания КАК ВремяОкончания
	|ИЗ
	|	втРасписаниеРаботы КАК втРасписаниеРаботы";
	
	ТаблицаГрафикаВрем = Запрос.Выполнить().Выгрузить();
	Для Каждого ТекСтрокаВрем Из ТаблицаГрафикаВрем Цикл
		НоваяСтрока = ТаблицаГрафика.Добавить();
		НоваяСтрока.Дата = ТекСтрокаВрем.Дата;
		НоваяСтрока.НачалоРабочегоВремени	 = ТекСтрокаВрем.ВремяНачала;
		НоваяСтрока.КонецРабочегоВремени	 = ТекСтрокаВрем.ВремяОкончания;
	КонецЦикла;
	
	Возврат ТаблицаГрафика;
КонецФункции

&НаСервере
Процедура ВывестиДиаграммуСДокументами(СтрокаРодитель, ТекДиаграммаГанта, ТочкаРодительПред = Неопределено)
	// цикл по Цехам
	Для Каждого ВыборкаЦехов Из СтрокаРодитель.Строки Цикл
		
		Если ТочкаРодительПред <> Неопределено И ВыборкаЦехов.Цех = ТочкаРодительПред.Расшифровка Тогда
			ТочкаРодитель = ТочкаРодительПред;
		Иначе
			ТочкаРодитель = ТекДиаграммаГанта.УстановитьТочку(Строка(ВыборкаЦехов.Цех), ?(ТочкаРодительПред = Неопределено, Неопределено, ТочкаРодительПред.Значение));
			ТочкаРодитель.ПриоритетЦвета	 = Истина;
			ТочкаРодитель.Цвет				 = РаскраскаДиаграммы.Цех;
			Если ПоказыватьКоллизии Тогда
				ТочкаРодитель.ДополнительныйЦвет = РаскраскаДиаграммы.ЦехПерегружен;
			Иначе
				ТочкаРодитель.ДополнительныйЦвет = РаскраскаДиаграммы.Цех;
			КонецЕсли;
			ТочкаРодитель.Расшифровка		 = ВыборкаЦехов.Цех;
			//ТочкаРодитель.Картинка			 = КартинкаЦеха;
		КонецЕсли;
		
		ВывестиДиаграммуСДокументами(ВыборкаЦехов, ТекДиаграммаГанта, ТочкаРодитель);
		
		Если ВыборкаЦехов.Документ = NULL ИЛИ НЕ ЗначениеЗаполнено(ВыборкаЦехов.Документ) Тогда 
			ТекСостояниеТочки = СостояниеОтображенияЦехов.НайтиПоЗначению(ВыборкаЦехов.Цех);
			Если ТекСостояниеТочки <> Неопределено И ТекСостояниеТочки.Пометка Тогда
				ТекДиаграммаГанта.РазвернутьТочку(ТочкаРодитель, Ложь);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ТекДерево = Новый ДеревоЗначений;
		ТекДерево.Колонки.Добавить("Начало", Новый ОписаниеТипов("Дата"));
		ТекДерево.Колонки.Добавить("Конец",  Новый ОписаниеТипов("Дата"));
		ТекДерево.Колонки.Добавить("Документ");
		
		// цикл по Документам
		Для Каждого ВыборкаОбъектов Из ВыборкаЦехов.Строки Цикл
			Если ПоказыватьДокументы Тогда
				Точка = ТекДиаграммаГанта.УстановитьТочку(ДиаграммаГанта_ПредставлениеДокумента(ВыборкаОбъектов.Документ), ТочкаРодитель.Значение);
				Точка.ПриоритетЦвета = Истина;
				Точка.ДополнительныйЦвет = Новый Цвет(255, 0, 0);
				Точка.Цвет = РаскраскаДиаграммы.Документ;
				Точка.Расшифровка = ВыборкаОбъектов.Документ;
				//Точка.Картинка = КартинкаЗаявки;
				
				Значение = ТекДиаграммаГанта.ПолучитьЗначение(Точка, СерияЦех);
			КонецЕсли;
			
			ЗначениеРодителя = ТекДиаграммаГанта.ПолучитьЗначение(ТочкаРодитель, СерияЦех);
			
			Работа = ТекДерево.Строки.Добавить();
			Работа.Начало = ВыборкаОбъектов.Документ.ДатаНачала;
			Работа.Конец = ВыборкаОбъектов.Документ.ДатаОкончания;
			Работа.Документ = ВыборкаОбъектов.Документ;
			
			ДатаНачалаПростоя = ВыборкаОбъектов.Документ.ДатаНачала;
			
			Если ЗначениеЗаполнено(ВыборкаЦехов.Цех.ГрафикРаботы) Тогда
				ГрафикЦеха = ПолучитьГрафик(ВыборкаЦехов.Цех.ГрафикРаботы, ВыборкаОбъектов.Документ.ДатаНачала, ВыборкаОбъектов.Документ.ДатаОкончания);
				Для Каждого ВыборкаДетали Из ГрафикЦеха Цикл
					Если ВыборкаДетали.КонецРабочегоВремени = '00010101' Тогда
						Продолжить;
					КонецЕсли;
					
					НачалоРабочегоПериода = ВыборкаДетали.Дата + (ВыборкаДетали.НачалоРабочегоВремени - '00010101');
					КонецРабочегоПериода = ВыборкаДетали.Дата + (ВыборкаДетали.КонецРабочегоВремени - '00010101');
					
					// Отсекаем лишние интервалы (рабочие интервалы в тот же день, на по времени не входящие в интервал документа)
					Если КонецРабочегоПериода <= ВыборкаОбъектов.Документ.ДатаНачала
						ИЛИ НачалоРабочегоПериода >= ВыборкаОбъектов.Документ.ДатаОкончания Тогда
						Продолжить;
					КонецЕсли;
					
					НачалоРабочегоПериода = Макс(НачалоРабочегоПериода, ВыборкаОбъектов.Документ.ДатаНачала);
					КонецРабочегоПериода = Мин(КонецРабочегоПериода, ВыборкаОбъектов.Документ.ДатаОкончания);
					
					Если ПоказыватьДокументы Тогда
						// Рабочие интервалы
						НовыйИнтервал = Значение.Добавить();
						НовыйИнтервал.Начало = НачалоРабочегоПериода;
						НовыйИнтервал.Конец  = КонецРабочегоПериода;
						НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
						НовыйИнтервал.Текст = ДиаграммаГанта_ПредставлениеДокумента(ВыборкаОбъектов.Документ) + Символы.ПС +
						Формат(ВыборкаОбъектов.Документ.ДатаНачала, "ДФ='dd.MM.yyyy (HH:mm)'") + " - " + Формат(ВыборкаОбъектов.Документ.ДатаОкончания, "ДФ='dd.MM.yyyy (HH:mm)'")
						+ Символы.ПС + ВыборкаОбъектов.Документ.Мастер;
						
						// Интервал простоя работы
						НовыйИнтервал = Значение.Добавить();
						НовыйИнтервал.Начало = ДатаНачалаПростоя;
						НовыйИнтервал.Конец  = НачалоРабочегоПериода;
						НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
						НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
					КонецЕсли;
					
					Если ПоказыватьКоллизии Тогда
						НовыйИнтервал = ЗначениеРодителя.Добавить();
						НовыйИнтервал.Начало = НачалоРабочегоПериода;
						НовыйИнтервал.Конец  = КонецРабочегоПериода;
						НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
						
						// Интервал простоя работы
						НовыйИнтервал = ЗначениеРодителя.Добавить();
						НовыйИнтервал.Начало = ДатаНачалаПростоя;
						НовыйИнтервал.Конец  = НачалоРабочегоПериода;
						НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
						НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
					Иначе
						Интервал = Работа.Строки.Добавить();
						Интервал.Начало = НачалоРабочегоПериода;
						Интервал.Конец = КонецРабочегоПериода;
					КонецЕсли;
					
					ДатаНачалаПростоя = КонецРабочегоПериода;
				КонецЦикла;
			КонецЕсли;
			
			Если ПоказыватьДокументы Тогда
				НовыйИнтервал = Значение.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаПростоя;
				НовыйИнтервал.Конец  = ВыборкаОбъектов.Документ.ДатаОкончания;
				НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
				НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
			КонецЕсли;
			
			Если ПоказыватьКоллизии Тогда
				НовыйИнтервал = ЗначениеРодителя.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаПростоя;
				НовыйИнтервал.Конец  = ВыборкаОбъектов.Документ.ДатаОкончания;
				НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
				НовыйИнтервал.Расшифровка = ВыборкаОбъектов.Документ;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ПоказыватьКоллизии И ТекДерево.Строки.Количество() > 0 Тогда
			ТекДерево.Строки.Сортировать("Начало ВОЗР, Конец УБЫВ", Истина);
			
			ДатаНачалаПростоя = ТекДерево.Строки[0].Начало;
			ТекДатаКон = ДатаНачалаПростоя;
			Для Каждого ТекОбъект Из ТекДерево.Строки Цикл
				Если ТекОбъект.Конец>ТекДатаКон Тогда
					Если ТекОбъект.Начало>ТекДатаКон Тогда
						НовыйИнтервал = ЗначениеРодителя.Добавить();
						НовыйИнтервал.Начало = ДатаНачалаПростоя;
						НовыйИнтервал.Конец  = ТекДатаКон;
						НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
						НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
						ДатаНачалаПростоя	 = ТекОбъект.Начало;
						
						Для Каждого ТекИнтервал Из ТекОбъект.Строки Цикл
							НовыйИнтервал = ЗначениеРодителя.Добавить();
							НовыйИнтервал.Начало = ТекИнтервал.Начало;
							НовыйИнтервал.Конец  = ТекИнтервал.Конец;
							НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
							
							// Интервал простоя работы
							НовыйИнтервал = ЗначениеРодителя.Добавить();
							НовыйИнтервал.Начало = ДатаНачалаПростоя;
							НовыйИнтервал.Конец  = ТекИнтервал.Начало;
							НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
							НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
							
							ДатаНачалаПростоя	 = ТекИнтервал.Конец;
						КонецЦикла;
					Иначе
						Для Каждого ТекИнтервал Из ТекОбъект.Строки Цикл
							Если ДатаНачалаПростоя>ТекИнтервал.Начало Тогда Продолжить; КонецЕсли;
							НовыйИнтервал = ЗначениеРодителя.Добавить();
							НовыйИнтервал.Начало = ТекИнтервал.Начало;
							НовыйИнтервал.Конец  = ТекИнтервал.Конец;
							НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
							
							// Интервал простоя работы
							НовыйИнтервал = ЗначениеРодителя.Добавить();
							НовыйИнтервал.Начало = ДатаНачалаПростоя;
							НовыйИнтервал.Конец  = ТекИнтервал.Начало;
							НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
							НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
							
							ДатаНачалаПростоя	 = ТекИнтервал.Конец;
						КонецЦикла;
					КонецЕсли;
					
					ТекДатаКон=ТекОбъект.Конец;
				КонецЕсли;
			КонецЦикла;
			НовыйИнтервал = ЗначениеРодителя.Добавить();
			НовыйИнтервал.Начало = ДатаНачалаПростоя;
			НовыйИнтервал.Конец  = ТекДатаКон;
			НовыйИнтервал.Цвет	 = РаскраскаДиаграммы.ЦехПерерыв;
			НовыйИнтервал.Расшифровка = ТекОбъект.Документ;
		КонецЕсли;
		
		ТекСостояниеТочки = СостояниеОтображенияЦехов.НайтиПоЗначению(ВыборкаЦехов.Цех);
		Если ТекСостояниеТочки <> Неопределено И ТекСостояниеТочки.Пометка Тогда
			ТекДиаграммаГанта.РазвернутьТочку(ТочкаРодитель, Ложь);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
