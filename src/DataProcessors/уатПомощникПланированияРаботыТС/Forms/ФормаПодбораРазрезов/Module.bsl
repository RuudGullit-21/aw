
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;

	Параметры.Свойство("НаименованиеСправочника", НаименованиеСправочника);
	Параметры.Свойство("Группа",                  Группа);
	Параметры.Свойство("Справочник",              Справочник);
	
	Если НЕ Справочник 
		ИЛИ Группа Тогда
		Элементы.НастроитьОтборы.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Список") Тогда
		Если ТипЗнч(Параметры.Список) = Тип("СписокЗначений") Тогда
			Список = Параметры.Список;
		Иначе
			Список.Добавить(Параметры.Список);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элемент.ТекущийЭлемент.ВыбиратьТип         = Ложь; 
	
	Если Справочник Тогда
		Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка." + НаименованиеСправочника);
	Иначе
		Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов("ПеречислениеСсылка." + НаименованиеСправочника);
	КонецЕсли;
	Элемент.ТекущийЭлемент.ВыборГруппИЭлементов =
		?(Группа, ГруппыИЭлементы.Группы, ГруппыИЭлементы.Элементы);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	УдалитьДубли();
	Закрыть(Список);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборы(Команда)

	Если Список.Количество() > 0 Тогда
		Если Список.Количество() = 1 
			И НЕ ЗначениеЗаполнено(Список[0].Значение) Тогда
			Список.Очистить();
			НастроитьОтборыПродолжение();
			Возврат;
		КонецЕсли;
		
		ТекстНСТР = НСтр("en='Before filling tabular section will be cleared! Continue?';ru='Перед заполнением список будет очищен! Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("НастроитьОтборыЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	НастроитьОтборыПродолжение();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УдалитьДубли()
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Ссылка");
	Для Каждого ТекСтрока Из Список Цикл 
		Если ТекСтрока.Значение <> Неопределено Тогда
			Строка = Таблица.Добавить();
			Строка.Ссылка = ТекСтрока.Значение;
		КонецЕсли;
	КонецЦикла;
	Таблица.Свернуть("Ссылка");
	Список.ЗагрузитьЗначения(Таблица.ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

&НаКлиенте
Процедура РасширенноеЗаполнениеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из РезультатЗакрытия Цикл
		Список.Добавить(ТекСтрока);
	КонецЦИкла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборыПродолжение()

	ОткрытьФорму(
		"Обработка.уатПомощникПланированияРаботыТС.Форма.ФормаОтборовРазрезов", 
		Новый Структура("ИсточникПодбора, НаименованиеСправочника",
		"ФормаПодбораРазрезов_" + НаименованиеСправочника, НаименованиеСправочника), 
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("РасширенноеЗаполнениеЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Список.Очистить();
	КонецЕсли;
	
	НастроитьОтборыПродолжение();
	
КонецПроцедуры

#КонецОбласти
