
&НаКлиенте
Перем ДополнительныеПараметры;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	ПолучитьОборудованиеРМНаСервере();
	ТекущийПЛУ = 1;
	
	ШтрихкодEAN8 = "46120441";
	ШтрихкодEAN13 = "2900001462105";
	ШтрихкодCODE39 = "2PMP-468-PJM";
	ШтрихкодQR = "http://www.1c.ru";
	
	ПечатьШтрихкодаEAN8 = Истина;
	ПечатьШтрихкодаEAN13 = Истина;
	ПечатьШтрихкодаCODE39 = Истина;
	ПечатьШтрихкодаQR = Истина;
	
	Отправляет1СEmail = Ложь;
	Отправляет1СSMS   = Ложь;
	
	НефискальнаяКвитанция = Ложь;
	
	ТипЭквайринговойОперации = "AuthorizeSales";
	ОжидатьПолучениеОтветаОИСМ = Истина;
	
#Если ВебКлиент Тогда
	Элементы.ПечатьПакетно.Видимость = Ложь;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование" Тогда
		// Отладочное
		Лог = "Получено внешнее событие
		      |Источник = " + Источник + "
		      |Событие = "  + ИмяСобытия;
		ОбновитьОтображениеДанных();
		
		Если ИмяСобытия = "ScanData" Тогда
			
			ПолученШтрихкод(Параметр[0]);
			
		ИначеЕсли ИмяСобытия = "ScanDataBase64" Тогда
			
			ПолученШтрихкод(Параметр[0], Истина);
			
		ИначеЕсли ИмяСобытия = "TracksData" Тогда                                   
			
			Если Параметр[1] = Неопределено Тогда
				ПолученКодКарты(Параметр[0], Параметр[0]);
			Иначе
				ПолученКодКарты(Параметр[0], Параметр[1][1]);
			КонецЕсли;
			
		ИначеЕсли ИмяСобытия = "RFID" Тогда
			
			Для Каждого Элемент Из Параметр Цикл
				МеткаRFID = МеткиRFID.Добавить();
				ЗаполнитьЗначенияСвойств(МеткаRFID, Элемент);
			КонецЦикла;
				
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолученШтрихкод(Штрихкод, ШтрихкодВBase64 = Ложь)
	
	МаркировкаGTIN = "";
	МаркировкаEAN = "";
	МаркировкаСерийныйНомер = "";
	МаркировкаКодПроверки = "";
	
	Лог = Формат(МенеджерОборудованияКлиент.ДатаСеанса(),"ДЛФ=T") + " Имя команды: ПолученШтрихкод" + Символы.ПС;
	ОтветОтУстройства = Лог + ОтветОтУстройства;
	
	Если ШтрихкодВBase64 Тогда
		ШтрихкодBase64 = Штрихкод;
		ДанныеСканера = МенеджерОборудованияКлиентСервер.Base64ВШтрихкод(Штрихкод);
	Иначе
		ШтрихкодBase64 = МенеджерОборудованияКлиентСервер.ШтрихкодВBase64(Штрихкод);
		ДанныеСканера = Штрихкод; 
	КонецЕсли;
	
	ТипШтрихкода  = МенеджерОборудованияКлиентСервер.ОпределитьТипШтрихкода(ДанныеСканера);
	
	ОбновитьОтображениеДанных();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ПолученКодКарты(КодКарты, ДанныеДорожек)

	// Пишем лог
	Лог = Формат(МенеджерОборудованияКлиент.ДатаСеанса(), "ДЛФ=T") + " Имя команды: ПолученКодКарты" + Символы.ПС;
	Лог = Лог + "Код карты: " + КодКарты + Символы.ПС;
	Если ТипЗнч(ДанныеДорожек) = Тип("Массив") Тогда
		Для НомерДорожки = 1 По ДанныеДорожек.Количество() Цикл
			НоваяСтрока = ТаблицаЗагрузкиИзТСД.Добавить();
			Лог = Лог + "ДанныеДорожки(" + НомерДорожки + "): " + ДанныеДорожек[НомерДорожки - 1] + Символы.ПС;
		КонецЦикла;
		// Выводим считанные данные
		Дорожка1 = ?(ДанныеДорожек.Количество() > 0, ДанныеДорожек[0], "");
		Дорожка2 = ?(ДанныеДорожек.Количество() > 1, ДанныеДорожек[1], "");
		Дорожка3 = ?(ДанныеДорожек.Количество() > 2, ДанныеДорожек[2], "");
		
	ИначеЕсли ТипЗнч(ДанныеДорожек) = Тип("Строка") Тогда
		Дорожка1 = ДанныеДорожек;
		Лог = Лог + "ДанныеДорожек: " + ДанныеДорожек + Символы.ПС;
	КонецЕсли;
	
	Лог = Лог + "========================================" + Символы.ПС;
	ОтветОтУстройства = Лог + ОтветОтУстройства;
	
	ОбновитьОтображениеДанных();

	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ДанныеСканераПриИзменении(Элемент)
	
	ТипШтрихкода  = МенеджерОборудованияКлиентСервер.ОпределитьТипШтрихкода(ДанныеСканера);
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДополнительныеПараметры = МенеджерОборудованияКлиентСервер.ДополнительныеПараметрыОперации(Истина);
	ПО_ОставлятьПодключенными = ДополнительныеПараметры.ОставитьПодключенным;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МенеджерОборудованияКлиент.НачатьОтключениеВсегоОборудования();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииНаСервере

&НаСервере
Процедура ПолучитьОборудованиеРМНаСервере()

	Отбор = Новый Структура("РабочееМесто", РабочееМесто);
	ОборудованиеРМ = Справочники.ПодключаемоеОборудование.Выбрать(,, Отбор);
	Пока ОборудованиеРМ.Следующий() Цикл
		Если НЕ ОборудованиеРМ.УстройствоИспользуется Или ОборудованиеРМ.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода Тогда
			СканерШК = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
			ККТ = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных Тогда
			ТСД = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя Тогда
			Дисплей = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт Тогда
			СчитывательМК = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СчитывательRFID Тогда
			СчитывательRFID = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы Тогда
			Весы = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал Тогда
			ЭТ = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток Тогда
			ВесыСПечатьюЭтикеток = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков Тогда
			ПринтерЧеков = ОборудованиеРМ.Ссылка;
		ИначеЕсли ОборудованиеРМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПринтерЭтикеток Тогда
			ПринтерЭтикеток = ОборудованиеРМ.Ссылка;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОчиститьКэш()
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьТекущееТО(ИмяТипа)
	Если ИмяТипа = "ККТ" Тогда
		Оборудование = ККТ;
	ИначеЕсли ИмяТипа = "ТСД" Тогда
		Оборудование = ТСД;
	ИначеЕсли ИмяТипа = "Дисплей" Тогда
		Оборудование = Дисплей;
	ИначеЕсли ИмяТипа = "Весы" Тогда
		Оборудование = Весы;
	ИначеЕсли ИмяТипа = "ЭТ" Тогда
		Оборудование = ЭТ;
	ИначеЕсли ИмяТипа = "Сканер" Тогда
		Оборудование = СканерШК;
	ИначеЕсли ИмяТипа = "RFID" Тогда
		Оборудование = СчитывательRFID;
	ИначеЕсли ИмяТипа = "СМК" Тогда
		Оборудование = СчитывательМК;
	ИначеЕсли ИмяТипа = "ВесыСПечатьюЭтикеток" Тогда
		Оборудование = ВесыСПечатьюЭтикеток;
	ИначеЕсли ИмяТипа = "ПринтерЧеков" Тогда
		Оборудование = ПринтерЧеков;
	ИначеЕсли ИмяТипа = "ПЭ" Тогда
		Оборудование = ПринтерЭтикеток;
	КонецЕсли;
	Возврат Оборудование;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)

	// Заполняем оборудование рабочего места.
	ПолучитьОборудованиеРМНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьУстройствоВыполнить_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	// Пишем лог
	Лог = Формат(МенеджерОборудованияКлиент.ДатаСеанса(),"ДЛФ=T") + " Имя команды: Подключить - Завершение" + Символы.ПС;
	ОписаниеОшибки = ?(РезультатВыполнения.Результат, "Команда выполнена успешно!", РезультатВыполнения.ОписаниеОшибки);
	
	// Пишем лог
	Лог = Лог + Формат(МенеджерОборудованияКлиент.ДатаСеанса(),"ДЛФ=T") + " " + ОписаниеОшибки + Символы.ПС +
	      "========================================" + Символы.ПС;
	ОтветОтУстройства = Лог + ОтветОтУстройства;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьУстройствоВыполнить(Команда)

	// Получаем имя типу оборудования.
	ИмяТипа = СтрЗаменить(ТекущийЭлемент.Имя, "Подключить", "");
	// Получаем оборудование по типу.
	Оборудование = ПолучитьТекущееТО(ИмяТипа);
	Если Оборудование.Пустая() Тогда
		ТекстСообщения = НСтр("ru='Оборудование не выбрано.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьУстройствоВыполнить_Завершение", ЭтотОбъект);                                 
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоИдентификатору(ОповещенияПриПодключении, УникальныйИдентификатор, Оборудование);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУстройствоВыполнить_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	// Пишем лог
	Лог = Формат(МенеджерОборудованияКлиент.ДатаСеанса(),"ДЛФ=T") + " Имя команды: Отключить - Завершение" + Символы.ПС;
	ОписаниеОшибки = ?(РезультатВыполнения.Результат, "Команда выполнена успешно!", РезультатВыполнения.ОписаниеОшибки);
	
	Лог = Лог + Формат(МенеджерОборудованияКлиент.ДатаСеанса(),"ДЛФ=T") + " " + ОписаниеОшибки + Символы.ПС +
	      "========================================" + Символы.ПС;
	ОтветОтУстройства = Лог + ОтветОтУстройства;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУстройствоВыполнить(Команда)
	
	// Получаем имя типу оборудования.
	ИмяТипа = СтрЗаменить(ТекущийЭлемент.Имя,"Отключить","");
	// Получаем оборудование по типу.
	Оборудование = ПолучитьТекущееТО(ИмяТипа);
	Если Оборудование.Пустая() Тогда
		ТекстСообщения = НСтр("ru='Оборудование не выбрано.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ОтключитьУстройствоВыполнить_Завершение", ЭтотОбъект);                                 
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоИдентификатору(ОповещенияПриПодключении, УникальныйИдентификатор, Оборудование);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьУстройствоВыполнить(Команда)
	
	// Получаем имя типу оборудования.
	ИмяТипа = СтрЗаменить(ТекущийЭлемент.Имя,"Настроить","");
	// Получаем оборудование по типу.
	Оборудование = ПолучитьТекущееТО(ИмяТипа);
	Если Оборудование.Пустая() Тогда
		ТекстСообщения = НСтр("ru='Оборудование не выбрано.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(Оборудование);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКэшВыполнить()
	
	ОчиститьКэш();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеПодключенноеОборудованиеВыполнить()
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудования(Неопределено, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройстваЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	// Пишем лог
	Лог = Формат(МенеджерОборудованияКлиентПереопределяемый.ДатаСеанса(),"ДЛФ=T") + " Имя команды: ТестУстройства - Завершение" + Символы.ПС;
	ОписаниеОшибки = ?(РезультатВыполнения.Результат, "Команда выполнена успешно!", РезультатВыполнения.ОписаниеОшибки);
	
	ДополнительноеОписание = "";
	Если РезультатВыполнения.Результат Тогда
		ДополнительноеОписание = РезультатВыполнения.РезультатВыполнения;
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен. %ДополнительноеОписание%'");
	Иначе
		ТекстСообщения = НСтр("ru = 'Тест не пройден. %ДополнительноеОписание%'");
	КонецЕсли;
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание), "", ДополнительноеОписание));
	
	// Пишем лог
	Лог = Лог + Формат(МенеджерОборудованияКлиентПереопределяемый.ДатаСеанса(),"ДЛФ=T") + " " + ТекстСообщения + Символы.ПС;
	ОтветОтУстройства = Лог + ОтветОтУстройства;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестВыполнить(Команда)
	
	// Получаем имя типу оборудования.
	ИмяТипа = СтрЗаменить(ТекущийЭлемент.Имя,"Тест","");
	// Получаем оборудование по типу.
	Оборудование = ПолучитьТекущееТО(ИмяТипа);
	Если Оборудование.Пустая() Тогда
		ТекстСообщения = НСтр("ru='Оборудование не выбрано.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыУстройства = МенеджерОборудованияВызовСервера.ПараметрыУстройства(Оборудование);
	Если НЕ ПараметрыУстройства.Количество() > 0  Тогда
		ОписаниеОшибки = НСтр("ru='Не настроены параметры устройства.
		|Для корректной работы устройства необходимо задать параметры его работы.
		|Сделать это можно при помощи формы ""Настройка параметров"" модели
		|подключаемого оборудования в форме ""Подключение и настройка оборудования"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ТестУстройстваЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьТестУстройства(Оповещение, Оборудование, ПараметрыУстройства);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормыУВ

&НаКлиенте
Процедура УВ_ВыборКодаВидаНоменклатурнойКлассификации(Команда)
	Заглушка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УВ_РазобратьШтрихкод(Команда)
	Заглушка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УВ_РасшифроватьQRКодЧекаККТ(Команда)
	Заглушка = Истина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормыRFID

&НаКлиенте
Процедура RFID_ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Операция выполнена успешно:'") + РезультатВыполнения.ИдентификаторУстройства);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура RFID_ОткрытьСессию(Команда)
	
	Если Не ЗначениеЗаполнено(СчитывательRFID) Тогда
		ТекстСообщения = НСтр("ru='Не выбран считыватель RFID.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещениеПриЗавершении = Новый ОписаниеОповещения("RFID_ОперацияЗавершение", ЭтотОбъект);
	ОборудованиеСчитывательRFIDКлиент.НачатьОткрытиеСессииСчитывателяRFID(ОписаниеОповещениеПриЗавершении, УникальныйИдентификатор, СчитывательRFID);
	
КонецПроцедуры

&НаКлиенте
Процедура RFID_ЗакрытьСессию(Команда)
	
	Если Не ЗначениеЗаполнено(СчитывательRFID) Тогда
		ТекстСообщения = НСтр("ru='Не выбран считыватель RFID.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещениеПриЗавершении = Новый ОписаниеОповещения("RFID_ОперацияЗавершение", ЭтотОбъект);
	ОборудованиеСчитывательRFIDКлиент.НачатьЗакрытиеСессииСчитывателяRFID(ОписаниеОповещениеПриЗавершении, УникальныйИдентификатор, СчитывательRFID);

КонецПроцедуры

&НаКлиенте
Процедура RFID_ЗаписатьВМеткуEPC(Команда)
	
	Если Не ЗначениеЗаполнено(СчитывательRFID) Тогда
		ТекстСообщения = НСтр("ru='Не выбран считыватель RFID.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТекущаяСрока = Элементы.МеткиRFID.ТекущиеДанные;
	Если ТекущаяСрока <> Неопределено Тогда
		ПараметрыЗаписи = ОборудованиеСчитывательRFIDКлиент.ПараметрыЗаписиМеткиRFID();
		ПараметрыЗаписи.TID = ТекущаяСрока.TID;
		ПараметрыЗаписи.EPC = ТекущаяСрока.EPC;
		ПараметрыЗаписи.БанкПамяти = "EPC";
		ПараметрыЗаписи.Данные = МенеджерОборудованияКлиентСервер.СформироватьДанныеSGTIN96(ТекущаяСрока.GTIN, ТекущаяСрока.СерийныйНомер);
		ОписаниеОповещениеПриЗавершении = Новый ОписаниеОповещения("RFID_ОперацияЗавершение", ЭтотОбъект);
		ОборудованиеСчитывательRFIDКлиент.НачатьЗаписьДанныхВМеткуRFID(ОписаниеОповещениеПриЗавершении, УникальныйИдентификатор, СчитывательRFID, ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура RFID_ЗаписатьВМеткуGTINSerial(Команда)
	
	Если Не ЗначениеЗаполнено(СчитывательRFID) Тогда
		ТекстСообщения = НСтр("ru='Не выбран считыватель RFID.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТекущаяСрока = Элементы.МеткиRFID.ТекущиеДанные;
	Если ТекущаяСрока <> Неопределено Тогда
		ПараметрыЗаписи = ОборудованиеСчитывательRFIDКлиент.ПараметрыЗаписиМеткиRFID();
		ПараметрыЗаписи.TID = ТекущаяСрока.TID;
		ПараметрыЗаписи.EPC = ТекущаяСрока.EPC;
		ПараметрыЗаписи.БанкПамяти = "EPC";
		ПараметрыЗаписи.Данные = МенеджерОборудованияКлиентСервер.СформироватьДанныеSGTIN96(ТекущаяСрока.GTIN, ТекущаяСрока.СерийныйНомер);
		ОписаниеОповещениеПриЗавершении = Новый ОписаниеОповещения("RFID_ОперацияЗавершение", ЭтотОбъект);
		ОборудованиеСчитывательRFIDКлиент.НачатьЗаписьДанныхВМеткуRFID(ОписаниеОповещениеПриЗавершении, УникальныйИдентификатор, СчитывательRFID, ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура RFID_ЗаписатьВМеткуUserMemory(Команда)
	
	Если Не ЗначениеЗаполнено(СчитывательRFID) Тогда
		ТекстСообщения = НСтр("ru='Не выбран считыватель RFID.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТекущаяСрока = Элементы.МеткиRFID.ТекущиеДанные;
	Если ТекущаяСрока <> Неопределено Тогда
		ПараметрыЗаписи = ОборудованиеСчитывательRFIDКлиент.ПараметрыЗаписиМеткиRFID();
		ПараметрыЗаписи.TID = ТекущаяСрока.TID;
		ПараметрыЗаписи.EPC = ТекущаяСрока.EPC;
		ПараметрыЗаписи.БанкПамяти = "USER";
		ПараметрыЗаписи.Данные = МенеджерОборудованияКлиентСервер.ПреобразоватьСтрокуВHEX(ТекущаяСрока.UserMemory);
		ОписаниеОповещениеПриЗавершении = Новый ОписаниеОповещения("RFID_ОперацияЗавершение", ЭтотОбъект);
		ОборудованиеСчитывательRFIDКлиент.НачатьЗаписьДанныхВМеткуRFID(ОписаниеОповещениеПриЗавершении, УникальныйИдентификатор, СчитывательRFID, ПараметрыЗаписи);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура RFID_ГенерироватьСерийныйНомер(Команда)
	
	ТекущаяСрока = Элементы.МеткиRFID.ТекущиеДанные;
	Если ТекущаяСрока <> Неопределено Тогда
		TID = ТекущаяСрока.TID;
		EPC = ТекущаяСрока.EPC;
		
		РезультатВыполнения = МенеджерОборудованияКлиентСервер.ПолучитьСерийныйНомерПоTID(TID, EPC);
		Если РезультатВыполнения.Результат Тогда
			ТекущаяСрока.СерийныйНомер = Формат(РезультатВыполнения.СерийныйНомер, "ЧВН=; ЧГ=");
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
