
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Считывает одну строку файла обмена и добавляет позицию номенклатуры в дерево
Процедура ДобавитьСтрокуФайлаВТаблицу(СтрокаОбмена, флОтборТСУстановлен, тблОтборТС, ДопПараметры)
	
	Если ПустаяСтрока(СтрокаОбмена) Тогда
		Возврат;
	КонецЕсли; 
	
	// Формат строки по умолчанию:
	Формат_строки_по_умолчанию = "Дата Время ТС Лат Лон Скорость Пункт Пробег РасходТоплива УровеньТоплива";
		
	// обрезаем кавычки и добавляем справа доп. разделитель
	ОригинальнаяСтрокаОбмена = СтрокаОбмена;
	СтрокаОбмена = СтрокаОбмена + ДопПараметры.Разделитель;//Символы.Таб;
	
	// считаем поля из строки
	списПодстрокиПоля = Новый СписокЗначений; //массив полей, выделенных из строки
	Пока Истина Цикл
		НомРазделителя = Найти(СтрокаОбмена, ДопПараметры.Разделитель); //Символы.Таб);
		Если НомРазделителя = 0 Тогда
			Прервать;
		КонецЕсли;
		ПодстрокаПоле = Лев(СтрокаОбмена, НомРазделителя - 1);
		
		списПодстрокиПоля.Добавить(ПодстрокаПоле);
		СтрокаОбмена = Сред(СтрокаОбмена, НомРазделителя + 1);
	КонецЦикла;
	
	Если списПодстрокиПоля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Промежуточная структура, необходимая для первоначального заполнения строки без помещения в таблицу данных,
	// для возможности отбора, если он установлен
	ТекСтруктураДанных = Новый Структура("Дата, Время, ТС, ПредставлениеТС, Лат, Лон, Скорость, Пункт, Пробег, РасходТоплива, УровеньТоплива");
	
	НомПоля = 1;
	Для Каждого ТекПодстрока Из списПодстрокиПоля Цикл
		НомПоляНастройка = 1;
		Для Каждого ТекСтрокаПолеНастройка Из ДопПараметры.ПоляФайлаОбмена Цикл //поиск имени поля в таблице настроек
			Если НомПоляНастройка = НомПоля Тогда
				ТекИмяПоля = ТекСтрокаПолеНастройка.Поле;
				Если ТекИмяПоля = "ID в системе мониторинга" Тогда
					ТекСтруктураДанных.ПредставлениеТС = Строка(ТекПодстрока.Значение);
					ТекСтруктураДанных["ТС"] = Справочники.уатТС.НайтиПоРеквизиту("ИДвСистемеНавигации", ТекПодстрока.Значение);
				ИначеЕсли ТекИмяПоля = "Дата" Тогда
					ТекСтруктураДанных[ТекИмяПоля] = Дата(Сред(ТекПодстрока.Значение, 7, 4) + Сред(ТекПодстрока.Значение, 4, 2) + Лев(ТекПодстрока.Значение, 2) + "000000");
				ИначеЕсли ТекИмяПоля = "Время" Тогда
					ТекСтруктураДанных[ТекИмяПоля] = Дата("00010101" + СтрЗаменить(ТекПодстрока.Значение, ":", ""));
				Иначе
					ТекСтруктураДанных[ТекИмяПоля] = Строка(ТекПодстрока.Значение);
				КонецЕсли;
				Прервать;
			КонецЕсли;
			НомПоляНастройка = НомПоляНастройка + 1;
		КонецЦикла;
		
		НомПоля = НомПоля + 1;
	КонецЦикла;
	
	ТекДата = ТекСтруктураДанных.Дата + (ТекСтруктураДанных.Время - '00010101');

	Если ((Не флОтборТСУстановлен) Или тблОтборТС.Найти(ТекСтруктураДанных.ПредставлениеТС, "ИДвСистемеНавигации") <> Неопределено)
		И ТекДата >= ДопПараметры.ДатаНачала И ТекДата <= ДопПараметры.ДатаОкончания Тогда
		НоваяСтрокаДанных = ДопПараметры.ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДанных, ТекСтруктураДанных);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКодировкуТекста(КодировкаФайла)
	
	Если КодировкаФайла = "UTF-8" Тогда 
		Возврат КодировкаТекста.UTF8;
	ИначеЕсли КодировкаФайла = "UTF-16" Тогда 
		Возврат КодировкаТекста.UTF16;
	ИначеЕсли КодировкаФайла = "ANSI" Тогда 
		Возврат КодировкаТекста.ANSI;
	ИначеЕсли КодировкаФайла = "OEM" Тогда 
		Возврат КодировкаТекста.OEM;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ПолучитьКодировкуТекста()

Процедура ЗагрузитьФайлОбмена(ПараметрыЗапуска, АдресХранилища = Неопределено) Экспорт
	
	ЭтоЗагрузкаДанныхРегистра = ПараметрыЗапуска.Свойство("ЭтоЗагрузкаДанныхРегистра")
		И ПараметрыЗапуска.ЭтоЗагрузкаДанныхРегистра;
	
	ТекстОшибки = "";
	Если ЭтоЗагрузкаДанныхРегистра Тогда
		ЗагрузитьТабличныйФайлОбмена(ПараметрыЗапуска, АдресХранилища, ТекстОшибки);
	Иначе
		ЗагрузитьТекстовыйФайлОбмена(ПараметрыЗапуска, АдресХранилища, ТекстОшибки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Если ПараметрыЗапуска.ТаблицаДанных.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru='Не загружены данные из файла. Проверьте настройки загрузки, настройки периода, кодировку и формат файла.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ТаблицаДанных");
	КонецЕсли;
	
	Попытка
		УдалитьФайлы(ПараметрыЗапуска.ИмяВременногоФайлаОбмена);  // Удаляем временный файл обмена
	Исключение 
	КонецПопытки;
	
	СтруктураДанных = ПреобразоватьТаблицуВМассивДляПередачиНаКлиент(ПараметрыЗапуска.ТаблицаДанных);
	
	Если АдресХранилища <> Неопределено Тогда
		ПоместитьВоВременноеХранилище(Новый Структура("ТекстОшибки, ТаблицаДанных", ТекстОшибки, СтруктураДанных), АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьТекстовыйФайлОбмена(ПараметрыЗапуска, АдресХранилища, ТекстОшибки)
	
	// Считаем файл
	ФайлОбменаОбъект = Новый ЧтениеТекста(ПараметрыЗапуска.ИмяВременногоФайлаОбмена, ПолучитьКодировкуТекста(ПараметрыЗапуска.КодировкаФайла));
	
	Попытка
		ТекстДок = Новый ТекстовыйДокумент;
		ТекстДок.Прочитать(ПараметрыЗапуска.ИмяВременногоФайлаОбмена);
		ВсегоСтрок = ТекстДок.КоличествоСтрок();
	Исключение
		ВсегоСтрок = "?";
	КонецПопытки;
	НомСтроки = 1;
	
	СтрокаФайлаОбмена = "";
	Пока Не СтрокаФайлаОбмена = Неопределено Цикл
		СтрокаФайлаОбмена = ФайлОбменаОбъект.ПрочитатьСтроку();
		
		Если (СтрокаФайлаОбмена <> Неопределено) И (НЕ ПустаяСтрока(СокрЛП(СтрокаФайлаОбмена))) Тогда
			// Для каждой строки файла обмена сформируем строку
			СтрокаФайлаОбмена = СокрЛП(СтрокаФайлаОбмена);
			Попытка			
				ДобавитьСтрокуФайлаВТаблицу(СтрокаФайлаОбмена, ПараметрыЗапуска.флОтборТСУстановлен, ПараметрыЗапуска.тблОтборТС, ПараметрыЗапуска);
			Исключение
				ТекстОшибки = НСтр("en='An error occurred while loading data.';ru='Произошла ошибка при загрузке данных.'");
			КонецПопытки;
		КонецЕсли;
		
		ПроцентВыполнения = (НомСтроки/ВсегоСтрок) * 100;
		ПроцентВыполнения = Окр(ПроцентВыполнения,0);
		ДлительныеОперации.СообщитьПрогресс(, НСтр("en='Loading in progress... ';ru='Идет загрузка данных из файла... '") + ПроцентВыполнения + "%");
		
		НомСтроки = НомСтроки + 1;
	КонецЦикла;
	
	ФайлОбменаОбъект.Закрыть();
	
КонецПроцедуры

Процедура ЗагрузитьТабличныйФайлОбмена(ПараметрыЗапуска, АдресХранилища, ТекстОшибки)
	
	ПустаяДата = '00010101';
	
	Попытка
		ДокументДанных = Новый ТабличныйДокумент;
		ДокументДанных.Прочитать(ПараметрыЗапуска.ИмяВременногоФайлаОбмена, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		ДокументДанных = Неопределено;
		ТекстОшибки = НСтр("en='An error occurred while reading the document.';ru='Ошибка при чтении табличного документа.'");
		Возврат;
	КонецПопытки;
	
	Попытка
		ВсегоСтрок = ДокументДанных.ВысотаТаблицы;
		ВсегоКолонок = ДокументДанных.ШиринаТаблицы;
	Исключение
		ДокументДанных = Неопределено;
		ТекстОшибки = НСтр("en='Error while working with the document.';ru='Ошибка при работе с табличным документом.'");
		Возврат;
	КонецПопытки;
	
	СтруктураШапки = ПолучитьСтруктуруШапки(ПараметрыЗапуска.ИмяТаблицы, ПараметрыЗапуска.СоответствиеЗаголовковФайлов);
	
	НомерСтрокиШапки = Неопределено;
		
	Для НомерСтроки = 1 По ВсегоСтрок Цикл 
		Если Не НомерСтрокиШапки = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		
		Для НомерКолонки = 1 По ВсегоКолонок Цикл 
			ТекущееЗначение = НРег(СокрЛП(ДокументДанных.Область("R" + НомерСтроки + "C" + НомерКолонки).Текст));
			
			НомерУстановлен = Ложь;
			Для Каждого ТекКлюч Из СтруктураШапки Цикл 
				Если ТекКлюч.Значение.НомерКолонки <> 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ТекущееЗначение = ТекКлюч.Значение.ЗаголовокВФайле Тогда 
					ТекКлюч.Значение.НомерКолонки = НомерКолонки;
					НомерСтрокиШапки = НомерСтроки;
					НомерУстановлен = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если Не НомерУстановлен Тогда 
				Для Каждого ТекКлюч Из СтруктураШапки Цикл 
					Если ТекКлюч.Значение.НомерКолонки <> 0 Тогда 
						Продолжить;
					КонецЕсли;
					
					Если Лев(ТекущееЗначение, СтрДлина(ТекКлюч.Значение.ЗаголовокВФайле)) = ТекКлюч.Значение.ЗаголовокВФайле Тогда 
						ТекКлюч.Значение.НомерКолонки = НомерКолонки;
						НомерСтрокиШапки = НомерСтроки;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НомерСтрокиШапки = Неопределено Тогда 
		ДокументДанных = Неопределено;
		ТекстОшибки = НСтр("en='Invalid file format';ru='Неверный формат файла'");
		Возврат;
	КонецЕсли;
	
	флНомераКолонокЗаполнены = Ложь;
	Для Каждого ТекКлюч Из СтруктураШапки Цикл 
		Если ЗначениеЗаполнено(ТекКлюч.Значение.НомерКолонки) Тогда 
			флНомераКолонокЗаполнены = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флНомераКолонокЗаполнены Тогда 
		ДокументДанных = Неопределено;
		ТекстОшибки = НСтр("en='Invalid file format';ru='Неверный формат файла'");
		Возврат;
	КонецЕсли;
	
	ПерваяСтрокаДанных = Макс(ПараметрыЗапуска.НомерПервойСтрокиДанных, НомерСтрокиШапки + 1);
	
	Для НомерСтроки = ПерваяСтрокаДанных По ВсегоСтрок Цикл 
		ПрогрессЗагрузки = Окр((НомерСтроки / ВсегоСтрок) * 100, 0);
		ДлительныеОперации.СообщитьПрогресс(, НСтр("en='Loading in progress... ';ru='Идет загрузка данных из файла... '") + ПрогрессЗагрузки + "%");
		
		НоваяСтрока = ПараметрыЗапуска.ТаблицаДанных.Добавить();
		Для Каждого ТекКлюч Из СтруктураШапки Цикл 
			
			Попытка
				НоваяСтрокаКлюч = ТекКлюч.Ключ;
			Исключение
				НоваяСтрокаКлюч = СтрЗаменить(ТекКлюч.Ключ, "_1", "");
			КонецПопытки;
			
			Если ТекКлюч.Ключ = "Период" Тогда
				ТекТипЯчейки = Тип("Дата");
			ИначеЕсли ТекКлюч.Ключ = "ТС" Тогда
				ТекТипЯчейки = Тип("СправочникСсылка.уатТС");
			ИначеЕсли ТекКлюч.Ключ = "Пункт" Тогда
				ТекТипЯчейки = Тип("Строка");
			Иначе
				ТекТипЯчейки = Тип("Число");
			КонецЕсли;
			
			Если ТекКлюч.Значение.НомерКолонки = 0 Тогда 
				Если ЗначениеЗаполнено(ТекКлюч.Значение.ЗначениеПоУмолчанию) Тогда 
					ТекЗначение = ПолучитьЗначениеЯчейки(
						ТекКлюч.Значение.ЗначениеПоУмолчанию,
						ТекТипЯчейки
					);
				Иначе 
					Продолжить;
				КонецЕсли;
			Иначе
				ТекОбласть = "R" + НомерСтроки + "C" + ТекКлюч.Значение.НомерКолонки;
				ТекОбласть = СтрЗаменить(ТекОбласть,Символы.НПП,"");
				ТекОбласть = СтрЗаменить(ТекОбласть," ","");
				ТекЗначение = ПолучитьЗначениеЯчейки(
					ДокументДанных.Область(ТекОбласть),
					ТекТипЯчейки
				);
			КонецЕсли;
			
			Если НоваяСтрокаКлюч = "Период" Тогда
				НоваяСтрока.Дата = НачалоДня(ТекЗначение);
				НоваяСтрока.Время = ПустаяДата + (ТекЗначение - НачалоДня(ТекЗначение));
			Иначе
				НоваяСтрока[НоваяСтрокаКлюч] = ТекЗначение;
			КонецЕсли;
			
		КонецЦикла;
		
		флПустаяСтрока = Истина;
		Для Каждого ТекКлюч Из СтруктураШапки Цикл
			Попытка
				НоваяСтрокаКлюч = НоваяСтрока[ТекКлюч.Ключ];
			Исключение
				Попытка
					НоваяСтрокаКлюч = НоваяСтрока[СтрЗаменить(ТекКлюч.Ключ, "_1", "")];
				Исключение
				КонецПопытки;
			КонецПопытки;
			
			Если ЗначениеЗаполнено(НоваяСтрокаКлюч) Тогда 
				флПустаяСтрока = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ТекДата = НоваяСтрока.Дата + (НоваяСтрока.Время - ПустаяДата);
		Если флПустаяСтрока
			Или ПараметрыЗапуска.флОтборТСУстановлен И ПараметрыЗапуска.тблОтборТС.Найти(НоваяСтрока.ТС, "Ссылка") = Неопределено
			Или ТекДата < ПараметрыЗапуска.ДатаНачала
			Или ТекДата > ПараметрыЗапуска.ДатаОкончания Тогда
			ПараметрыЗапуска.ТаблицаДанных.Удалить(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументДанных = Неопределено;
	
КонецПроцедуры

Функция ПолучитьСтруктуруШапки(Знач ИмяТаблицы, СоответствиеЗаголовковФайлов)
	
	СтруктураШапки = Новый Структура();
	
	Для Каждого ТекСтрока Из СоответствиеЗаголовковФайлов Цикл 
		Если ТекСтрока.ИмяТаблицы = ИмяТаблицы Тогда 
			ДанныеКлюча = Новый Структура();
			ДанныеКлюча.Вставить("НомерКолонки",        0);
			ДанныеКлюча.Вставить("ЗаголовокВФайле",     ТекСтрока.ЗаголовокВФайле);
			ДанныеКлюча.Вставить("ЗначениеПоУмолчанию", ТекСтрока.ЗначениеПоУмолчанию);
			
			Если СтруктураШапки.Свойство(ТекСтрока.ИмяКолонки) Тогда
				СтруктураШапки.Вставить(ТекСтрока.ИмяКолонки + "_1", ДанныеКлюча);
			Иначе
				СтруктураШапки.Вставить(ТекСтрока.ИмяКолонки, ДанныеКлюча);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураШапки;
	
КонецФункции

Функция ПолучитьЗначениеЯчейки(ЯчейкаФайла, ТипЗначения)
		
	Попытка
		Если ТипЗнч(ЯчейкаФайла) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда 
			ТекстЯчейки = ЯчейкаФайла.Текст;
		Иначе 
			ТекстЯчейки = ЯчейкаФайла;
		КонецЕсли;
		
	Исключение
		ТекстЯчейки = "";
	КонецПопытки;
	
	Попытка
		Если ТипЗнч(ЯчейкаФайла) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда 
			ЗначениеЯчейки = ЯчейкаФайла.Значение;
		Иначе 
			ЗначениеЯчейки = ЯчейкаФайла;
		КонецЕсли;
		
	Исключение
		ЗначениеЯчейки = Неопределено;
	КонецПопытки;
	
	Если ТипЗначения = Тип("Число") Тогда 
		Если ЗначениеЯчейки <> Неопределено Тогда
			Попытка
				Возврат ЗначениеЯчейки;
			Исключение
			КонецПопытки;
		КонецЕсли;
	
		Попытка
			Возврат Число(ТекстЯчейки);
		Исключение
			Возврат 0;
		КонецПопытки;
		
		ВызватьИсключение НСтр("en='Invalid cell value';ru='Некорректное значение в ячейке'");
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		Попытка
			Если ЗначениеЯчейки = Неопределено
				И ТипЗнч(ТекстЯчейки) = Тип("Строка") Тогда
				Возврат ПреобразоватьСтрокуВДату(ТекстЯчейки);
			ИначеЕсли ТипЗнч(ЗначениеЯчейки) = Тип("Строка") Тогда 
				Возврат ПреобразоватьСтрокуВДату(ЗначениеЯчейки);
			ИначеЕсли ТипЗнч(ЗначениеЯчейки) = Тип("Число") Тогда 
				Возврат ПреобрабоватьЧислоВДату(ЗначениеЯчейки);
			ИначеЕсли (ЗначениеЯчейки <> Неопределено) Тогда 
				Если ЗначениеЯчейки < Дата('20000101') Тогда
					ЗначениеЯчейки = Дата('00010101') + (ЗначениеЯчейки - НачалоДня(ЗначениеЯчейки));
					Возврат ЗначениеЯчейки;
				Иначе
					Возврат ЗначениеЯчейки;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		Попытка
			Возврат Дата(ТекстЯчейки);
		Исключение
			Возврат ТекстЯчейки;
		КонецПопытки;
		
		ВызватьИсключение НСтр("en='Invalid cell value';ru='Некорректное значение в ячейке'");
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда 
		Возврат СокрЛП(ТекстЯчейки);
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда 
		Возврат ЗначениеЗаполнено(СокрЛП(ТекстЯчейки));
		
	ИначеЕсли ТипЗначения = Тип("СправочникСсылка.уатТС") Тогда
		Возврат Справочники.уатТС.НайтиПоНаименованию(ТекстЯчейки);
	Иначе 
		ВызватьИсключение НСтр("en='Unsupported data type specified';ru='Указан неподдерживаемый тип данных'");
	КонецЕсли;
	
КонецФункции

Функция ПреобразоватьТаблицуВМассивДляПередачиНаКлиент(тбл)
	мсв = Новый Массив;
	
	Для Каждого ТекСтрока Из тбл Цикл
		СтруктураСтроки = Новый Структура();
		Для Каждого ТекКолонка Из тбл.Колонки Цикл
			СтруктураСтроки.Вставить(ТекКолонка.Имя, ТекСтрока[ТекКолонка.Имя]);
		КонецЦикла;
		
		мсв.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат мсв;
КонецФункции

Процедура ЗагрузкаРегистраМестонахождениеGPS(ПараметрыЗапуска, АдресХранилища = Неопределено) Экспорт
	
	ВсегоСтрок = ПараметрыЗапуска.ТаблицаДанных.Количество();
	НомСтроки = 1;
	МассивОшибокПробегаРасхода = Новый Массив();
	МассивОшибокКоординат = Новый Массив();
	
	ЭтоЗагрузкаДанныхРегистра = ПараметрыЗапуска.Свойство("ЭтоЗагрузкаДанныхРегистра")
		И ПараметрыЗапуска.ЭтоЗагрузкаДанныхРегистра;
	
	КоличествоСтрокСНезаполненнымТС = 0;
	Для Каждого ТекСтрока Из ПараметрыЗапуска.ТаблицаДанных Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.ТС) Тогда
			КоличествоСтрокСНезаполненнымТС = КоличествоСтрокСНезаполненнымТС + 1;
		КонецЕсли;
	КонецЦикла;
	Если КоличествоСтрокСНезаполненнымТС > 0 Тогда
		ТекстНСтр = НСтр("en = 'Skipped %1 rows with empty vehicle'; ru = 'Пропущено строк с незаполненным ТС: %1'");
		ТекстОшибки = СтрШаблон(ТекстНСтр, КоличествоСтрокСНезаполненнымТС);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		МассивОшибокКоординат.Добавить(ТекстОшибки);
	КонецЕсли;
	
	Если Не ЭтоЗагрузкаДанныхРегистра Тогда
		Для Каждого ТекСтрока Из ПараметрыЗапуска.ТаблицаДанных Цикл
			Если Не ЗначениеЗаполнено(ТекСтрока.ТС) Тогда
				Продолжить;
			КонецЕсли;
			
			ДатаСтроки = ТекСтрока.Дата + (ТекСтрока.Время - '00010101');
			МенеджерЗаписиМестоположениеGPS = РегистрыСведений.уатПробегРасходПоМониторингу.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписиМестоположениеGPS, ТекСтрока);
			МенеджерЗаписиМестоположениеGPS.Период = ДатаСтроки;
			
			Попытка
				МенеджерЗаписиМестоположениеGPS.Записать();
			Исключение
				ТекстНСтр = СформироватьТекстСообщенияОбОшибке(ТекСтрока, Метаданные.РегистрыСведений.уатПробегРасходПоМониторингу.Представление());
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСтр);
				МассивОшибокКоординат.Добавить(ТекстНСтр);
			КонецПопытки;
			
			ПроцентВыполнения = (НомСтроки/ВсегоСтрок) * 100;
			ПроцентВыполнения = Окр(ПроцентВыполнения,0);
			ДлительныеОперации.СообщитьПрогресс(, НСтр("en='Mileage and consumption loading in progress... ';ru='Идет загрузка пробега и расхода... '") + ПроцентВыполнения + "%");
			
			НомСтроки = НомСтроки + 1;
		КонецЦикла;
	КонецЕсли;
	
	НомСтроки = 1;
	Для Каждого ТекСтрока Из ПараметрыЗапуска.ТаблицаДанных Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.ТС) Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаСтроки = ТекСтрока.Дата + (ТекСтрока.Время - '00010101');
		МенеджерЗаписиКоординатыПоМониторингу = РегистрыСведений.уатКоординатыПоМониторингу.СоздатьМенеджерЗаписи();
		МенеджерЗаписиКоординатыПоМониторингу.Период              = ДатаСтроки;
		МенеджерЗаписиКоординатыПоМониторингу.ТС                  = ТекСтрока.ТС;
		МенеджерЗаписиКоординатыПоМониторингу.Широта              = ТекСтрока.Лат;
		МенеджерЗаписиКоординатыПоМониторингу.Долгота             = ТекСтрока.Лон;
		МенеджерЗаписиКоординатыПоМониторингу.Скорость            = ТекСтрока.Скорость;
		МенеджерЗаписиКоординатыПоМониторингу.ПредставлениеАдреса = ТекСтрока.Пункт;
		МенеджерЗаписиКоординатыПоМониторингу.Курс                = ТекСтрока.Курс;
		
		Попытка
			МенеджерЗаписиКоординатыПоМониторингу.Записать();
		Исключение
			ТекстНСтр = СформироватьТекстСообщенияОбОшибке(ТекСтрока, Метаданные.РегистрыСведений.уатКоординатыПоМониторингу.Представление());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСтр);
			МассивОшибокКоординат.Добавить(ТекстНСтр);
		КонецПопытки;
		
		ПроцентВыполнения = (НомСтроки/ВсегоСтрок) * 100;
		ПроцентВыполнения = Окр(ПроцентВыполнения,0);
		ДлительныеОперации.СообщитьПрогресс(, НСтр("en='Monitoring coordinates loading in progress... ';ru='Идет загрузка координат по мониторингу... '") + ПроцентВыполнения + "%");
		
		НомСтроки = НомСтроки + 1;
	КонецЦикла;
	
	Если АдресХранилища <> Неопределено Тогда
		ПоместитьВоВременноеХранилище(Новый Структура("МассивОшибокПробегаРасхода, МассивОшибокКоординат",МассивОшибокПробегаРасхода, МассивОшибокКоординат), АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

Функция ПреобразоватьСтрокуВДату(Знач ДатаСтрокой)
	
	РазделительДаты = ".";
	флЕстьДата = Не СтрНайти(ДатаСтрокой, РазделительДаты) = 0;
	
	Если Не флЕстьДата Тогда 
		РазделительДаты = "/";
		флЕстьДата = Не СтрНайти(ДатаСтрокой, РазделительДаты) = 0;
	КонецЕсли;
	
	флЕстьВремя   = Не СтрНайти(ДатаСтрокой, ":") = 0;
	флЕстьСекунды = СтрЧислоВхождений(ДатаСтрокой, ":") = 2;
	
	Если Не флЕстьДата И Не флЕстьВремя Тогда 
		Возврат '00010101';
	КонецЕсли;
	
	ДатаСтрокой = СтрЗаменить(ДатаСтрокой, ".", Символы.ПС);
	ДатаСтрокой = СтрЗаменить(ДатаСтрокой, "/", Символы.ПС);
	ДатаСтрокой = СтрЗаменить(ДатаСтрокой, ":", Символы.ПС);
	Пока Найти(ДатаСтрокой, "  ") > 0 Цикл
		ДатаСтрокой = СтрЗаменить(ДатаСтрокой, "  ", " ");
	конеццикла;
	ДатаСтрокой = СтрЗаменить(ДатаСтрокой, " ", Символы.ПС);
	
	НомерГод = ?(флЕстьДата, ?(РазделительДаты = "/", 3, 3), 0);
	НомерМес = ?(флЕстьДата, ?(РазделительДаты = "/", 1, 2), 0);
	НомерДен = ?(флЕстьДата, ?(РазделительДаты = "/", 2, 1), 0);
	НомерЧас = ?(флЕстьВремя, ?(флЕстьДата, 4, 1), 0);
	НомерМин = ?(флЕстьВремя, ?(флЕстьДата, 5, 2), 0);
	НомерСек = ?(флЕстьВремя, ?(флЕстьДата, ?(флЕстьСекунды, 6, 0), ?(флЕстьСекунды, 3, 0)), 0);
	
	Попытка
		Дата1С = Дата(
			?(НомерГод = 0, 1, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерГод))),
			?(НомерМес = 0, 1, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерМес))), 
			?(НомерДен = 0, 1, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерДен))), 
			?(НомерЧас = 0, 0, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерЧас))), 
			?(НомерМин = 0, 0, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерМин))), 
			?(НомерСек = 0, 0, Число(СтрПолучитьСтроку(ДатаСтрокой, НомерСек)))
		);
		
	Исключение
		Дата1С = '00010101';
	КонецПопытки;
	
	Возврат Дата1С;
	
КонецФункции // ПреобразоватьСтрокуВДату()

Функция ПреобрабоватьЧислоВДату(Знач КоличествоДней)
	
	Попытка
		КоличествоЧасов = КоличествоДней * 24;
		
		Часов = Цел(КоличествоЧасов);
		Минут = Окр((КоличествоЧасов - Часов) * 60, 2);
		
		КоличествоСекунд = (Часов * 3600) + (Минут * 60);
		
		Дата1С = '00010101' + КоличествоСекунд;
		
	Исключение
		Дата1С = '00010101';
	КонецПопытки;
	
	Возврат Дата1С;
	
КонецФункции // ПреобрабоватьЧислоВДату()

Функция СформироватьТекстСообщенияОбОшибке(ТекСтрока, ПредставлениеРегистра)
	
	ДатаСтроки = ТекСтрока.Дата + (ТекСтрока.Время - '00010101');
	ТекстНСтр = НСтр("en='Cannot write data for vehicle ""%1"" for time %2 to registry ""%3""';
		|ru='Не удалось записать данные по ТС ""%1"" за период %2 в регистр ""%3""'");
	Результат = СтрШаблон(ТекстНСтр, ТекСтрока.ТС, ДатаСтроки, ПредставлениеРегистра);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли