
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	НастроитьПолеКодировкаФайла();
	
	ПроизвольныйПериод         = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант = ВариантСтандартногоПериода.Вчера;
	Объект.ДатаНач             = ПроизвольныйПериод.ДатаНачала;
	Объект.ДатаКон             = ПроизвольныйПериод.ДатаОкончания;
	
	Объект.НомерПервойСтрокиДанных = 2;
	ИнициализироватьСоответствиеЗаголовковФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ИнициализацияКомпоновщика();
	
	Если Объект.ПоляФайлаОбмена.Количество() = 0 Тогда
		СброситьНастройкиПолейФайлаОбмена();
	КонецЕсли;
	
	Если Объект.Разделитель = Неопределено Или ПустаяСтрока(СокрЛП(Объект.Разделитель)) Тогда
		Объект.Разделитель = ";";
	КонецЕсли;
	
	Если Объект.Разделитель = Символы.Таб Тогда 
		РазделительТабулятор(Неопределено);
	Иначе 
		РазделительСимвол(Неопределено);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоЗагрузкаДанныхРегистраПриИзменении(Элемент)
	Объект.ФайлОбмена = "";
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ФайлОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПоказатьДиалогВыбораФайла", ЭтотОбъект,);
	НачатьПодключениеРасширенияРаботыСФайлами(Обработчик);

КонецПроцедуры

&НаКлиенте
Процедура ФайлОбменаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.ФайлОбмена) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='You must select a file';ru='Необходимо выбрать файл'"));
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПутьКФайлуПослеОткрытия", ЭтотОбъект);
	НачатьЗапускПриложения(Оповещение, Объект.ФайлОбмена);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПроизвольныйПериод               = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант       = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПроизвольныйПериод.ДатаНачала    = Объект.ДатаНач;
	ПроизвольныйПериод.ДатаОкончания = Объект.ДатаКон;
	
	ДиалогВыбораПериода        = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогВыбораПериода.Период = ПроизвольныйПериод;
	
	ДиалогВыбораПериода.Показать(Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	
	Если Объект.ТаблицаДанных.Количество() = 0 Тогда
		Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницыЗагрузки.ПодчиненныеЭлементы.СтраницаОсновное;
		ТекстОшибки = НСтр("en='Not loaded data from a file';ru='Не загружены данные из файла'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ТаблицаДанных");
		Возврат;
	КонецЕсли; 
	
	ТекстНСТР = НСтр("en='Execute the monitoring data loading?';ru='Выполнить загрузку данных в регистр сведений?'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьЗагрузкуЗавершение", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФО(Команда)
	
	Если Не Объект.ЭтоЗагрузкаДанныхРегистра 
		И ПустаяСтрока(Объект.Разделитель) И Не Объект.Разделитель = Символы.Таб Тогда
		ТекстОшибки = НСтр("en='Separator not specified';ru='Не указан разделитель'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.Разделитель");
		Возврат;
	КонецЕсли; 
	
	Если Объект.ТаблицаДанных.Количество() Тогда
		ТекстНСТР = НСтр("en='You want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ПрочитатьФООчистка", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе 
		ПрочитатьФОЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделительСимвол(Команда)
	
	Если Объект.Разделитель = Символы.Таб Или ПустаяСтрока(СокрЛП(Объект.Разделитель))Тогда
		Объект.Разделитель = ";";
	КонецЕсли;
	
	Элементы.РазделительКонтекстноеМенюРазделительТабулятор.Пометка = Ложь;
	Элементы.РазделительКонтекстноеМенюРазделительСимвол.Пометка    = Истина;
	
	Элементы.Разделитель.ТолькоПросмотр = Ложь;
	Элементы.Разделитель.ЦветФона       = Новый Цвет(255,255,255)
	
КонецПроцедуры

&НаКлиенте
Процедура РазделительТабулятор(Команда)
	
	Элементы.РазделительКонтекстноеМенюРазделительТабулятор.Пометка = Истина;
	Элементы.РазделительКонтекстноеМенюРазделительСимвол.Пометка    = Ложь;
	
	Объект.Разделитель = Символы.Таб;
	
	Элементы.Разделитель.ТолькоПросмотр = Истина;
	Элементы.Разделитель.ЦветФона       = Новый Цвет(252,250,235);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПоля(Команда)
	
	ТекстНСТР = НСтр("en='Set default settings?';ru='Установить настройки по умолчанию?'");
	ПоказатьВопрос(Новый ОписаниеОповещения("СброситьПоляЗавершение", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьШаблон(Команда)
	
	ДополнительныеПараметры = Новый Структура();
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите файл'");
	
	Если Объект.ЭтоЗагрузкаДанныхРегистра Тогда
		ДиалогВыбораФайла.ПолноеИмяФайла = НСтр("ru = 'Данные регистра Координаты по мониторингу'") + ".xlsx";
		ДиалогВыбораФайла.Фильтр = НСтр("en = 'Excel book'; ru = 'Книга Excel'") + " (*.xlsx)|*.xlsx";
		ДополнительныеПараметры.Вставить("КлючШаблона", "ШаблонТаблицыДанных");
	Иначе
		ДиалогВыбораФайла.ПолноеИмяФайла = НСтр("en = 'Monitoring data'; ru = 'Данные мониторинга'") + ".txt";
		ДиалогВыбораФайла.Фильтр = НСтр("en = 'Text document'; ru = 'Tекстовый документ'") + " (*.txt)|*.txt";
		ДополнительныеПараметры.Вставить("КлючШаблона", "ШаблонЗагрузкиДанных");
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("СохранитьШаблонФайлаПослеВыбораФайла", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Разделитель.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.КодировкаФайла.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.ТаблицаДанныхПробег.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.ТаблицаДанныхРасходТоплива.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.ТаблицаДанныхУровеньТоплива.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.ГруппаПорядокПолей.Видимость = Не Объект.ЭтоЗагрузкаДанныхРегистра;
	
	Элементы.НомерПервойСтрокиДанных.Видимость = Объект.ЭтоЗагрузкаДанныхРегистра;
	Элементы.ТаблицаДанныхКурс.Видимость = Объект.ЭтоЗагрузкаДанныхРегистра;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализацияФормыДлительнойОперации(ТекстОшибки)

	ДлительнаяОперация = ВыполнениеОбработкиНаСервере(ТекстОшибки);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
		
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания       = Истина;
	НастройкиОжидания.ВыводитьПрогрессВыполнения = Истина;

	Обработчик = Новый ОписаниеОповещения("ПроверитьВыполнениеЗадания", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);

КонецПроцедуры

&НаСервере
Функция ВыполнениеОбработкиНаСервере(ТекстОшибки)
	
	ДатаНачала    = Объект.ДатаНач;
	ДатаОкончания = Объект.ДатаКон;
	ТекущаяДата   = ТекущаяДатаСеанса();
	
	Если ДатаНачала > ТекущаяДата Тогда 
		ДатаНачала = ТекущаяДата;
	КонецЕсли;
	
	Если ДатаОкончания > ТекущаяДата Тогда 
		ДатаОкончания = ТекущаяДата;
	КонецЕсли;
	
	Если ДатаНачала >= ДатаОкончания Тогда 
		ТекстОшибки = НСтр("en='Incorrect loading period';ru='Выбран неверный период загрузки'");
		Возврат 0;
	КонецЕсли;
	
	// Проверим заполнение структуры файла
	Если Не Объект.ЭтоЗагрузкаДанныхРегистра Тогда
		ПарамОтбораСтрок = Новый Структура;
		ПарамОтбораСтрок.Вставить("Использование", Истина);
		МассНайденныхСтрок = Объект.ПоляФайлаОбмена.НайтиСтроки(ПарамОтбораСтрок);
		Если МассНайденныхСтрок.Количество() = 0 Тогда
			ТекстОшибки = НСтр("en='No fields are selected in the fields table of the exchange file';ru='Не выбраны поля в таблице полей файла обмена'");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	// Проверяем установлен ли отбор по ТС, если не установлен то запрос не будем использовать вообще
	флОтборТСУстановлен = Ложь;
	тблОтборТС = Новый ТаблицаЗначений;
	Для Каждого ТекОтбор Из КомпоновщикОтбора.Настройки.Отбор.Элементы Цикл
		Если ТекОтбор.Использование Тогда
			флОтборТСУстановлен = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если флОтборТСУстановлен Тогда
		тблОтборТС = ПолучитьТаблицуОтбор(ТекстОшибки);
		тблОтборТС.Индексы.Добавить("ИДвСистемеНавигации");
	КонецЕсли;
	
	тблПоляФайлаОбмена = Объект.ПоляФайлаОбмена.Выгрузить();
	тблТаблицаДанных = Объект.ТаблицаДанных.Выгрузить();
	
	УникальныйИД = Новый УникальныйИдентификатор;
	
	Если Объект.ЭтоЗагрузкаДанныхРегистра Тогда
		РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(Объект.ФайлОбмена));
		ИмяВременногоФайлаОбмена = КаталогВременныхФайлов() + УникальныйИД + "_data." + РасширениеФайла;
	Иначе
		ИмяВременногоФайлаОбмена = КаталогВременныхФайлов() + УникальныйИД + "_data.txt";
	КонецЕсли;
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(ХранилищеФайлаВыгрузки);
	ДанныеХранилища.Записать(ИмяВременногоФайлаОбмена);
		
	// Проверим наличие файла
	ФайлОб = Новый Файл(ИмяВременногоФайлаОбмена);
	Если Не ФайлОб.Существует() Тогда
		ТекстОшибки = НСтр("en='Failed to read Exchange file on server';ru='Не удалось прочитать Файл обмена на сервере'");
		Возврат 0;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("ТекстОшибки", ТекстОшибки);
	ПараметрыПроцедуры.Вставить("ХранилищеФайлаВыгрузки", ХранилищеФайлаВыгрузки);
	ПараметрыПроцедуры.Вставить("ПоляФайлаОбмена", тблПоляФайлаОбмена);
	ПараметрыПроцедуры.Вставить("ТаблицаДанных", тблТаблицаДанных);
	ПараметрыПроцедуры.Вставить("КодировкаФайла", КодировкаФайла);
	ПараметрыПроцедуры.Вставить("Разделитель", Объект.Разделитель);
	ПараметрыПроцедуры.Вставить("ДатаНачала", Объект.ДатаНач);
	ПараметрыПроцедуры.Вставить("ДатаОкончания", Объект.ДатаКон);
	ПараметрыПроцедуры.Вставить("флОтборТСУстановлен", флОтборТСУстановлен);
	ПараметрыПроцедуры.Вставить("тблОтборТС", тблОтборТС);
	ПараметрыПроцедуры.Вставить("ИмяВременногоФайлаОбмена", ИмяВременногоФайлаОбмена);
	ПараметрыПроцедуры.Вставить("ЭтоЗагрузкаДанныхРегистра", Объект.ЭтоЗагрузкаДанныхРегистра);
	ПараметрыПроцедуры.Вставить("СоответствиеЗаголовковФайлов", РеквизитФормыВЗначение("СоответствиеЗаголовковФайлов"));
	ПараметрыПроцедуры.Вставить("НомерПервойСтрокиДанных", Объект.НомерПервойСтрокиДанных);
	ПараметрыПроцедуры.Вставить("ИмяТаблицы", "ШаблонТаблицыДанных");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Загрузка данных мониторинга';en='Download monitoring data'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.уатЗагрузкаДанныхGPS.ЗагрузитьФайлОбмена",ПараметрыПроцедуры,ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВыполнениеЗадания(Операция, ДополнительныеПараметры) Экспорт
	
	Если Операция = Неопределено Тогда
		
	Иначе
		Если Операция.Статус = "Выполнено" Тогда
			Если ЭтоАдресВременногоХранилища(Операция.АдресРезультата) Тогда
				Данные = ПолучитьИзВременногоХранилища(Операция.АдресРезультата);
				Если ТипЗнч(Данные) = Тип("Структура") Тогда
					Если Данные.Свойство("ТекстОшибки") Тогда
						ТекстПредупреждения = Данные.ТекстОшибки;
						Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
							ПоказатьПредупреждение(, ТекстПредупреждения);
						Иначе
							ТекстПредупреждения = НСтр("en='Download data completed successfully';ru='Загрузка данных завершена успешно'");
							ПоказатьПредупреждение(, ТекстПредупреждения);
						КонецЕсли;
					КонецЕсли;
					Если Данные.Свойство("ТаблицаДанных") Тогда
						Для Каждого ТекСтрока Из Данные.ТаблицаДанных Цикл
							НоваяСтрока = Объект.ТаблицаДанных.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
						КонецЦикла;
					КонецЕсли;
				 КонецЕсли;
			КонецЕсли;
		Иначе
			ВызватьИсключение Операция.КраткоеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФООчистка(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Объект.ТаблицаДанных.Очистить();
		ПрочитатьФОЗавершение();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда 
		ПрочитатьФОЗавершение();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьДокШаблонаДляСохранения(Знач КлючШаблона)
	
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет(КлючШаблона);
	
КонецФункции // ПолучитьТабДокШаблонаДляСохранения()

&НаКлиенте
Процедура СохранитьШаблонФайлаПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДокШаблона = ПолучитьДокШаблонаДляСохранения(ДополнительныеПараметры.КлючШаблона);
	Если Объект.ЭтоЗагрузкаДанныхРегистра Тогда
		ДокШаблона.НачатьЗапись(, ВыбранныеФайлы[0], ТипФайлаТабличногоДокумента.XLSX);
	Иначе
		ДокШаблона.НачатьЗапись(, ВыбранныеФайлы[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПолеКодировкаФайла()
	
	Элементы.КодировкаФайла.СписокВыбора.Добавить("UTF-8",  "UTF-8");
	Элементы.КодировкаФайла.СписокВыбора.Добавить("UTF-16", "UTF-16");
	Элементы.КодировкаФайла.СписокВыбора.Добавить("ANSI",   "ANSI");
	Элементы.КодировкаФайла.СписокВыбора.Добавить("OEM",    "OEM");
	
	КодировкаФайла = "UTF-8";
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиПолейФайлаОбмена()
	
	Объект.ПоляФайлаОбмена.Очистить();
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Date';ru='Дата'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Time';ru='Время'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Vehicle';ru='ID в системе мониторинга'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Lat';ru='Лат'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Lon';ru='Лон'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Истина; НоваяСтрока.Поле = НСтр("en='Point';ru='Пункт'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Ложь;   НоваяСтрока.Поле = НСтр("en='Speed';ru='Скорость'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Ложь;   НоваяСтрока.Поле = НСтр("ru='Пробег';en='Mileage'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Ложь;   НоваяСтрока.Поле = НСтр("ru = 'РасходТоплива'");
	НоваяСтрока = Объект.ПоляФайлаОбмена.Добавить(); НоваяСтрока.Использование = Ложь;   НоваяСтрока.Поле = НСтр(" ru = 'УровеньТоплива'; en = 'Fuel level'");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуОтбор(ТекстОшибки)
	
	ОтборКомп = КомпоновщикОтбора.ПолучитьНастройки();
	ПустойОтбор = Новый ПолеКомпоновкиДанных("");
	Для Каждого ТекОтбор Из ОтборКомп.Отбор.Элементы Цикл
		Если ТекОтбор.Использование И ТекОтбор.ЛевоеЗначение = ПустойОтбор Тогда
			ТекстОшибки = НСтр("en='Incorrect set selections!';ru='Некорректно настроены отборы!'");
			Возврат Новый ТаблицаЗначений;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Макет = КомпоновщикМакета.Выполнить(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных),
       КомпоновщикОтбора.ПолучитьНастройки(), , ,
       Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗ =  Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТЗ;
	
КонецФункции // ПолучитьТаблицуОтбор()

&НаСервере
Процедура ИнициализацияКомпоновщика()
	
	СхемаКомпоновкиДанных = Обработки.уатЗагрузкаДанныхGPS.ПолучитьМакет("НастройкиПостроителя");
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	КомпоновщикОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикОтбора.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		Объект.ДатаНач = Период.ДатаНачала;
		Объект.ДатаКон = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ТекстНСТР = НСтр("en='Loading data into the information register';ru='Идет загрузка данных в регистр сведений'");
		Состояние(ТекстНСТР);
		ИнициализацияФормыДлительнойОперацииЗагрузкиВРегистр();
		ТекстНСТР = НСтр("en='Loading data into the information register is completed';ru='Загрузка данных в регистр сведений завершена'");
		Состояние(ТекстНСТР);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФОЗавершение() 
		
	Если Объект.ФайлОбмена = "" Тогда
		ТекстСообщения = НСтр("en='You must select a file';ru='Необходимо выбрать файл'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПрочитатьДанныеИзФайлаПослеПодключения", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(Обработчик);
		
КонецПроцедуры

&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьУстановкуРасширенияРаботыСФайлами();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДанныеИзФайлаПослеПодключения(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ТекстНСТР = НСтр("en='Reading data from the exchange file is in progress. The operation can take a long time';ru='Идет чтение данных из файла обмена. Операция может занять длительное время'");
	ПоказатьОповещениеПользователя(ТекстНСТР);
	
	ФайлОбмена             = Объект.ФайлОбмена;
	ХранилищеФайлаВыгрузки = "";
	Объект.ФайлОбмена      = "";
	
	#Если МобильныйКлиент ИЛИ МобильноеПриложениеКлиент Тогда
		ДвоичныеДанные = Новый ДвоичныеДанные(ФайлОбмена); 
		ПрочитатьФОПослеПомещенияВХранилище(ДвоичныеДанные, Неопределено);
	#Иначе
		ОповещениеПрочитатьФО = Новый ОписаниеОповещения("ПрочитатьФОПослеПомещенияВХранилище", ЭтотОбъект);
		НачатьСозданиеДвоичныхДанныхИзФайла(ОповещениеПрочитатьФО, ФайлОбмена);
	#КонецЕсли
	
	Если Не ЗначениеЗаполнено(Объект.ФайлОбмена) Тогда
		Объект.ФайлОбмена = ФайлОбмена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФОПослеПомещенияВХранилище(ДвоичныеДанные, ДополнительныеПараметры) Экспорт
	
	Если ДвоичныеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	ОбработкаПрерыванияПользователя();
	
	ХранилищеФайлаВыгрузки = Адрес;
	
	ТекстОшибки = "";
	
	ИнициализацияФормыДлительнойОперации(ТекстОшибки);
	
	УдалитьИзВременногоХранилища(ХранилищеФайлаВыгрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПоляЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		СброситьНастройкиПолейФайлаОбмена();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлМониторингаЗавершение(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("en='You must select a file';ru='Необходимо выбрать файл'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Объект.ФайлОбмена = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализацияФормыДлительнойОперацииЗагрузкиВРегистр()

	ДлительнаяОперация = ВыполнениеОбработкиЗагрузкиВРегистрНаСервере();
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания       = Истина;
	НастройкиОжидания.ВыводитьПрогрессВыполнения = Истина;

	Обработчик = Новый ОписаниеОповещения("ПроверитьВыполнениеЗаданияЗагрузкиДанныхВРегистр", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);

КонецПроцедуры

&НаСервере
Функция ВыполнениеОбработкиЗагрузкиВРегистрНаСервере()
	
	тблТаблицаДанных = Объект.ТаблицаДанных.Выгрузить();
	
	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("ТаблицаДанных", тблТаблицаДанных);
	ПараметрыПроцедуры.Вставить("ЭтоЗагрузкаДанныхРегистра", Объект.ЭтоЗагрузкаДанныхРегистра);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru='Загрузка данных мониторинга';en='Download monitoring data'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.уатЗагрузкаДанныхGPS.ЗагрузкаРегистраМестонахождениеGPS", ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВыполнениеЗаданияЗагрузкиДанныхВРегистр(Операция, ДополнительныеПараметры) Экспорт
	
	Если Операция = Неопределено Тогда
		
	Иначе
		Если Операция.Статус = "Выполнено" Тогда
			Если ЭтоАдресВременногоХранилища(Операция.АдресРезультата) Тогда
				Данные = ПолучитьИзВременногоХранилища(Операция.АдресРезультата);
				Если ТипЗнч(Данные) = Тип("Структура") Тогда
					Если Данные.Свойство("МассивОшибокПробегаРасхода") Тогда
						Если Данные.МассивОшибокПробегаРасхода.Количество() Тогда
							Для Каждого Ошибка Из Данные.МассивОшибокПробегаРасхода Цикл
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					
					Если Данные.Свойство("МассивОшибокКоординат") Тогда
						Если Данные.МассивОшибокКоординат.Количество() Тогда
							Для Каждого Ошибка Из Данные.МассивОшибокКоординат Цикл
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;		
			КонецЕсли;
			ТекстПредупреждения = НСтр("en='Data load completed successfully';ru='Загрузка данных в регистры сведений завершена успешно'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		Иначе
			ВызватьИсключение Операция.КраткоеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуПослеОткрытия(КодВозврата, ДополнительныеПараметры) Экспорт 
	
	ДополнительнаяОбработкаНеТребуется = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСоответствиеЗаголовковФайлов()
	
	Если Метаданные.Языки.Найти("Русский") <> Неопределено И ТекущийЯзык() = Метаданные.Языки.Русский Тогда 
		СуффиксЛокализации = "C3";
	ИначеЕсли Метаданные.Языки.Найти("Английский") <> Неопределено И ТекущийЯзык() = Метаданные.Языки.Английский Тогда 
		СуффиксЛокализации = "C4";
	Иначе 
		СуффиксЛокализации = "C3";
	КонецЕсли;
	
	МакетСоответствий = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СоответствиеЗаголовковФайлов");
	
	Для СчСтрок = 1 По МакетСоответствий.ВысотаТаблицы Цикл 
		СчСтрокой = Формат(СчСтрок, "ЧН=0; ЧГ=0");
		
		СтрокаСоответствия = СоответствиеЗаголовковФайлов.Добавить();
		СтрокаСоответствия.ИмяТаблицы          = МакетСоответствий.Область("R"+СчСтрокой+"C1").Текст;
		СтрокаСоответствия.ИмяКолонки          = МакетСоответствий.Область("R"+СчСтрокой+"C2").Текст;
		СтрокаСоответствия.ЗаголовокВФайле     = НРег(МакетСоответствий.Область("R"+СчСтрокой+СуффиксЛокализации).Текст);
		СтрокаСоответствия.ПроверкаЗаполнения  = НРег(МакетСоответствий.Область("R"+СчСтрокой+"C5").Текст) = "да";
		СтрокаСоответствия.ЗначениеПоУмолчанию = МакетСоответствий.Область("R"+СчСтрокой+"C6").Текст;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогВыбораФайла(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.МножественныйВыбор = Ложь;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Истина;
	
	Если Объект.ЭтоЗагрузкаДанныхРегистра Тогда
		ДиалогВыбора.Заголовок = НСтр("ru = 'Выберите файл с данными регистра'");
		ДиалогВыбора.Фильтр = НСтр("ru = 'Табличный документ (*.xlsx, *.mxl)|*.xlsx;*.mxl'");
	Иначе
		ДиалогВыбора.Заголовок = НСтр("ru = 'Выберите файл мониторинга'");
		ДиалогВыбора.Фильтр = НСтр("ru = 'Файл txt (*.txt)|*.txt'");
	КонецЕсли;
	
	ВыборФайла = Новый ОписаниеОповещения("ВыбратьФайлМониторингаЗавершение", ЭтотОбъект);
	ДиалогВыбора.Показать(ВыборФайла);
	
КонецПроцедуры

#КонецОбласти
