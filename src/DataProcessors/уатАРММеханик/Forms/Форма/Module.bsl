
#Область ОписаниеПеременных

&НаКлиенте
Перем НужноЗакрытьФорму;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ЭтоСтандарт = уатОбщегоНазначенияПовтИсп.ВариантПоставкиСТД();
	Если ЭтоСтандарт Тогда
		Элементы.СписокШинОтчетКарточкаРаботыАвтомобильнойШины.Видимость      = Ложь;
		Элементы.СписокАккумуляторовОтчетКарточкаРаботыАккумулятора.Видимость = Ложь;
		Элементы.СписокАккумуляторовОтчетВыработкаАгрегатов.Видимость         = Ложь;
		Элементы.СписокПрочиеАгрегатыОтчетВыработкаАгрегатов.Видимость        = Ложь;
	КонецЕсли;
	
	Элементы.СписокТСОтборПоТС.Заголовок = НСтр("en='Selection of vehicle (maintenance term mature)';ru='Отбор по ТС (Подошел срокТО)'");
	
	ТекОрганизация  = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	ТекПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	мВремяДоОкончанияДействияДокументовТС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияДокументовТС"));
	мВремяДоОкончанияДействияТопливныхКарт = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт"));

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокТС, "ДниДоОкончанияДействияДокументовТС", мВремяДоОкончанияДействияДокументовТС);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокТС, "ДниДоОкончанияДействияТопливныхКарт", мВремяДоОкончанияДействияТопливныхКарт);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокТС, "ДатаОкончания", ТекущаяДата());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокТС, "ТекущаяДата", НачалоДня(ТекущаяДата()));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокШин, "Период", ТекущаяДата());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокАккумуляторов, "Период", ТекущаяДата());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПрочиеАгрегаты, "Период", ТекущаяДата());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	СтруктураНастроек    = ВосстановитьНастройки();
	НастройкиНекорректны = (СтруктураНастроек = Неопределено Или ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
	
	// отображение выбывших ТС
	Если НастройкиНекорректны Или (НЕ СтруктураНастроек.Свойство("ОтображатьВыбывшие")) Тогда
		ОтображатьВыбывшие = Ложь;
	Иначе
		ОтображатьВыбывшие = СтруктураНастроек.ОтображатьВыбывшие;
	КонецЕсли;
	
	// отбор по ТС
	Если НастройкиНекорректны Или (НЕ СтруктураНастроек.Свойство("СписокТСОтборПоТС")) Тогда
		ФлагОтбораТС = Ложь;
	Иначе
		ФлагОтбораТС = НЕ СтруктураНастроек.СписокТСОтборПоТС;
	КонецЕсли;
	
	УстановитьОтборСписокТС();
	УстановитьОтборВыбывшие();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Или Не Модифицированность Тогда 
		НужноЗакрытьФорму = Истина;
		Возврат;
		
	ИначеЕсли НужноЗакрытьФорму <> Истина Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ТекстНСТР = НСтр("en='AWP Mechanics will be closed. Continue?';ru='АРМ Механика будет закрыт. Продолжить?'");
		ПоказатьВопрос(Оповещение,ТекстНСТР, Режим, 0);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокТСПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.СписокТС.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено 
		ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") ИЛИ
		ТекущаяСтрока= ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка") Тогда
		ПанельДопИнформации = "";
		Возврат;
	КонецЕсли;
	
	ОтобразитьДопИнформацию(ТекущаяСтрока);
	ЗаполнитьИнформациюПоТО(ТекущаяСтрока);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокШин, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокАккумуляторов, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокПрочиеАгрегаты, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокЗапчасти, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ДокументСписокЗаявкиНаРемонт, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ДокументСписокРЛ, "ТС", ТекущаяСтрока, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокРаботПоРемонтуТС, "ТС", ТекущаяСтрока, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияПоТОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ИнформацияПоТО.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.ВидТО);
	ОткрытьФорму("Справочник.уатВидыОбслуживанияТС.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимТОПриИзменении(Элемент)
	СписокТСПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СписокШинВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СписокШин.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Шина);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СписокАккумуляторовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СписокАккумуляторов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Агрегат);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СписокПрочиеАгрегатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СписокПрочиеАгрегаты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Агрегат);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СписокЗапчастиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СписокЗапчасти.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Номенклатура);
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ДокументСписокЗаявкиНаРемонтВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ДокументСписокЗаявкиНаРемонт.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Ссылка);
	ОткрытьФорму("Документ.уатЗаявкаНаРемонт.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ДокументСписокРЛВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ДокументСписокРЛ.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Ссылка);
	ОткрытьФорму("Документ.уатРемонтныйЛист.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СписокРаботПоРемонтуТСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СписокРаботПоРемонтуТС.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Ссылка);
	ОткрытьФорму("Документ.уатРемонтныйЛист.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры


&НаКлиенте
Процедура ПанельДопИнформацииПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.СписокТС.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияКлиент.ПанельДопИнформацииПоТСПриНажатии(
		ЭтотОбъект, 
		Элемент, 
		ДанныеСобытия, 
		СтандартнаяОбработка,
		ТекущаяСтрока
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьВыбывшиеПриИзменении(Элемент)
	УстановитьОтборВыбывшие();
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаявкаСоздать(Команда)
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("СозданиеИзАРММеханика", Истина);
	ТекДанные = Элементы.ИнформацияПоТО.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда 
		ПараметрыОткрытия.Вставить("ВидОбслуживания", ТекДанные.ВидТО);
	КонецЕсли;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ПараметрыОткрытия.Вставить("ТС", ТекДанныеТС.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Документ.уатЗаявкаНаРемонт.Форма.ФормаДокумента", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РЛСоздать(Команда)
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("СозданиеИзАРММеханика", Истина);
	ТекДанные = Элементы.ИнформацияПоТО.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда 
		ПараметрыОткрытия.Вставить("ВидОбслуживания", ТекДанные.ВидТО);
	КонецЕсли;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ПараметрыОткрытия.Вставить("ТС", ТекДанныеТС.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Документ.уатРемонтныйЛист.Форма.ФормаДокумента", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТС(Команда)
	
	УстановитьОтборСписокТС();
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	Если Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаАккумуляторы" Тогда
		Элементы.СписокАккумуляторов.Обновить();
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаТО" Тогда
		ТекущаяСтрока = Элементы.СписокТС.ТекущаяСтрока;
		Если ТекущаяСтрока = Неопределено 
			ИЛИ ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") ИЛИ
			ТекущаяСтрока= ПредопределенноеЗначение("Справочник.уатТС.ПустаяСсылка") Тогда
			Возврат;
		КонецЕсли;
		ЗаполнитьИнформациюПоТО(ТекущаяСтрока);
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаШины" Тогда
		Элементы.СписокШин.Обновить();
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаПрочиеАгрегаты" Тогда
		Элементы.СписокПрочиеАгрегаты.Обновить();
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаЗапчасти" Тогда
		Элементы.СписокЗапчасти.Обновить();
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаЗаявкиНаРемонт" Тогда
		Элементы.ДокументСписокЗаявкиНаРемонт.Обновить();
	ИначеЕсли Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаРемонты" Тогда
		Элементы.ДокументСписокРЛ.Обновить();
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиКомандФормыОтчеты

&НаКлиенте
Процедура ОтчетГрафикТО(Команда)
	ОткрытьФорму("Отчет.уатГрафикТО.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура ОтчетНевыполненныеТО(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	ВидТО = Неопределено;
	ТекДанные = Элементы.ИнформацияПоТО.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ВидТО = ТекДанные.ВидТО;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатПриближениеСроковТО", "ОсновнаяСхемаКомпоновкиДанных", ТС, ВидТО,"Невыполненные ТО");
	ОткрытьФорму("Отчет.уатПриближениеСроковТО.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПланированиеТО(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	ВидТО = Неопределено;
	ТекДанные = Элементы.ИнформацияПоТО.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ВидТО = ТекДанные.ВидТО;
	КонецЕсли;
	
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатПриближениеСроковТО", "ОсновнаяСхемаКомпоновкиДанных", ТС,ВидТО,"Планирование ТО");
	ОткрытьФорму("Отчет.уатПриближениеСроковТО.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПробегИзносШин(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Шина = Неопределено;
	ТекДанные = Элементы.СписокШин.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Шина = ТекДанные.Шина;
	КонецЕсли;
	
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатПробегИзносШин", "ОсновнаяСхемаКомпоновкиДанных", ТС,Шина);

	ОткрытьФорму("Отчет.уатПробегИзносШин.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПриближениеСрокаИзносаШин(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Шина = Неопределено;
	ТекДанные = Элементы.СписокШин.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Шина = ТекДанные.Шина;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатПриближениеСрокаИзносаШин", "ОсновнаяСхемаКомпоновкиДанных", ТС,Шина);

	ОткрытьФорму("Отчет.уатПриближениеСрокаИзносаШин.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетКарточкаРаботыАвтомобильнойШины(Команда)

	ПараметрыОткрытия = Новый Структура();
	ТекДанные = Элементы.СписокШин.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("Шина", ТекДанные.Шина);
	КонецЕсли;

	ОткрытьФорму("Отчет.уатКарточкаРаботыАвтомобильнойШины.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПриближениеСрокаИзносаАгрегатов(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Если Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаАккумуляторы" Тогда
		Агрегат = Неопределено;
		ТекДанные = Элементы.СписокАккумуляторов.ТекущиеДанные;
		Если ТекДанные <> Неопределено  Тогда
			Агрегат = ТекДанные.Агрегат;
		КонецЕсли;
	Иначе
		Агрегат = Неопределено;
		ТекДанные = Элементы.СписокПрочиеАгрегаты.ТекущиеДанные;
		Если ТекДанные <> Неопределено  Тогда
			Агрегат = ТекДанные.Агрегат;
		КонецЕсли;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатПриближениеСрокаИзносаАгрегатов", "ОсновнаяСхемаКомпоновкиДанных",ТС,Агрегат);

	ОткрытьФорму("Отчет.уатПриближениеСрокаИзносаАгрегатов.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетКарточкаРаботыАккумулятора(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Аккумулятор = Неопределено;
	ТекДанные   = Элементы.СписокАккумуляторов.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Аккумулятор = ТекДанные.Агрегат;
	КонецЕсли;

	ПараметрыОткрытия = Новый Структура("ТС,Аккумулятор", ТС, Аккумулятор);

	ОткрытьФорму("Отчет.уатКарточкаРаботыАккумулятора.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетВыработкаАгрегатов(Команда)
	Если Элементы.СтраницыДанныеПоТС.ТекущаяСтраница.Имя = "СтраницаАккумуляторы" Тогда
		Агрегат = Неопределено;
		ТекДанные = Элементы.СписокАккумуляторов.ТекущиеДанные;
		Если ТекДанные <> Неопределено  Тогда
			Агрегат = ТекДанные.Агрегат;
		КонецЕсли;
	Иначе
		Агрегат = Неопределено;
		ТекДанные = Элементы.СписокПрочиеАгрегаты.ТекущиеДанные;
		Если ТекДанные <> Неопределено  Тогда
			Агрегат = ТекДанные.Агрегат;
		КонецЕсли;
	КонецЕсли;
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатВыработкаАгрегатов","ОсновнаяСхемаКомпоновкиДанных",,Агрегат);

	ОткрытьФорму("Отчет.уатВыработкаАгрегатов.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетРейтингТСПоЗатратамНаРемонт(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатРейтингТСПоЗатратамНаРемонт","ОсновнаяСхемаКомпоновкиДанных", ТС);

	ОткрытьФорму("Отчет.уатРейтингТСПоЗатратамНаРемонт.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетВедомостьРасходаЗЧиРаботНаТС(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;

	Номенклатура = Неопределено;
	ТекДанные   = Элементы.СписокЗапчасти.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Номенклатура = ТекДанные.Номенклатура;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатВедомостьРасходаЗЧиРаботНаТС", "ОсновнаяСхемаКомпоновкиДанных",ТС);
	
	ОткрытьФорму("Отчет.уатВедомостьРасходаЗЧиРаботНаТС.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетВедомостьРаботПоЗаявкамНаРемонт(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;

	Документ = Неопределено;
	ТекДанные = Элементы.ДокументСписокЗаявкиНаРемонт.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Документ = ТекДанные.Ссылка;
	КонецЕсли;
	
	Номенклатура = Неопределено;

	мОбъект = Новый Структура("Заказ, Номенклатура",Документ, Номенклатура);
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатВедомостьРаботПоЗаявкамНаРемонт","ОсновнаяСхемаКомпоновкиДанных",ТС,мОбъект);

	ОткрытьФорму("Отчет.уатВедомостьРаботПоЗаявкамНаРемонт.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетЗаявкиНаРемонт(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Номенклатура = Неопределено;
	ТекДанные   = Элементы.ДокументСписокЗаявкиНаРемонт.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Номенклатура = ТекДанные.ВидОбслуживания;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатЗаявкиНаРемонт", "ОсновнаяСхемаКомпоновкиДанных", ТС);
	
	ОткрытьФорму("Отчет.уатЗаявкиНаРемонт.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетВедомостьПоРемонтамИОбслуживанию(Команда)
	ТС = Неопределено;
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС <> Неопределено И НЕ ТекДанныеТС.ЭтоГруппа Тогда
		ТС = ТекДанныеТС.Ссылка;
	КонецЕсли;
	
	Номенклатура = Неопределено;
	ТекДанные   = Элементы.ДокументСписокРЛ.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Номенклатура = ТекДанные.ВидОбслуживания;
	КонецЕсли;

	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета("уатВедомостьПоРемонтамИОбслуживанию", "ОсновнаяСхемаКомпоновкиДанных", ТС);

	ОткрытьФорму("Отчет.уатВедомостьПоРемонтамИОбслуживанию.Форма", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСервиснуюКнижку(Команда)
	
	ТекДанныеТС = Элементы.СписокТС.ТекущиеДанные;
	Если ТекДанныеТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.уатМоделиТС.Форма.ФормаСервиснаяКнижка", Новый Структура("МодельТС", 
		ТекДанныеТС.Модель),,,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.уатАРММеханик.Форма.Форма", "ОбщиеНастройки");
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ОтображатьВыбывшие",           ОтобразитьВыбывшие);
	СтруктураНастроек.Вставить("СписокТСОтборПоТС",            ФлагОтбораТС);
	
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.уатАРММеханик.Форма.Форма", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоТО(ТС)
	
	Выборка = уатОбщегоНазначения.СписокТСДляТО(ТекущаяДата(), ТС, ?(РежимПланирования = 0, Ложь, Истина)).Выбрать();
	
	ИнформацияПоТО.Очистить();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ВидТО) Тогда
			Продолжить;
		КонецЕсли;
		Стр = ИнформацияПоТО.Добавить();
		Стр.ДатаТО                    = Выборка.ДатаПоследнегоТО;
		Стр.ВидТО                     = Выборка.ВидТО;
		Стр.ПараметрВыработки         = Выборка.ПараметрВыработки;
		Стр.Выработка                 = Выборка.ВыработкаСНачалаЭксплуатации;
		Стр.ПериодичностьОбслуживания = Выборка.ПериодичностьОбслуживания;
		Стр.КоличествоПериодов        = Выборка.КоличествоПериодов;
		Стр.Норма                     = Выборка.НормаВыработки;
		Стр.Допуск                    = Выборка.Допуск;
		Стр.ДопускПерОбслуживания     = Выборка.ДопускПерОбслуживания;
		Стр.ПлановаяДатаТО            = Выборка.ПлановаяДатаТО;
		Стр.ДнейДоТО                  = Выборка.ОсталосьДней;
		Стр.Циклический               = Выборка.Циклический;
		Стр.СписокРабот               = Выборка.СписокРабот;
		Стр.СписокЗапчастей           = Выборка.СписокЗапчастей;
	КонецЦикла;
	ИнформацияПоТО.Сортировать("ПлановаяДатаТО");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписокТС()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокТС.Отбор, "ТО", 0,,, ФлагОтбораТС);
	Элементы.СписокТСОтборПоТС.Заголовок = ?(ФлагОтбораТС, НСтр("en='Show all Vehicles';ru='Показать все ТС'"), НСтр("en='Maintenance term came up';ru='Подошел срок ТО'"));
	
	ФлагОтбораТС = Не ФлагОтбораТС;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборВыбывшие()
	
	Если ОтобразитьВыбывшие Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокТС.Отбор, "ДатаВыбытия", '00010101',,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокТС.Отбор, "ДатаВыбытия", '00010101',,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		НужноЗакрытьФорму = Неопределено;
	Иначе
		НужноЗакрытьФорму = Истина;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьДопИнформацию(ТС)
	
	ПанельДопИнформации = уатОбщегоНазначения.СформироватьТекстДопИнформацииПоТС(Элементы.СписокТС.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОткрытияОтчета(Отчет, Схема, ТС = Неопределено, мОбъект = Неопределено, КлючВарианта = Неопределено)
	
	Заказ        = Неопределено;
	Номенклатура = Неопределено;
	Если ТипЗнч(мОбъект) = Тип("Структура") Тогда
		Заказ        = мОбъект.Заказ;
		Номенклатура = мОбъект.Номенклатура;
	КонецЕсли;
	СхемаКомпоновкиДанных = Отчеты[Отчет].ПолучитьМакет(Схема);

	КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	НастройкиКомпоновки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	Для Каждого ТекЭлем Из НастройкиКомпоновки.Отбор.Элементы Цикл
		Если ЗначениеЗаполнено(ТС) И (Строка(ТекЭлем.ЛевоеЗначение) = "ТС" ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "ТСТекущее") Тогда
			ТекЭлем.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ТекЭлем.ПравоеЗначение = ТС;
			ТекЭлем.Использование = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТС) И Строка(ТекЭлем.ЛевоеЗначение) = "ТСВыбыло" Тогда
			ТекЭлем.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ТекЭлем.ПравоеЗначение = ЗначениеЗаполнено(ТС.ДатаВыбытия);
			ТекЭлем.Использование = Истина;
		КонецЕсли;
		Если ТипЗнч(мОбъект) <> Тип("Структура") Тогда
			Если ЗначениеЗаполнено(мОбъект) И (Строка(ТекЭлем.ЛевоеЗначение) = "Шина" 
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "СерияНоменклатуры"
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "Агрегат"
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "ВидТО"
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "ЗаявкаНаРемонт"
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "Номенклатура"
				ИЛИ Строка(ТекЭлем.ЛевоеЗначение) = "ВидОбслуживания") Тогда
				ТекЭлем.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ТекЭлем.ПравоеЗначение = мОбъект;
				ТекЭлем.Использование  = Истина;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Заказ) И (Строка(ТекЭлем.ЛевоеЗначение) = "ЗаявкаНаРемонт") Тогда
				ТекЭлем.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ТекЭлем.ПравоеЗначение = Заказ;
				ТекЭлем.Использование  = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Номенклатура) И (Строка(ТекЭлем.ЛевоеЗначение) = "Номенклатура") Тогда
				ТекЭлем.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ТекЭлем.ПравоеЗначение = Номенклатура;
				ТекЭлем.Использование  = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекЭлем Из НастройкиКомпоновки.ПараметрыДанных.Элементы Цикл
		Если ЗначениеЗаполнено(ТС) И Строка(ТекЭлем.Параметр) = "ОтображатьВыбывшиеТС" Тогда
			ТекЭлем.Значение     = ЗначениеЗаполнено(ТС.ДатаВыбытия);
			ТекЭлем.Использование = Истина;
		КонецЕсли;
		Если Строка(ТекЭлем.Параметр) = "ДетализацияПеречняРаботИЗапчастей" Тогда
			ТекЭлем.Значение      = Истина;
			ТекЭлем.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(НастройкиКомпоновки);

	сткПараметры = Новый Структура("СформироватьПриОткрытии, ПользовательскиеНастройки", Истина, КомпоновщикНастроекКомпоновкиДанных.ПользовательскиеНастройки);
	
	Если ЗначениеЗаполнено(КлючВарианта) Тогда
		сткПараметры.Вставить("КлючВарианта", КлючВарианта);
	КонецЕсли;
	Возврат сткПараметры;
КонецФункции

#КонецОбласти
