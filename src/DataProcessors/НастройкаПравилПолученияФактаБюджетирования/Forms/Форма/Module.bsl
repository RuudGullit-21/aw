#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	УстановитьОтборПравилПоИсточникуДанных(КонтекстИсточникПравилаПоСтатьямБюджетов, Неопределено, Неопределено);
	УстановитьОтборПравилПоИсточникуДанных(КонтекстИсточникПравилаПоПоказателямБюджетов, Неопределено, Неопределено);
	УстановитьОтборПравилПоСтатьеБюджетов(КонтекстСтатьяПравилаПоСтатьямБюджетов, Неопределено);
	УстановитьОтборПравилПоПоказателюБюджетов(КонтекстПоказательПравилаПоПоказателямБюджетов, Неопределено);
	
	//ИспользоватьМеждународныйУчет = ПолучитьФункциональнуюОпцию("ИспользоватьМеждународныйФинансовыйУчет");
	ИспользоватьМеждународныйУчет = Ложь;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимНастройкиПравилПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ХозяйственныеОперацииПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикХозяйственныеОперацииПриАктивизацииСтроки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиБюджетовПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикСтатьиБюджетовПриАктивизацииСтроки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиБюджетовПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработчикПоказателиБюджетовПриАктивизацииСтроки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстСтатьяПравилаПоСтатьямБюджетовПослеУдаления(Элемент)
	
	Элементы.СтатьиБюджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстСтатьяПравилаПоСтатьямБюджетовОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.СтатьиБюджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстПоказательПравилаПоПоказателямБюджетовПослеУдаления(Элемент)
	
	Элементы.ПоказателиБюджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстПоказательПравилаПоПоказателямБюджетовОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.ПоказателиБюджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстОперативныйУчетПравилаПоСтатьямБюджетовПослеУдаления(Элемент)
	
	Элементы.ХозяйственныеОперации.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстОперативныйУчетПравилаПоСтатьямБюджетовОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.ХозяйственныеОперации.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыРазделыИсточниковДанныхПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаПравилаПоХозяйственнымОперациям Тогда
		ОбработчикХозяйственныеОперацииПриАктивизацииСтроки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстОперативныйУчетПравилаПоСтатьямБюджетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ХозяйственнаяОперация = Элементы.ХозяйственныеОперации.ТекущаяСтрока; 
	
	Если Не ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете хозяйственную операцию';ru='Для добавления правила выберете хозяйственную операцию'");
		ПоказатьПредупреждение(, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	Если Элементы.ХозяйственныеОперации.ДанныеСтроки(ХозяйственнаяОперация).ЭтоГруппа Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете хозяйственную операцию, а не группу';ru='Для добавления правила выберете хозяйственную операцию, а не группу'");
		ПоказатьПредупреждение(, ТекстНСТР);
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтекстСтатьяПравилаПоСтатьямБюджетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	СтатьяБюджетов = Элементы.СтатьиБюджетов.ТекущаяСтрока; 
	
	Если Не ЗначениеЗаполнено(СтатьяБюджетов) Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете статью бюджетов';ru='Для добавления правила выберете статью бюджетов'");
		ПоказатьПредупреждение(, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	Если Элементы.СтатьиБюджетов.ДанныеСтроки(СтатьяБюджетов).ЭтоГруппа Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете статью бюджетов, а не группу';ru='Для добавления правила выберете статью бюджетов, а не группу'");
		ПоказатьПредупреждение(, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстПоказательПравилаПоПоказателямБюджетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПоказательБюджетов = Элементы.ПоказателиБюджетов.ТекущаяСтрока; 
	
	Если Не ЗначениеЗаполнено(ПоказательБюджетов) Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете показатель бюджетов';ru='Для добавления правила выберете показатель бюджетов'");
		ПоказатьПредупреждение(,ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	Если Элементы.ПоказателиБюджетов.ДанныеСтроки(ПоказательБюджетов).ЭтоГруппа Тогда
		Отказ = Истина;
		ТекстНСТР = НСтр("en='Для добавления правила выберете показатель бюджетов, а не группу';ru='Для добавления правила выберете показатель бюджетов, а не группу'");
		ПоказатьПредупреждение(, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РезультатРаботыПравилПоОперации(Команда)
	
	Операция = Элементы.ХозяйственныеОперации.ТекущаяСтрока;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "РезультатРаботыПравилПоСтатьямБюджетов");
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ИсточникДанных", Операция));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
	
	ФормаРезультатовРаботыПравилПоОперации = ПолучитьФорму("Отчет.РезультатРаботыПравилПолученияФактическихДанных.Форма",
		ПараметрыФормы, , "ХозяйственнаяОперация = " + Операция); 
	
	ЭлемВарианты = ФормаРезультатовРаботыПравилПоОперации.Элементы.Найти("ФормаВарианты");
	Если ЭлемВарианты <> Неопределено Тогда
		ЭлемВарианты.Видимость = Ложь;
	КонецЕсли;
	
	ФормаРезультатовРаботыПравилПоОперации.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатРаботыПравилПоСтатьеБюджетов(Команда)
	
	СтатьяБюджетов = Элементы.СтатьиБюджетов.ТекущаяСтрока;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "РезультатРаботыПравилПоСтатьеБюджетов");
	ПараметрыФормы.Вставить("Отбор", Новый Структура("СтатьяБюджетов", СтатьяБюджетов));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
	
	ФормаРезультатовРаботыПравилПоСтатьеБюджетов = ПолучитьФорму("Отчет.РезультатРаботыПравилПолученияФактическихДанных.Форма",
		ПараметрыФормы, , "СтатьяБюджетов = " + СтатьяБюджетов);
	
	ЭлемВарианты = ФормаРезультатовРаботыПравилПоСтатьеБюджетов.Элементы.Найти("ФормаВарианты");
	Если ЭлемВарианты <> Неопределено Тогда
		ЭлемВарианты.Видимость = Ложь;
	КонецЕсли;
	
	ФормаРезультатовРаботыПравилПоСтатьеБюджетов.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатРаботыПравилПоПоказателюБюджетов(Команда)
	
	ПоказательБюджетов = Элементы.ПоказателиБюджетов.ТекущаяСтрока;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "РезультатРаботыПравилПоПоказателюБюджетов");
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ПоказательБюджетов", ПоказательБюджетов));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
	
	ФормаРезультатовРаботыПравилПоПоказателюБюджетов = ПолучитьФорму("Отчет.РезультатРаботыПравилПолученияФактическихДанных.Форма", 
		ПараметрыФормы, , "ПоказательБюджетов = " + ПоказательБюджетов);
	
	ЭлемВарианты = ФормаРезультатовРаботыПравилПоПоказателюБюджетов.Элементы.Найти("ФормаВарианты");
	Если ЭлемВарианты <> Неопределено Тогда
		ЭлемВарианты.Видимость = Ложь;
	КонецЕсли;
	
	ФормаРезультатовРаботыПравилПоПоказателюБюджетов.Открыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтекстОперативныйУчетПравилаПоСтатьямБюджетовПредставлениеОтбора.Имя);
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтекстИсточникПравилаПоСтатьямБюджетов.ПредставлениеОтбора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("en='<без отбора>';ru='<без отбора>'"));
	
	//Элемент = УсловноеОформление.Элементы.Добавить();
	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтекстОперативныйУчетПравилаПоПоказателямБюджетовПредставлениеОтбора.Имя);
	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтекстИсточникПравилаПоПоказателямБюджетов.ПредставлениеОтбора");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	//Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("en='<без отбора>';ru='<без отбора>'"));
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтекстСтатьяПравилаПоСтатьямБюджетовПредставлениеОтбора.Имя);
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтекстСтатьяПравилаПоСтатьямБюджетов.ПредставлениеОтбора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("en='<без отбора>';ru='<без отбора>'"));
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КонтекстПоказательПравилаПоПоказателямБюджетовПредставлениеОтбора.Имя);
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтекстПоказательПравилаПоПоказателямБюджетов.ПредставлениеОтбора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("en='<без отбора>';ru='<без отбора>'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСтатьиБюджетовПриАктивизацииСтроки()
	
	УстановитьОтборПравилПоСтатьеБюджетов(КонтекстСтатьяПравилаПоСтатьямБюджетов, Элементы.СтатьиБюджетов.ТекущаяСтрока);
	Элементы.КонтекстСтатьяПравилаПоСтатьямБюджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПоказателиБюджетовПриАктивизацииСтроки()
	
	УстановитьОтборПравилПоПоказателюБюджетов(КонтекстПоказательПравилаПоПоказателямБюджетов, Элементы.ПоказателиБюджетов.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикХозяйственныеОперацииПриАктивизацииСтроки()
	
	Раздел = ПредопределенноеЗначение("Перечисление.РазделыИсточниковДанныхБюджетирования.ОперативныйУчет");
	УстановитьОтборПравилПоИсточникуДанных(КонтекстИсточникПравилаПоСтатьямБюджетов, Раздел, Элементы.ХозяйственныеОперации.ТекущаяСтрока); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПравилПоИсточникуДанных(ТаблицаПравил, РазделИсточникаДанных, ИсточникДанных)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ТаблицаПравил, "ИсточникДанных", ИсточникДанных, Истина);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ТаблицаПравил, "РазделИсточникаДанных", РазделИсточникаДанных, Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПравилПоСтатьеБюджетов(ТаблицаПравил, СтатьяБюджетов)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ТаблицаПравил, "СтатьяБюджетов", СтатьяБюджетов, Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПравилПоПоказателюБюджетов(ТаблицаПравил, ПоказательБюджетов)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ТаблицаПравил, "ПоказательБюджетов", ПоказательБюджетов, Истина);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Если РежимНастройкиПравил = 0 Тогда
		Элементы.СтраницаПоСтатьямИПоказателямБюджетов.Видимость = Истина;
		Элементы.СтраницаПоИсточникамДанных.Видимость = Ложь;
	Иначе
		Элементы.СтраницаПоСтатьямИПоказателямБюджетов.Видимость = Ложь;
		Элементы.СтраницаПоИсточникамДанных.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти