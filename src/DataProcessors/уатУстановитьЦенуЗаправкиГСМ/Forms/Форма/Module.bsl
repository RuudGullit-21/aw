#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
		
	Если НЕ ЗначениеЗаполнено(АЗС) Тогда
		АЗС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация"), ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнаяАЗС);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГСМ",                Истина);
	ПараметрыФормы.Вставить("НачальноеЗначениеВыбора", ГСМ);
	
	ФормаВыбора = ПолучитьФорму("РегистрСведений.уатНоменклатураГСМ.ФормаСписка", ПараметрыФормы);
	
	ГруппаОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.Использование    = Истина;
	ГруппаОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ГруппаОтбора.ТипГруппы        = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборТопливо = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборТопливо.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ОтборТопливо.Использование    = Истина;
	ОтборТопливо.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ГруппаГСМ");
	ОтборТопливо.ПравоеЗначение   = ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо");
	ОтборТопливо.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ОтборТЖ = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборТЖ.Использование    = Истина;
	ОтборТЖ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ОтборТЖ.ТипГруппы        = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборТЖ1 = ОтборТЖ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборТЖ1.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ОтборТЖ1.Использование    = Истина;
	ОтборТЖ1.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ГруппаГСМ");
	ОтборТЖ1.ПравоеЗначение   = ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости");
	ОтборТЖ1.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ОтборТЖ2 = ОтборТЖ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборТЖ2.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ОтборТЖ2.Использование    = Истина;
	ОтборТЖ2.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ВестиУчетОстатковТЖ");
	ОтборТЖ2.ПравоеЗначение   = Истина;
	ОтборТЖ2.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОписаниеОповещенияВыбораГСМ", ЭтотОбъект);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = уатГСМ.ПолучитьСписокАвтоподбораПоляГСМ(Текст);
КонецПроцедуры

&НаКлиенте
Процедура ГСМОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ПараметрыПолученияДанных.СтрокаПоиска = "";
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТабличноеПолеРезультат

&НаКлиенте
Процедура ТабличноеПолеРезультатПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ПоказатьЗначение(Неопределено, Элементы.ТабличноеПолеРезультат.ТекущиеДанные.Документ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		ТекстНСТР = НСтр("en='The start date cannot be greater than period end date!';ru='Дата начала периода не может быть больше даты конца периода!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(АЗС) Тогда
		ТекстНСТР = НСтр("en='Gas station is not selected!';ru='Не выбрана АЗС!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(Организация) Тогда
		ТекстНСТР = НСтр("en='Not selected company!';ru='Не выбрана организация!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ГСМ) Тогда
		ТекстНСТР = НСтр("en='Fuels not selected!';ru='Не выбрано ГСМ!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
		
	Если Не ЗаправкаЗаНаличные И Не ЗаправкаОтПоставщика И Не ЗаправкаПоТопливнойКарте Тогда
		ТекстНСТР = НСтр("en='You should select fueling type!';ru='Не выбран ни один вид заправки ГСМ!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	Если ПереключательПослеОбработки = 1 Тогда
		Ответ = Неопределено;

		ТекстНСТР = НСтр("en='Selected the re-sequencing of documents."
"It may take a long time! Continue?';ru='Выбрано восстановление последовательности документов."
"Это может занять продолжительное время! Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьОбработкуЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ОКОтмена, , КодВозвратаДиалога.ОК);
        Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуФрагмент();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьОбработкуСервер(мсвЗаправки)
	мсвЗаправки = Новый Массив;
	
	мсвВидыЗаправки = Новый Массив;
	
	Если ЗаправкаЗаНаличные Тогда
		мсвВидыЗаправки.Добавить(Перечисления.уатВидыДвиженияГСМ.ЗаправкаНаличные);
	КонецЕсли;
	
	Если ЗаправкаПоТопливнойКарте Тогда
		мсвВидыЗаправки.Добавить(Перечисления.уатВидыДвиженияГСМ.ЗаправкаПластиковаяКарта);
	КонецЕсли;
	
	Если ЗаправкаОтПоставщика Тогда
		мсвВидыЗаправки.Добавить(Перечисления.уатВидыДвиженияГСМ.ЗаправкаПоставщик);
	КонецЕсли;
		
	мОтбор = Новый Структура("Организация, АЗС, ГСМ", Организация, АЗС, ГСМ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатЗаправкаГСМЗаправки.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.уатЗаправкаГСМ.Заправки КАК уатЗаправкаГСМЗаправки
	|ГДЕ
	|	уатЗаправкаГСМЗаправки.Ссылка.Организация = &Организация
	|	И уатЗаправкаГСМЗаправки.Ссылка.АЗС = &АЗС
	|	И уатЗаправкаГСМЗаправки.ГСМ = &ГСМ
	|	И уатЗаправкаГСМЗаправки.Ссылка.ВидДвиженияГСМ В(&мсвВидыЗаправки)
	|	И НЕ уатЗаправкаГСМЗаправки.Ссылка.ПометкаУдаления
	|	И уатЗаправкаГСМЗаправки.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатЗаправкаГСМЗаправки.Сумма <> уатЗаправкаГСМЗаправки.Количество * &Цена";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("АЗС", АЗС);
	Запрос.УстановитьПараметр("мсвВидыЗаправки", мсвВидыЗаправки);
	Запрос.УстановитьПараметр("ГСМ", ГСМ);
	Запрос.УстановитьПараметр("Цена", Цена);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон)));
	
	мсвЗаправки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если мсвЗаправки.Количество() = 0 Тогда
		Если ФлажокКомментироватьХодВыполнения Тогда
			ТекстНСТР = НСтр("en='Documents not found';ru='Документов не найдено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ТабличноеПолеРезультат.Очистить();
	
	Колич = мсвЗаправки.Количество();
	Сч = 0;
	
	Для Каждого ТекЗаправка Из мсвЗаправки Цикл
		Сч = Сч + 1;
		
		НачатьТранзакцию();
		
		// управляемая блокировка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.уатЗаправкаГСМ");
		//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ТекЗаправка);
		Блокировка.Заблокировать();
		
		ОбъектДокумент = ТекЗаправка.ПолучитьОбъект();
		
		Для Каждого ТекСтрока Из ОбъектДокумент.Заправки Цикл
			ТекСтрока.Цена = Цена;
			ТекСтрока.Сумма = ТекСтрока.Цена * ТекСтрока.Количество;
			ТекСтрока.СуммаНДС = уатОбщегоНазначенияТиповые.уатРассчитатьСуммуНДС(ТекСтрока.Сумма,
			ОбъектДокумент.УчитыватьНДС, ОбъектДокумент.СуммаВключаетНДС, уатОбщегоНазначенияТиповые.уатПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));
		КонецЦикла;
		
		НоваяСтрока = ТабличноеПолеРезультат.Добавить();
		НоваяСтрока.Документ = ТекЗаправка;
			
		Попытка
			Если ОбъектДокумент.Проведен Тогда
				РежимЗаписи_ = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи_ = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			
			ОбъектДокумент.Записать(РежимЗаписи_);
			
			Если ФлажокКомментироватьХодВыполнения Тогда
				ТекстНСТР = НСтр("en='Document <%1>. Successfully overwritten';ru='Документ <%1>. Успешно перезаписан'");
				ТекстНСТР = СтрШаблон(ТекстНСТР, ОбъектДокумент);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			КонецЕсли;
						
			Если ТекЗаправка.ПометкаУдаления Тогда
				НоваяСтрока.ИндексКартинки = 1;
			ИначеЕсли ТекЗаправка.Проведен Тогда
				НоваяСтрока.ИндексКартинки = 0;
			Иначе
				НоваяСтрока.ИндексКартинки = 2;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			НоваяСтрока.Ошибка = Истина;
			
			Если ФлажокКомментироватьХодВыполнения Тогда
				ТекстНСТР = НСтр("en='Document <%1>. Failed to overwrite';ru='Документ <%1>. Не удалось перезаписать'");
				ТекстНСТР = СтрШаблон(ТекстНСТР, ТекЗаправка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			КонецЕсли;
			
			ОтменитьТранзакцию();
			
		КонецПопытки;
		
		ИндикаторХодПроцесса = Сч / Колич * 100;
	КонецЦикла;
КонецПроцедуры

// Перепроводит только связанные с измененными заправками документы Путевой лист и слив ГСМ
// Связанными считаются документы-регистраторы, которые закрывают партии - заправки ГСМ с измененными ценами
&НаСервере
Процедура ПерепровестиСвязанныеДокументы(мсвЗаправки)
	СписокЗаправок = Новый СписокЗначений;
	СписокЗаправок.ЗагрузитьЗначения(мсвЗаправки);
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатОстаткиГСМнаТСОбороты.Регистратор КАК Ссылка,
	|	ВЫБОР
	|		КОГДА уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ВидДокумента
	|ИЗ
	|	РегистрНакопления.уатОстаткиГСМнаТС.Обороты(&ДатаНач, &ДатаКон, Регистратор, Партия В (&СписокЗаправок)) КАК уатОстаткиГСМнаТСОбороты
	|ГДЕ
	|	(уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатПутевойЛист
	|			ИЛИ уатОстаткиГСМнаТСОбороты.Регистратор ССЫЛКА Документ.уатСливГСМ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	уатОстаткиГСМнаТСОбороты.Регистратор.Дата");
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("СписокЗаправок", СписокЗаправок);
	
	тблСвязанныеДокументы = Запрос.Выполнить().Выгрузить();
	
	Колич = тблСвязанныеДокументы.Количество();
	Сч = 0;
	Для Каждого ТекСвязДок Из тблСвязанныеДокументы Цикл
		Сч = Сч + 1;
		
		НоваяСтрока = ТабличноеПолеРезультат.Добавить();
		
		ДокОбъект = ТекСвязДок.Ссылка.ПолучитьОбъект();
		НоваяСтрока.Документ = ТекСвязДок.Ссылка;
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ТекстНСТР = НСтр("en='Document <%1>. Successfully overwritten';ru='Документ <%1>. Успешно перезаписан'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, ДокОбъект);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Исключение
			ТекстНСТР = НСтр("en='Document <%1>. Failed to overwrite';ru='Документ <%1>. Не удалось перезаписать'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, ДокОбъект);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			НоваяСтрока.Ошибка = Истина;
		КонецПопытки;
			
		ИндикаторХодПроцесса = Сч / Колич * 100;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВосстановитьПоследовательностьПЛ()
	Последовательности.уатОстаткиГСМнаТС.Восстановить();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		ДатаНач = Период.ДатаНачала;
		ДатаКон = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.ОК Тогда
        Возврат;
    КонецЕсли;
    
    ВыполнитьОбработкуФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуФрагмент()
    
    Перем мсвЗаправки;
    
    Элементы.ГруппаИндикаторСтраницы.ТекущаяСтраница = Элементы.СтраницаИндикатор;
    
    мсвЗаправки = Неопределено;	
    ВыполнитьОбработкуСервер(мсвЗаправки);
    
    Если ПереключательПослеОбработки = 0 Тогда //обрабатываем только связанные документы (для путевого листа перепроведение только по регистру ГСМ)
        НадписьСостояние = НСтр("en='Running the reposting of related documents ...';ru='Выполняется перепроведение связанных документов ...'");
        ПерепровестиСвязанныеДокументы(мсвЗаправки);
        
    ИначеЕсли ПереключательПослеОбработки = 1 Тогда //полное восстановление последовательности
        НадписьСостояние = НСтр("en='Executing re-sequencing ...';ru='Выполняется восстановление последовательности ...'");
        Элементы.ГруппаИндикаторСтраницы.ТекущаяСтраница = Элементы.СтраницаПустая;
        ВосстановитьПоследовательностьПЛ();
        
    КонецЕсли;
    
    НадписьСостояние = "";
    Элементы.ГруппаИндикаторСтраницы.ТекущаяСтраница = Элементы.СтраницаПустая;
    
    Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаДокументы;

КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГСМ = Результат;
КонецПроцедуры

#КонецОбласти
