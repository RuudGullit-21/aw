
#Область ОписаниеПеременных

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	ПериодРемЛисты.ДатаНачала    = НачалоГода(ТекущаяДата());
	ПериодРемЛисты.ДатаОкончания = КонецГода(ТекущаяДата());
	
	ЗаказыНаТС_ЦветДокумента.ДатаНачала    = НачалоГода(ТекущаяДата());
	ЗаказыНаТС_ЦветДокумента.ДатаОкончания = КонецГода(ТекущаяДата());
	ЗаказыНаТС_ЦветДокумента.Вариант       = ВариантСтандартногоПериода.ЭтотГод;
	
	ПериодЗаполнениеВалюты.ДатаНачала    = НачалоГода(ТекущаяДата());
	ПериодЗаполнениеВалюты.ДатаОкончания = КонецГода(ТекущаяДата());
	
	ПериодОтрезкиПути.ДатаНачала = НачалоГода(ТекущаяДата());
	ПериодОтрезкиПути.ДатаОкончания = КонецГода(ТекущаяДата());
	
	ПериодПлатежныйКалендарь.ДатаНачала    = НачалоГода(ТекущаяДата());
	ПериодПлатежныйКалендарь.ДатаОкончания = КонецГода(ТекущаяДата());
	
	ПериодНДСУпр.ДатаНачала    = НачалоМесяца(ТекущаяДата());
	ПериодНДСУпр.ДатаОкончания = ТекущаяДата();
	
	ПериодМенеджеры.ДатаНачала    = НачалоМесяца(ТекущаяДата());
	ПериодМенеджеры.ДатаОкончания = ТекущаяДата();
	
	ПериодПлатежныйКалендарьКорректировка.ДатаНачала    = НачалоГода(ТекущаяДата());
	ПериодПлатежныйКалендарьКорректировка.ДатаОкончания = КонецГода(ТекущаяДата());
	
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() Тогда
		Элементы.ОбновлениеРемонтныеЛисты_1_0_9_1.Заголовок = Элементы.ОбновлениеРемонтныеЛисты_1_0_9_1.Заголовок + " (1.0.9.1)";
		Элементы.ОбновлениеЗаказыНаТС_1_1_2_1.Заголовок = Элементы.ОбновлениеЗаказыНаТС_1_1_2_1.Заголовок + " (1.1.2.1)";
		Элементы.ОбновлениеПланированиеРаботыТС_1_1_2_3.Заголовок = Элементы.ОбновлениеПланированиеРаботыТС_1_1_2_3.Заголовок + " (1.1.2.3)";
		Элементы.ОбновлениеЗаполнениеВалюты_1_1_7_1.Заголовок = Элементы.ОбновлениеЗаполнениеВалюты_1_1_7_1.Заголовок + " (1.1.7.1)";
		Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1.Заголовок = Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1.Заголовок + " (1.1.7.1)";
		Элементы.ОбновлениеОтрезкиПути_1_1_9_1.Заголовок = Элементы.ОбновлениеОтрезкиПути_1_1_9_1.Заголовок + " (1.1.9.1)";
		Элементы.ПривязкаПунктовКГеозонам_1_1_12_1.Заголовок = Элементы.ПривязкаПунктовКГеозонам_1_1_12_1.Заголовок + " (1.1.12.1)";
		Элементы.ОбновлениеПлатежныйКалендарь_1_1_16_1.Заголовок = Элементы.ОбновлениеПлатежныйКалендарь_1_1_16_1.Заголовок + " (1.1.16.1)";
		Элементы.ОбновлениеЗаказыНаТС_1_1_23_1.Заголовок = Элементы.ОбновлениеЗаказыНаТС_1_1_23_1.Заголовок + " (1.1.24.1)";
		Элементы.ЗаполнениеНДСУпр_1_1_24_1.Заголовок = Элементы.ЗаполнениеНДСУпр_1_1_24_1.Заголовок + " (1.1.24.1)";
		Элементы.ОбновлениеПлатежныйКалендарь_1_1_24_1.Заголовок = Элементы.ОбновлениеПлатежныйКалендарь_1_1_24_1.Заголовок + " (1.1.24.1)";
	Иначе
		Элементы.ОбновлениеРемонтныеЛисты_1_0_9_1.Заголовок = Элементы.ОбновлениеРемонтныеЛисты_1_0_9_1.Заголовок + " (2.1.5.1)";
		Элементы.ОбновлениеЗаказыНаТС_1_1_2_1.Заголовок = Элементы.ОбновлениеЗаказыНаТС_1_1_2_1.Заголовок + " (2.2.2.1)";
		Элементы.ОбновлениеПланированиеРаботыТС_1_1_2_3.Заголовок = Элементы.ОбновлениеПланированиеРаботыТС_1_1_2_3.Заголовок + " (2.2.2.3)";
		Элементы.ОбновлениеЗаполнениеВалюты_1_1_7_1.Заголовок = Элементы.ОбновлениеЗаполнениеВалюты_1_1_7_1.Заголовок + " (2.2.7.1)";
		Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1.Заголовок = Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1.Заголовок + " (2.2.7.1)";
		Элементы.ОбновлениеОтрезкиПути_1_1_9_1.Заголовок = Элементы.ОбновлениеОтрезкиПути_1_1_9_1.Заголовок + " (2.2.9.1)";
		Элементы.ПривязкаПунктовКГеозонам_1_1_12_1.Заголовок = Элементы.ПривязкаПунктовКГеозонам_1_1_12_1.Заголовок + " (2.2.12.1)";
		Элементы.ОбновлениеПлатежныйКалендарь_1_1_16_1.Заголовок = Элементы.ОбновлениеПлатежныйКалендарь_1_1_16_1.Заголовок + " (2.2.16.1)";
		Элементы.ОбновлениеЗаказыНаТС_1_1_23_1.Заголовок = Элементы.ОбновлениеЗаказыНаТС_1_1_23_1.Заголовок + " (2.2.24.1)";
		Элементы.ЗаполнениеНДСУпр_1_1_24_1.Заголовок = Элементы.ЗаполнениеНДСУпр_1_1_24_1.Заголовок + " (2.2.24.1)";
		Элементы.ОбновлениеПлатежныйКалендарь_1_1_24_1.Заголовок = Элементы.ОбновлениеПлатежныйКалендарь_1_1_24_1.Заголовок + " (2.2.24.1)";
	КонецЕсли;
	
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1.Видимость = флМноговалютныйУчет;
	Если флМноговалютныйУчет Тогда
		ПериодМноговалютныйУчет.ДатаНачала    = НачалоГода(ТекущаяДата());
		ПериодМноговалютныйУчет.ДатаОкончания = КонецГода(ТекущаяДата());
	КонецЕсли;
	
	// Вызов из формы настроек многовалютного учета
	Если Параметры.Свойство("ОтложенноеОбновлениеМноговалютныйУчет") Тогда
		Элементы.ОбновлениеЗаполнениеВалюты_1_1_7_1.Скрыть();
		ТекущийЭлемент = Элементы.ОбновлениеМноговалютныйУчет_1_1_7_1;
	КонецЕсли;
	
	Для Каждого ТекРеквизит Из ПолучитьРеквизиты() Цикл
		Если СтрНачинаетсяС(ТекРеквизит.Имя, "ЗаполнениеНДСУпр") Тогда
			ЭтотОбъект[ТекРеквизит.Имя] = Истина;
		КонецЕсли;
	КонецЦикла;
	ЗаполнениеНДСУпр_1_1_24_1_уатРаспределениеДоходовРасходов = Ложь;
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиПРОФ() Тогда
		ЗаполнениеНДСУпр_1_1_24_1_уатРекламация_уэ = Ложь;
		ЗаполнениеНДСУпр_1_1_24_1_уатСтраховойСертификат_уэ = Ложь;
		Элементы.ЗаполнениеНДСУпр_1_1_24_1_уатРекламация_уэ.Видимость = Ложь;
		Элементы.ЗаполнениеНДСУпр_1_1_24_1_уатСтраховойСертификат_уэ.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериодРемЛисты1091(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ПериодРемЛисты.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодРемЛисты.ДатаОкончания;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект,
		Новый Структура("ИмяРеквизитаПериод", "ПериодРемЛисты")));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Период <> Неопределено Тогда
		ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаПериод].ДатаНачала    = Период.ДатаНачала;
		ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаПериод].ДатаОкончания = Период.ДатаОкончания;
		ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаПериод].Вариант       = Период.Вариант;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРемЛисты1091(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПериодРемЛисты.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодРемЛисты.ДатаОкончания)
		ИЛИ ПериодРемЛисты.ДатаНачала > ПериодРемЛисты.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки ремонтных листов!");
		Возврат;
	КонецЕсли;
		
	СтруктураПараметров = Новый Структура("Период", ПериодРемЛисты);
	ИнициализацияФормыДлительнойОперации("ОбработатьРемЛисты1091Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗаказыНаТС1121(Команда)
	
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ЗаказыНаТС_ЦветДокумента.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ЗаказыНаТС_ЦветДокумента.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ЗаказыНаТС_ЦветДокумента.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ЗаказыНаТС_ЦветДокумента")
		)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗаказыНаТС1123(Команда)
	
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ЗаказыНаТС_Состояния.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ЗаказыНаТС_Состояния.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ЗаказыНаТС_Состояния.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ЗаказыНаТС_Состояния")
		)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаказыНаТС1121(Команда)
	
	Если Не ЗначениеЗаполнено(ЗаказыНаТС_ЦветДокумента.ДатаНачала) Или Не ЗначениеЗаполнено(ЗаказыНаТС_ЦветДокумента.ДатаОкончания)
			Или ЗаказыНаТС_ЦветДокумента.ДатаНачала > ЗаказыНаТС_ЦветДокумента.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки заказов.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Период", ЗаказыНаТС_ЦветДокумента);
	ИнициализацияФормыДлительнойОперации("ОбработатьЗаказыНаТС1121Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаказыНаТС1123(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЗаказыНаТС_Состояния.ДатаНачала)
		ИЛИ НЕ ЗначениеЗаполнено(ЗаказыНаТС_Состояния.ДатаОкончания)
			Или ЗаказыНаТС_Состояния.ДатаНачала > ЗаказыНаТС_Состояния.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки заказов.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Период", ЗаказыНаТС_Состояния);
	ИнициализацияФормыДлительнойОперации("ОбработатьЗаказыНаТС_1_1_23_1Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодПланыТС1123(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодПланыТС.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодПланыТС.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодПланыТС.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодПланыТС")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПланыТС1123(Команда)
	
	СтруктураПараметров = Новый Структура("Период", ПериодПланыТС);
	ИнициализацияФормыДлительнойОперации("ОбработатьПланированиеРаботыТС1131Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗаполнениеВалюты_1_1_7_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодЗаполнениеВалюты.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодЗаполнениеВалюты.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодЗаполнениеВалюты.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодЗаполнениеВалюты")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаполнениеВалюты_1_1_7_1(Команда)
	Если НЕ ЗначениеЗаполнено(ПериодЗаполнениеВалюты.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодЗаполнениеВалюты.ДатаОкончания)
		ИЛИ ПериодЗаполнениеВалюты.ДатаНачала > ПериодЗаполнениеВалюты.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки заполнения валюты.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период",                                         ПериодЗаполнениеВалюты);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_Взаиморасчеты",         ЗаполнениеВалюты_1_1_7_1_Взаиморасчеты);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ВыставленныеУслуги",    ЗаполнениеВалюты_1_1_7_1_ВыставленныеУслуги);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ДатыПлатежей",          ЗаполнениеВалюты_1_1_7_1_ДатыПлатежей);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ЗаказНаТС",             ЗаполнениеВалюты_1_1_7_1_ЗаказНаТС);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ЗаказПеревозчику",      ЗаполнениеВалюты_1_1_7_1_ЗаказПеревозчику);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_МаршрутныйЛист",        ЗаполнениеВалюты_1_1_7_1_МаршрутныйЛист);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ПлановыеУслуги",        ЗаполнениеВалюты_1_1_7_1_ПлановыеУслуги);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ПлатежныйКалендарь",    ЗаполнениеВалюты_1_1_7_1_ПлатежныйКалендарь);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_Потребность",           ЗаполнениеВалюты_1_1_7_1_Потребность);
	СтруктураПараметров.Вставить("ЗаполнениеВалюты_1_1_7_1_ПредоставленныеУслуги", ЗаполнениеВалюты_1_1_7_1_ПредоставленныеУслуги);
		
	ИнициализацияФормыДлительнойОперации("ОбработатьЗаполнениеВалюты_1_1_7_1Сервер", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодМноговалютныйУчет_1_1_7_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодМноговалютныйУчет.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодМноговалютныйУчет.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодМноговалютныйУчет.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодМноговалютныйУчет")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьМноговалютныйУчет_1_1_7_1(Команда)
	Если НЕ ЗначениеЗаполнено(ПериодМноговалютныйУчет.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодМноговалютныйУчет.ДатаОкончания)
		ИЛИ ПериодМноговалютныйУчет.ДатаНачала > ПериодМноговалютныйУчет.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки документов для перехода на многовалютный учет.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период",                                            ПериодМноговалютныйУчет);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_ПКО",                     МноговалютныйУчет_1_1_7_1_ПКО);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_ПоступлениеТоваровУслуг", МноговалютныйУчет_1_1_7_1_ПоступлениеТоваровУслуг);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_ППВ",                     МноговалютныйУчет_1_1_7_1_ППВ);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_ППИ",                     МноговалютныйУчет_1_1_7_1_ППИ);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_РеализацияУслуг",         МноговалютныйУчет_1_1_7_1_РеализацияУслуг);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_РКО",                     МноговалютныйУчет_1_1_7_1_РКО);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_СчетНаОплатуПокупателю",  МноговалютныйУчет_1_1_7_1_СчетНаОплатуПокупателю);
	СтруктураПараметров.Вставить("МноговалютныйУчет_1_1_7_1_СчетНаОплатуПоставщика",  МноговалютныйУчет_1_1_7_1_СчетНаОплатуПоставщика);
		
	ИнициализацияФормыДлительнойОперации("ОбработатьМноговалютныйУчет_1_1_7_1Сервер", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодОтрезкиПути_1_1_9_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодОтрезкиПути.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодОтрезкиПути.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодОтрезкиПути.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодОтрезкиПути")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтрезкиПути_1_1_9_1(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПериодОтрезкиПути.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодОтрезкиПути.ДатаОкончания)
		ИЛИ ПериодОтрезкиПути.ДатаНачала > ПериодОтрезкиПути.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки документов для обновления отрезков пути.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Период", ПериодОтрезкиПути);
	ИнициализацияФормыДлительнойОперации("ОбработатьОтрезкиПути_1_1_9_1Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПривязкаПунктовКГеозонам_1_1_12_1(Команда)
	
	СтруктураПараметров = Новый Структура;
	ИнициализацияФормыДлительнойОперации("ПривязкаПунктовКГеозонам_1_1_12_1Сервер", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодПлатежныйКалендарь_1_1_16_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодПлатежныйКалендарь.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодПлатежныйКалендарь.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодПлатежныйКалендарь.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодПлатежныйКалендарь")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПлатежныйКалендарь_1_1_16_1(Команда)
	Если НЕ ЗначениеЗаполнено(ПериодПлатежныйКалендарь.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодПлатежныйКалендарь.ДатаОкончания)
		ИЛИ ПериодПлатежныйКалендарь.ДатаНачала > ПериодПлатежныйКалендарь.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки регистров Платежного календаря.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период", ПериодПлатежныйКалендарь);
		
	ИнициализацияФормыДлительнойОперации("ОбработатьПлатежныйКалендарь_1_1_16_1Сервер", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗаполнениеНДСУпр_1_1_24_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодНДСУпр.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодНДСУпр.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодНДСУпр.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодНДСУпр")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаполнениеНДСУпр_1_1_24_1(Команда)
	Если НЕ ЗначениеЗаполнено(ПериодНДСУпр.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодНДСУпр.ДатаОкончания)
		ИЛИ ПериодНДСУпр.ДатаНачала > ПериодНДСУпр.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период заполнения полей ""Сумма НДС (упр.)"", ""Сумма без НДС (упр.)"", ""Менеджер"".");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период",    ПериодНДСУпр);
	СтруктураПараметров.Вставить("Документы", СписокДокументовДляОбработки("ЗаполнениеНДСУпр_1_1_24_1_"));
			
	ИнициализацияФормыДлительнойОперации("ОбработатьЗаполнениеНДСУпр_1_1_24_1Сервер", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодПлатежныйКалендарь_1_1_24_1(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = ПериодПлатежныйКалендарьКорректировка.ДатаНачала;
	ДиалогПериода.Период.ДатаОкончания = ПериодПлатежныйКалендарьКорректировка.ДатаОкончания;
	ДиалогПериода.Период.Вариант       = ПериодПлатежныйКалендарьКорректировка.Вариант;
	
	ДиалогПериода.Показать(
		Новый ОписаниеОповещения(
			"НастройкаПериодаЗавершение", 
			ЭтотОбъект, 
			Новый Структура("ИмяРеквизитаПериод", "ПериодПлатежныйКалендарьКорректировка")
		)
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПлатежныйКалендарь_1_1_24_1(Команда)
	Если НЕ ЗначениеЗаполнено(ПериодПлатежныйКалендарьКорректировка.ДатаНачала)
		ИЛИ НЕ ЗначениеЗаполнено(ПериодПлатежныйКалендарьКорректировка.ДатаОкончания)
		ИЛИ ПериодПлатежныйКалендарьКорректировка.ДатаНачала > ПериодПлатежныйКалендарьКорректировка.ДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Указан некорректный период обработки движений по регистру Платежный календарь.");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период", ПериодПлатежныйКалендарьКорректировка);
		
	ИнициализацияФормыДлительнойОперации("ОбработатьПлатежныйКалендарь_1_1_24_1Сервер", СтруктураПараметров);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыВыводаФормыДлительнойОперацииПриПроведении

&НаКлиенте
Процедура ИнициализацияФормыДлительнойОперации(ИмяОбработчика, ПараметрыОбработчика)

	ДлительнаяОперация = ВыполнениеОбработкиНаСервере(ИмяОбработчика, ПараметрыОбработчика);
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания       = Истина;
	НастройкиОжидания.ВыводитьПрогрессВыполнения = Истина;

	Обработчик = Новый ОписаниеОповещения("ПроверитьВыполнениеЗадания", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);

КонецПроцедуры

&НаСервере
Функция ВыполнениеОбработкиНаСервере(ИмяОбработчика, ПараметрыОбработчика)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "Отложенное обновление: " + ИмяОбработчика;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.уатОтложенноеОбновлениеИБ." + ИмяОбработчика, ПараметрыОбработчика, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВыполнениеЗадания(Операция, ДополнительныеПараметры) Экспорт
	
	Если Операция = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Операция.Статус = "Выполнено" Тогда
		ПоказатьПредупреждение(, "Операция завершена успешно.");
	Иначе
		ВызватьИсключение Операция.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция СписокДокументовДляОбработки(ПрефиксИмени)
	мсвРез = Новый Массив;
	Для Каждого ТекРеквизит Из ПолучитьРеквизиты() Цикл
		Если СтрНачинаетсяС(ТекРеквизит.Имя, ПрефиксИмени) И ЭтотОбъект[ТекРеквизит.Имя] Тогда
			мсвРез.Добавить(Сред(ТекРеквизит.Имя, СтрДлина(ПрефиксИмени)+1));
		КонецЕсли;
	КонецЦикла;
	
	Возврат мсвРез;
КонецФункции

#КонецОбласти
