
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АвторизованныйПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	
	Дата = ТекущаяДата();
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(АвторизованныйПользователь, "ОсновнаяОрганизация");
	ОрганизацияПриИзмененииНаСервере(Организация, УчитыватьНДС, СуммаВключаетНДС);
	ОрганизацияПредыдущееЗначение = Организация;
	Подразделение = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(АвторизованныйПользователь, "ОсновноеПодразделениеОрганизации");
	Контрагент = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(АвторизованныйПользователь, "ОсновнойПокупатель");
	КонтрагентПредыдущееЗначение = Контрагент;
	ДоговорКонтрагента = ПолучитьОсновнойДоговорКонтрагента(Контрагент, Организация);
	ДоговорКонтрагентаПриИзмененииСервер();
	Ответственный = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(АвторизованныйПользователь, "ОсновнойОтветственный");
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = АвторизованныйПользователь;
	КонецЕсли;
	
	СтруктураОбъектовНастроек = Новый Структура;
	СтруктураОбъектовНастроек.Вставить("Организация", Организация);
	СтруктураОбъектовНастроек.Вставить("Подразделение", Подразделение);
	СтруктураОбъектовНастроек.Вставить("Пользователь", АвторизованныйПользователь);
	
	ВидПеревозки = ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнойВидПеревозок);
	ВидДоставки = ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнойВидДоставки);
	ДетализацияЗакрытия = ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, ПланыВидовХарактеристик.уатПраваИНастройки.ДетализацияЗаказаГрузоотправителя);
	НаправлениеПеревозки = ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, ПланыВидовХарактеристик.уатПраваИНастройки.ОсновноеНаправлениеПеревозки);
	
	ФлагFTLЗаказ = Ложь;
	ФлагМультимодальныйЗаказ = Истина;
	УстановитьКартинкиКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не уатЭлектронныеКартыКлиент.ЭтоПлатформаСWebKit() Тогда 
		ТекстОшибки = НСтр("ru='Обработка ""Редактирование схемы перевозки"" поддерживается только при использовании Платформы 1С:Предприятие версии 8.3.14 и выше.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	ДоговорКонтрагентаПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если Организация <> ОрганизацияПредыдущееЗначение Тогда
		ДоговорКонтрагента = ПолучитьОсновнойДоговорКонтрагента(Контрагент, Организация);
		ДоговорКонтрагентаПриИзмененииСервер();
		ОрганизацияПриИзмененииНаСервере(Организация, УчитыватьНДС, СуммаВключаетНДС);
		ОрганизацияПредыдущееЗначение = Организация;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если Контрагент <> КонтрагентПредыдущееЗначение Тогда
		ДоговорКонтрагента = ПолучитьОсновнойДоговорКонтрагента(Контрагент, Организация);
		ДоговорКонтрагентаПриИзмененииСервер();
		КонтрагентПредыдущееЗначение = Контрагент;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьТипЗаказаFTL(Команда)
	ФлагМультимодальныйЗаказ = Ложь;
	ФлагFTLЗаказ = Истина;
	УстановитьКартинкиКнопок();
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ФормаОткрытьСхему;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТипЗаказаМультимодальный(Команда)
	ФлагМультимодальныйЗаказ = Истина;
	ФлагFTLЗаказ = Ложь;
	УстановитьКартинкиКнопок();
		
	ЭтаФорма.ТекущийЭлемент = Элементы.ФормаОткрытьСхему;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСхему(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПрочиеПараметрыЗаказа = Новый Структура;
	ПрочиеПараметрыЗаказа.Вставить("Дата", Дата);
	ПрочиеПараметрыЗаказа.Вставить("ОтправлениеС", НачалоДня(Дата));
	ПрочиеПараметрыЗаказа.Вставить("ОтправлениеПо", КонецДня(Дата));
	ПрочиеПараметрыЗаказа.Вставить("ДоставкаС", НачалоДня(Дата));
	ПрочиеПараметрыЗаказа.Вставить("ДоставкаПо", КонецДня(Дата));
	ПрочиеПараметрыЗаказа.Вставить("ДатаКурса", Дата);
	ПрочиеПараметрыЗаказа.Вставить("Организация", Организация);
	ПрочиеПараметрыЗаказа.Вставить("Подразделение", Подразделение);
	ПрочиеПараметрыЗаказа.Вставить("Ответственный", Ответственный);
	ПрочиеПараметрыЗаказа.Вставить("Контрагент", Контрагент);
	ПрочиеПараметрыЗаказа.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	ПрочиеПараметрыЗаказа.Вставить("ВалютаДокумента", ВалютаДокумента);
	ПрочиеПараметрыЗаказа.Вставить("КурсВзаиморасчетов", КурсВзаиморасчетов);
	ПрочиеПараметрыЗаказа.Вставить("КратностьВзаиморасчетов", КратностьВзаиморасчетов);
	ПрочиеПараметрыЗаказа.Вставить("УчитыватьНДС", УчитыватьНДС);
	ПрочиеПараметрыЗаказа.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ПрочиеПараметрыЗаказа.Вставить("ВидДоставки", ВидДоставки);
	ПрочиеПараметрыЗаказа.Вставить("ВидПеревозки", ВидПеревозки);
	ПрочиеПараметрыЗаказа.Вставить("НаправлениеПеревозки", НаправлениеПеревозки);
	
	ПараметрыЗаказа = Новый Структура;
	ПараметрыЗаказа.Вставить("ПрочиеПараметрыЗаказа", ПрочиеПараметрыЗаказа);
	ПараметрыЗаказа.Вставить("ДетализацияЗакрытия", ДетализацияЗакрытия);
	ПараметрыЗаказа.Вставить("ФлагFTLЗаказ", ФлагFTLЗаказ);
	ПараметрыЗаказа.Вставить("ФлагМультимодальныйЗаказ", ФлагМультимодальныйЗаказ);
	
	ОткрытьФорму("Обработка.уатРедактированиеСхемыПеревозки_уэ.Форма.Форма", ПараметрыЗаказа,, Истина);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьКартинкиКнопок()
	
	Если ФлагМультимодальныйЗаказ Тогда
		Элементы.ВыбратьТипЗаказаМультимодальный.Картинка = БиблиотекаКартинок.уатСхемаМультимодальногоЗаказаВыбран;
	Иначе
		Элементы.ВыбратьТипЗаказаМультимодальный.Картинка = БиблиотекаКартинок.уатСхемаМультимодальногоЗаказа;
	КонецЕсли;
	
	Если ФлагFTLЗаказ Тогда
		Элементы.ВыбратьТипЗаказаFTL.Картинка = БиблиотекаКартинок.уатСхемаFTLЗаказаВыбран;
	Иначе
		Элементы.ВыбратьТипЗаказаFTL.Картинка = БиблиотекаКартинок.уатСхемаFTLЗаказа;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, НастройкаПольз)
	Возврат уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, НастройкаПольз);
КонецФункции

&НаСервере
Процедура ДоговорКонтрагентаПриИзмененииСервер()
	ВалютаРасчетовКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ДоговорКонтрагента.ВалютаВзаиморасчетов));
	КурсВзаиморасчетов      = ?(ВалютаРасчетовКурсКратность.Курс = 0, 1, ВалютаРасчетовКурсКратность.Курс);
	КратностьВзаиморасчетов = ?(ВалютаРасчетовКурсКратность.Кратность = 0, 1, ВалютаРасчетовКурсКратность.Кратность);
	ВалютаДокумента = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	Если уатРаботаСМетаданными.уатЕстьКонстанта("ВалютаУправленческогоУчета") Тогда
		ВалютаТоваров = Константы.ВалютаУправленческогоУчета.Получить();
	Иначе
		ВалютаТоваров = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОрганизацияПриИзмененииНаСервере(Организация, УчитыватьНДС, СуммаВключаетНДС)
	УчитыватьНДС = ПолучитьПраваИНастройкиПользователя(Организация, "УчитыватьНДС");
	СуммаВключаетНДС = ПолучитьПраваИНастройкиПользователя(Организация, "СуммаВключаетНДС");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойДоговорКонтрагента(Контрагент, Организация)
	
	ДоговорКонтрагента = уатЗаполнениеДокументов.ПолучитьОсновнойДоговорКонтрагента(Контрагент, Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, Организация);
	Возврат ДоговорКонтрагента;
	
КонецФункции

#КонецОбласти
