
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция выполняет последовательность действий, которые необходимы для перехода на английскую локалицию.
//
Функция ВыполнитьДействияДляАнглийскойЛокализации() Экспорт
	
	УстановитьКонстантыДляАнглийскойЛокализации();
	Ошибки = ЗаполнитьПредопределенныеДанные();
	
КонецФункции

// Процедура отключает функциональные возможности, которые доступны только в конфигурации для РФ.
//
Процедура УстановитьКонстантыДляАнглийскойЛокализации()
	
	Если Метаданные.Константы.Найти("уатКонфигурацияДляРФ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтключаемыеКонстанты = Новый Массив();
	ОтключаемыеКонстанты.Добавить("уатКонфигурацияДляРФ");
	ОтключаемыеКонстанты.Добавить("ИспользоватьБюджетирование");
	ОтключаемыеКонстанты.Добавить("ИспользоватьБюджетныеПроцессы");
	ОтключаемыеКонстанты.Добавить("ИспользоватьШифрование");
	ОтключаемыеКонстанты.Добавить("ИспользоватьЭлектронныеПодписи");
	ОтключаемыеКонстанты.Добавить("уатИспользоватьЦСМ");
	
	Для Каждого ОтключаемаяКонстанта Из ОтключаемыеКонстанты Цикл
		КонстантаДоступна = (Метаданные.Константы.Найти(ОтключаемаяКонстанта) <> Неопределено);
		Если КонстантаДоступна Тогда
			Константы[ОтключаемаяКонстанта].Установить(Ложь);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция предназначена для перевода значений предопределенных элементов справочников на английский язык.
//
Функция ЗаполнитьПредопределенныеДанные()
	Обработка = Обработки.уатСтартовыйПомощникДляАнглийскойЛокализации;
	Макеты    = Метаданные.Обработки.уатСтартовыйПомощникДляАнглийскойЛокализации.Макеты;
	
	КоличествоОшибок = 0;
	ПолныйТекстВсехОшибок = "";
	Для Каждого ТекМакет из Макеты цикл
		ИмяСправочника  = СтрЗаменить(ТекМакет.Имя, "Макет_", "");
		Макет = Обработка.ПолучитьМакет(ТекМакет.Имя);
		ОбластьНастроек = Макет.ПолучитьОбласть("Настройки");
		Попытка
			ТекСправочник = Справочники[ИмяСправочника];
		Исключение
			Продолжить;
		КонецПопытки;
		
		Для НомерСтроки = 1 По Макет.ВысотаТаблицы Цикл
			ИмяПредопрЭлемента = СтрЗаменить(СокрЛП(ОбластьНастроек.Область(НомерСтроки, 1, НомерСтроки, 1).Текст), "ИмяЭлемента_", "");
			Попытка
				ТекЭлемент = ТекСправочник[ИмяПредопрЭлемента];
			Исключение
				Продолжить;
			КонецПопытки;
			
			СпрОбъект       = ТекЭлемент.ПолучитьОбъект();
			СтрНаименование = ОбластьНастроек.Область(НомерСтроки, 3, НомерСтроки, 3).Текст;
			СтрКод          = СтрЗаменить(СокрЛП(ОбластьНастроек.Область(НомерСтроки, 4, НомерСтроки, 4).Текст), "БКод_", "");

			Если (СпрОбъект.Наименование <> СтрНаименование) 
				ИЛИ (ЗначениеЗаполнено(СтрКод) И СокрЛП(СпрОбъект.Код) <> СтрКод) Тогда
				КодЯзыка  = ТекущийЯзыкСистемы();
				ТекЭлементНаименование = ?(КодЯзыка = "ru" ИЛИ КодЯзыка = "ru_RU", ОбластьНастроек.Область(НомерСтроки, 2, НомерСтроки, 2).Текст, СтрНаименование);
				СпрОбъект.Наименование = СтрНаименование;
				Если ЗначениеЗаполнено(СтрКод) И (СокрЛП(СпрОбъект.Код) <> СтрКод) Тогда
					СпрОбъект.Код          = СтрКод;
				КонецЕсли;
				Попытка
					СпрОбъект.Записать();
					ТекстНСТР = СтрШаблон(НСтр("en='Translation of the catalog ""%1"" , the element %2';ru='Выполняется перевод справочника ""%1"" , элемент %2'"), Метаданные.Справочники[ИмяСправочника], ТекЭлементНаименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
				Исключение
					ТекстНСТР = НСтр("en='An error occurred while filling in the catalog ""%1"", the element %2';ru='Возникла ошибка при заполнении реквизита справочника ""%1"" , элемент %2'") + Символы.ПС + ОписаниеОшибки();
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
					КоличествоОшибок = КоличествоОшибок + 1;
					ПолныйТекстВсехОшибок = ПолныйТекстВсехОшибок + Символы.ПС + ТекстНСТР;
				КонецПопытки;
			КонецЕсли;
			КонецЦикла;
	КонецЦикла;
	
	Ошибки = Новый Структура("КоличествоОшибок, ПолныйТекстВсехОшибок", КоличествоОшибок, ПолныйТекстВсехОшибок);
	Возврат Ошибки;
	
КонецФункции

#КонецОбласти

#КонецЕсли