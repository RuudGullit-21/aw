
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	Если НЕ уатОбщегоНазначения.КонфигурацияДляРФ() Тогда
		ТекстСообщения = НСтр("en='Открытие возможно только тогда, когда включен признак использования конфигурации в РФ.';ru='Открытие возможно только тогда, когда включен признак использования конфигурации в РФ.'");
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// начало блока стандартных операций
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	Если Объект.ДатаНач = '00010101' Тогда
		Объект.ДатаНач = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	Если Объект.ДатаКон = '00010101' Тогда
		Объект.ДатаКон = ТекущаяДата();
	КонецЕсли;
	Объект.ДатаВыписки = ТекущаяДата();
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачПриИзменении(Элемент)
	ПриИзмененииПериода();
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	ПриИзмененииПериода();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ТС, "Организация") <> Объект.Организация Тогда
		Объект.ТС = Неопределено;
	КонецЕсли;
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РежимОтбораПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
	Если Объект.РежимОтбора = 0 Тогда
		Объект.ОбъектСтроительства = Неопределено;
		СписокТС.Очистить();
	Иначе
		Объект.ТС = Неопределено;
		СписокОбъектыСтроительства.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ТС) И НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ТС, "Организация");
	КонецЕсли;
	
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Объект.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСтроительстваПриИзменении(Элемент)
	ЗаполнитьСписТС();
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектыСтроительстваВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.СписокОбъектыСтроительства.ТекущиеДанные;
		ПоказатьЗначение(,ТекСтрока.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокТСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.СписокТС.ТекущиеДанные;
		ПоказатьЗначение(,ТекСтрока.Значение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = Объект.ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = Объект.ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
    Если Период <> Неопределено Тогда
        Объект.ДатаНач = Период.ДатаНачала;
        Объект.ДатаКон = Период.ДатаОкончания;
		ПриИзмененииПериода();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	мсвТС = Новый Массив;
	мсвОбъектыСтроительства = Новый Массив;
	Если Объект.РежимОтбора = 0 Тогда
		Если ЗначениеЗаполнено(Объект.ТС) Тогда
			мсвТС.Добавить(Объект.ТС);
		КонецЕсли;
		Для Каждого ТекОбъект Из СписокОбъектыСтроительства Цикл
			Если ТекОбъект.Пометка Тогда
				мсвОбъектыСтроительства.Добавить(ТекОбъект.Значение);
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
			мсвОбъектыСтроительства.Добавить(Объект.ОбъектСтроительства);
		КонецЕсли;
		Для Каждого ТекОбъект Из СписокТС Цикл
			Если ТекОбъект.Пометка Тогда
				мсвТС.Добавить(ТекОбъект.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	ТекстОшибки = НСтр("en='Невозможно выполнить операцию:';ru='Невозможно выполнить операцию:'");
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ЕстьОшибки = Истина;
		ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо заполнить организацию.';ru='необходимо заполнить организацию.'");
	Иначе
		Если НЕ уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "УчетВыработкиПоОбъектамСтроительства") Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='по организации';ru='по организации'") + " """ + Объект.Организация + """ " + НСтр("en='не ведётся учет выработки по объектам строительства.';ru='не ведётся учет выработки по объектам строительства.'");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаВыписки) Тогда
		ЕстьОшибки = Истина;
		ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо заполнить дату выписки.';ru='необходимо заполнить дату выписки.'");
	КонецЕсли;
	
	Если Объект.РежимОтбора = 0 Тогда
		Если мсвТС.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо заполнить ТС.';ru='необходимо заполнить ТС.'");
		КонецЕсли;	
		Если мсвОбъектыСтроительства.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо выбрать хотя бы один объект строительства.';ru='необходимо выбрать хотя бы один объект строительства.'");
		КонецЕсли;
	Иначе
		Если мсвОбъектыСтроительства.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо заполнить объект строительства.';ru='необходимо заполнить объект строительства.'");
		КонецЕсли;	
		Если мсвТС.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - " + НСтр("en='необходимо выбрать хотя бы одно ТС.';ru='необходимо выбрать хотя бы одно ТС.'");
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ТабДок = СформироватьЭСМЗаПериод(мсвОбъектыСтроительства, мсвТС);
	ТабДок.Показать("ЭСМ-7");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Если Объект.РежимОтбора = 0 Тогда
		Элементы.ТС.Доступность = Истина;
		Элементы.ОбъектСтроительства.Доступность = Ложь;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОбъектыСтроительства;
	Иначе
		Элементы.ТС.Доступность = Ложь;
		Элементы.ОбъектСтроительства.Доступность = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаТС;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПериода()
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектыСтроительства()
	СписокОбъектыСтроительства.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ТС) Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	уатПредоставленныеУслуги.ОбъектСтроительства
		|ИЗ
		|	РегистрНакопления.уатПредоставленныеУслуги.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			ТС = &ТС
		|				И Организация = &Организация
		|				И ОбъектСтроительства <> ЗНАЧЕНИЕ(Справочник.уатОбъектыСтроительства.ПустаяСсылка)
		|				И ПолучательУслуг = ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент)
		|				И (&КонтрагентНеЗаполнен
		|					ИЛИ ДоговорКонтрагента.Владелец = &Контрагент)
		|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
		|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатПредоставленныеУслуги";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
		Запрос.УстановитьПараметр("ТС", Объект.ТС);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокОбъектыСтроительства.Добавить(Выборка.ОбъектСтроительства);
		КонецЦикла;
	КонецЕсли;			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписТС()
	СписокТС.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	уатПредоставленныеУслуги.ТС
		|ИЗ
		|	РегистрНакопления.уатПредоставленныеУслуги.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|				Организация = &Организация
		|				И ТС <> ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)
		|				И ОбъектСтроительства = &ОбъектСтроительства
		|				И ПолучательУслуг = ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент)
		|				И (&КонтрагентНеЗаполнен
		|					ИЛИ ДоговорКонтрагента.Владелец = &Контрагент)
		|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
		|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатПредоставленныеУслуги";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
		Запрос.УстановитьПараметр("ОбъектСтроительства", Объект.ОбъектСтроительства);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокТС.Добавить(Выборка.ТС);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьЭСМЗаПериод(мМассивОбъектовСтроительства, мМассивТС)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатПредоставленныеУслуги.Организация КАК Организация,
	|	уатПредоставленныеУслуги.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	уатПредоставленныеУслуги.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатПредоставленныеУслуги.Регистратор КАК Регистратор,
	|	уатПредоставленныеУслуги.ПутевойЛист КАК ПутЛист,
	|	уатПредоставленныеУслуги.ТС КАК ТС,
	|	уатПредоставленныеУслуги.Номенклатура КАК Услуга,
	|	уатПредоставленныеУслуги.Номенклатура.НаименованиеПолное КАК УслугаНаименованиеПолное,
	|	уатПредоставленныеУслуги.Номенклатура.Код КАК УслугаКод,
	|	уатПредоставленныеУслуги.КоличествоОборот КАК КоличествоОборот,
	|	уатПредоставленныеУслуги.СуммаРеглОборот КАК СуммаОборот,
	|	уатПредоставленныеУслуги.СуммаНДСОборот КАК СуммаНДСОборот
	|ИЗ
	|	РегистрНакопления.уатПредоставленныеУслуги.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ТС В (&ТС)
	|				И ОбъектСтроительства В (&ОбъектСтроительства)
	|				И ПолучательУслуг = ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент)
	|				И (&КонтрагентНеЗаполнен
	|					ИЛИ ДоговорКонтрагента.Владелец = &Контрагент)
	|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
	|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатПредоставленныеУслуги
	|ИТОГИ
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ТС),
	|	СУММА(КоличествоОборот),
	|	СУММА(СуммаОборот),
	|	СУММА(СуммаНДСОборот)
	|ПО
	|	ОбъектСтроительства,
	|	Контрагент,
	|	ТС,
	|	Регистратор,
	|	Услуга";
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ТС", мМассивТС);
	Запрос.УстановитьПараметр("ОбъектСтроительства", мМассивОбъектовСтроительства);
	Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	
	ВыборкаЗапроса = Запрос.Выполнить();
	
	ТабДок = уатПечать_ЭСМ7_за_период(ВыборкаЗапроса, Объект.ДатаНач, Объект.ДатаКон, Объект.ДатаВыписки);
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку     = Ложь;
	Табдок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
	
КонецФункции

#Область Печать

// Формирует печатные формы ЭСМ7 за период
//
// Параметры:
// Выборка - Выборка результата запроса по объектам строительства
// ДатаНач - Дата, с которой получаем данные
// ДатаКон - Дата, до которой получаем данные
// ДатаВыписки - Дата, на которую формируем печатные формы
//
Функция уатПечать_ЭСМ7_за_период(Выборка, ДатаНач, ДатаКон, ДатаВыписки)
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТД_ЭСМ7";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху 	= 0;
	ТабДокумент.ПолеСлева 	= 0;
	ТабДокумент.ПолеСнизу 	= 0;
	ТабДокумент.ПолеСправа 	= 0;
	
	НачатьТранзакцию();
	
	мПериодНумерации = ?(ЗначениеЗаполнено(ДатаВыписки),НачалоГода(ДатаВыписки),НачалоГода(ТекущаяДата()));
	СоответствиеНомеров = ПолучитьНачальныеНомераДляПечатнойФормы(мПериодНумерации);
	
	// управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатНумерацияОбъектов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	ВыборкаОбъект = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаФизЛицаОрг = Неопределено;
	Пока ВыборкаОбъект.Следующий() Цикл
		ВыборкаКонтрагент = ВыборкаОбъект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ВыборкаТС = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			МассивВодителей = Новый Массив;		
			
			Пока ВыборкаТС.Следующий() Цикл
				
				ВыборкаРегистратор = ВыборкаТС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_уатЭСМ7");
				
				мМаксСтрок = 7;
				
				
				Обл = Макет.ПолучитьОбласть("Лицевая");
				
				Если ВыборкаФизЛицаОрг = Неопределено тогда
					ВыборкаФизЛицаОрг = ПечатьЭСМ7ЗаПериодПолучитьВыборкуОтветственныхЛиц(ВыборкаТС,ДатаВыписки);
				КонецЕсли;
				
				ПечатьЭСМ7ЗаПериодЗаполнитьШапку(Обл, ДатаНач, ДатаКон, ДатаВыписки, СоответствиеНомеров, ВыборкаТС,ВыборкаФизЛицаОрг);
				
				Сч = 1;
				КоличИтого 	  = 0;
				СуммаИтого 	  = 0;
				СуммаНДСИтого = 0;
				Всего 		  = 0;
				
				Пока ВыборкаРегистратор.Следующий() Цикл
					
					//Сообщить(ВыборкаРегистратор.Регистратор);
					
					ВыборкаУслуга = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаУслуга.Следующий() Цикл
						
						Напечатали = Ложь;
						
						Обл.Параметры.Объект = ВыборкаУслуга.ОбъектСтроительства;
						
						Обл.Параметры["Услуга" + Сч] = ВыборкаУслуга.Услуга;
						Если ЗначениеЗаполнено(ВыборкаУслуга.УслугаНаименованиеПолное) Тогда
							Обл.Параметры["НаименованиеРаботы" + Сч] = ВыборкаУслуга.УслугаНаименованиеПолное;
						Иначе
							Обл.Параметры["НаименованиеРаботы" + Сч] = ВыборкаУслуга.Услуга;
						КонецЕсли;
						Обл.Параметры["КодРаботы" + Сч] = ВыборкаУслуга.УслугаКод;
						ТекКоличество = Цел(ВыборкаУслуга.КоличествоОборот) + Окр((ВыборкаУслуга.КоличествоОборот - Цел(ВыборкаУслуга.КоличествоОборот))*60/100, 2);
						Обл.Параметры["Количество" + Сч] = ТекКоличество;
						Обл.Параметры["Цена" + Сч] = (ВыборкаУслуга.Суммаоборот - ВыборкаУслуга.СуммаНДСОборот) / ВыборкаУслуга.КоличествоОборот;
						Обл.Параметры["Сумма" + Сч] = ВыборкаУслуга.Суммаоборот - ВыборкаУслуга.СуммаНДСОборот;
						
						КоличИтого = уатЗащищенныеФункцииСервер.СложитьВремя(КоличИтого, ТекКоличество);
						СуммаИтого = СуммаИтого + (ВыборкаУслуга.Суммаоборот - ВыборкаУслуга.СуммаНДСОборот);
						СуммаНДСИтого = СуммаНДСИтого + ВыборкаУслуга.СуммаНДСОборот;
						Всего = Всего + ВыборкаУслуга.СуммаОборот;
						
						Сч = Сч + 1;
						мМаксСтрок = мМаксСтрок - 1;
						
						ВыборкаВодителей = ВыборкаУслуга.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
						Пока ВыборкаВодителей.Следующий() Цикл
							Водитель1 = уатОбщегоНазначения.уатФИОСотрудникаПолноеСтрокой(ВыборкаВодителей.ПутЛист.Водитель1, ДатаВыписки);
							Если МассивВодителей.Найти(Водитель1) = Неопределено Тогда
								МассивВодителей.Добавить(Водитель1);
							КонецЕсли;
							Если ЗначениеЗаполнено(ВыборкаВодителей.ПутЛист.Водитель2) И МассивВодителей.Найти(уатОбщегоНазначения.уатФИОСотрудникаПолноеСтрокой(ВыборкаВодителей.ПутЛист.Водитель2, ДатаВыписки)) = Неопределено Тогда
								МассивВодителей.Добавить(уатОбщегоНазначения.уатФИОСотрудникаПолноеСтрокой(ВыборкаВодителей.ПутЛист.Водитель2, ДатаВыписки));
							КонецЕсли;	
						КонецЦикла;
						
						Если мМаксСтрок = 0 Тогда
							ПечатьЭСМ7ЗаПериодЗаполнитьПодвал(Обл, КоличИтого, СуммаИтого, СуммаНДСИтого, Всего, МассивВодителей);
							
							ТабДокумент.Вывести(Обл);
							ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();					
							
							Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_уатЭСМ7");
							
							мМаксСтрок = 7;
							
							Обл = Макет.ПолучитьОбласть("Лицевая");
							
							ПечатьЭСМ7ЗаПериодЗаполнитьШапку(Обл, ДатаНач, ДатаКон, ДатаВыписки,СоответствиеНомеров, ВыборкаТС,ВыборкаФизЛицаОрг);
							
							Сч = 1;
							КоличИтого 	  = 0;
							СуммаИтого 	  = 0;
							СуммаНДСИтого = 0;
							Всего		  = 0;
							Напечатали = Истина;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
				
				Если НЕ Напечатали Тогда
					ПечатьЭСМ7ЗаПериодЗаполнитьПодвал(Обл, КоличИтого, СуммаИтого, СуммаНДСИтого, Всего, МассивВодителей);
					
					ТабДокумент.Вывести(Обл);
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
				КонецЕсли;
				
				МассивВодителей.Очистить();
				
			КонецЦикла; //конец цикла по ТС
		КонецЦикла; //конец цикла по Контрагентам		
	КонецЦикла; //конец цикла по Объектам строительства
	
	УстановитьНомераОбъектов(СоответствиеНомеров,мПериодНумерации);
	ЗафиксироватьТранзакцию();
	
	Возврат ТабДокумент;
	
КонецФункции // уатПечать_ЭСМ7_за_период()

Процедура ПечатьЭСМ7ЗаПериодЗаполнитьШапку(Обл,ДатаНач, ДатаКон, ДатаВыписки,СоответствиеНомеров, ВыборкаКонтрагент,ВыборкаФизЛица)
	
	Обл.Параметры.ДатаВыезда 	  = Формат(ДатаНач,"ДФ=дд.ММ.гг"); 
	Обл.Параметры.ДатаВозвращения = Формат(ДатаКон,"ДФ=дд.ММ.гг"); 
		
	мПрефикс = "";
	уатОбщегоНазначенияТиповые.уатДобавитьПрефиксУзла(мПрефикс);
	мПрефикс = мПрефикс + ВыборкаКонтрагент.Организация.Префикс;
	
	мНомерСправки = (СоответствиеНомеров[ВыборкаКонтрагент.Организация] + 1);
	мФормат = 11 - СтрДлина(мПрефикс);
	Обл.Параметры.Номер = мПрефикс + Формат(мНомерСправки,"ЧЦ="+ мФормат + "; ЧРГ=0; ЧВН=; ЧГ=0" );
	СоответствиеНомеров[ВыборкаКонтрагент.Организация] = СоответствиеНомеров[ВыборкаКонтрагент.Организация] + 1;
	
	ФорматДаты = "ДЛФ='Д'";
	Обл.Параметры.ДатаСоставления = Формат(ДатаВыписки, ФорматДаты);
	
	СписокТребуемыхПараметров				= "НаименованиеДляПечатныхФорм,ЮридическийАдрес,Телефоны";
	СведенияОбОбъекте						= уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ВыборкаКонтрагент.Организация, ДатаВыписки);
	Обл.Параметры.Организация	= уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(СведенияОбОбъекте, СписокТребуемыхПараметров);
	
	// ТС 
	ЗаполнитьЗначенияСвойств(Обл.Параметры, ПолучитьПараметрыТСДляПечати(ВыборкаКонтрагент.ТС));
	Обл.Параметры.КодПоОКПО = ВыборкаКонтрагент.Организация.КодПоОКПО;
	
	СписокТребуемыхПараметров	= "НаименованиеДляПечатныхФорм,ЮридическийАдрес,Телефоны";
	СведенияОбОбъекте			= уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ВыборкаКонтрагент.Контрагент, ДатаВыписки);
	мЗаказчик 					= уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(СведенияОбОбъекте, СписокТребуемыхПараметров);
	
	Обл.Параметры.ЗаказчикПредставление = мЗаказчик;
	
	//С000640935
	//Если СтрДлина(мЗаказчик) > 65 тогда
	//	Обл.Области.ОбластьЗаказчикПредставление.Шрифт = Новый Шрифт(Обл.Области.ОбластьЗаказчикПредставление.Шрифт,,7);
	//КонецЕсли;
	
	Обл.Параметры.ЗаказчикКодПоОКПО = ВыборкаКонтрагент.Контрагент.КодПоОКПО;
	
	ВыборкаФизЛица.сбросить();
	Если ВыборкаФизЛица.Следующий() Тогда
		ДанныеФизЛица = уатОбщегоНазначенияТиповыеСервер.ДанныеФизЛица(ВыборкаКонтрагент.Организация, ВыборкаФизЛица.ФизическоеЛицо, ДатаВыписки);
		Руководитель = ДанныеФизЛица.Представление;
		Должность = ВыборкаФизЛица.Должность;
		
		Обл.Параметры.ФИОРуководителя = Руководитель;
		Обл.Параметры.Должность = Должность;
	Иначе
		Обл.Параметры.ФИОРуководителя = ВыборкаКонтрагент.Организация;
	КонецЕсли;
	
	// заполняем должность и наименование заказчика
	мЗапросКЛ = Новый Запрос;
	Если уатРаботаСМетаданными.ЕстьСправочник("КонтактныеЛицаКонтрагентов") Тогда
		мЗапросКЛ.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КонтактныеЛицаКонтрагентов.Ссылка,
		|	1 КАК Порядок
		|ИЗ
		|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.Владелец = &Владелец
		|	И КонтактныеЛицаКонтрагентов.Должность ПОДОБНО ""_иректор""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонтактныеЛицаКонтрагентов.Ссылка,
		|	2
		|ИЗ
		|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.Владелец = &Владелец
		|	И КонтактныеЛицаКонтрагентов.Должность ПОДОБНО ""_л% бухгалтер""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Контрагенты.ОсновноеКонтактноеЛицо,
		|	3
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка = &Владелец
		|	И Контрагенты.ОсновноеКонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)
		|	И Контрагенты.ОсновноеКонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛица.ПустаяСсылка)
		|	И Контрагенты.ОсновноеКонтактноеЛицо <> НЕОПРЕДЕЛЕНО
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
	Иначе
		мЗапросКЛ.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КонтактныеЛицаКонтрагентов.Ссылка,
		|	1 КАК Порядок
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.ОбъектВладелец = &Владелец
		|	И КонтактныеЛицаКонтрагентов.Должность ПОДОБНО ""_иректор""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонтактныеЛицаКонтрагентов.Ссылка,
		|	2
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.ОбъектВладелец = &Владелец
		|	И КонтактныеЛицаКонтрагентов.Должность ПОДОБНО ""_л% бухгалтер""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Контрагенты.ОсновноеКонтактноеЛицо,
		|	3
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка = &Владелец
		|	И Контрагенты.ОсновноеКонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛица.ПустаяСсылка)
		|	И Контрагенты.ОсновноеКонтактноеЛицо <> НЕОПРЕДЕЛЕНО
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
	КонецЕсли;
	
	мЗапросКЛ.УстановитьПараметр("Владелец",ВыборкаКонтрагент.Контрагент);
	выборкаКЛ = мЗапросКЛ.Выполнить().Выбрать();
	
	Если выборкаКЛ.Следующий() тогда
		Обл.Параметры.ДолжностьЗаказчика = выборкаКЛ.Ссылка.Должность;
		Обл.Параметры.ФИОЗаказчика = выборкаКЛ.Ссылка.Наименование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьЭСМ7ЗаПериодЗаполнитьПодвал(Обл, КоличИтого, СуммаИтого, СуммаНДСИтого, Всего, МассивВодителей)
	Обл.Параметры.КоличествоИтого = КоличИтого;
	Обл.Параметры.СуммаИтого      = СуммаИтого;
	Обл.Параметры.СуммаНДСИтого   = СуммаНДСИтого;
	Обл.Параметры.Всего           = Всего;
	
	ОтработаноПрописью = "";
	Если ЗначениеЗаполнено(Цел(КоличИтого)) тогда
		ОтработаноПрописью = СтрЗаменить(ЧислоПрописью(Цел(КоличИтого), "L=ru_RU", "час, часа, часов, м")," 00","");
	КонецЕсли;
	Если ЗначениеЗаполнено(КоличИтого - Цел(КоличИтого)) тогда
		ОтработаноПрописью = ОтработаноПрописью + СтрЗаменить(ЧислоПрописью((КоличИтого- Цел(КоличИтого))*100, "L=ru_RU; FN=Ложь", "минута, минуты, минут, ж")," 00","");
	КонецЕсли;
	Обл.Параметры.ОтработаноМашиноЧасов = ОтработаноПрописью;
	Водители = "";
	Для Каждого ЭлементМассива Из МассивВодителей Цикл
		Водители =  Водители + ", " + ЭлементМассива;
	КонецЦикла;
	
	МассивСтрок = уатОбщегоНазначенияТиповые.уатРазбитьСтрокуНаПодстроки(Сред(Водители,3,СтрДлина(Водители)), 100);
	Если Прав(МассивСтрок[0],1) = "," Тогда
		Обл.Параметры.Водители = Лев(МассивСтрок[0],СтрДлина(МассивСтрок[0])-1);
	Иначе
		Обл.Параметры.Водители = МассивСтрок[0];
	КонецЕсли;
КонецПроцедуры

Функция ПечатьЭСМ7ЗаПериодПолучитьВыборкуОтветственныхЛиц(ВыборкаКонтрагент, ДатаВыписки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений." + ?(Метаданные.РегистрыСведений.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено, "ОтветственныеЛицаОрганизаций", "ОтветственныеЛицаОрганизации") + ".СрезПоследних(
	|		&Дата,
	|		СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|		    И ОтветственноеЛицо = &Директор) КАК ОтветственныеЛицаОрганизацииСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", ДатаВыписки);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ВыборкаКонтрагент.Организация);
	Перечисление_ОтветственныеЛицаОрганизации = ?(Метаданные.Перечисления.Найти("ОтветственныеЛицаОрганизаций") <> Неопределено, Перечисления.ОтветственныеЛицаОрганизаций, Перечисления.ОтветственныеЛицаОрганизации);
	Запрос.УстановитьПараметр("Директор", Перечисление_ОтветственныеЛицаОрганизации.Руководитель);
	Результат = Запрос.Выполнить();
	ВыборкаФизЛица = Результат.Выбрать();
	
	Возврат ВыборкаФизЛица;
	
КонецФункции

Функция ПолучитьНачальныеНомераДляПечатнойФормы(мГодНумерации)
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(уатНумерацияОбъектов.ПоследнийНомер, 0) КАК ПоследнийНомер
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			уатНумерацияОбъектов.Год КАК Год,
	|			уатНумерацияОбъектов.Организация КАК Организация,
	|			уатНумерацияОбъектов.ПоследнийНомер КАК ПоследнийНомер
	|		ИЗ
	|			РегистрСведений.уатНумерацияОбъектов КАК уатНумерацияОбъектов
	|		ГДЕ
	|			уатНумерацияОбъектов.Год = &Год) КАК уатНумерацияОбъектов
	|		ПО (уатНумерацияОбъектов.Организация = Организации.Ссылка)";
	мЗапрос.УстановитьПараметр("Год",НачалоГода(мГодНумерации));
	Выборка = мЗапрос.Выполнить().Выбрать();
	СоответствиеНомеров = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеНомеров.Вставить(Выборка.Организация,Выборка.ПоследнийНомер);
	КонецЦикла;
	
	Возврат СоответствиеНомеров;
	
КонецФункции

Процедура УстановитьНомераОбъектов(СоответствиеНомеров,мГодНумерации)
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(уатНумерацияОбъектов.ПоследнийНомер, 0) КАК ПоследнийНомер
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			уатНумерацияОбъектов.Год КАК Год,
	|			уатНумерацияОбъектов.Организация КАК Организация,
	|			уатНумерацияОбъектов.ПоследнийНомер КАК ПоследнийНомер
	|		ИЗ
	|			РегистрСведений.уатНумерацияОбъектов КАК уатНумерацияОбъектов
	|		ГДЕ
	|			уатНумерацияОбъектов.Год = &Год) КАК уатНумерацияОбъектов
	|		ПО (уатНумерацияОбъектов.Организация = Организации.Ссылка)";
	мЗапрос.УстановитьПараметр("Год",НачалоГода(мГодНумерации));
	Выборка = мЗапрос.Выполнить().Выбрать();
	мНаборЗаписей = РегистрыСведений.уатНумерацияОбъектов.СоздатьНаборЗаписей();
	мНаборЗаписей.Отбор.Год.Установить(НачалоГода(мГодНумерации));
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПоследнийНомер = 0 И Выборка.ПоследнийНомер = СоответствиеНомеров[Выборка.Организация] тогда
			Продолжить;
		КонецЕсли;
		
		НовЗапись = мНаборЗаписей.Добавить();
		НовЗапись.Организация = Выборка.Организация;
		НовЗапись.Год = НачалоГода(мГодНумерации);
		НовЗапись.ПоследнийНомер = СоответствиеНомеров[Выборка.Организация];
	КонецЦикла;
	Попытка
		мНаборЗаписей.Записать();
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ПолучитьПараметрыТСДляПечати(ТранспортноеСредство, ДатаФормирования = Неопределено)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("МодельТС", уатОбщегоНазначения.уатПредставлениеМоделиТС(ТранспортноеСредство));
	СтруктураПараметров.Вставить("МаркаТС", ТранспортноеСредство.Марка);
	СтруктураПараметров.Вставить("ТипТС", ТранспортноеСредство.ТипТС);
	СтруктураПараметров.Вставить("ГосНомерТС", ТранспортноеСредство.ГосударственныйНомер);
	СтруктураПараметров.Вставить("ГарНомерТС", ТранспортноеСредство.ГаражныйНомер);
	СтруктураПараметров.Вставить("ЛицензионнаяКарточка", ТранспортноеСредство.ЛицензионнаяКарточка);
	СтруктураПараметров.Вставить("НомерЛицензионнойКарточки", ТранспортноеСредство.НомерЛицензионнойКарточки);
	СтруктураПараметров.Вставить("СерияЛицензионнойКарточки", ТранспортноеСредство.СерияЛицензионнойКарточки);
	СтруктураПараметров.Вставить("НомерСерииЛицензионнойКарточки", ТранспортноеСредство.НомерСерииЛицензионнойКарточки);
	
	Если ЗначениеЗаполнено(ТранспортноеСредство.Колонна) Тогда
		СтруктураПараметров.Вставить("Колонна", ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(
			уатОбщегоНазначения.МестонахождениеТС(ТранспортноеСредство, ДатаФормирования).Колонна.Код));
	КонецЕсли;	
	
	Возврат СтруктураПараметров;

КонецФункции

#КонецОбласти

#КонецОбласти
