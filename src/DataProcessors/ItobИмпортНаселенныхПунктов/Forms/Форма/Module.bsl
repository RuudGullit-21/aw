
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолучитьПуть("ИмяФайла", РежимДиалогаВыбораФайла.Открытие, "Файл населенных пунктов (*.xml)|*.xml");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Импортировать(Команда)
	
	#Если ВебКлиент Тогда
		
	ПоказатьПредупреждение(,НСтр("ru = 'В режиме веб-клиента импорт недоступен!'"), 60);
	Возврат;
		
	#КонецЕсли	
	
	Если ПустаяСтрока(Объект.ИмяФайла) Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не указан файл населенных пунктов! Файлы с населенными пунктами имеют расширение XML
			|и входят в состав поставки ""1С:Центр спутникового мониторинга ГЛОНАСС/GPS""'"), 120);
		Возврат;	
	
	КонецЕсли;
	
	ВременныеДанные = Новый ДвоичныеДанные(Объект.ИмяФайла);
	АдресХранилища = ПоместитьВоВременноеХранилище(ВременныеДанные, Новый УникальныйИдентификатор());
	
	Состояние(НСтр("ru = 'Чтение файла...'"));
	
	ТекстОшибки = "";
	Если НЕ ПрочитатьФайлИмпортаСервер(АдресХранилища, ТекстОшибки) Тогда		
		ПоказатьПредупреждение(,ТекстОшибки);
		Возврат;		
	
	КонецЕсли;
	
	КоличествоАдресов = ТабАдресов.Количество();
	ШагИмпорта = Окр(КоличествоАдресов/10);
	
	ИндексНачала = 0;
	Пока ИндексНачала < ТабАдресов.Количество() Цикл
		ИндексКонца = МИН(ИндексНачала+ШагИмпорта,ТабАдресов.Количество()-1); 
		
		Состояние(НСтр("ru = 'Запись данных классификатора в базу данных...'"), Окр(ИндексНачала/ТабАдресов.Количество()*100));
		
		ИмпортДанныхСервер(ИндексНачала, ИндексКонца);
				
		ИндексНачала = ИндексКонца+1;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
// Функция запрашивает у пользователя и возвращает путь к файлу или каталогу в параметре ИзменяемоеПоле.
&НаКлиенте
Процедура ПолучитьПуть(ИзменяемоеПоле, РежимДиалога, Фильтр = "")
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалога);
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = ?(РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога, 
									НСтр("ru = 'Выберите каталог'; en = 'Select directory'"), 
									НСтр("ru = 'Выберите файл'; en = 'Select file'"));
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИзменяемоеПоле", ИзменяемоеПоле);
	ДопПараметры.Вставить("Объект", Объект);
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ООДиалогОткрытияФайла", ItobОбщегоНазначенияКлиент, ДопПараметры));
КонецПроцедуры

&НаСервере
Процедура ИмпортДанныхСервер(НачПозиция, КонПозиция)
	
	Для ИндСтроки = НачПозиция По КонПозиция Цикл
		
		СтрокаАдреса = ТабАдресов[ИндСтроки];
		
		НайденныйЭлемент = Справочники.ItobКлассификаторНаселенныхПунктов.НайтиПоКоду(СтрокаАдреса.Код);
		Если НайденныйЭлемент.Пустая() Тогда
			ЭлементСправочникаОбъект = Справочники.ItobКлассификаторНаселенныхПунктов.СоздатьЭлемент();
			ЭлементСправочникаОбъект.Код = СтрокаАдреса.Код;
			
		Иначе
			ЭлементСправочникаОбъект = НайденныйЭлемент.ПолучитьОбъект();
			
		КонецЕсли;
		
		ЭлементСправочникаОбъект.ПредставлениеПоКлассификатору = СтрокаАдреса.Представление;
		ЭлементСправочникаОбъект.Широта = СтрокаАдреса.Широта;
		ЭлементСправочникаОбъект.Долгота = СтрокаАдреса.Долгота;
		ЭлементСправочникаОбъект.Записать();			 
	
	КонецЦикла;

КонецПроцедуры


&НаСервере
Функция ПрочитатьФайлИмпортаСервер(АдресВременногоХранилища, ТекстОшибки)

	ВременныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");
	ВременныеДанные.Записать(ИмяВремФайла);
	
	ТабАдресов.Очистить();
	
	ЧтениеXML = Новый ЧтениеXML;
 
	Попытка
		ЧтениеXML.ОткрытьФайл(ИмяВремФайла);	
	Исключение
		ТекстОшибки = НСтр("ru = 'Ошибка открытия XML:'")+" "+ОписаниеОшибки();
		Возврат Ложь;
	
	КонецПопытки;	
	
	Попытка
	
		Пока ЧтениеXML.Прочитать() Цикл
			
			Если ЧтениеXML.Имя = "addr" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				НовСтрокаАдреса = ТабАдресов.Добавить();
				
				РезультатЧтения = ЧтениеXML.Прочитать();
				Пока РезультатЧтения И НЕ (ЧтениеXML.Имя = "addr" И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента) Цикл	
				   	Если ЧтениеXML.Имя = "id" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
						ЧтениеXML.Прочитать();
						НовСтрокаАдреса.Код = Число(ЧтениеXML.Значение);
						
					ИначеЕсли ЧтениеXML.Имя = "descr" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
						ЧтениеXML.Прочитать();
						НовСтрокаАдреса.Представление = ЧтениеXML.Значение;
						
					ИначеЕсли ЧтениеXML.Имя = "lat" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
						ЧтениеXML.Прочитать();
						НовСтрокаАдреса.Широта = Число(ЧтениеXML.Значение);
						
					ИначеЕсли ЧтениеXML.Имя = "lon" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
						ЧтениеXML.Прочитать();
						НовСтрокаАдреса.Долгота = Число(ЧтениеXML.Значение);
					
					КонецЕсли;								
					РезультатЧтения = ЧтениеXML.Прочитать();
				КонецЦикла;							
								
			КонецЕсли;					
			
		КонецЦикла;	
		
	Исключение
	    ТекстОшибки = НСтр("ru = 'Ошибка чтения XML:'")+" "+ОписаниеОшибки();
		ЧтениеXML.Закрыть();
		УдалитьФайлы(ИмяВремФайла);

		Возврат Ложь;
		
	КонецПопытки;
	
	ЧтениеXML.Закрыть();
	УдалитьФайлы(ИмяВремФайла);
		
	Возврат Истина;

КонецФункции // ПрочитатьФайлИмпортаСервер()

#КонецОбласти
