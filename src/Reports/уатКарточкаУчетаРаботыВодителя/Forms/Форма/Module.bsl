
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаНач = НачалоМесяца(ТекущаяДата());
	ДатаКон = КонецМесяца(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьНастройки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", Водитель);
		ОповещЗакрытие = Новый ОписаниеОповещения("ВодителиСписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Отчет.уатКарточкаУчетаРаботыВодителя.Форма.СписокЗначенийВодители",ПараметрыФормы, Элемент,,,,ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(Водитель) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", Водитель);
		ОповещЗакрытие = Новый ОписаниеОповещения("ВодителиСписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Отчет.уатКарточкаУчетаРаботыВодителя.Форма.СписокЗначенийВодители", ПараметрыФормы, Элемент,,,, ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВодительПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	Если НЕ ЗначениеЗаполнено(Водитель) Тогда
		ТекстНСТР = НСтр("en='Driver not specified!';ru='Не указан водитель!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	ТабДок = СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ДиалогРедактированияСтандартногоПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактированияСтандартногоПериода.Период.ДатаНачала = ДатаНач;
	ДиалогРедактированияСтандартногоПериода.Период.ДатаОкончания = ДатаКон;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	
	ДиалогРедактированияСтандартногоПериода.Показать(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить(
		"Отчет.уатКарточкаУчетаРаботыВодителя", 
		"Водитель",,Пользователи.АвторизованныйПользователь());
	
	Если ТипЗнч(СтруктураНастроек) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастроек.Свойство("Водитель", Водитель);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("Водитель", Водитель);
	ХранилищеНастроекДанныхФорм.Сохранить(
		"Отчет.уатКарточкаУчетаРаботыВодителя", 
		"Водитель",
		СтруктураНастроек,,Пользователи.АвторизованныйПользователь());
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, формируемый отчетом
//
&НаСервере
Функция СформироватьОтчет()
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	ТочностьОстТоплива = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, "ТочностьОстатковТоплива");
	ФорматГСМ = "ЧЦ=" + (10-3+ТочностьОстТоплива) + "; ЧДЦ=" + ТочностьОстТоплива;
	
	Если ТипЗнч(Водитель) = Тип("СправочникСсылка.Сотрудники") Тогда
		Водители = Новый СписокЗначений();
		Водители.Добавить(Водитель);
	Иначе
		Водители = Водитель;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Для Каждого ТекущийВодитель Из Водители Цикл
		Если Не ПервыйДокумент Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		ВодительЗначение = ТекущийВодитель.Значение;
		
		Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
		
		Шапка = Макет.ПолучитьОбласть("Заголовок");
		Шапка.Параметры.Период = НСтр("en='for the period from';ru='за период с'") + " " + Формат(ДатаНач, "ДФ = dd.MM.yyyy") + " " + НСтр("en='till';ru='по'") + " " + Формат(ДатаКон, "ДФ = dd.MM.yyyy");
		Шапка.Параметры.ТабНомер = ВодительЗначение.Код;
		//Шапка.Параметры.ФИО = Водитель.Наименование;
		Шапка.Параметры.ФИО = уатОбщегоНазначения.уатФИОСотрудникаПолноеСтрокой(ВодительЗначение, ДатаКон);
		ДокументРезультат.Вывести(Шапка);
		
		// отдельно получаем таблицу доходов по путевым листам
		ЗапросДоходы = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатТТДСтоимость.Ссылка.Дата КАК Дата,
		|	уатТТДСтоимость.Ссылка.ВалютаДокумента КАК Валюта,
		|	уатТТДСтоимость.ПутЛист КАК ПЛ,
		|	СУММА(ВЫБОР
		|			КОГДА уатТТДСтоимость.Ссылка.СуммаВключаетНДС
		|				ТОГДА уатТТДСтоимость.Сумма
		|			ИНАЧЕ уатТТДСтоимость.Сумма + уатТТДСтоимость.СуммаНДС
		|		КОНЕЦ) КАК Сумма
		|ИЗ
		|	Документ.уатТТД.Стоимость КАК уатТТДСтоимость
		|ГДЕ
		|	уатТТДСтоимость.Ссылка.Проведен
		|	И уатТТДСтоимость.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И уатТТДСтоимость.ПутЛист <> ЗНАЧЕНИЕ(Документ.уатПутевойЛист.ПустаяСсылка)
		|	И (уатТТДСтоимость.ПутЛист.Водитель1 = &Водитель
		|			ИЛИ уатТТДСтоимость.ПутЛист.Водитель2 = &Водитель
		|			ИЛИ уатТТДСтоимость.ПутЛист.Сотрудник1 = &Водитель
		|			ИЛИ уатТТДСтоимость.ПутЛист.Сотрудник2 = &Водитель)
		|
		|СГРУППИРОВАТЬ ПО
		|	уатТТДСтоимость.Ссылка,
		|	уатТТДСтоимость.ПутЛист,
		|	уатТТДСтоимость.Ссылка.Дата,
		|	уатТТДСтоимость.Ссылка.ВалютаДокумента");
		ЗапросДоходы.Параметры.Вставить("ДатаНач", ДатаНач);
		ЗапросДоходы.Параметры.Вставить("ДатаКон", ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон)));
		ЗапросДоходы.УстановитьПараметр("Водитель", ВодительЗначение);
		тблТТД = ЗапросДоходы.Выполнить().Выгрузить();
		// перевод в валюту регл. учета
		мВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
		Для Каждого ТекСтрока Из тблТТД Цикл
			ТекСтрока.Сумма = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
			ТекСтрока.Валюта, мВалютаРегл, ТекСтрока.Дата, ТекСтрока.Дата);
		КонецЦикла;
		тблТТД.Свернуть("ПЛ", "Сумма");
		
		// основной запрос
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Доходы.ПЛ КАК ПЛ,
		|	Доходы.Сумма КАК Сумма
		|ПОМЕСТИТЬ Доходы
		|ИЗ
		|	&Доходы КАК Доходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатРабочееВремяСотрудниковОбороты.Регистратор КАК Регистратор,
		|	уатРабочееВремяСотрудниковОбороты.Сотрудник КАК Сотрудник,
		|	СУММА(уатРабочееВремяСотрудниковОбороты.ВремяОборот) КАК ВремяОборот,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ уатРабочееВремяСотрудниковОбороты.ДатаРаботы) КАК ДнейОборот
		|ПОМЕСТИТЬ РабочееВремя
		|ИЗ
		|	РегистрНакопления.уатРабочееВремяСотрудников.Обороты(&ДатаНач, &ДатаКон, Регистратор, Сотрудник = &Водитель) КАК уатРабочееВремяСотрудниковОбороты
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(уатРабочееВремяСотрудниковОбороты.Регистратор) = ТИП(Документ.уатРемонтныйЛист)
		|
		|СГРУППИРОВАТЬ ПО
		|	уатРабочееВремяСотрудниковОбороты.Регистратор,
		|	уатРабочееВремяСотрудниковОбороты.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатПутевойЛист.Ссылка КАК Ссылка,
		|	уатПутевойЛист.Номер КАК Номер,
		|	уатПутевойЛист.Дата КАК Дата,
		|	уатПутевойЛист.ТранспортноеСредство КАК ТранспортноеСредство,
		|	уатПутевойЛист.ТранспортноеСредство.Модель КАК Модель,
		|	уатПутевойЛист.ТранспортноеСредство.ГаражныйНомер КАК ГаражныйНомер,
		|	уатПутевойЛист.ТранспортноеСредство.ГосударственныйНомер КАК ГосНомер,
		|	ВЫБОР
		|		КОГДА РАЗНОСТЬДАТ(уатПутевойЛист.ДатаВыезда, уатПутевойЛист.ДатаВозвращения, СЕКУНДА) < 3600 * 24
		|			ТОГДА 1
		|		ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(уатПутевойЛист.ДатаВыезда, ДЕНЬ), НАЧАЛОПЕРИОДА(уатПутевойЛист.ДатаВозвращения, ДЕНЬ), ДЕНЬ) + 1
		|	КОНЕЦ КАК Дни,
		|	ЕСТЬNULL(уатПутевойЛистВыработкаСотрудников.Значение, 0) КАК Секунды,
		|	уатПутевойЛистВыработкаТС.ПробегСГрузом КАК ПробегСГрузом,
		|	уатПутевойЛистВыработкаТС.ПробегПорожний КАК ПробегПорожний,
		|	уатПутевойЛистВыработкаТС.КоличествоЕздок КАК Ездок,
		|	уатПутевойЛистВыработкаТС.ВесГруза КАК ВесГруза,
		|	уатПутевойЛистВыработкаТС.Тнкм КАК Тнкм,
		|	уатПутевойЛистРасходГСМ.ОстатокПриВыезде КАК ОстатокГСМ,
		|	уатПутевойЛистРасходГСМ.Выдано КАК ВыданоГСМ,
		|	уатПутевойЛистРасходГСМ.РасходНорма КАК РасходНорма,
		|	уатПутевойЛистРасходГСМ.РасходФакт КАК РасходФакт,
		|	уатПутевойЛистЗаарплата.Сумма КАК Зарплата,
		|	уатДоходыОбороты.Сумма КАК Доход
		|ИЗ
		|	Документ.уатПутевойЛист КАК уатПутевойЛист
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатПутевойЛистРасходГСМ.Ссылка КАК Ссылка,
		|			уатПутевойЛистРасходГСМ.ТС КАК ТС,
		|			СУММА(уатПутевойЛистРасходГСМ.ОстатокПриВыезде) КАК ОстатокПриВыезде,
		|			СУММА(уатПутевойЛистРасходГСМ.Выдано) КАК Выдано,
		|			СУММА(уатПутевойЛистРасходГСМ.РасходПоНорме) КАК РасходНорма,
		|			СУММА(уатПутевойЛистРасходГСМ.РасходПоФакту) КАК РасходФакт
		|		ИЗ
		|			Документ.уатПутевойЛист.РасходГСМ КАК уатПутевойЛистРасходГСМ
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уатНоменклатураГСМ КАК уатНоменклатураГСМ
		|				ПО уатПутевойЛистРасходГСМ.ГСМ = уатНоменклатураГСМ.Номенклатура
		|					И (уатНоменклатураГСМ.ГруппаГСМ = ЗНАЧЕНИЕ(Перечисление.уатГруппыГСМ.Топливо))
		|		
		|		СГРУППИРОВАТЬ ПО
		|			уатПутевойЛистРасходГСМ.Ссылка,
		|			уатПутевойЛистРасходГСМ.ТС) КАК уатПутевойЛистРасходГСМ
		|		ПО уатПутевойЛист.Ссылка = уатПутевойЛистРасходГСМ.Ссылка
		|			И уатПутевойЛист.ТранспортноеСредство = уатПутевойЛистРасходГСМ.ТС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатПутевойЛистВыработкаТС.Ссылка КАК Ссылка,
		|			уатПутевойЛистВыработкаТС.ТС КАК ТС,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаТС.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегСГрузом)
		|						ТОГДА уатПутевойЛистВыработкаТС.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ПробегСГрузом,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаТС.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегПорожний)
		|						ТОГДА уатПутевойЛистВыработкаТС.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ПробегПорожний,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаТС.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.КоличествоЕздок)
		|						ТОГДА уатПутевойЛистВыработкаТС.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК КоличествоЕздок,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаТС.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВесГруза)
		|						ТОГДА уатПутевойЛистВыработкаТС.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесГруза,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаТС.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.Тнкм)
		|						ТОГДА уатПутевойЛистВыработкаТС.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК Тнкм
		|		ИЗ
		|			Документ.уатПутевойЛист.ВыработкаТС КАК уатПутевойЛистВыработкаТС
		|		
		|		СГРУППИРОВАТЬ ПО
		|			уатПутевойЛистВыработкаТС.Ссылка,
		|			уатПутевойЛистВыработкаТС.ТС) КАК уатПутевойЛистВыработкаТС
		|		ПО уатПутевойЛист.Ссылка = уатПутевойЛистВыработкаТС.Ссылка
		|			И уатПутевойЛист.ТранспортноеСредство = уатПутевойЛистВыработкаТС.ТС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатПутевойЛистЗарплата.Ссылка КАК Ссылка,
		|			СУММА(уатПутевойЛистЗарплата.Сумма) КАК Сумма
		|		ИЗ
		|			Документ.уатПутевойЛист.Зарплата КАК уатПутевойЛистЗарплата
		|		ГДЕ
		|			уатПутевойЛистЗарплата.Сотрудник = &Водитель
		|		
		|		СГРУППИРОВАТЬ ПО
		|			уатПутевойЛистЗарплата.Ссылка) КАК уатПутевойЛистЗаарплата
		|		ПО уатПутевойЛист.Ссылка = уатПутевойЛистЗаарплата.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Доходы КАК уатДоходыОбороты
		|		ПО уатПутевойЛист.Ссылка = уатДоходыОбороты.ПЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			уатПутевойЛистВыработкаСотрудников.Ссылка КАК Ссылка,
		|			СУММА(ВЫБОР
		|					КОГДА уатПутевойЛистВыработкаСотрудников.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВНаряде)
		|						ТОГДА уатПутевойЛистВыработкаСотрудников.Количество
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК Значение
		|		ИЗ
		|			Документ.уатПутевойЛист.ВыработкаСотрудников КАК уатПутевойЛистВыработкаСотрудников
		|		ГДЕ
		|			уатПутевойЛистВыработкаСотрудников.Сотрудник = &Водитель
		|		
		|		СГРУППИРОВАТЬ ПО
		|			уатПутевойЛистВыработкаСотрудников.Ссылка) КАК уатПутевойЛистВыработкаСотрудников
		|		ПО уатПутевойЛист.Ссылка = уатПутевойЛистВыработкаСотрудников.Ссылка
		|ГДЕ
		|	уатПутевойЛист.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И уатПутевойЛист.Проведен
		|	И НЕ уатПутевойЛист.ПометкаУдаления
		|	И (уатПутевойЛист.Водитель1 = &Водитель
		|			ИЛИ уатПутевойЛист.Водитель2 = &Водитель
		|			ИЛИ уатПутевойЛист.Сотрудник1 = &Водитель
		|			ИЛИ уатПутевойЛист.Сотрудник2 = &Водитель)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор, ВложенныйЗапрос.Регистратор),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.Номер, ВложенныйЗапрос.Регистратор.Номер),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.Дата, ВложенныйЗапрос.Регистратор.Дата),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.ТС, ВложенныйЗапрос.Регистратор.ТС),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.ТС.Модель, ВложенныйЗапрос.Регистратор.ТС.Модель),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.ТС.ГаражныйНомер, ВложенныйЗапрос.Регистратор.ТС.ГаражныйНомер),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.Регистратор.ТС.ГосударственныйНомер, ВложенныйЗапрос.Регистратор.ТС.ГосударственныйНомер),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.ДнейОборот, 0),
		|	ЕСТЬNULL(уатРабочееВремяСотрудниковОбороты.ВремяОборот, 0),
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(ВложенныйЗапрос.Результат, 0),
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		уатОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
		|		уатОсновныеНачисления.Регистратор КАК Регистратор,
		|		уатОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		СУММА(уатОсновныеНачисления.Результат) КАК Результат
		|	ИЗ
		|		РегистрРасчета.уатОсновныеНачисления КАК уатОсновныеНачисления
		|	ГДЕ
		|		уатОсновныеНачисления.Сотрудник = &Водитель
		|		И уатОсновныеНачисления.БазовыйПериодНачало МЕЖДУ &ДатаНач И &ДатаКон
		|		И ТИПЗНАЧЕНИЯ(уатОсновныеНачисления.Регистратор) = ТИП(Документ.уатРемонтныйЛист)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		уатОсновныеНачисления.Регистратор,
		|		уатОсновныеНачисления.БазовыйПериодНачало,
		|		уатОсновныеНачисления.Сотрудник) КАК ВложенныйЗапрос
		|		ПОЛНОЕ СОЕДИНЕНИЕ РабочееВремя КАК уатРабочееВремяСотрудниковОбороты
		|		ПО ВложенныйЗапрос.Сотрудник = уатРабочееВремяСотрудниковОбороты.Сотрудник
		|			И ВложенныйЗапрос.Регистратор = уатРабочееВремяСотрудниковОбороты.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата
		|ИТОГИ
		|	СУММА(Дни),
		|	СУММА(Секунды),
		|	СУММА(ПробегСГрузом),
		|	СУММА(ПробегПорожний),
		|	СУММА(Ездок),
		|	СУММА(ВесГруза),
		|	СУММА(Тнкм),
		|	СУММА(ВыданоГСМ),
		|	СУММА(РасходНорма),
		|	СУММА(РасходФакт),
		|	СУММА(Зарплата),
		|	СУММА(Доход)
		|ПО
		|	ОБЩИЕ");
	
		Запрос.Параметры.Вставить("ДатаНач", ДатаНач);
		Запрос.Параметры.Вставить("ДатаКон", ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон)));
		Запрос.УстановитьПараметр("Водитель", ВодительЗначение);
		Запрос.УстановитьПараметр("Доходы", тблТТД);
		
		мсвРезультатов = Запрос.ВыполнитьПакет();
		Выборка = мсвРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Строка = Макет.ПолучитьОбласть("Строка");
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Пока Выборка.Следующий() Цикл
			Подвал.Параметры.Заполнить(Выборка);
			Подвал.Параметры.Часы = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(Выборка.Секунды), "ЧДЦ=2; ЧРД=:");
			Подвал.Параметры.ВыданоГСМ = Формат(Выборка.ВыданоГСМ, ФорматГСМ);
			Подвал.Параметры.РасходНорма = Формат(Выборка.РасходНорма, ФорматГСМ);
			Подвал.Параметры.РасходФакт = Формат(Выборка.РасходФакт, ФорматГСМ);
			
			ВыборкаСтрока = Выборка.Выбрать();
			Пока ВыборкаСтрока.Следующий() Цикл
				Строка.Параметры.Заполнить(ВыборкаСтрока);
				Строка.Параметры.Часы = Формат(уатОбщегоНазначения.уатВремяВЧЧ_ММ(ВыборкаСтрока.Секунды), "ЧДЦ=2; ЧРД=:");
				Строка.Параметры.ОстатокГСМ = Формат(ВыборкаСтрока.ОстатокГСМ, ФорматГСМ);
				Строка.Параметры.ВыданоГСМ = Формат(ВыборкаСтрока.ВыданоГСМ, ФорматГСМ);
				Строка.Параметры.РасходНорма = Формат(ВыборкаСтрока.РасходНорма, ФорматГСМ);
				Строка.Параметры.РасходФакт = Формат(ВыборкаСтрока.РасходФакт, ФорматГСМ);
				ДокументРезультат.Вывести(Строка);
			КонецЦикла;	
		КонецЦикла;
		
		ДокументРезультат.Вывести(Подвал);
		
	КонецЦикла;

	// Ориентация страницы
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	ДокументРезультат.ФиксацияСверху = 8;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Карточка учета работы водителя";
	
	Возврат ДокументРезультат;
КонецФункции // СформироватьОтчет()

&НаКлиенте
Процедура ВодителиСписокВыбор(ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Водитель = ВыбранноеЗначение;
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНач = РезультатВыбора.ДатаНачала;
	ДатаКон = РезультатВыбора.ДатаОкончания;
	
КонецПроцедуры

#КонецОбласти
