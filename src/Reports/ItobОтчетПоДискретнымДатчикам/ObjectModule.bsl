#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. процедуру ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию.
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;

КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//  
//  См. также:
//  "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
// Параметры:
//  Форма				 - УправляемаяФорма	 - Форма отчета.
//  Отказ				 - Булево			 - Передается из параметров обработчика "как есть".
//  СтандартнаяОбработка - Булево			 - Передается из параметров обработчика "как есть".
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	// КЭШируем параметры формы.
	ПараметрыФормы = ItobОтчетыКлиентСерверПовтИсп.ПараметрыФормы(Строка(Форма.УникальныйИдентификатор));
	ПараметрыФормы.Очистить();
	Если Форма.Параметры.Свойство("СписокПараметров") Тогда
		ПараметрыФормы.Вставить("СписокПараметров", Форма.Параметры.СписокПараметров);
		ПараметрыФормы.Вставить("Объект", Форма.Параметры.Объект);
	КонецЕсли;
КонецПроцедуры

// Вызывается после перезаполнения панели настроек формы отчета.
//
// Параметры:
//  Форма				 - УправляемаяФорма	 - Форма отчета.
//  ПервоеОткрытиеФормы	 - Булево - Признак первого открытия формы.
//
Процедура ИзменитьФормуПослеСозданияЭлементовНастроек(Форма, ПервоеОткрытиеФормы) Экспорт
	
	// Проверяем, открывается ли нужная форма.
	Если Не Форма.ТипФормыОтчета = ТипФормыОтчета.Основная Или СтрНайти(Форма.ИмяФормы, "ФормаОтчета") = 0 Тогда // Если используется общая форма из БСП проверяем на имя.
	    Возврат;
	КонецЕсли;
	
	// Настраиваем элемент "Объект".
	ЭлементОбъект = ItobОтчетыКлиентСервер.НайтиЭлементФормыПоЗаголовку(Форма, "Объект");
	ЭлементОбъект.КнопкаОткрытия = Истина;
	
	// Обновляем внешний вид элемента "Начало периода".
	ЭлементФормы = ItobОтчетыКлиентСервер.НайтиЭлементФормыПоЗаголовку(Форма, "Начало периода");
	ЭлементФормы.КнопкаРегулирования = Истина;
	ЭлементФормы.УстановитьДействие("Регулирование", "Подключаемый_ПолеВвода_Регулирование");
	
	// Обновляем внешний вид элемента "Конец периода".
	ЭлементФормы = ItobОтчетыКлиентСервер.НайтиЭлементФормыПоЗаголовку(Форма, "Конец периода");
	ЭлементФормы.КнопкаРегулирования = Истина;
	ЭлементФормы.УстановитьДействие("Регулирование", "Подключаемый_ПолеВвода_Регулирование");
	
	// Получаем из КЭШа параметры формы.
	ПараметрыФормы = ItobОтчетыКлиентСерверПовтИсп.ПараметрыФормы(Строка(Форма.УникальныйИдентификатор));
	
	// Заполняем список выбора датчика топлива.
	ОбъектИзВнешнихПараметров = Неопределено;
	Если ПараметрыФормы.Количество() > 0 И ПервоеОткрытиеФормы Тогда
		// Если форма отчета открыта с параметрами (например, через РМД), и это ее первое открытие, то указываем, что объект для построения отчета
		//	нужно взять не из текущих параметров формы отчета, а из внешних параметров.
		ОбъектИзВнешнихПараметров = ПараметрыФормы.Объект;
	КонецЕсли;
	
	// Заполняем список выбора датчика топлива. 
	ItobОтчеты.ОтчетПоДатчикамУстановитьПараметрыВыбораДатчика(Форма,, ОбъектИзВнешнихПараметров);
	
	Если НЕ ПервоеОткрытиеФормы Тогда
		Возврат;
	КонецЕсли;
	
	// Форма открыта без параметров.
	Если ПараметрыФормы.Количество() > 0 Тогда
		ПараметрыДанных = ItobОтчетыКлиентСервер.ПолучитьПараметрыДанных(Форма);
		
		// Заполняем передаваемые параметры.
		Для Каждого Параметр Из ПараметрыФормы.СписокПараметров Цикл
		    Если Параметр.Представление = "НачПериода" Тогда
			    ItobОтчетыКлиентСервер.УстановитьЗначениеПараметра(ПараметрыДанных, "НачПериода", Новый СтандартнаяДатаНачала(Параметр.Значение), НСтр("ru = 'Начало периода'; en = 'Beginning of period'"));
		    ИначеЕсли Параметр.Представление = "КонПериода" Тогда
			    ItobОтчетыКлиентСервер.УстановитьЗначениеПараметра(ПараметрыДанных, "КонПериода", Новый СтандартнаяДатаНачала(Параметр.Значение), НСтр("ru = 'Конец периода'; en = 'End of period'"));
		    ИначеЕсли Параметр.Представление = "Объект" Тогда
			    ItobОтчетыКлиентСервер.УстановитьЗначениеПараметра(ПараметрыДанных, "Объект", Параметр.Значение, НСтр("ru = 'Объект'"));
		    ИначеЕсли Параметр.Представление = "Датчик" Тогда
			    ItobОтчетыКлиентСервер.УстановитьЗначениеПараметра(ПараметрыДанных, "Датчик", Параметр.Значение, НСтр("ru = 'Датчик'; en = 'Sensor'"));
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура обработчик события "ПриКомпоновкеРезультата" объекта
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// Сбрасываем параметр стандартной обработки.
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ОтчетПустой", Истина);

	ПараметрыДанных = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных;
	
	// Инициализируем параметры отчета.
	НачПериода = ItobОтчетыКлиентСервер.ПолучитьЗначениеПараметра(ПараметрыДанных, "НачПериода", НСтр("ru = 'Начало периода'; en = 'Beginning of period'")).Дата;
	КонПериода = ItobОтчетыКлиентСервер.ПолучитьЗначениеПараметра(ПараметрыДанных, "КонПериода", НСтр("ru = 'Конец периода'; en = 'End of period'")).Дата;
	Объект = ItobОтчетыКлиентСервер.ПолучитьЗначениеПараметра(ПараметрыДанных, "Объект", НСтр("ru = 'Объект'"));
	Датчик = ItobОтчетыКлиентСервер.ПолучитьЗначениеПараметра(ПараметрыДанных, "Датчик", НСтр("ru = 'Датчик'; en = 'Sensor'"));
	
	// Формируем отчет по топливу.
	ТабличныйДокументРезультат = СформироватьОтчетПоДискретнымДатчикам(
		НачПериода,
		КонПериода,
		Объект,
		Датчик);
		
	// Если нужно добавить параметры табличному документу - делаем это здесь.
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ИмяПараметровПечати = "Отчет_ItobОтчетПоДискретнымДатчикам_ИмяПараметровПечати";
	ДокументРезультат.Вывести(ТабличныйДокументРезультат)
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция выполняет формирование табличного документа отчета по дискретным датчикам.
//
Функция СформироватьОтчетПоДискретнымДатчикам(НачПериода, КонПериода, Объект, Датчик)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Макет");
			
    // Данные датчика
	ТабРезультат = ItobОперативныйМониторинг.ПолучитьДанныеДатчикаОбъекта(Объект, НачПериода, КонПериода, Датчик);
	
	// Получим название
	Терминал = ItobОперативныйМониторинг.ПолучитьПривязанныйТерминал(Объект, КонПериода);
	СоотвРасшифровка = Новый Соответствие;
	
	Если НЕ Терминал.Пустая() Тогда
		НайденнаяСтрокаДатчики = Терминал.Датчики.Найти(Датчик,"Датчик");
		Если НЕ НайденнаяСтрокаДатчики = Неопределено Тогда
			НазначениеДатчика = НайденнаяСтрокаДатчики.Назначение;
			Для Каждого СтрРасшифровка Из НазначениеДатчика.РасшифровкаПоказаний Цикл
				СоотвРасшифровка.Вставить(СтрРасшифровка.Показание, СтрРасшифровка.Расшифровка);				
			
			КонецЦикла;		
		КонецЕсли;	
	КонецЕсли;		
	
	ТабДанных = Новый ТаблицаЗначений;
	ТабДанных.Колонки.Добавить("НачДата");
	ТабДанных.Колонки.Добавить("КонДата");	
	ТабДанных.Колонки.Добавить("Значение");
	ТабДанных.Колонки.Добавить("Продолжительность");
	ТабДанных.Колонки.Добавить("Широта");
	ТабДанных.Колонки.Добавить("Долгота");
	ТабДанных.Колонки.Добавить("Расшифровка");
	
	Если ТабРезультат.Количество() > 0 Тогда
						
		СтрокаНачалаДиапазона = ТабРезультат[0];
		
		Для Счетчик = 1 По ТабРезультат.Количество()-1 Цикл
			
			Если ТабРезультат[Счетчик].Значение <> СтрокаНачалаДиапазона.Значение
				ИЛИ Счетчик = ТабРезультат.Количество()-1 Тогда
				
				НовСтрокаДанных = ТабДанных.Добавить();
				НовСтрокаДанных.НачДата  = СтрокаНачалаДиапазона.Период;
				НовСтрокаДанных.КонДата  = ТабРезультат[Счетчик].Период-?(Счетчик = ТабРезультат.Количество()-1,0,1);				
				НовСтрокаДанных.Значение = СтрокаНачалаДиапазона.Значение;
				НовСтрокаДанных.Широта   = СтрокаНачалаДиапазона.Широта;
				НовСтрокаДанных.Долгота  = СтрокаНачалаДиапазона.Долгота;
				ПредставлениеЗначения = СоотвРасшифровка[СтрокаНачалаДиапазона.Значение];
				НовСтрокаДанных.Расшифровка  = ?(ПредставлениеЗначения=Неопределено, "Показание: "+СтрокаНачалаДиапазона.Значение, ПредставлениеЗначения);
				НовСтрокаДанных.Продолжительность = НовСтрокаДанных.КонДата - НовСтрокаДанных.НачДата + 1;
				
				СтрокаНачалаДиапазона = ТабРезультат[Счетчик];
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали        = Макет.ПолучитьОбласть("Детали");	
	
	ОбластьШапка.Параметры.ЗаголовокОтчета = НСтр("ru = 'Отчет по дискретным датчикам за'")+" "
	                               +ПредставлениеПериода(НачПериода,КонПериода);
	ОбластьШапка.Параметры.Объект = НСтр("ru = 'Объект мониторинга:'")+" "+Объект+", датчик: "+Датчик;
	
	ТабДокумент.Вывести(ОбластьШапка);
		
	НомерПП = 1;
	
	Для Каждого СтрокаДанных Из ТабДанных Цикл
						
		ОбластьДетали.Параметры.Заполнить(СтрокаДанных);
		ОбластьДетали.Параметры.Значение = СтрокаДанных.Расшифровка;
		ОбластьДетали.Параметры.НомерПП = НомерПП;				
		ОбластьДетали.Параметры.Место = ItobОперативныйМониторинг.НайтиБлижайшийАдрес
		                                  (СтрокаДанных.Широта, СтрокаДанных.Долгота);				
		ОбластьДетали.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени
		                                  (СтрокаДанных.Продолжительность);		
		ОбластьДетали.Параметры.Расшифровка = Новый Структура("НачПериода,КонПериода,Объект",
		                               СтрокаДанных.НачДата-1,СтрокаДанных.КонДата+1,Объект);
		
		ТабДокумент.Вывести(ОбластьДетали);
				
		НомерПП = НомерПП + 1;
	
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("ИтогЗаголовок");
	ТабДокумент.Вывести(Область);
	
	ОбластьИтогСтрока = Макет.ПолучитьОбласть("ИтогСтрока");
	
	ТабДанных.Свернуть("Значение,Расшифровка", "Продолжительность");
	Для Каждого СтрокаИтоги Из ТабДанных Цикл
		ОбластьИтогСтрока.Параметры.Значение = ?(ПустаяСтрока(СтрокаИтоги.Расшифровка),
		                  "Показание: "+СтрокаИтоги.Значение, СтрокаИтоги.Расшифровка);
		ОбластьИтогСтрока.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени
		      (СтрокаИтоги.Продолжительность)+" ("+Формат(СтрокаИтоги.Продолжительность/ТабДанных.Итог
		                                           ("Продолжительность")*100,"ЧЦ=3; ЧДЦ=1; ЧН=0")+"%)";
		ТабДокумент.Вывести(ОбластьИтогСтрока);
	
	КонецЦикла;
	
	
	Возврат ТабДокумент;

КонецФункции
	
#КонецОбласти 

#КонецЕсли
