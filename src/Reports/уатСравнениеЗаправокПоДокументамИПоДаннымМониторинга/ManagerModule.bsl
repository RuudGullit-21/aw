#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ПрограммныйИнтерфейс

// Задает настройки размещения вариантов отчетов в панели отчетов.
// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       См. ""Реквизиты для изменения"" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Сравнение заправок по документам и по данным мониторинга");
	НастройкиВарианта.Описание = НСтр("en='Report provides comparative information about quantity of fuelled according to fueling data and monitoring data.';ru='Отчет позволяет получить сравнительную информацию о количестве заправленного топлива по данным заправок ГСМ и данным мониторинга.'");
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПолеРегистратор(ИсточникДанных, ЗаправкаГСМ, Период) Экспорт 
	
	Если ИсточникДанных = 1 Тогда 
		Возврат ЗаправкаГСМ;
	Иначе 
		Возврат НСтр("ru = 'По данным мониторинга от'") + " " + Формат(Период, "ДФ='dd.MM.yyyy HH:mm'");
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолеАЗС(ИсточникДанных, ДокументАЗС, ТС, Период) Экспорт 
	
	Если ИсточникДанных = 1 Тогда 
		Возврат Строка(ДокументАЗС);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ТС", ТС);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатКоординатыПоМониторингуСрезПоследних.Широта КАК Широта,
	|	уатКоординатыПоМониторингуСрезПоследних.Долгота КАК Долгота
	|ИЗ
	|	РегистрСведений.уатКоординатыПоМониторингу.СрезПоследних(&Период, ТС = &ТС) КАК уатКоординатыПоМониторингуСрезПоследних
	|ГДЕ
	|	РАЗНОСТЬДАТ(уатКоординатыПоМониторингуСрезПоследних.Период, &Период, ЧАС) <= 24
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатАЗСАдреса.Ссылка КАК АЗС,
	|	уатАЗСАдреса.ПунктНазначения КАК ПунктНазначения,
	|	уатПунктыНазначения.Лат КАК Лат,
	|	уатПунктыНазначения.Лон КАК Лон,
	|	уатПунктыНазначения.РадиусПоиска КАК РадиусПоиска
	|ИЗ
	|	Справочник.уатАЗС.Адреса КАК уатАЗСАдреса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.уатПунктыНазначения КАК уатПунктыНазначения
	|		ПО уатАЗСАдреса.ПунктНазначения = уатПунктыНазначения.Ссылка";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаКоординаты = Результат[0].Выбрать();
	Если ВыборкаКоординаты.Следующий() Тогда 
		ШиротаЗаправки  = ВыборкаКоординаты.Широта;
		ДолготаЗаправки = ВыборкаКоординаты.Долгота;
	Иначе 
		Возврат "";
	КонецЕсли;
	
	ВыборкаАЗС = Результат[1].Выбрать();
	Пока ВыборкаАЗС.Следующий() Цикл 
		Расстояние = уатЗащищенныеФункцииСервер_проф.РассчитатьДистанциюПоКоординатам(ШиротаЗаправки, ДолготаЗаправки, ВыборкаАЗС.Лат, ВыборкаАЗС.Лон);
		
		Если Расстояние <= ВыборкаАЗС.РадиусПоиска Тогда 
			Возврат "" + Строка(ВыборкаАЗС.АЗС) + " " + Строка(ВыборкаАЗС.ПунктНазначения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

Функция ПолучитьПолеРазрешеннаяАЗС(ИсточникДанных, ТС, Период) Экспорт 
	
	Если ИсточникДанных = 1 Тогда 
		Возврат Истина;
	КонецЕсли;
	
	НайденнаяАЗС = ПолучитьПолеАЗС(ИсточникДанных, Неопределено, ТС, Период);
	Если ЗначениеЗаполнено(НайденнаяАЗС) Тогда 
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолеРазница(КоличествоGPS, КоличествоДокумент) Экспорт 
	
	Разница = КоличествоGPS - КоличествоДокумент;
	Если Разница < 0 Тогда 
		Разница = Разница * -1;
	КонецЕсли;
	
	Возврат Разница;
	
КонецФункции

Функция ПолучитьПолеРазницаПроцент(КоличествоGPS, КоличествоДокумент) Экспорт 
	
	Если КоличествоGPS = 0 Или КоличествоДокумент = 0 Тогда 
		Возврат 0;
	КонецЕсли;
	
	Разница = ПолучитьПолеРазница(КоличествоGPS, КоличествоДокумент);
	
	Если КоличествоGPS > КоличествоДокумент Тогда 
		Возврат Окр((Разница / КоличествоGPS) * 100, 1);
	Иначе 
		Возврат Окр((Разница / КоличествоДокумент) * 100, 1);
	КонецЕсли;
	
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатОтчетОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#КонецЕсли