
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаНач = НачалоМесяца(ТекущаяДата());
	ДатаКон = ТекущаяДата();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
		
	Если Параметры.Свойство("Аккумулятор") Тогда
		Аккумулятор = Параметры.Аккумулятор;
	КонецЕсли;
	
	Если Параметры.Свойство("ТС") Тогда
		ТС = Параметры.ТС;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Аккумулятор) И ЗначениеЗаполнено(ТС) Тогда
		Сформировать(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Организация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Организация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Организация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	ТекстСообщения = "";
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101' Тогда
		ТекстСообщения = ТекстСообщения + " - " + НСтр("en='Period start date cannot be greater than the period end date';ru='Дата начала периода не может быть больше даты конца периода'") + Символы.ПС;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Аккумулятор) Тогда
		ТекстСообщения = ТекстСообщения + "- " + НСтр("en='Battery not specified!';ru='Не указан аккумулятор!'") + Символы.ПС;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТС) тогда
		ТекстСообщения = ТекстСообщения + " - " + НСтр("en='Vehicle not specified';ru='Не указано ТС'") + Символы.ПС;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстСообщения) тогда
		ТекстНСТР = НСтр("en='It is impossible to generate report:';ru='Невозможно сформировать отчет:'") + " " + Символы.ПС + ТекстСообщения;
		ПоказатьПредупреждение(, ТекстНСТР, 10);
		Возврат;
	КонецЕсли;
	
	ТабДок = СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//  ДокументРезультат - табличный документ, формируемый отчетом
//
&НаСервере
Функция СформироватьОтчет()
	ДокументРезультат = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос(	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(УстановленоНаТС.Период) КАК ДатаУстановкиАКБНаТС,
	|	УстановленоНаТС.СерияНоменклатуры КАК АКБ,
	|	МИНИМУМ(СнятоСТС.Период) КАК ДатаСнятияАКБСТС,
	|	УстановленоНаТС.ТС.Модель КАК МодельТС,
	|	УстановленоНаТС.ТС.ГаражныйНомер КАК ИнвНомерТС,
	|	УстановленоНаТС.ТС.ГосударственныйНомер КАК ГосНомерТС,
	|	УстановленоНаТС.ТС.Ссылка КАК ТС,
	|	РАЗНОСТЬДАТ(УстановленоНаТС.Период, ЕСТЬNULL(СнятоСТС.Период, &ДатаКон), МЕСЯЦ) КАК КоличествоМесяцев
	|ПОМЕСТИТЬ АКБДвижения
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС КАК УстановленоНаТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(&ДатаКон, ТС = &ТС) КАК СнятоСТС
	|		ПО УстановленоНаТС.СерияНоменклатуры = СнятоСТС.СерияНоменклатуры
	|			И УстановленоНаТС.ТС = СнятоСТС.ТС
	|			И (СнятоСТС.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.Снято))
	|ГДЕ
	|	УстановленоНаТС.СерияНоменклатуры = &АКБ
	|	И УстановленоНаТС.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|	И УстановленоНаТС.ТС = &ТС
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановленоНаТС.СерияНоменклатуры,
	|	УстановленоНаТС.ТС.Модель,
	|	УстановленоНаТС.ТС.ГаражныйНомер,
	|	УстановленоНаТС.ТС.ГосударственныйНомер,
	|	УстановленоНаТС.ТС.Ссылка,
	|	РАЗНОСТЬДАТ(УстановленоНаТС.Период, ЕСТЬNULL(СнятоСТС.Период, &ДатаКон), МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(уатВыработкаОбороты.КоличествоОборот) КАК Пробег,
	|	уатВыработкаОбороты.ТС КАК ТС
	|ПОМЕСТИТЬ ПробегТСОбщий
	|ИЗ
	|	РегистрНакопления.уатВыработкаТС.Обороты(
	|			,
	|			&ДатаКон,
	|			,
	|			ТС В
	|					(ВЫБРАТЬ
	|						АКБДвижения.ТС
	|					ИЗ
	|						АКБДвижения КАК АКБДвижения)
	|				И Организация = &Организация
	|				И ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)) КАК уатВыработкаОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	уатВыработкаОбороты.ТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АКБДвижения.ДатаСнятияАКБСТС КАК ДатаСнятияАКБСТС,
	|	АКБДвижения.ДатаУстановкиАКБНаТС КАК ДатаУстановкиАКБНаТС,
	|	АКБДвижения.ГосНомерТС КАК ГосНомерТС,
	|	АКБДвижения.ИнвНомерТС КАК ИнвНомерТС,
	|	ПробегТСОбщий.Пробег КАК ПробегОбщий,
	|	АКБДвижения.МодельТС КАК МодельТС,
	|	АКБДвижения.КоличествоМесяцев КАК КоличествоМесяцев
	|ИЗ
	|	АКБДвижения КАК АКБДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПробегТСОбщий КАК ПробегТСОбщий
	|		ПО АКБДвижения.ТС = ПробегТСОбщий.ТС");
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	
	Шапка = Макет.ПолучитьОбласть("Заголовок");

	НазваниеОрганизации = Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = Организация;
	КонецЕсли;
	
	Шапка.Параметры.НазваниеОрганизации	= уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(Организация, ДатаКон),
		"ПолноеНаименование, ЮридическийАдрес, Телефоны");
		
    Шапка.Параметры.ГаражНомер			= ТС.ГаражныйНомер;
	Шапка.Параметры.НомерКолонны		= уатОбщегоНазначения.МестонахождениеТС(ТС, ДатаКон).Колонна;
	Шапка.Параметры.МаркаАКБ			= Аккумулятор.Модель;
	Шапка.Параметры.ТС					= ТС;	

	ДокументРезультат.Вывести(Шапка);
	
	Запрос.Параметры.Вставить("ДатаНач", НачалоДня(ДатаНач));
	
	Если ДатаКон <> '00010101' Тогда
		Запрос.Параметры.Вставить("ДатаКон", КонецДня(ДатаКон));
	Иначе
		Запрос.Параметры.Вставить("ДатаКон", ДатаКон);
	КонецЕсли;
	
	Запрос.Параметры.Вставить("АКБ"         , Аккумулятор);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("ТС"         , ТС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("ЗаголовокОтчета");
	
	ДокументРезультат.Вывести(ЗаголовокОтчета);
    Выборка = РезультатЗапроса.Выбрать();
	
	Строка = Макет.ПолучитьОбласть("Строка");
	
	Пока Выборка.Следующий() Цикл
		Строка.Параметры.Заполнить(Выборка);
		Строка.Параметры.ТС = ТС;
		ДокументРезультат.Вывести(Строка);
	КонецЦикла;	
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ДокументРезультат.Вывести(Подвал);
	
	// Ориентация страницы
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Карточка работы шины";

	Возврат ДокументРезультат;
КонецФункции // СформироватьОтчет()

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Если Не Период = Неопределено Тогда
        ДатаНач = Период.ДатаНачала;
        ДатаКон = Период.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти
