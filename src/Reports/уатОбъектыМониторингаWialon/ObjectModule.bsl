
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДокументРезультат.Очистить();
	
	ТабДанных   = Неопределено;
	ТекстОшибки = "";
	
	УчетнаяЗапись = Неопределено;
	ПользовательскиеНастройки = ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого ТекСтрока Из ПользовательскиеНастройки Цикл
		Если Строка(ТекСтрока.Параметр) = "УчетнаяЗапись" Тогда
			УчетнаяЗапись = ТекСтрока.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ТекстНСТР = НСтр("ru='Учетная запись не заполнена.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	
	СтруктураПараметровУчетнойЗаписи = уатМониторинг.ПолучитьСтруктуруПараметровДляРаботыССистемойМониторинга(УчетнаяЗапись);
	ТаблицаТС = уатМониторинг.ЗаполнитьТаблицуВсемиТС(СтруктураПараметровУчетнойЗаписи, ТекстОшибки);
	
	Если ТаблицаТС = Неопределено 
		ИЛИ ЗначениеЗаполнено(ТекстОшибки) Тогда 
		ТекстНСТР = НСтр("en='Failed to get data from the system ""Wialon"".';ru='Не удалось получить данные от системы ""Wialon"".'") + Символы.ПС + ТекстОшибки;
		ВызватьИсключение ТекстНСТР;
		
	Иначе 
		ТабДанных = Новый ТаблицаЗначений();
		ТабДанных.Колонки.Добавить("id", 			 Новый ОписаниеТипов("Строка"));
		ТабДанных.Колонки.Добавить("nm",			 Новый ОписаниеТипов("Строка"));
		
		Для Каждого ТекСтрока Из ТаблицаТС Цикл
			НоваяСтрока = ТабДанных.Добавить();
			НоваяСтрока.id = ТекСтрока.ИДвСистеме;
			НоваяСтрока.nm = ТекСтрока.Наименование;
		КонецЦикла;
		ВнешниеНаборыДанных = Новый Структура;
		ВнешниеНаборыДанных.Вставить("ТабДанныхWialon", ТабДанных);
		СхемаКомпоновкиДанных = ЭтотОбъект.СхемаКомпоновкиДанных;
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
				
		КомпоновщикМакета         = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки           = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
		ПроцессорВывода           = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ДокументРезультат.АвтоМасштаб = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
