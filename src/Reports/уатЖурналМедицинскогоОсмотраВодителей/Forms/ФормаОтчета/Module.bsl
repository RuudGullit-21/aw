
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьКомпоновщик();
	
	Если Параметры.Свойство("ДатаНач") Тогда
		НачалоПериода = Параметры.ДатаНач;
	Иначе
		НачалоПериода = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	Если Параметры.Свойство("ДатаКон") Тогда
		КонецПериода = Параметры.ДатаКон;
	Иначе
		КонецПериода  = ТекущаяДата();
	КонецЕсли;
	Если Параметры.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Организация;
	Иначе
		ОтборОрганизация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			Пользователи.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	Если Параметры.Свойство("Журнал") Тогда
		Журнал = Параметры.Журнал;
		НачалоПериода = Журнал.ДатаНачала;
		Если ЗначениеЗаполнено(Журнал.ДатаОкончания) Тогда
			КонецПериода = Журнал.ДатаОкончания;
		ИначеЕсли КонецПериода < НачалоПериода Тогда
			КонецПериода = ДобавитьМесяц(НачалоПериода, 1);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		Для Каждого ТекЭлемент Из НастройкиКомпоновки.Настройки.Отбор.Элементы Цикл
			Если ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда
				ТекЭлемент.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
				ТекЭлемент.ПравоеЗначение = ОтборОрганизация;
				ТекЭлемент.Использование  = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если Параметры.Свойство("ТолькоПодписанные") Тогда
		ТолькоПодписанные = Параметры.ТолькоПодписанные;
	КонецЕсли;
			
	УстановитьИконкуСортировки();
	
	Если Параметры.Свойство("ФормироватьПриОткрытии") Тогда
		СформироватьОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда 
		Возврат;
	КонецЕсли;
	
	СохранитьНастройки();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	Если НачалоПериода > КонецПериода Тогда
		ТекстСообщения = НСтр("en='Period start date cannot be greater than the period end date';ru='Дата начала периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Журнал.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано значение журнала",, "Журнал");
		Возврат;
	КонецЕсли;
	
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = НачалоПериода;
	ДиалогПериода.Период.ДатаОкончания = КонецПериода;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		НачалоПериода = Период.ДатаНачала;
		КонецПериода = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчета(Команда)
	
	ДокументРезультат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура Сортировка(Команда)
	ОткрытьФорму("Отчет.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаСортировки",, ЭтотОбъект,,,,
		Новый ОписаниеОповещения("СоздатьСортировкуЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчет()
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого ТекПараметр Из НастройкиКомпоновки.Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда 
			ТекПараметр.Значение      = НачалоПериода;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда 
			ТекПараметр.Значение      = ?(КонецПериода = '00010101', '39991231', КонецДня(КонецПериода));
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("Журнал") Тогда 
			ТекПараметр.Значение      = Журнал;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ТолькоПодписанные") Тогда 
			ТекПараметр.Значение      = ТолькоПодписанные;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТекОрганизация = Справочники.Организации.ПустаяСсылка();
	Для Каждого ТекЭлемент Из НастройкиКомпоновки.Настройки.Отбор.Элементы Цикл
		Если ТекЭлемент.Использование И ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация")
			И ТекЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ТекОрганизация = ТекЭлемент.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	// Заполнение сортировки
	Для Каждого ТекЭлемент Из НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы Цикл
		ТекНастройка = НастройкиКомпоновки.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ТекНастройка, ТекЭлемент);
	КонецЦикла;
	
	Если НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы.Количество() = 0 Тогда
		ЭлементСортировки = НастройкиКомпоновки.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ЭлементСортировки.Поле = Новый ПолеКомпоновкиДанных("ДатаВыезда");
		ЭлементСортировки.Использование = Истина;
		ЭлементСортировки.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	СхемаКомпоновкиДанных = Отчеты.уатЖурналМедицинскогоОсмотраВодителей.ПолучитьМакет("ИсточникНастроекОтбораКомпоновщика");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	тблРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(тблРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	мсвВсеДокументыЖурнала = ПолучитьДокументыЖурнала(Журнал);
	
	Макет = Отчеты.уатЖурналМедицинскогоОсмотраВодителей.ПолучитьМакет("Макет");
	
	ОбластьШапкаТаблицыВторойЛист = Макет.ПолучитьОбласть("ШапкаТаблицыВтораяСтраница");
	
	Если ПечататьТитульныйЛист Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьЗаголовок.Параметры.Организация = уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(
			уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ТекОрганизация, ТекущаяДата()), "НаименованиеДляПечатныхФорм,ЮридическийАдрес,Телефоны");
			
		Если Журнал.ВидЖурнала = Перечисления.уатВидыЖурналовТранспортныхДокументов.ЖурналПредрейсовогоМедицинскогоОсмотраВодителей Тогда
			ОбластьЗаголовок.Параметры.ВидКонтроля = "ПРЕДРЕЙСОВЫХ";
		Иначе
			ОбластьЗаголовок.Параметры.ВидКонтроля = "ПОСЛЕРЕЙСОВЫХ";
		КонецЕсли;
		ОбластьЗаголовок.Параметры.ДатаНачала   = Журнал.ДатаНачала;
		ОбластьЗаголовок.Параметры.ДатаОкончания = Журнал.ДатаОкончания;
		
		ДокументРезультат.Вывести(ОбластьЗаголовок);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
	ВсегоЛистов = 1;
	
	//Для Сч = 1 По 10 Цикл // для проверки механизма перехода на другую страницу
	
	Для Каждого ВыборкаДетали Из тблРезультат Цикл
		НомерЗаписи = мсвВсеДокументыЖурнала.Найти(ВыборкаДетали.Документ);
		Если НомерЗаписи = Неопределено Тогда
			НомерЗаписи = 0;
		Иначе
			НомерЗаписи = НомерЗаписи + 1;
		КонецЕсли;
		
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ЗаполнитьЗначенияСвойств(ОбластьДетальныхЗаписей.Параметры, ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.ВодительФИО = уатОбщегоНазначения.уатФИОСотрудникаПолноеСтрокой(ВыборкаДетали.Водитель, ВыборкаДетали.ДатаКонтроля);
		ОбластьДетальныхЗаписей.Параметры.НомерЗаписи = НомерЗаписи;
		ОбластьДетальныхЗаписей.Параметры.РезультатыОсмотра = ПредставлениеРезультатовОсмотра(ВыборкаДетали.Документ);
		ОбластьДетальныхЗаписей.Параметры.МедРаботник = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ВыборкаДетали.МедРаботник);
		
		Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьДетальныхЗаписей) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(ОбластьШапкаТаблицыВторойЛист);
			ВсегоЛистов = ВсегоЛистов + 1;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьДетальныхЗаписей);
	КонецЦикла;

	//КонецЦикла;
	
	Если ПечататьПоследнийЛист Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ДатаПечати = ТекущаяДата();
		ОбластьПодвал.Параметры.ВсегоЛистов = ВсегоЛистов;
		ДокументРезультат.Вывести(ОбластьПодвал);
	КонецЕсли;
			
КонецПроцедуры // СформироватьРезультат()

&НаКлиенте
Процедура СоздатьСортировкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("КоллекцияЭлементовПорядкаКомпоновкиДанных") Тогда
		НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы.Очистить();
		НастройкиКомпоновки.Настройки.Порядок.Элементы.Очистить();
		Для Каждого ТекЭлемент Из Результат Цикл
			ТекНастройка = НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ТекНастройка, ТекЭлемент);	
		КонецЦикла;
		
		СформироватьОтчет();
	КонецЕсли;
	
	УстановитьИконкуСортировки();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИконкуСортировки()
	
	ЕстьСортировка = Ложь;
	
	Для Каждого ТекСтрока Из НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы Цикл
		Если ТекСтрока.Использование Тогда 
			ЕстьСортировка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ФормаСортировка.Картинка = ?(ЕстьСортировка, БиблиотекаКартинок.уатСортировкаУстановлена, БиблиотекаКартинок.уатСортировкаНеУстановлена);
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеРезультатовОсмотра(ДокументСсылка)
	Рез = "";
	
	Для Каждого ТекСтрока Из ДокументСсылка.РезультатыОсмотра Цикл
		Рез = Рез + Символы.ПС + ТекСтрока.Требование + ":" + ТекСтрока.Результат;
	КонецЦикла;
	Если НЕ ПустаяСтрока(Рез) Тогда
		Рез = Сред(Рез, 2);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

&НаСервере
Процедура ИнициализироватьКомпоновщик()
	МакетКомпоновки = Отчеты.уатЖурналМедицинскогоОсмотраВодителей.ПолучитьМакет("ИсточникНастроекОтбораКомпоновщика");
	URLСхемы        = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.НастройкиПоУмолчанию);
	
	// Сортировка
	СхемаКомпоновкиДанныхСортировка = Отчеты.уатЖурналМедицинскогоОсмотраВодителей.ПолучитьМакет("ИсточникНастроекОтбораКомпоновщика");
	АдресСхемыКомпоновкиДанныхСортировка = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанныхСортировка, УникальныйИдентификатор);
	
	НастройкиКомпоновкиСортировка.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанныхСортировка));
	НастройкиКомпоновкиСортировка.ЗагрузитьНастройки(СхемаКомпоновкиДанныхСортировка.НастройкиПоУмолчанию);
	
	НастройкиПорядка = ХранилищеНастроекДанныхФорм.Загрузить(
		"Отчеты.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаОтчета",
		"уатЖурналМедицинскогоОсмотраВодителей_НастройкиКомпоновщика_Порядок");
	
	Если НастройкиПорядка <> Неопределено 
		ИЛИ ТипЗнч(НастройкиПорядка) = Тип("ХранилищеЗначения") Тогда 
		
		Для Каждого ТекПорядок Из НастройкиПорядка.Получить().Элементы Цикл 
			НовыйПорядок = НастройкиКомпоновкиСортировка.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(НовыйПорядок, ТекПорядок);
		КонецЦикла;
	КонецЕсли;
	
	НастройкиОтчета = ХранилищеНастроекДанныхФорм.Загрузить(
		"Отчеты.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаОтчета",
		"уатЖурналМедицинскогоОсмотраВодителей_Настройки");
	Если ТипЗнч(НастройкиОтчета) = Тип("Структура") Тогда
		Если НастройкиОтчета.Свойство("ПечататьТитульныйЛист") Тогда
			ПечататьТитульныйЛист = НастройкиОтчета.ПечататьТитульныйЛист;
		КонецЕсли;
		Если НастройкиОтчета.Свойство("ПечататьПоследнийЛист") Тогда
			ПечататьПоследнийЛист = НастройкиОтчета.ПечататьПоследнийЛист;
		КонецЕсли;
		Если НастройкиОтчета.Свойство("ТолькоПодписанные") Тогда
			ТолькоПодписанные = НастройкиОтчета.ТолькоПодписанные;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	ХранилищеНастроекДанныхФорм.Сохранить("Отчеты.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаОтчета",
		"уатЖурналМедицинскогоОсмотраВодителей_НастройкиКомпоновщика_Порядок",
		Новый ХранилищеЗначения(НастройкиКомпоновкиСортировка.Настройки.Порядок));
		
	НастройкиОтчета = Новый Структура;
	НастройкиОтчета.Вставить("ПечататьТитульныйЛист", ПечататьТитульныйЛист);
	НастройкиОтчета.Вставить("ПечататьПоследнийЛист", ПечататьПоследнийЛист);
	НастройкиОтчета.Вставить("ТолькоПодписанные",     ТолькоПодписанные);
	ХранилищеНастроекДанныхФорм.Сохранить(
		"Отчеты.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаОтчета",
		"уатЖурналМедицинскогоОсмотраВодителей_Настройки",
		НастройкиОтчета);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДокументыЖурнала(Журнал)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЖурналМедицинскогоОсмотраВодителей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.уатЖурналМедицинскогоОсмотраВодителей КАК уатЖурналМедицинскогоОсмотраВодителей
	|ГДЕ
	|	уатЖурналМедицинскогоОсмотраВодителей.Журнал = &Журнал
	|	И уатЖурналМедицинскогоОсмотраВодителей.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	уатЖурналМедицинскогоОсмотраВодителей.Дата,
	|	уатЖурналМедицинскогоОсмотраВодителей.Ссылка");
	Запрос.УстановитьПараметр("Журнал", Журнал);
	мсвДокументы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат мсвДокументы;
КонецФункции

#КонецОбласти
