
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжиданияПостроенияОтчета;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаНачОтчет = НачалоДня(ТекущаяДата());
	ДатаКонОтчет = КонецДня(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьНастройки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", ТС);
		ОповещЗакрытие = Новый ОписаниеОповещения("ТССписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Отчет.уатСтатистикаOmnicomm.Форма.СписокЗначенийТС",ПараметрыФормы, Элемент,,,,ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТССписокВыбор(ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТС = ВыбранноеЗначение;
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(ТС) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", ТС);
		ОповещЗакрытие = Новый ОписаниеОповещения("ТССписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Отчет.уатСтатистикаOmnicomm.Форма.СписокЗначенийТС", ПараметрыФормы, Элемент,,,, ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьОнлайнОтчет();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ДиалогРедактированияСтандартногоПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактированияСтандартногоПериода.Период.ДатаНачала = ДатаНачОтчет;
	ДиалогРедактированияСтандартногоПериода.Период.ДатаОкончания = ДатаКонОтчет;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	
	ДиалогРедактированияСтандартногоПериода.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачОтчет = РезультатВыбора.ДатаНачала;
	ДатаКонОтчет = РезультатВыбора.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	ОткрытьФорму("Отчет.уатСводныйОтчетOmnicomm.Форма.ФормаНастроекОтчета",,ЭтотОбъект);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить(
		"Отчет.уатСводныйОтчетOmnicomm",
		"ТС",,Пользователи.АвторизованныйПользователь());
	Если ТипЗнч(СтруктураНастроек) <> Тип("Структура") Тогда
		СтруктураНастроек = Новый Структура();
	КонецЕсли;
	
	СтруктураНастроек.Свойство("ТС", ТС);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ТС", ТС);
	
	ХранилищеНастроекДанныхФорм.Сохранить(
		"Отчет.уатСводныйОтчетOmnicomm", 
		"ТС",
		СтруктураНастроек,,Пользователи.АвторизованныйПользователь());
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОнлайнОтчет()
	
	Если ТипЗнч(ТС) = Тип("СправочникСсылка.уатТС") Тогда
		мсвТС = Новый Массив();
		мсвТС.Добавить(ТС);
	ИначеЕсли ЗначениеЗаполнено(ТС) Тогда
		мсвТС = ТС.ВыгрузитьЗначения();
	Иначе
		мсвТС = Новый Массив();
	КонецЕсли;
	
	ДатаНач = НачалоДня(ДатаНачОтчет);
	ДатаКон = КонецДня(ДатаКонОтчет);
	
	Если ДатаНач - ДатаКон > 2592000 Тогда
		ДатаНач = НачалоМесяца(ДатаКон);
	КонецЕсли;
	
	ПараметрыВыполненияФЗ = Новый Структура;
	ПараметрыВыполненияФЗ.Вставить("ДатаНачОтчет", ДатаНач);
	ПараметрыВыполненияФЗ.Вставить("ДатаКонОтчет", ДатаКон);
	ПараметрыВыполненияФЗ.Вставить("мсвОтмеченныеТС", мсвТС);
	
	ОтчетСформирован = Ложь;
	ИмяПроцедурыОбработчикаОжидания	 = "ФоновоеЗаданиеПроверитьНаКлиенте";
	ИмяМетодаФЗ = "уатОбщегоНазначения_проф.Omnicomm_СформироватьСводныйОтчетВФоне";
	
	ТребуетсяОбработчик = уатОбщегоНазначения_проф.СтартФоновогоЗаданияНаСервере(ПараметрыВыполненияФЗ, ИмяМетодаФЗ, ФоновоеЗаданиеАдресХранилищаОнлайнОтчет, ФоновоеЗаданиеИдентификаторОнлайнОтчет, УникальныйИдентификатор);
	Если ТребуетсяОбработчик Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжиданияПостроенияОтчета);
		ПодключитьОбработчикОжидания(ИмяПроцедурыОбработчикаОжидания, 1, Истина);
	Иначе
		ОтключитьОбработчикОжидания(ИмяПроцедурыОбработчикаОжидания);
		ТабДок = ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилищаОнлайнОтчет).ТабличныйДокумент;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ФоновоеЗаданиеПроверитьНаКлиенте()
	Задание = уатОбщегоНазначения_проф.ФоновоеЗаданиеПроверитьНаСервере(ТабДок, ОтчетСформирован, ФоновоеЗаданиеИдентификаторОнлайнОтчет, ФоновоеЗаданиеАдресХранилищаОнлайнОтчет);
	Если Задание.Выполняется Тогда
		Макет       = уатОбщегоНазначения_проф.Omnicom_ПолучитьМакетОтчета("уатСводныйОтчетOmnicomm");
		тдРезультат = уатОбщегоНазначения_проф.Omnicom_ВывестиСообщениеОтчет(Макет, Нстр("ru = 'Идет построение отчета...'"));
		ТабДок      = тдРезультат;
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжиданияПостроенияОтчета);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", ПараметрыОбработчикаОжиданияПостроенияОтчета.ТекущийИнтервал, Истина);
	Иначе
		Если ОтчетСформирован Тогда
			ПоказатьОповещениеПользователя(НСтр("ru='Отчет сформирован';en='Report is generated'"), , Заголовок);
		Иначе
			ПоказатьОповещениеПользователя(НСтр("ru='Отчет не сформирован';en='Report is not generated'"), , Заголовок);
		КонецЕсли;
		ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
