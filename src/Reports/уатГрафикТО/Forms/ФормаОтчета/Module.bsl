
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ВызватьИсключение НСтр("ru = 'Не поддерживается в мобильном клиенте.'")
	КонецЕсли;
	
	ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	ДиаграммаТО.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
	ПервыйЭлемент = ДиаграммаТО.ОбластьПостроения.ШкалаВремени.Элементы[0];
	ПервыйЭлемент.Единица = ТипЕдиницыШкалыВремени.Месяц;
	ПервыйЭлемент.ЛинииДелений = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
	ПервыйЭлемент.Формат = "ДФ='ММММ yyyy'";
	
	Элемент = ДиаграммаТО.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	Элемент.Единица = ТипЕдиницыШкалыВремени.День;
	Элемент.ФорматДня =  ФорматДняШкалыВремени.ДеньМесяца;
	Элемент.ЛинииДелений = Новый Линия(ТипЛинииДиаграммы.Точечная, 1);
	
	Дата         = ТекущаяДата();
	ДатаНач      = НачалоМесяца(Дата);
	ДатаКон      = КонецМесяца(Дата);
	МасштабГанта = 4;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаНач > ДатаКон Тогда 
		ТекстОшибки = НСтр("en='Period end date cannot be earlier than start date.';ru='Дата окончания периода не может быть меньше даты начала.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "КонецПериода",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаСервере(ДиаграммаТО);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчета(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЕстьДанныеНаВывод(ДатаНач, ДатаКон) Тогда
		ТекстОшибки = НСтр("ru='По заданным параметрам не найдены плановые ТО.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ДокументВыводаДиаграммы = Новый ТабличныйДокумент();
	ПечатьНаСервере(ДокументВыводаДиаграммы);
	// выведем на печать
	ДокументВыводаДиаграммы.ОтображатьСетку     = Ложь;
	ДокументВыводаДиаграммы.ОтображатьЗаголовки = Истина;
	ДокументВыводаДиаграммы.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ДокументВыводаДиаграммы.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("КнопкаНастройкаПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МасштабГантаПриИзменении(Элемент)
	Если МасштабГанта = 0 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Авто;
	ИначеЕсли МасштабГанта = 1 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	ИначеЕсли МасштабГанта = 2 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаТО.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Год;
	ИначеЕсли МасштабГанта = 3 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаТО.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Квартал;
	ИначеЕсли МасштабГанта = 4 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаТО.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
	ИначеЕсли МасштабГанта = 5 Тогда
		ДиаграммаТО.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаТО.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Неделя;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СформироватьОтчет(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПечатьНаСервере(ДокументВыводаДиаграммы)
	
	ДокументВыводаДиаграммы = Новый ТабличныйДокумент();
	ДнейПечать = (ДатаКон - ДатаНач)/60/60/24;
	ДатаНачалаПериода = ДатаНач;
	ПервыйДокумент = Истина;
	ПечатьМесяц = СтандартыйВариантПечати(ДиаграммаТО);
	Если ПечатьМесяц И ДнейПечать > 31 Тогда
		Пока ДатаНачалаПериода < ДатаКон Цикл
			Если Не ПервыйДокумент Тогда
				ДокументВыводаДиаграммы.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			ПечатьНаСервереЗавершение(ДокументВыводаДиаграммы, ДатаНачалаПериода);
			ДатаНачалаПериода = ДобавитьМесяц(ДатаНачалаПериода, 1);
		КонецЦикла;
	Иначе
		ПечатьНаСервереЗавершение(ДокументВыводаДиаграммы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПечатьНаСервереЗавершение(ДокументВыводаДиаграммы, ДатаНачалаПериода = Неопределено)
	
	Если Не ЕстьДанныеНаВывод(ДатаНачалаПериода) Тогда
		Возврат;
	КонецЕсли;
	
	ОблДиаграммы = Отчеты.уатГрафикТО.ПолучитьМакет("ДиаграммаГанта").ПолучитьОбласть("ОбластьДиаграммыГанта");
	
	// Устанавливаем заголовок диаграммы
	ОблДиаграммы.Область(1, 2, 1, 2).Текст = НСтр("en='Schedule of maintenance on';ru='График ТО на'") + " " + ПредставлениеПериода(ДатаНач, ДатаКон);
	
	ДокументВыводаДиаграммы.Вывести(ОблДиаграммы);
	ДиаграммаПечати = ДокументВыводаДиаграммы.Рисунки.ДиаграммаГанта.Объект; 
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ВерсияПлатформы = СистемнаяИнформация.ВерсияПриложения;
	РелизПлатформы = Число(Сред(ВерсияПлатформы, 5, 2)); 
	Если РелизПлатформы >= 20 Тогда
		мСвойствИсключений = "Обновление, СерияНаОсиТочек, ИсточникЗначенийОсиТочек, ОбщаяСерияРазмераПузырька";
	Иначе
		мСвойствИсключений = "Обновление, СерияНаОсиТочек, АвтоМинимальноеЗначение, ИсточникЗначенийОсиТочек, ОбщаяСерияРазмераПузырька";
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДиаграммаПечати, ДиаграммаТО,, мСвойствИсключений);
	ДиаграммаПечати.ОтображатьЗаголовок = Ложь;
	УстановитьПериодичность(ДиаграммаТО, ДиаграммаПечати);
	
	СформироватьОтчетНаСервере(ДиаграммаПечати, ДатаНачалаПериода);
	
КонецПроцедуры

&НаСервере
Функция ЕстьДанныеНаВывод(ДатаНачалоПериода, ДатаКонецПериода = Неопределено)
	
	Если ДатаНачалоПериода = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДатаКонецПериода = Неопределено Тогда
		ДатаКонецПериода  = ДобавитьМесяц(ДатаНачалоПериода, 1);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаКон",               ДатаКонецПериода);
	Запрос.УстановитьПараметр("ОтображатьВыбывшиеТС",  ОтображатьВыбывшие);
	Запрос.УстановитьПараметр("РежимПланирования",     Истина);
	Запрос.УстановитьПараметр("ТекущаяДата",           ТекущаяДата());
	Запрос.УстановитьПараметр("ПоказыватьВыполненные", ПоказыватьВыполненные);
	
	Запрос.Текст = уатОбщегоНазначения.ТекстЗапросаСписокТСДляТОПлановыеДаты();
	
	ДанныеДляВывода = Новый Массив();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		// Отбор по организации
		Если ЗначениеЗаполнено(Организация) И Выборка.ТС.Организация <> Организация Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ПлановаяДатаТО >= ДатаНачалоПериода И Выборка.ПлановаяДатаТО <= ДатаКонецПериода Тогда 
			ДанныеДляВывода.Добавить(Новый Структура("ТС, ВидТО, ПлановаяДатаТО, Выполнено", Выборка.ТС, Выборка.ВидТО, Выборка.ПлановаяДатаТО, Ложь));
		КонецЕсли;
	КонецЦикла;
	
	Если ПоказыватьВыполненные Тогда
		
		Выборка = ПолучитьВыполненныеТО(ДатаНачалоПериода, ДатаКонецПериода);
		Пока Выборка.Следующий() Цикл 
			ДанныеДляВывода.Добавить(Новый Структура("ТС, ВидТО, ПлановаяДатаТО, Выполнено", Выборка.ТС, Выборка.ВидТО, Выборка.ПлановаяДатаТО, Истина));
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеДляВывода.Количество() = 0 Тогда
		Результат = Ложь;
	Иначе
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура СформироватьОтчетНаСервере(ДиаграммаВывода, ДатаПечати = Неопределено, ДанныеДляВывода = Неопределено)
	
	ДиаграммаВывода.Очистить();
	ДиаграммаВывода.АвтоОпределениеПолногоИнтервала = Ложь;
	Если ДатаПечати <> Неопределено Тогда
		ДиаграммаВывода.УстановитьПолныйИнтервал(ДатаПечати, ДобавитьМесяц(ДатаПечати, 1));
		ДатаНачалоПериода = ДатаПечати;
		ДатаКонецПериода  = ДобавитьМесяц(ДатаПечати, 1);
	Иначе
		ДиаграммаВывода.УстановитьПолныйИнтервал(ДатаНач, ДатаКон);
		ДатаНачалоПериода = ДатаНач;
		ДатаКонецПериода  = ДатаКон;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаКон",               ДатаКонецПериода);
	Запрос.УстановитьПараметр("ОтображатьВыбывшиеТС",  ОтображатьВыбывшие);
	Запрос.УстановитьПараметр("РежимПланирования",     Истина);
	Запрос.УстановитьПараметр("ТекущаяДата",           ТекущаяДата());
	Запрос.УстановитьПараметр("ПоказыватьВыполненные", ПоказыватьВыполненные);
	
	Запрос.Текст = уатОбщегоНазначения.ТекстЗапросаСписокТСДляТОПлановыеДаты();
	
	ДанныеДляВывода = Новый Массив();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		// Отбор по организации
		Если ЗначениеЗаполнено(Организация) И Выборка.ТС.Организация <> Организация Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ПлановаяДатаТО >= ДатаНачалоПериода И Выборка.ПлановаяДатаТО <= ДатаКонецПериода Тогда 
			ДанныеДляВывода.Добавить(Новый Структура("ТС, ВидТО, ПлановаяДатаТО, Выполнено", Выборка.ТС, Выборка.ВидТО, Выборка.ПлановаяДатаТО, Ложь));
		КонецЕсли;
	КонецЦикла;
	
	Если ПоказыватьВыполненные Тогда
		
		Выборка = ПолучитьВыполненныеТО(ДатаНачалоПериода, ДатаКонецПериода);
		Пока Выборка.Следующий() Цикл 
			ДанныеДляВывода.Добавить(Новый Структура("ТС, ВидТО, ПлановаяДатаТО, Выполнено", Выборка.ТС, Выборка.ВидТО, Выборка.ПлановаяДатаТО, Истина));
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого ТекТС Из ДанныеДляВывода Цикл 
		Серия = ДиаграммаВывода.УстановитьСерию(ТекТС.ВидТО);
		Серия.Расшифровка = ТекТС.ВидТО;
		
		//Цвет
		ЦветИнтервала = ТекТС.ВидТО.ЦветВидаОбслуживания.Получить();
		Если ЦветИнтервала = Неопределено Тогда 
			ЦветИнтервала = Новый Цвет();
		КонецЕсли;
		Серия.Цвет = ЦветИнтервала;
		
		ТочкаТС = ДиаграммаВывода.УстановитьТочку(ТекТС.ТС);
		ТочкаТС.Расшифровка = ТекТС.ТС;
		ТочкаТС.Текст = Строка(ТекТС.ТС);
		
		ЗначениеПериод = ДиаграммаВывода.ПолучитьЗначение(ТочкаТС, Серия);
		Интервал             = ЗначениеПериод.Добавить();
		Интервал.Начало      = НачалоДня(ТекТС.ПлановаяДатаТО);
		Интервал.Конец       = КонецДня(ТекТС.ПлановаяДатаТО);
		Интервал.Текст       = НСтр("en='Maintenance:';ru='ТО:'") + " " + ТекТС.ВидТО + ?(ТекТС.Выполнено, " " + НСтр("ru='(выполнено)'"), "");
	КонецЦикла;
	
	ДиаграммаВывода.ОбластьПостроения.Заголовок = НСтр("en='Vehicle';ru='ТС'");
	
КонецПроцедуры

Процедура УстановитьПериодичность(ДиаграммаГанта, ДиаграммаГантаПечать)
	ЭлементыШкалы       = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы;
	ЭлементыШкалыПечать = ДиаграммаГантаПечать.ОбластьПостроения.ШкалаВремени.Элементы;
	Если ЭлементыШкалы.Количество() > 0 Тогда
		Счетчик = 0;
		Для Каждого ТекЭлемент Из ЭлементыШкалы Цикл
			Если Счетчик <= ЭлементыШкалыПечать.Количество() -1 Тогда
				ЗаполнитьЗначенияСвойств(ЭлементыШкалыПечать[Счетчик],ТекЭлемент);
			Иначе
				Элемент = ЭлементыШкалыПечать.Добавить();
				ЗаполнитьЗначенияСвойств(Элемент,ТекЭлемент);
			КонецЕсли;
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьВыполненныеТО(ДатаНачала, ДатаОкончания)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНачала",         ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",      ДатаОкончания);
	Запрос.УстановитьПараметр("ОтображатьВыбывшие", ОтображатьВыбывшие);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатПрохождениеТО.ТС КАК ТС,
	               |	уатПрохождениеТО.ВидТО КАК ВидТО,
	               |	уатПрохождениеТО.ПараметрВыработки КАК ПараметрВыработки,
	               |	уатПрохождениеТО.Период КАК ПлановаяДатаТО
	               |ИЗ
	               |	РегистрСведений.уатПрохождениеТО КАК уатПрохождениеТО
	               |ГДЕ
	               |	уатПрохождениеТО.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И (&ОтображатьВыбывшие
	               |			ИЛИ уатПрохождениеТО.ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка;

КонецФункции

Функция СтандартыйВариантПечати(ДиаграммаГантаПечать)
	Если ДиаграммаГантаПечать.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период 
		И ДиаграммаГантаПечать.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц 
		И ДиаграммаГантаПечать.КратностьПериодическогоВарианта = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура КнопкаНастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		ДатаНач = Период.ДатаНачала;
		ДатаКон = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
