
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВариантыОтчетов

// Задает настройки размещения вариантов отчетов в панели отчетов.
// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       См. ""Реквизиты для изменения"" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("en='Отчет предназначен для анализа данных бюджетирования в соответствии со структурой заданной видом бюджета.';ru='Отчет предназначен для анализа данных бюджетирования в соответствии со структурой заданной видом бюджета.'");
		НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей = ""
		+ НСтр("en='ВидБюджета';ru='ВидБюджета'") + Символы.ПС
		+ НСтр("en='ДатаАктуальности';ru='ДатаАктуальности'")+ Символы.ПС
		+ НСтр("en='Сценарий';ru='Сценарий'");
	
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = ""
		+ НСтр("en='ВидБюджета';ru='ВидБюджета'") + Символы.ПС
		+ НСтр("en='ДатаАктуальности';ru='ДатаАктуальности'") + Символы.ПС
		+ НСтр("en='Сценарий';ru='Сценарий'");
	
	НастройкиВарианта.НастройкиДляПоиска.КлючевыеСлова =
		НСтр("en='бюджетный отчет';ru='бюджетный отчет'");
		
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
		
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак того, что для построения очета по виду бюджета требуется выбор сценария
//
// Параметры:
//  ВидБюджета	 - СправочникСсылка.ВидыБюджетов - Вид бюджета для анализа
// 
// Возвращаемое значение:
//  Результат - Булево - Истина - Требуется, Ложь - Не требуется
//
Функция ПараметрыДоступностиОтборов(ВидБюджета) Экспорт
	
	// На уровне вида бюджета сценарий статей может быть определен:
	// - в отборах самих статей
	// - в группировках строк/колонок таблиц
	// - в группировках верхнего уровня
	
	СтруктураКолонокТаблицыДанных = БюджетнаяОтчетностьСервер.ПолучитьСтруктуруКолонокТаблицыДанныхВидаБюджета(ВидБюджета);
	СтруктураОписанияВидаБюджета = БюджетнаяОтчетностьСервер.ПолучитьСтруктуруОписанияВидаБюджета(ВидБюджета, 
																				СтруктураКолонокТаблицыДанных, 
																				Перечисления.РежимыФормированияБюджетныхОтчетов.Отчет);
																				
	Результат = Новый Структура("ДоступенВыборСценария, 
								|ДоступенВыборОрганизации, 
								|ДоступенВыборПодразделения", 
								Ложь, Ложь, Ложь);
								
	Для каждого ИсточникДанных Из СтруктураОписанияВидаБюджета.ИсточникиДанных Цикл
		
		ОтборИсточника = ИсточникДанных.ДополнительныйОтбор;
		Если ОтборИсточника = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеЭлементы = Новый Массив;
		Если Не Результат.ДоступенВыборСценария
			И Не ИсточникДанных.Свойство("Сценарий")
			И БюджетнаяОтчетностьСервер.НайтиОтборПоИмени(ОтборИсточника, "Сценарий", НайденныеЭлементы) Тогда
			Для каждого Элемент Из НайденныеЭлементы Цикл
				Если Элемент.ПравоеЗначение = "<заполнить_сценарий>" Тогда
					Результат.Вставить("ДоступенВыборСценария", Истина);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НайденныеЭлементы = Новый Массив;
		Если Не Результат.ДоступенВыборОрганизации
			И Не ИсточникДанных.Свойство("Организация")
			И БюджетнаяОтчетностьСервер.НайтиОтборПоИмени(ОтборИсточника, "Организация", НайденныеЭлементы) Тогда
			Для каждого Элемент Из НайденныеЭлементы Цикл
				Если Элемент.ПравоеЗначение = "<заполнить_организация>" Тогда
					Результат.Вставить("ДоступенВыборОрганизации", Истина);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НайденныеЭлементы = Новый Массив;
		Если Не Результат.ДоступенВыборПодразделения
			И Не ИсточникДанных.Свойство("Подразделение")
			И БюджетнаяОтчетностьСервер.НайтиОтборПоИмени(ОтборИсточника, "Подразделение", НайденныеЭлементы) Тогда
			Для каждого Элемент Из НайденныеЭлементы Цикл
				Если Элемент.ПравоеЗначение = "<заполнить_подразделение>" Тогда
					Результат.Вставить("ДоступенВыборПодразделения", Истина);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Результат.ДоступенВыборСценария
			И Результат.ДоступенВыборОрганизации
			И Результат.ДоступенВыборПодразделения Тогда
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак того, что можно выбирать "ВВалютеСценария" для поля "Валюта"
//
// Параметры:
//  ВидБюджета				 - СправочникСсылка.ВидыБюджетов - Вид бюджета для анализа
//  ДоступенВыборСценария	 - 								 - 
//  Сценарий				 - 								 - 
//  ВалютаСценария			 - 								 - 
// 
// Возвращаемое значение:
//  Результат - Булево - Истина - Требуется, Ложь - Не требуется
//
Функция ДоступенВыборОценкиВВалюте(ВидБюджета, ДоступенВыборСценария, Сценарий, ВалютаСценария) Экспорт
	
	ВалютаСценария = Неопределено;
	
	СтруктураКолонокТаблицыДанных = БюджетнаяОтчетностьСервер.ПолучитьСтруктуруКолонокТаблицыДанныхВидаБюджета(ВидБюджета);
	СтруктураОписанияВидаБюджета = БюджетнаяОтчетностьСервер.ПолучитьСтруктуруОписанияВидаБюджета(ВидБюджета, 
																				СтруктураКолонокТаблицыДанных, 
																				Перечисления.РежимыФормированияБюджетныхОтчетов.Отчет);
	
	МассивСценариев = Новый Массив;
	Если ДоступенВыборСценария Тогда
		Если Не ЗначениеЗаполнено(Сценарий) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	МассивСценариев.Добавить(Сценарий);
	
	Для каждого ИсточникДанных Из СтруктураОписанияВидаБюджета.ИсточникиДанных Цикл
		
		ОтборИсточника = ИсточникДанных.ДополнительныйОтбор;
		Если ОтборИсточника = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеЭлементы = Новый Массив;
		Если Не ИсточникДанных.Свойство("Сценарий")
			И БюджетнаяОтчетностьСервер.НайтиОтборПоИмени(ОтборИсточника, "Сценарий", НайденныеЭлементы) Тогда
			Для каждого Элемент Из НайденныеЭлементы Цикл
				Если Элемент.ПравоеЗначение = "<заполнить_сценарий>" Тогда
				ИначеЕсли Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					МассивСценариев.Добавить(Элемент.ПравоеЗначение);
				ИначеЕсли Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке
					ИЛИ Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
					Для Каждого ЭлементСписка из Элемент.ПравоеЗначение Цикл
						МассивСценариев.Добавить(ЭлементСписка.Значение);
					КонецЦикла;
				Иначе
					Возврат Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ИсточникДанных.Свойство("Сценарий") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСценариев, ИсточникДанных.Сценарий);
		КонецЕсли;
		
	КонецЦикла;
	
	Значения = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСценариев, "Валюта");
	МассивВалют = Новый Массив;
	Для Каждого КлючИЗначение из Значения Цикл
		Если МассивВалют.Найти(КлючИЗначение.Значение.Валюта) = Неопределено Тогда
			МассивВалют.Добавить(КлючИЗначение.Значение.Валюта);
			Если МассивВалют.Количество() > 1 Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не МассивВалют.Количество()
		ИЛИ Не ЗначениеЗаполнено(МассивВалют[0]) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВалютаСценария = МассивВалют[0];
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецЕсли