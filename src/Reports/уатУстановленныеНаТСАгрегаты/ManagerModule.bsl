#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ПрограммныйИнтерфейс

// Задает настройки размещения вариантов отчетов в панели отчетов.
// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       См. ""Реквизиты для изменения"" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Установленные на ТС агрегаты");
	НастройкиВарианта.Описание = НСтр("en='Report is intended for analysis of car parts that installed on vehicle.';ru='Отчет предназначен для анализа агрегатов, установленных на ТС.'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Установленные на ТС агрегаты (по МОЛ)");
	НастройкиВарианта.Описание = НСтр("en='Report is intended for analysis of car parts installed on vehicle by responsible employee.';ru='Отчет предназначен для анализа агрегатов, установленных на ТС, по МОЛ.'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Установленные на ТС агрегаты (по валюте отчета)");
	НастройкиВарианта.Описание = НСтр("en='Report is intended for analysis of car parts installed on vehicle by selected currency.';ru='Отчет предназначен для анализа агрегатов, установленных на ТС, по выбранной валюте.'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Установленные на ТС агрегаты (по МОЛ и валюте отчета)");
	НастройкиВарианта.Описание = НСтр("en='Report is intended for analysis of car parts installed on vehicle by responsible employee and selected currency.';ru='Отчет предназначен для анализа агрегатов, установленных на ТС, по МОЛ и выбранной валюте.'");
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьСтоимостьАгрегата(ПоВалютеОтчета, ВалютаОтчета, Период, ПервоначальнаяСтоимость, ВалютаАгрегата) Экспорт 
	
	Если ПоВалютеОтчета Тогда                                      
		КурсВалюты = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Период, Новый Структура("Валюта", ВалютаОтчета));
		КурсВалютыОтчета = КурсВалюты.Курс / ?(КурсВалюты.Кратность = 0, 1, КурсВалюты.Кратность);
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ПоВалютеОтчета",   ПоВалютеОтчета);
		Запрос.УстановитьПараметр("КурсВалютыОтчета", ?(КурсВалютыОтчета = 0, 1, КурсВалютыОтчета));
		Запрос.УстановитьПараметр("Период",           Период);
		Запрос.УстановитьПараметр("Валюта",           ПолучитьВалютуАгрегата(ВалютаАгрегата, ПервоначальнаяСтоимость));
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА НЕ &ПоВалютеОтчета
		|			ТОГДА 1
		|		КОГДА КурсыВалютСрезПоследних.Кратность = 0
		|			ТОГДА КурсыВалютСрезПоследних.Курс / &КурсВалютыОтчета
		|		ИНАЧЕ КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность / &КурсВалютыОтчета
		|	КОНЕЦ КАК Коэффициент
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			Возврат ПервоначальнаяСтоимость * Выборка.Коэффициент;
		Иначе 
			Возврат ПервоначальнаяСтоимость;
		КонецЕсли;
		
	Иначе 
		Возврат ПервоначальнаяСтоимость;
	КонецЕсли;
	
КонецФункции // ПолучитьСтоимостьАгрегата()

Функция ПолучитьВалютуАгрегата(ВалютаАгрегата, ПервоначальнаяСтоимость) Экспорт 
	
	Если ВалютаАгрегата = Справочники.Валюты.ПустаяСсылка() И ПервоначальнаяСтоимость <> 0 Тогда 
		Если уатРаботаСМетаданными.уатЕстьКонстанта("ВалютаУправленческогоУчета") Тогда 
			Возврат Константы.ВалютаУправленческогоУчета.Получить(); 
		Иначе 
			Возврат Константы.ВалютаРегламентированногоУчета.Получить(); 
		КонецЕсли;
	Иначе 
		Возврат ВалютаАгрегата;
	КонецЕсли;
	
КонецФункции // ПолучитьВалютуАгрегата()

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатОтчетОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#КонецЕсли