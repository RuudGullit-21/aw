
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОсновнаяОрганизация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.АвторизованныйПользователь(),
		"ОсновнаяОрганизация"
	);
	
	ФлагФаксимиле  = Ложь;
	ТекОрганизация = Справочники.Организации.ПустаяСсылка();
	Контрагент     = Справочники.Контрагенты.ПустаяСсылка();

	НачалоПериода  = ТекущаяДата();
	КонецПериода   = ТекущаяДата();
	Если ЗначениеЗаполнено(ОсновнаяОрганизация) Тогда 
		Для Каждого ПараметрДанных Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл 
			Если ПараметрДанных.Параметр = Новый ПараметрКомпоновкиДанных("Организация") 
					И Не ЗначениеЗаполнено(ПараметрДанных.Значение) Тогда 
				ПараметрДанных.Значение = ОсновнаяОрганизация;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ПользовательскаяНастройка Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("Организация")
					И Не ЗначениеЗаполнено(ПользовательскаяНастройка.Значение) Тогда 
				ПользовательскаяНастройка.Значение = ОсновнаяОрганизация;
				ТекОрганизация = ОсновнаяОрганизация;
			ИначеЕсли ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("Организация") Тогда 
				ТекОрганизация = ПользовательскаяНастройка.Значение;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("ФлагФаксимиле") Тогда 
				ФлагФаксимиле = ПользовательскаяНастройка.Значение;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("ПериодОтчета") Тогда 
				НачалоПериода = ПользовательскаяНастройка.Значение.ДатаНачала;
				КонецПериода  = ПользовательскаяНастройка.Значение.ДатаОкончания;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("Контрагент") Тогда 
				Контрагент = ПользовательскаяНастройка.Значение;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого ПользовательскаяНастройка Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("Организация") Тогда 
				ТекОрганизация = ПользовательскаяНастройка.Значение;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("ФлагФаксимиле") Тогда 
				ФлагФаксимиле = ПользовательскаяНастройка.Значение;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("ПериодОтчета") Тогда 
				НачалоПериода = ПользовательскаяНастройка.Значение.ДатаНачала;
				КонецПериода  = ПользовательскаяНастройка.Значение.ДатаОкончания;
			КонецЕсли;
			Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И ПользовательскаяНастройка.Параметр = Новый ПараметрКомпоновкиДанных("Контрагент") Тогда 
				Контрагент = ПользовательскаяНастройка.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Ошибки               = Неопределено;

	СхемаКД     = ЭтотОбъект.СхемаКомпоновкиДанных;
	Настройки   = КомпоновщикНастроек.ПолучитьНастройки();
	СхемаКомпоновкиДанных   = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикМакета       = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	Логотип         = ПолучитьМакет("ОтчетФаксимиле");
	ОбластьЗаголовок = ?(ФлагФаксимиле, Логотип.ПолучитьОбласть("ЗаголовокФаксимиле"), Логотип.ПолучитьОбласть("Заголовок"));
	Если ФлагФаксимиле Тогда
		ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
		ПодписиИФаксимиле.Вставить("Логотип", "ФайлЛоготип");
		уатОбщегоНазначения.ЗаполнитьФаксимилеВОбластиМакета(ОбластьЗаголовок, ТекОрганизация, ПодписиИФаксимиле, Ошибки);
	Конецесли;
	ОписаниеПериода = Отчеты.уатРеестрОказанныхТранспортныхУслуг.ПредставлениеПериодаОтчета(НачалоПериода, КонецПериода);
	ОбластьЗаголовок.Параметры.ОписаниеПериода = ОписаниеПериода;

	НазваниеОрганизации = ?(Не ТекОрганизация = Неопределено 
		И Не уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(ТекОрганизация, "НаименованиеПолное") = "",
	уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(ТекОрганизация, "НаименованиеПолное"), ТекОрганизация.Представление);
	Контрагент = ?(Не Контрагент = Неопределено 
		И Не уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Контрагент, "НаименованиеПолное") = "",
	уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Контрагент, "НаименованиеПолное"), Контрагент.Представление);
	
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.Контрагент          = Контрагент;


	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаРезультатаОтчета = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаРезультатаОтчета.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаОтчета.НачатьВывод();
	
	флагОтчетПустой = Истина;
	Пока Истина Цикл
		
		ЭлементРезультата = ПроцессорКомпоновкиДанных.Следующий();
		
		Если ЭлементРезультата = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		ПроцессорВыводаРезультатаОтчета.ВывестиЭлемент(ЭлементРезультата);
		флагОтчетПустой = Ложь;
		
	КонецЦикла;
	
	// ОтчетПустой - параметр, показывающий наличие информации в отчете. Необходим для рассылки отчетов.
	КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ОтчетПустой", флагОтчетПустой);
	
	ОбластьПодвал = ?(ФлагФаксимиле, Логотип.ПолучитьОбласть("ПодвалФаксимиле"), Логотип.ПолучитьОбласть("Подвал"));
	ОбластьПодвал.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьПодвал.Параметры.Контрагент          = Контрагент;
	
	Если ФлагФаксимиле Тогда
		Руководители = уатОбщегоНазначенияТиповые.уатОтветственныеЛицаОрганизаций(ТекОрганизация, НачалоПериода);
		ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
		ПодписиИФаксимиле.Вставить("ПодписьРуководителя", ?(Руководители <> Неопределено, Руководители.РуководительСсылка, Справочники.ФизическиеЛица.ПустаяСсылка()));
		ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФайлФаксимильнаяПечать");
		уатОбщегоНазначения.ЗаполнитьФаксимилеВОбластиМакета(ОбластьПодвал, ТекОрганизация, ПодписиИФаксимиле, Ошибки);
	Конецесли;
	
	ДокументРезультат.Вывести(ОбластьПодвал);

	
	ПроцессорВыводаРезультатаОтчета.ЗакончитьВывод();
	
КонецПроцедуры

#КонецОбласти
