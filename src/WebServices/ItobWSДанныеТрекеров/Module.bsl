
#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеПоТС(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта)
	ОсновныеПараметры = ПолучитьДанныеПоТС_Общая(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта, "ПолучитьДанныеПоТС");
	Возврат ПолучитьДанныеПоТС_ДанныеПоТС(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта, ОсновныеПараметры);
КонецФункции

// Возвращает интервалы движения
//
Функция ПолучитьИнтервалыДвижения(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта, ГеокодироватьАдреса, ДанныеДатчиков)
	
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        УровеньЖурналаРегистрации.Предупреждение, , ,
        "Вызван ПолучитьИнтервалыДвижения: НачДата = " + НачДата+" КонДата = "+КонДата);
	
	ИнтервалыДвиженияТип        = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ИнтервалыДвижения");
	ЭлементИнтервалДвиженияТип  = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ЭлементИнтервалДвижения");
	ЭлементДанныеТерминалаТип   = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ЭлементДанныеТерминала");
	
	ИнтервалыДвижения = ФабрикаXDTO.Создать(ИнтервалыДвиженияТип); 
	
	Рез = ИдентифицироватьОбъект(ТипИдентификации, ИдентификаторОбъекта,КонДата);
	НайденныйОбъект	= Рез.Объект;
	Терминал	    = Рез.Терминал;
	
	Если (НЕ ЗначениеЗаполнено(НайденныйОбъект)) ИЛИ (Не ЗначениеЗаполнено(Терминал)) Тогда
		Возврат ИнтервалыДвижения;		
	
	КонецЕсли;
	
	ТаблицаДатчики = Новый ТаблицаЗначений;
	ТаблицаДатчики.Колонки.Добавить("НазначениеКод");
	ТаблицаДатчики.Колонки.Добавить("НазначениеСсылка");
	ТаблицаДатчики.Колонки.Добавить("ДатчикСсылка");
	ТаблицаДатчики.Колонки.Добавить("ДатчикКод");
	ТаблицаДатчики.Колонки.Добавить("ИмяКолонкиДанные");
	
	МассивДатчики = Новый Массив;	
	Если НЕ ПустаяСтрока(ДанныеДатчиков) Тогда		
		РазделеннаяСтрока = СтрЗаменить(ДанныеДатчиков, ",", Символы.ПС);
		
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        	УровеньЖурналаРегистрации.Ошибка, , ,
        	"РазделеннаяСтрока = " + РазделеннаяСтрока);
		
		МассивНазначения = Новый Массив;
		Для Счетчик = 1 По СтрЧислоСтрок(РазделеннаяСтрока) Цикл
			
			ТекущийКодНазначения = Прав(
				"0000000000000000000" + Формат(Число(СтрПолучитьСтроку(РазделеннаяСтрока, Счетчик)), "ЧГ=0"),
				Метаданные.Справочники.ItobНазначенияДатчиков.ДлинаКода);
				
			НовСтрока = ТаблицаДатчики.Добавить();
			НовСтрока.НазначениеКод = СтрПолучитьСтроку(РазделеннаяСтрока, Счетчик);
			НовСтрока.НазначениеСсылка = Справочники.ItobНазначенияДатчиков.НайтиПоКоду(ТекущийКодНазначения);
			Если НЕ НовСтрока.НазначениеСсылка.Пустая() Тогда
				МассивНазначения.Добавить(НовСтрока.НазначениеСсылка); 					
				
				ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        			УровеньЖурналаРегистрации.Ошибка,,, "НазначениеСсылка = " + НовСтрока.НазначениеСсылка);
				
			КонецЕсли;
		
		КонецЦикла;
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ItobТерминалыДатчики.Датчик,
		|	ItobТерминалыДатчики.Назначение,
		|	ItobТерминалыДатчики.Датчик.Код
		|ИЗ
		|	Справочник.ItobТерминалы.Датчики КАК ItobТерминалыДатчики
		|ГДЕ
		|	ItobТерминалыДатчики.Ссылка = &Терминал
		|	И ItobТерминалыДатчики.Назначение В(&МассивНазначения)");
		
		Запрос.УстановитьПараметр("Терминал", Терминал);
		Запрос.УстановитьПараметр("МассивНазначения", МассивНазначения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НайдСтрокаТЗ = ТаблицаДатчики.Найти(Выборка.Назначение, "НазначениеСсылка");
			
			Если НайдСтрокаТЗ <> Неопределено Тогда
				НайдСтрокаТЗ.ДатчикСсылка = Выборка.Датчик;
				НайдСтрокаТЗ.ДатчикКод = Выборка.ДатчикКод;
				НайдСтрокаТЗ.ИмяКолонкиДанные = "ЗначениеДатчика" + Выборка.ДатчикКод;
				
				МассивДатчики.Добавить(Выборка.Датчик);
				
				ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        			УровеньЖурналаРегистрации.Ошибка,,, "Датчик = " + Выборка.Датчик);
			КонецЕсли;
		
		КонецЦикла;
	
	КонецЕсли;
	
	ТаблицаИнтервалы = ItobОперативныйМониторинг.ПолучитьИнтервалыДвижения(НайденныйОбъект, НачДата, КонДата, ГеокодироватьАдреса, МассивДатчики);
	Для каждого СтрТаблицаИнтервалы Из ТаблицаИнтервалы Цикл
		
		ЭлементИнтервалДвижения = ФабрикаXDTO.Создать(ЭлементИнтервалДвиженияТип);
		ЗаполнитьЗначенияСвойств(ЭлементИнтервалДвижения, СтрТаблицаИнтервалы, 
			"ВремяНач,ВремяКон,Длительность,МаксимальнаяСкорость,МестоСтоянки");
		ЭлементИнтервалДвижения.Состояние = СтрТаблицаИнтервалы.СостояниеСтрока;
		ЭлементИнтервалДвижения.СредняяСкорость = Цел(СтрТаблицаИнтервалы.СредняяСкорость);
		ЭлементИнтервалДвижения.Пробег = Окр(СтрТаблицаИнтервалы.Пробег,2);
		
		Для каждого СтрДанныеТерминала Из СтрТаблицаИнтервалы.ДанныеТерминала Цикл
			ЭлементДанныеТерминала = ФабрикаXDTO.Создать(ЭлементДанныеТерминалаТип);	
			ЗаполнитьЗначенияСвойств(ЭлементДанныеТерминала, СтрДанныеТерминала, "Период,Широта,Долгота,Скорость,Направление");
			Для Счетчик = 0 По МИН(ТаблицаДатчики.Количество(), 5) - 1 Цикл
				Если ЗначениеЗаполнено(ТаблицаДатчики[Счетчик].ИмяКолонкиДанные) Тогда
					ЭлементДанныеТерминала["ДанныеДатчика" + Строка(Счетчик + 1)] = СтрДанныеТерминала[ТаблицаДатчики[Счетчик].ИмяКолонкиДанные];
				Иначе
					ЭлементДанныеТерминала["ДанныеДатчика" + Строка(Счетчик + 1)] = 0;
				КонецЕсли;				
			
			КонецЦикла;
			
			ЭлементИнтервалДвижения.ДанныеТерминала.Добавить(ЭлементДанныеТерминала);
		
		КонецЦикла;		
		
		ИнтервалыДвижения.Состав.Добавить(ЭлементИнтервалДвижения);
	
	КонецЦикла;
	
	ИнтервалыДвижения.ОбщийПробег = Окр(ТаблицаИнтервалы.Итог("Пробег"), 2);
	
	Возврат ИнтервалыДвижения;		
	
КонецФункции

Функция ПолучитьМестоположениеОбъекта(ТипИдентификации, ИдентификаторОбъекта)
	
	// Записываем в Журнал регистрации информацию о вызове метода.
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        УровеньЖурналаРегистрации.Предупреждение,,,
        "Вызван ПолучитьМестоположениеОбъекта: ТипИдентификации = " + ТипИдентификации + " ИдентификаторОбъекта = " + ИдентификаторОбъекта);
	
	// Запоминаем текущий период.	
	Период = ТекущаяДатаСеанса();	
		
	// Получаем XDTO-пакет.
	ТипЭлементДанныеТерминала = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ЭлементДанныеТерминала");
	Результат = ФабрикаXDTO.Создать(ТипЭлементДанныеТерминала); 
	
	// Обнуляем данные пакета.
	Результат.ТекстОшибки = "";
	Результат.Период = '00010101';
	Результат.Терминал = 0;
	Результат.ГосНомер = "";
	Результат.Широта = 0.0;
	Результат.Долгота = 0.0;
	Результат.Скорость = 0;
	Результат.Направление = 0;
	Результат.ДанныеДатчика1 = 0;
	Результат.ДанныеДатчика2 = 0;
	Результат.ДанныеДатчика3 = 0;
	Результат.ДанныеДатчика4 = 0;
	Результат.ДанныеДатчика5 = 0;
	
	// Идентифицируем объект.
	Рез = ИдентифицироватьОбъект(ТипИдентификации, ИдентификаторОбъекта, Период);
	НайденныйОбъект	= Рез.Объект;
	Терминал	    = Рез.Терминал;	
	
	// Проверяем наличие данных в информационной базе.
	Если (Не ЗначениеЗаполнено(НайденныйОбъект)) Или (Не ЗначениеЗаполнено(Терминал)) Тогда
		Результат.ТекстОшибки = "Объект не найден";
	Иначе
		Результат.Терминал = Терминал.Код;
		Результат.ГосНомер = НайденныйОбъект.ГосНомер;
		
		// Получаем актуальные данные по терминалу.
		Выборка = РегистрыСведений.ItobАктуальностьДанныхТерминалов.Выбрать(Новый Структура("Терминал", Терминал));
		Если ItobОбщегоНазначения.ВыборкаСледующий(Выборка) Тогда
			Результат.Период = Выборка.ДатаВремя;
			Результат.Широта = Выборка.Широта;
			Результат.Долгота = Выборка.Долгота;
			Результат.Скорость = Выборка.Скорость;
			Результат.Направление = Выборка.Направление;
		Иначе
			Результат.ТекстОшибки = "Данные по объекту отсутствуют";
		КонецЕсли;
		
		//ItobОбщегоНазначенияКлиентСервер.ПреобразоватьСтрокуВДанныеДатчиков(Выборка.ДанныеДатчиков);
		
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции

Функция ПолучитьМестоположениеГруппыОбъектов(ТипИдентификации, ИдентификаторыОбъектов)
	
	// Записываем в Журнал регистрации информацию о вызове метода.
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        УровеньЖурналаРегистрации.Предупреждение,,,
        "Вызван ПолучитьМестоположениеГруппыОбъектов: ТипИдентификации = " + ТипИдентификации+" ИдентификаторОбъекта = " + ИдентификаторыОбъектов);
	
	// Идентифицируем имя справочника "Транспортные средства".
	ИмяСправочникаТранспортныеСредства = ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ТранспортныеСредства");
	
	// Запоминаем текущий период.	
	Период = ТекущаяДатаСеанса();	
		
	// Получаем XDTO-пакет.
	ТипЭлементыДанныеТерминала = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ЭлементыДанныеТерминала");
	Результат = ФабрикаXDTO.Создать(ТипЭлементыДанныеТерминала); 
		
	//РезультатЭлемент = Новый Структура("Объект,Терминал");
	
	Если НРег(ТипИдентификации) = "госномер" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаИдентификаторов.ИдентификаторОбъекта
		|ПОМЕСТИТЬ втТаблицаИдентификаторов
		|ИЗ
		|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТранспортныеСредства.Ссылка КАК Объект,
		|	ItobПривязкиТрекеровСрезПоследних.Терминал КАК ТерминалСсылка,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.ДатаВремя, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Период,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Широта, 0) КАК Широта,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Долгота, 0) КАК Долгота,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Скорость, 0) КАК Скорость,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Направление, 0) КАК Направление,
		|	ЕСТЬNULL(ItobТерминалы.Код, 0) КАК Терминал,
		|	втТаблицаИдентификаторов.ИдентификаторОбъекта КАК ГосНомер
		|ИЗ
		|	втТаблицаИдентификаторов КАК втТаблицаИдентификаторов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ItobТранспортныеСредства КАК ТранспортныеСредства
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиТрекеров.СрезПоследних(&Период,) КАК ItobПривязкиТрекеровСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobАктуальностьДанныхТерминалов КАК ItobАктуальностьДанныхТерминалов
		|				ПО (ItobАктуальностьДанныхТерминалов.Терминал = ItobПривязкиТрекеровСрезПоследних.Терминал)
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ItobТерминалы КАК ItobТерминалы
		|				ПО ItobПривязкиТрекеровСрезПоследних.Терминал = ItobТерминалы.Ссылка
		|			ПО ТранспортныеСредства.Ссылка = ItobПривязкиТрекеровСрезПоследних.Объект
		|		ПО втТаблицаИдентификаторов.ИдентификаторОбъекта = ТранспортныеСредства.ГосНомер
		|ГДЕ
		|	ItobПривязкиТрекеровСрезПоследних.ТерминалУстановлен";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ItobТранспортныеСредства", ИмяСправочникаТранспортныеСредства);		
		ТипКолонкиИдентификаторОбъекта = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(15, ДопустимаяДлина.Переменная));
		
	ИначеЕсли НРег(ТипИдентификации) = "терминал" Тогда		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаИдентификаторов.ИдентификаторОбъекта КАК ИдентификаторОбъекта
		|ПОМЕСТИТЬ втТаблицаИдентификаторов
		|ИЗ
		|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ItobТерминалы.Код КАК Код,
		|	ItobТерминалы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втТерминалы
		|ИЗ
		|	Справочник.ItobТерминалы КАК ItobТерминалы
		|ГДЕ
		|	ItobТерминалы.СерверСбораДанных = &СерверСбораДанных
		|	И НЕ ItobТерминалы.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ItobПривязкиТрекеровСрезПоследних.Терминал КАК ТерминалСсылка,
		|	ItobПривязкиТрекеровСрезПоследних.Объект КАК Объект,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.ДатаВремя, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Период,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Широта, 0) КАК Широта,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Долгота, 0) КАК Долгота,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Скорость, 0) КАК Скорость,
		|	ЕСТЬNULL(ItobАктуальностьДанныхТерминалов.Направление, 0) КАК Направление,
		|	втТаблицаИдентификаторов.ИдентификаторОбъекта КАК Терминал,
		|	ЕСТЬNULL(ItobТранспортныеСредства.ГосНомер, """") КАК ГосНомер
		|ИЗ
		|	втТаблицаИдентификаторов КАК втТаблицаИдентификаторов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втТерминалы КАК втТерминалы
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиТрекеров.СрезПоследних(&Период,) КАК ItobПривязкиТрекеровСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobАктуальностьДанныхТерминалов КАК ItobАктуальностьДанныхТерминалов
		|				ПО ItobПривязкиТрекеровСрезПоследних.Терминал = ItobАктуальностьДанныхТерминалов.Терминал
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ItobТранспортныеСредства КАК ItobТранспортныеСредства
		|				ПО ItobПривязкиТрекеровСрезПоследних.Объект = ItobТранспортныеСредства.Ссылка
		|			ПО (ItobПривязкиТрекеровСрезПоследних.Терминал = втТерминалы.Ссылка)
		|		ПО втТаблицаИдентификаторов.ИдентификаторОбъекта = втТерминалы.Код
		|ГДЕ
		|	ItobПривязкиТрекеровСрезПоследних.ТерминалУстановлен";
		
		ТипКолонкиИдентификаторОбъекта = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0));
		
	Иначе
		// Неверный тип идентификации
		
		ЗаписьЖурналаРегистрации("ItobWSДанныеТрекеров", 
        	УровеньЖурналаРегистрации.Ошибка,,,
        	"Вызван ПолучитьМестоположениеГруппыОбъектов: ТипИдентификации = " + ТипИдентификации + " неверный тип идентификации");
		
		Возврат Результат;
	КонецЕсли;
		
	// Создаем таблицу значений для Идентификаторов.
	ТаблицаИдентификаторов = Новый ТаблицаЗначений();
	ТаблицаИдентификаторов.Колонки.Добавить("ИдентификаторОбъекта", ТипКолонкиИдентификаторОбъекта);
	
	// Заполняем таблицу значений Идентификаторами.
	СписокОбъектов = СтрРазделить(ИдентификаторыОбъектов, ",");
	Для Каждого СписокОбъектовЭлемент Из СписокОбъектов Цикл
		ТаблицаИдентификаторов.Добавить().ИдентификаторОбъекта = СписокОбъектовЭлемент;
	КонецЦикла; 
	
	// Получаем XDTO-пакет элемента.
	ТипЭлементДанныеТерминала = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ЭлементДанныеТерминала");
	
	Выборка = Неопределено;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", ТаблицаИдентификаторов);
	Запрос.УстановитьПараметр("Период", Период);
	
	Если НРег(ТипИдентификации) = "терминал" Тогда
		Запрос.УстановитьПараметр("СерверСбораДанных", СерверСбораДанныхПоУмолчанию());	
	КонецЕсли; 
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		РезультатЭлемент = ФабрикаXDTO.Создать(ТипЭлементДанныеТерминала); 
		
		// Проверяем наличие данных в информационной базе.
		Если (НЕ ЗначениеЗаполнено(Выборка.Объект)) ИЛИ (Не ЗначениеЗаполнено(Выборка.ТерминалСсылка)) Тогда
			РезультатЭлемент.ТекстОшибки = "Объект не найден";
		Иначе
			РезультатЭлемент.ТекстОшибки = "";
		КонецЕсли;
		
		// Получаем актуальные данные по терминалу;
		ЗаполнитьЗначенияСвойств(РезультатЭлемент, Выборка);
		РезультатЭлемент.ДанныеДатчика1 = 0;
		РезультатЭлемент.ДанныеДатчика2 = 0;
		РезультатЭлемент.ДанныеДатчика3 = 0;
		РезультатЭлемент.ДанныеДатчика4 = 0;
		РезультатЭлемент.ДанныеДатчика5 = 0;		
		
		Результат.Состав.Добавить(РезультатЭлемент);
	КонецЦикла;		
		
	Возврат Результат;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПолучитьДанныеПоТС
	
Функция ПолучитьДанныеПоТС_Общая(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта, НаименованиеМетода)
	ЗаписьЖурналаРегистрации("ИнформационнаяБаза.Сообщение", 
        УровеньЖурналаРегистрации.Предупреждение, , ,
        "Вызван "+НаименованиеМетода+": НачДата = " + НачДата+" КонДата = "+КонДата);
	
	ТипДанныеПоТС = ФабрикаXDTO.Тип("http://www.itob.ru/csm/gpsdata", "ДанныеПоТС");
	СтруктураРезультат = ItobЗаполнениеПоДаннымТрекеров.ПолучитьШаблонДанныеПоТС();
	
	РезультатДанныеПоТС = ФабрикаXDTO.Создать(ТипДанныеПоТС); 
	ЗаполнитьЗначенияСвойств(РезультатДанныеПоТС,СтруктураРезультат);
	РезультатДанныеПоТС.ТекстОшибки = "";
	
	Рез = ИдентифицироватьОбъект(ТипИдентификации, ИдентификаторОбъекта,КонДата);
	НайденныйОбъект	= Рез.Объект;
	Терминал	    = Рез.Терминал;
	
	Если (НЕ ЗначениеЗаполнено(НайденныйОбъект)) ИЛИ (Не ЗначениеЗаполнено(Терминал)) Тогда
		РезультатДанныеПоТС.ТекстОшибки = "Объект не найден";
	Иначе
		// Определим организацию ТС
		Выборка = РегистрыСведений.ItobСвойстваТранспортныхСредств.Выбрать(Новый Структура("ТранспортноеСредство", НайденныйОбъект));
	    Если Выборка.Следующий() Тогда
	        Организация = Выборка.Организация;
		Иначе
			НовоеИмяСправочникаОрганизации = ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("Организации");
			Организация = Справочники[НовоеИмяСправочникаОрганизации].ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
		
	Результат = ПолучитьШаблонОбщихДанныхПоТС(Организация, НайденныйОбъект, РезультатДанныеПоТС);
	Возврат Результат;
КонецФункции // ПолучитьДанныеПоТС_Общая()

Функция ПолучитьШаблонОбщихДанныхПоТС(Организация, НайденныйОбъект, РезультатДанныеПоТС)
	Возврат Новый Структура("Организация,НайденныйОбъект,РезультатДанныеПоТС", Организация, НайденныйОбъект, РезультатДанныеПоТС);
КонецФункции // ПолучитьШаблонОбщихДанныхПоТС()
 
#Область ПолучитьДанныеПоТС_ДанныеПоТС
	
Функция ПолучитьДанныеПоТС_ДанныеПоТС(НачДата, КонДата, ТипИдентификации, ИдентификаторОбъекта, ОсновныеПараметры)
	ТекстОшибкиЛокально = ОсновныеПараметры.РезультатДанныеПоТС.ТекстОшибки;
	Если ПустаяСтрока(ТекстОшибкиЛокально) Тогда
		ДополнительныеПараметры = ItobЗаполнениеПоДаннымТрекеров.ПолучитьШаблонПараметровПоТС(НачДата, КонДата, ОсновныеПараметры.НайденныйОбъект, ОсновныеПараметры.Организация);
		ДанныеПоТС_Локально = ItobЗаполнениеПоДаннымТрекеров.ПолучитьДанныеПоТС_Локально(ДополнительныеПараметры, ТекстОшибкиЛокально);
	Иначе
		ДанныеПоТС_Локально = Ложь;
	КонецЕсли; 
		
	Возврат ВернутьРезультат(ОсновныеПараметры, ДанныеПоТС_Локально, ТекстОшибкиЛокально);
КонецФункции

#КонецОбласти

Функция ВернутьРезультат(ОсновныеПараметры, ДанныеПоТС_Локально, ТекстОшибкиЛокально)
	Если ДанныеПоТС_Локально = Ложь 
		ИЛИ НЕ ТипЗнч(ДанныеПоТС_Локально) = Тип("Структура") 
		ИЛИ НЕ ПустаяСтрока(ТекстОшибкиЛокально) Тогда
		
		ОсновныеПараметры.РезультатДанныеПоТС.ТекстОшибки = ТекстОшибкиЛокально;
		Возврат ОсновныеПараметры.РезультатДанныеПоТС;
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ОсновныеПараметры.РезультатДанныеПоТС, ДанныеПоТС_Локально);
	Возврат ОсновныеПараметры.РезультатДанныеПоТС;
КонецФункции // ВернутьРезультат()

Функция ИдентифицироватьОбъект(ТипИдентификации, ИдентификаторОбъекта, КонДата)
	
	// Идентификация объекта
	Результат = Новый Структура("Объект,Терминал");
		
	Если ТипИдентификации = "ГосНомер" Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ТранспортныеСредства.Ссылка КАК Объект
		                      |ИЗ
		                      |	Справочник.ItobТранспортныеСредства КАК ТранспортныеСредства
		                      |ГДЕ
		                      |	ТранспортныеСредства.ГосНомер = &ГосНомер");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ItobТранспортныеСредства", ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ТранспортныеСредства"));
		Запрос.УстановитьПараметр("ГосНомер", ИдентификаторОбъекта);
		Выборка = Запрос.Выполнить().Выбрать();
		Если ItobОбщегоНазначения.ВыборкаСледующий(Выборка) Тогда
		 	Результат.Объект = Выборка.Объект;
			
			Если НЕ Результат.Объект.Пустая() Тогда
				Результат.Терминал = ItobОперативныйМониторинг.ПолучитьПривязанныйТерминал(Результат.Объект, КонДата); 					
			КонецЕсли;
					
		КонецЕсли;		
				
	ИначеЕсли ТипИдентификации = "Терминал" Тогда		
		Результат.Терминал = ItobВызовСервераПовтИсп.ПолучитьТерминалПоКоду(Число(ИдентификаторОбъекта), СерверСбораДанныхПоУмолчанию());
				
		Если НЕ Результат.Терминал.Пустая() Тогда
						
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ItobПривязкиТрекеровСрезПоследних.Объект
			                      |ИЗ
			                      |	РегистрСведений.ItobПривязкиТрекеров.СрезПоследних(&Период, ) КАК ItobПривязкиТрекеровСрезПоследних
			                      |ГДЕ
			                      |	ItobПривязкиТрекеровСрезПоследних.ТерминалУстановлен
			                      |	И ItobПривязкиТрекеровСрезПоследних.Терминал = &Терминал");
								  
			Запрос.УстановитьПараметр("Период", КонДата);
			Запрос.УстановитьПараметр("Терминал", Результат.Терминал);
			Выборка = Запрос.Выполнить().Выбрать();
			Если ItobОбщегоНазначения.ВыборкаСледующий(Выборка) Тогда
				Результат.Объект = Выборка.Объект;					
			
			КонецЕсли;			
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;	

КонецФункции // ПолучитьТерминал()

#КонецОбласти

Функция СерверСбораДанныхПоУмолчанию()
	
	Возврат Справочники.ItobСерверыСбораДанных.Основной
	
КонецФункции
 
#КонецОбласти
