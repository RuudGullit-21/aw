
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаУзлаПриСозданииНаСервере(ЭтотОбъект, Отказ);
	
	Если Не ЗначениеЗаполнено(Объект.ПравилаОтправкиСправочников) Тогда
		Объект.ПравилаОтправкиСправочников = "АвтоматическаяСинхронизация";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ПравилаОтправкиДокументов) Тогда
		Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.РежимВыгрузкиПриНеобходимости) Тогда
		Объект.РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УстановитьДатуЗапретаИзменений",
		"Доступность",
		ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ДатыЗапретаИзменения));
	
	УстановитьВидимостьНаСервере();
	
	ОбновитьНаименованиеКомандФормы();
	
	УстановитьЗаголовокДереваПравил();
	ЗаполнитьПравилаОтправкиПолученияДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СинхронизироватьПарныеНастройкиОтправки();
	СинхронизироватьПарныеНастройкиПолучения();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьЗаголовокДереваПравил();
	ЗаполнитьПравилаОтправкиПолученияДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ЗапрещенныеКОтправке.Очистить();
	Объект.ЗапрещенныеКПолучению.Очистить();
	
	СохранитьПравилаОтправкиПолученияДанных(Объект.ЗапрещенныеКОтправке, ПравилаОтправкиДанных);
	СохранитьПравилаОтправкиПолученияДанных(Объект.ЗапрещенныеКПолучению, ПравилаПолученияДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		Оповестить("Запись_УзелПланаОбмена");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбновитьДанныеОбъекта(ВыбранноеЗначение);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбменДаннымиСервер.ФормаУзлаПриЗаписиНаСервере(ТекущийОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФлагИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИАвтоматическиПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИПоНеобходимостиПриИзменении(Элемент)
	
	Если Объект.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" И Объект.ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	КонецЕсли;
	
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательОтправлятьНСИНикогдаПриИзменении(Элемент)
	Объект.ПравилаОтправкиДокументов = "НеСинхронизировать";
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыОтправлятьАвтоматическиПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыОтправлятьВручнуюПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыНеОтправлятьПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ПравилаОтправкиДанных

&НаКлиенте
Процедура ПравилаОтправкиДанныхВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПравилаОтправкиДанных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Выбран = ТекущиеДанные.Выбран % 2;
	
	ПроставитьПометкиВниз(ТекущиеДанные);
	ПроставитьПометкиВверх(ТекущиеДанные);
	
	СинхронизироватьПарныеНастройкиОтправки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ПравилаПолученияДанных

&НаКлиенте
Процедура ПравилаПолученияДанныхВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПравилаПолученияДанных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Выбран = ТекущиеДанные.Выбран % 2;
	
	ПроставитьПометкиВниз(ТекущиеДанные);
	ПроставитьПометкиВверх(ТекущиеДанные);
	
	СинхронизироватьПарныеНастройкиПолучения(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСписокВыбранныхОрганизаций(Команда)
	
	КоллекцияФильтров = Неопределено;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "Организации");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "Организация");
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.Организации");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("en='Select companies for filter:';ru='Выберите организации для отбора:'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            Неопределено);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      КоллекцияФильтров);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОтправкиДанных_ОтметитьВсе(Команда)
	
	Для Каждого ТекУзел Из ПравилаОтправкиДанных.ПолучитьЭлементы() Цикл 
		ТекУзел.Выбран = 1;
		ПроставитьПометкиВниз(ТекУзел);
	КонецЦикла;
	
	СинхронизироватьПарныеНастройкиОтправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОтправкиДанных_СнятьВсеОтметки(Команда)
	
	Для Каждого ТекУзел Из ПравилаОтправкиДанных.ПолучитьЭлементы() Цикл 
		ТекУзел.Выбран = 0;
		ПроставитьПометкиВниз(ТекУзел);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаПолученияДанных_ОтметитьВсе(Команда)
	
	Для Каждого ТекУзел Из ПравилаПолученияДанных.ПолучитьЭлементы() Цикл 
		ТекУзел.Выбран = 1;
		ПроставитьПометкиВниз(ТекУзел);
	КонецЦикла;
	
	СинхронизироватьПарныеНастройкиПолучения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаПолученияДанных_СнятьВсеОтметки(Команда)
	
	Для Каждого ТекУзел Из ПравилаПолученияДанных.ПолучитьЭлементы() Цикл 
		ТекУзел.Выбран = 0;
		ПроставитьПометкиВниз(ТекУзел);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИнструкцию(Команда)
	ОткрытьФорму("ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ПодробнаяИнформация");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	Объект[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Очистить();
	
	СписокВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	
	Если СписокВыбранныхЗначений.Количество() > 0 Тогда
		СписокВыбранныхЗначений.Колонки.Представление.Имя = СтруктураПараметров.ИмяКолонкиДляЗаполнения;
		Объект[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Загрузить(СписокВыбранныхЗначений);
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаНачалаВыгрузкиДокументов",
		"Доступность",
		Объект.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация");
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПереключательДокументыНеОтправлять",
		"Доступность",
		Не Объект.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости");
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОписаниеДокументыНеОтправлять",
		"Доступность",
		Не Объект.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости");
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы.ГруппаДокументы.ПодчиненныеЭлементы,
		"ГруппаРежимОтправкиДокументов",
		"Доступность",
		Не Объект.ПравилаОтправкиСправочников = "НеСинхронизировать");
		
	#Область ГруппаНастройкаДополнительныхОтборов
	ВидимостьГруппы = Объект.ПравилаОтправкиСправочников <> "НеСинхронизировать";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаНастройкаДополнительныхОтборов",
		"Видимость",
		ВидимостьГруппы);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОткрытьСписокВыбранныхОрганизаций",
		"Доступность",
		Объект.ИспользоватьОтборПоОрганизациям);
	#КонецОбласти
	
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() Или уатОбщегоНазначенияПовтИсп.ВариантПоставкиПРОФ() Тогда
		МодульЭлектронныеКартыСервер = ОбщегоНазначения.ОбщийМодуль("уатЭлектронныеКартыСервер");
		ТипЭлектронныхКарт = МодульЭлектронныеКартыСервер.ПолучитьТипИспользуемыхЭлектронныхКарт("Геокодирование");
		Если ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM")
			ИЛИ ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс")
			ИЛИ ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData") Тогда
			Элементы.ЗаказыНаТС_ГеокодироватьПункты.Видимость = Истина;
		Иначе
			Элементы.ЗаказыНаТС_ГеокодироватьПункты.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.ЗаказыНаТС_ГеокодироватьПункты.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаПроведениеДокументов.Видимость = Объект.ВариантНастройки = "ОбменБП3"
		Или Объект.ВариантНастройки = "ОбменERP"
		Или Объект.ВариантНастройки = "ОбменКА2"
		Или Объект.ВариантНастройки = "ОбменУТ"
		Или Объект.ВариантНастройки = "ОбменУНФ3"
		Или Объект.ВариантНастройки = "ОбменУниверсальный";
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	// Обновим заголовок выбранных организаций
	Если Объект.Организации.Количество() > 0 Тогда
		ВыбранныеОрганизации = Объект.Организации.Выгрузить().ВыгрузитьКолонку("Организация");
		НовыйЗаголовокОрганизаций = СтрСоединить(ВыбранныеОрганизации, ",");
		
	Иначе
		НовыйЗаголовокОрганизаций = НСтр("en='Select companies';ru='Выбрать организации'");
	КонецЕсли;
	
	Элементы.ОткрытьСписокВыбранныхОрганизаций.Заголовок = НовыйЗаголовокОрганизаций;
	
КонецПроцедуры

&НаСервере
Функция СформироватьМассивВыбранныхЗначений(ПараметрыФормы)
	
	ТабличнаяЧасть           = Объект[ПараметрыФормы.ИмяЭлементаФормыДляЗаполнения];
	ТаблицаВыбранныхЗначений = ТабличнаяЧасть.Выгрузить(,ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения);
	МассивВыбранныхЗначений  = ТаблицаВыбранныхЗначений.ВыгрузитьКолонку(ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения);
	
	Возврат МассивВыбранныхЗначений;

КонецФункции

&НаСервере
Процедура УстановитьЗаголовокДереваПравил()
	
	Если Объект.ВариантНастройки = "ОбменБП3" Тогда 
		ИмяПриемника = НСтр("ru = 'Бухгалтерия предприятия, редакция 3.0'");
		
	ИначеЕсли Объект.ВариантНастройки = "ОбменЗУП3" Тогда 
		ИмяПриемника = НСтр("ru = 'Зарплата и Управление Персоналом, редакция 3'");
		
	ИначеЕсли Объект.ВариантНастройки = "ОбменERP" Тогда 
		ИмяПриемника = НСтр("ru = '1С:ERP Управление предприятием 2'");
		
	ИначеЕсли Объект.ВариантНастройки = "ОбменКА2" Тогда 
		ИмяПриемника = НСтр("ru = 'Комплексная автоматизация, редакция 2'");
		
	ИначеЕсли Объект.ВариантНастройки = "ОбменУТ" Тогда 
		ИмяПриемника = НСтр("ru = 'Управление торговлей, редакция 11'");
		
	ИначеЕсли Объект.ВариантНастройки = "ОбменУНФ3" Тогда 
		ИмяПриемника = НСтр("ru = 'Управление нашей фирмой, редакция 3.0'");
		
	Иначе 
		ИмяПриемника = НСтр("ru = 'Универсальный формат'");
	КонецЕсли;
	
	Элементы.ПравилаОтправкиДанныхНаименованиеПриемник.Заголовок  = ИмяПриемника;
	Элементы.ПравилаПолученияДанныхНаименованиеИсточник.Заголовок = ИмяПриемника;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПравилаОтправкиПолученияДанных()
	
	ПравилаОтправкиДанных.ПолучитьЭлементы().Очистить();
	ПравилаПолученияДанных.ПолучитьЭлементы().Очистить();
	
	МакетПравил = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ПолучитьМакет("ПравилаОтправкиПолученияДанных");
	
	КолонкаПриемник = Неопределено;
	
	Для СчКолонок = 1 По МакетПравил.ШиринаТаблицы Цикл 
		Если НРег(МакетПравил.Область("R1C"+Формат(СчКолонок, "ЧН=0; ЧГ=0")).Текст) = НРег(Объект.ВариантНастройки) Тогда 
			КолонкаПриемник = СчКолонок;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если КолонкаПриемник = Неопределено Тогда 
		КолонкаПриемник = 9;
	КонецЕсли;
	
	Для СчСтрок = 2 По МакетПравил.ВысотаТаблицы Цикл
		ИмяПравила           = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C1").Текст);
		НаименованиеИсточник = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C2").Текст);
		НаименованиеПриемник = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C"+Формат(КолонкаПриемник, "ЧН=0; ЧГ=0")).Текст);
		РодительКлюч         = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C3").Текст);
		
		НаправлениеОбмена = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C4").Текст);
		Если НаправлениеОбмена = "Получение" Тогда 
			РежимПолучения = Истина;
		Иначе 
			РежимПолучения = Ложь;
		КонецЕсли;
		
		ТаблЗапрещенных = ?(РежимПолучения, Объект.ЗапрещенныеКПолучению, Объект.ЗапрещенныеКОтправке);
		
		НайдСтроки = ТаблЗапрещенных.НайтиСтроки(Новый Структура("Имя", ИмяПравила));
		Если НайдСтроки.Количество() = 0 Тогда 
			ЗначениеВыбора = 1;
		Иначе 
			ЗначениеВыбора = 0;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РодительКлюч) Тогда 
			УзелВставки = Неопределено;
			
			ДеревоПоиска = ?(РежимПолучения, ПравилаПолученияДанных, ПравилаОтправкиДанных);
			Для Каждого ТекУзел Из ДеревоПоиска.ПолучитьЭлементы() Цикл 
				Если ТекУзел.Имя = РодительКлюч Тогда 
					УзелВставки = ТекУзел;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УзелВставки = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
		Иначе 
			УзелВставки = ?(РежимПолучения, ПравилаПолученияДанных, ПравилаОтправкиДанных);
		КонецЕсли;
		
		ТекЭлемент = УзелВставки.ПолучитьЭлементы().Добавить();
		ТекЭлемент.Выбран               = ЗначениеВыбора;
		ТекЭлемент.Имя                  = ИмяПравила;
		ТекЭлемент.НаименованиеИсточник = ?(РежимПолучения, НаименованиеПриемник, НаименованиеИсточник);
		ТекЭлемент.НаименованиеПриемник = ?(РежимПолучения, НаименованиеИсточник, НаименованиеПриемник);
	КонецЦикла;
	
	УдалитьНеиспользуемыеПравилаОтправки(ПравилаОтправкиДанных);
	УдалитьНеиспользуемыеПравилаПолучения(ПравилаПолученияДанных);
	
	Если ПравилаОтправкиДанных.ПолучитьЭлементы().Количество() = 0 Тогда 
		Элементы.ПравилаОтправкиДанных.Видимость = Ложь;
	Иначе 
		Элементы.ПравилаОтправкиДанных.Видимость = Истина;
	КонецЕсли;
	
	Если ПравилаПолученияДанных.ПолучитьЭлементы().Количество() = 0 Тогда 
		Элементы.ПравилаПолученияДанных.Видимость = Ложь;
	Иначе 
		Элементы.ПравилаПолученияДанных.Видимость = Истина;
	КонецЕсли;
	
	ОбновитьПометкиВДереве(ПравилаОтправкиДанных);
	ОбновитьПометкиВДереве(ПравилаПолученияДанных);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьПометкиВДереве(КорневойУзел)
	
	НовоеЗначениеВыбора = Неопределено;
	
	Если КорневойУзел.ПолучитьЭлементы().Количество() = 0 Тогда 
		Возврат НовоеЗначениеВыбора;
	КонецЕсли;
	
	ВсеИстина = Истина;
	НеВсеЛожь = Ложь;
	Для Каждого ТекУзел Из КорневойУзел.ПолучитьЭлементы() Цикл
		ВыборВПодчиненных = ОбновитьПометкиВДереве(ТекУзел);
		Если Не ВыборВПодчиненных = Неопределено Тогда 
			ТекУзел.Выбран = ВыборВПодчиненных;
		КонецЕсли;
		
		ВсеИстина = ВсеИстина И (ТекУзел.Выбран = 1);
		НеВсеЛожь = НеВсеЛожь Или Булево(ТекУзел.Выбран);
	КонецЦикла;
	
	Если ВсеИстина Тогда
		НовоеЗначениеВыбора = 1;
	ИначеЕсли НеВсеЛожь Тогда
		НовоеЗначениеВыбора = 2;
	Иначе
		НовоеЗначениеВыбора = 0;
	КонецЕсли;
	
	Возврат НовоеЗначениеВыбора;
	
КонецФункции // ОбновитьПометкиВДереве()

&НаКлиенте
Процедура СохранитьПравилаОтправкиПолученияДанных(ТаблицаЗапрещенных, УзелОбхода)
	
	Для Каждого ТекУзел Из УзелОбхода.ПолучитьЭлементы() Цикл 
		Если ТекУзел.ПолучитьЭлементы().Количество() Тогда 
			СохранитьПравилаОтправкиПолученияДанных(ТаблицаЗапрещенных, ТекУзел);
		Иначе 
			Если ТекУзел.Выбран = 0 Тогда 
				НовСтрока = ТаблицаЗапрещенных.Добавить();
				НовСтрока.Имя = ТекУзел.Имя;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьПометкиВниз(ТекРодитель)
	
	Для Каждого ТекУзел Из ТекРодитель.ПолучитьЭлементы() Цикл
		ТекУзел.Выбран = ТекРодитель.Выбран;
		ПроставитьПометкиВниз(ТекУзел);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьПометкиВверх(ТекЭлемент)
	
	ТекРодитель = ТекЭлемент.ПолучитьРодителя();
	Если ТекРодитель = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВсеИстина = Истина;
	НеВсеЛожь = Ложь;
	Для Каждого ТекУзел Из ТекРодитель.ПолучитьЭлементы() Цикл
		ВсеИстина = ВсеИстина И (ТекУзел.Выбран = 1);
		НеВсеЛожь = НеВсеЛожь Или Булево(ТекУзел.Выбран);
	КонецЦикла;
	
	Если ВсеИстина Тогда
		ТекРодитель.Выбран = 1;
	ИначеЕсли НеВсеЛожь Тогда
		ТекРодитель.Выбран = 2;
	Иначе
		ТекРодитель.Выбран = 0;
	КонецЕсли;
	
	ПроставитьПометкиВверх(ТекРодитель);
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьПарныеНастройкиОтправки(ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Тогда 
		УзелВыдачаРасхМат          = Неопределено;
		УзелЗаправкаГСМ            = Неопределено;
		УзелИнвентаризацияТоваров  = Неопределено;
		УзелОперацииСТЖ            = Неопределено;
		УзелПутевойЛист            = Неопределено;
		УзелРемонтныйЛист          = Неопределено;
		УзелСчетНаОплатуПокупателю = Неопределено;
		УзелСчетНаОплатуПоставщика = Неопределено;
		
		Для Каждого ТекУзел Из ПравилаОтправкиДанных.ПолучитьЭлементы() Цикл 
			Если ТекУзел.Имя = "ВыдачаРасходныхМатериалов" Тогда 
				УзелВыдачаРасхМат = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "ЗаправкаГСМ" Тогда 
				УзелЗаправкаГСМ = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "ИнвентаризацияТоваровГруппа" Тогда
				УзелИнвентаризацияТоваров = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "ОперацииСТехническимиЖидкостями" Тогда 
				УзелОперацииСТЖ = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "ПутевойЛист" Тогда 
				УзелПутевойЛист = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "РемонтныйЛист" Тогда 
				УзелРемонтныйЛист = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "СчетНаОплатуПокупателю" Тогда 
				УзелСчетНаОплатуПокупателю = ТекУзел;
			КонецЕсли;
			
			Если ТекУзел.Имя = "СчетНаОплатуПоставщика" Тогда 
				УзелСчетНаОплатуПоставщика = ТекУзел;
			КонецЕсли;
		КонецЦикла;
		
		Если Не УзелВыдачаРасхМат = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелВыдачаРасхМат);
		КонецЕсли;
		
		Если Не УзелЗаправкаГСМ = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелЗаправкаГСМ);
		КонецЕсли;
		
		Если Не УзелИнвентаризацияТоваров = Неопределено Тогда
			СинхронизироватьПарныеНастройкиОтправки(УзелИнвентаризацияТоваров);
		КонецЕсли;
		
		Если Не УзелОперацииСТЖ = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелОперацииСТЖ);
		КонецЕсли;
		
		Если Не УзелПутевойЛист = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелПутевойЛист);
		КонецЕсли;
		
		Если Не УзелРемонтныйЛист = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелРемонтныйЛист);
		КонецЕсли;
		
		Если Не УзелСчетНаОплатуПокупателю = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелСчетНаОплатуПокупателю);
		КонецЕсли;
		
		Если Не УзелСчетНаОплатуПоставщика = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиОтправки(УзелСчетНаОплатуПоставщика);
		КонецЕсли;
		
	Иначе 
		Если ТекущиеДанные.Имя = "ВыдачаРасходныхМатериалов"
				Или ТекущиеДанные.Имя = "ВыдачаРасходныхМатериалов_ПередМатВПроизводство" 
				Или ТекущиеДанные.Имя = "ВыдачаРасходныхМатериалов_ПередМатВЭксплуатацию" Тогда 
			УзелПередМатВПроизводство = Неопределено;
			УзелПередМатВЭксплуатацию = Неопределено;
			
			Если ТекущиеДанные.Имя = "ВыдачаРасходныхМатериалов" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "ВыдачаРасходныхМатериалов_ПередМатВПроизводство" Тогда 
					УзелПередМатВПроизводство = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ВыдачаРасходныхМатериалов_ПередМатВЭксплуатацию" Тогда 
					УзелПередМатВЭксплуатацию = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			Если Не УзелПередМатВПроизводство = Неопределено И Не УзелПередМатВЭксплуатацию = Неопределено
					И УзелПередМатВПроизводство.Выбран = 1 И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда 
				Если ТекущиеДанные.Имя = "ВыдачаРасходныхМатериалов_ПередМатВЭксплуатацию" Тогда 
					УзелПередМатВПроизводство.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
					
				Иначе 
					УзелПередМатВЭксплуатацию.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "ЗаправкаГСМ" 
				Или ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВПроизводство"
				Или ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВЭксплуатацию"
				Или ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_СписаниеЗапасов"
				Или ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_Перемещение" Тогда
			УзелПередМатВПроизводство = Неопределено;
			УзелПередМатВЭксплуатацию = Неопределено;
			УзелСписаниеЗапасов       = Неопределено;
			УзелПеремещение           = Неопределено;
			
			Если ТекущиеДанные.Имя = "ЗаправкаГСМ" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВПроизводство" Тогда 
					УзелПередМатВПроизводство = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВЭксплуатацию" Тогда 
					УзелПередМатВЭксплуатацию = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ЗаправкаГСМ_СкладТалон_СписаниеЗапасов" Тогда
					УзелСписаниеЗапасов = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ЗаправкаГСМ_СкладТалон_Перемещение" Тогда 
					УзелПеремещение = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			Если ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВПроизводство" Тогда
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
				
				Если Не УзелПеремещение = Неопределено И УзелПеремещение.Выбран = 1 Тогда
					УзелПеремещение.Выбран = 0;
					ПроставитьПометкиВниз(УзелПеремещение);
					ПроставитьПометкиВверх(УзелПеремещение);
				КонецЕсли;
				
				Если Не УзелСписаниеЗапасов = Неопределено И УзелСписаниеЗапасов.Выбран = 1 Тогда
					УзелСписаниеЗапасов.Выбран = 0;
					ПроставитьПометкиВниз(УзелСписаниеЗапасов);
					ПроставитьПометкиВверх(УзелСписаниеЗапасов);
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_ПередМатВЭксплуатацию" Тогда
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					УзелПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
				КонецЕсли;
				
				Если Не УзелПеремещение = Неопределено И УзелПеремещение.Выбран = 1 Тогда
					УзелПеремещение.Выбран = 0;
					ПроставитьПометкиВниз(УзелПеремещение);
					ПроставитьПометкиВверх(УзелПеремещение);
				КонецЕсли;
				
				Если Не УзелСписаниеЗапасов = Неопределено И УзелСписаниеЗапасов.Выбран = 1 Тогда
					УзелСписаниеЗапасов.Выбран = 0;
					ПроставитьПометкиВниз(УзелСписаниеЗапасов);
					ПроставитьПометкиВверх(УзелСписаниеЗапасов);
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_СписаниеЗапасов" Тогда
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					УзелПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
				
				Если Не УзелПеремещение = Неопределено И УзелПеремещение.Выбран = 1 Тогда
					УзелПеремещение.Выбран = 0;
					ПроставитьПометкиВниз(УзелПеремещение);
					ПроставитьПометкиВверх(УзелПеремещение);
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.Имя = "ЗаправкаГСМ_СкладТалон_Перемещение" Тогда
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					УзелПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
				
				Если Не УзелСписаниеЗапасов = Неопределено И УзелСписаниеЗапасов.Выбран = 1 Тогда
					УзелСписаниеЗапасов.Выбран = 0;
					ПроставитьПометкиВниз(УзелСписаниеЗапасов);
					ПроставитьПометкиВверх(УзелСписаниеЗапасов);
				КонецЕсли;
				
			Иначе 
				ПервыйВыбран = Ложь;
				
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					ПервыйВыбран = Истина;
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					Если ПервыйВыбран Тогда 
						УзелПередМатВЭксплуатацию.Выбран = 0;
						ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
						ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
					Иначе 
						ПервыйВыбран = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если Не УзелСписаниеЗапасов = Неопределено И УзелСписаниеЗапасов.Выбран = 1 Тогда
					Если ПервыйВыбран Тогда 
						УзелСписаниеЗапасов.Выбран = 0;
						ПроставитьПометкиВниз(УзелСписаниеЗапасов);
						ПроставитьПометкиВверх(УзелСписаниеЗапасов);
					Иначе 
						ПервыйВыбран = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если Не УзелПеремещение = Неопределено И УзелПеремещение.Выбран = 1 Тогда
					Если ПервыйВыбран Тогда 
						УзелПеремещение.Выбран = 0;
						ПроставитьПометкиВниз(УзелПеремещение);
						ПроставитьПометкиВверх(УзелПеремещение);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "ИнвентаризацияТоваровГруппа"
			Или ТекущиеДанные.Имя = "ИнвентаризацияТоваров"
			Или ТекущиеДанные.Имя = "ИнвентаризацияТоваровВПересчетТоваров" Тогда
			
			Если ТекущиеДанные.Имя = "ИнвентаризацияТоваровГруппа" Тогда 
				Если ТекущиеДанные.Выбран Тогда
					КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
					флЕстьВыбранный = Ложь;
					Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
						Если ТекУзел.Выбран Тогда
							Если НЕ флЕстьВыбранный Тогда
								флЕстьВыбранный = Истина;
								Продолжить;
							Иначе
								ТекУзел.Выбран = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если НЕ флЕстьВыбранный Тогда
						КоллекцияПоиска[0].Выбран = 1;
					КонецЕсли;
				КонецЕсли;
			Иначе
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
				
				Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
					Если ТекУзел.Выбран И ТекУзел.Имя <> ТекущиеДанные.Имя Тогда
						ТекУзел.Выбран = 0;
						ПроставитьПометкиВниз(ТекУзел);
						ПроставитьПометкиВверх(ТекУзел);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "ОперацииСТехническимиЖидкостями"
			ИЛИ ТекущиеДанные.Имя = "ОперацииСТехническимиЖидкостями_ПередМатВПроизводство" 
			ИЛИ ТекущиеДанные.Имя = "ОперацииСТехническимиЖидкостями_ПередМатВЭксплуатацию"
			ИЛИ ТекущиеДанные.Имя = "ОперацииСТехническимиЖидкостями_ПеремещениеТоваров"
			Тогда 
			
			Если ТекущиеДанные.Имя = "ОперацииСТехническимиЖидкостями" Тогда 
				Если ТекущиеДанные.Выбран Тогда
					КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
					флЕстьВыбранный = Ложь;
					Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
						Если ТекУзел.Выбран Тогда
							Если НЕ флЕстьВыбранный Тогда
								флЕстьВыбранный = Истина;
								Продолжить;
							Иначе
								ТекУзел.Выбран = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если НЕ флЕстьВыбранный Тогда
						КоллекцияПоиска[0].Выбран = 1;
					КонецЕсли;
				КонецЕсли;
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
				
				Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
					Если ТекУзел.Выбран И ТекУзел.Имя <> ТекущиеДанные.Имя Тогда
						ТекУзел.Выбран = 0;
						ПроставитьПометкиВниз(ТекУзел);
						ПроставитьПометкиВверх(ТекУзел);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "ПутевойЛист"
				Или ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_Списание"
				Или ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_ПередМатВПроизводство"
				Или ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_ПередМатВЭксплуатацию" Тогда 
			УзелСписание              = Неопределено;
			УзелПередМатВПроизводство = Неопределено;
			УзелПередМатВЭксплуатацию = Неопределено;
			
			Если ТекущиеДанные.Имя = "ПутевойЛист" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "ПутевойЛист_РасходГСМ_Списание" Тогда 
					УзелСписание = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ПутевойЛист_РасходГСМ_ПередМатВПроизводство" Тогда 
					УзелПередМатВПроизводство = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "ПутевойЛист_РасходГСМ_ПередМатВЭксплуатацию" Тогда 
					УзелПередМатВЭксплуатацию = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			Если ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_Списание" Тогда
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					УзелПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_ПередМатВПроизводство" Тогда
				Если Не УзелСписание = Неопределено И УзелСписание.Выбран = 1 Тогда
					УзелСписание.Выбран = 0;
					ПроставитьПометкиВниз(УзелСписание);
					ПроставитьПометкиВверх(УзелСписание);
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.Имя = "ПутевойЛист_РасходГСМ_ПередМатВЭксплуатацию" Тогда
				Если Не УзелСписание = Неопределено И УзелСписание.Выбран = 1 Тогда
					УзелСписание.Выбран = 0;
					ПроставитьПометкиВниз(УзелСписание);
					ПроставитьПометкиВверх(УзелСписание);
				КонецЕсли;
				
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					УзелПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелПередМатВПроизводство);
				КонецЕсли;
				
			Иначе 
				ПервыйВыбран = Ложь;
				
				Если Не УзелСписание = Неопределено И УзелСписание.Выбран = 1 Тогда
					ПервыйВыбран = Истина;
				КонецЕсли;
				
				Если Не УзелПередМатВПроизводство = Неопределено И УзелПередМатВПроизводство.Выбран = 1 Тогда
					Если ПервыйВыбран Тогда 
						УзелПередМатВПроизводство.Выбран = 0;
						ПроставитьПометкиВниз(УзелПередМатВПроизводство);
						ПроставитьПометкиВверх(УзелПередМатВПроизводство);
					Иначе 
						ПервыйВыбран = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Если Не УзелПередМатВЭксплуатацию = Неопределено И УзелПередМатВЭксплуатацию.Выбран = 1 Тогда
					Если ПервыйВыбран Тогда 
						УзелПередМатВЭксплуатацию.Выбран = 0;
						ПроставитьПометкиВниз(УзелПередМатВЭксплуатацию);
						ПроставитьПометкиВверх(УзелПередМатВЭксплуатацию);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "РемонтныйЛист"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_ПередМатВПроизводство"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_ПередМатВЭксплуатацию"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_СписаниеЗапасов"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_ПередМатВПроизводство"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_ПередМатВЭксплуатацию"
			Или ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_СписаниеЗапасов" Тогда
			
			УзелРемЗона_ПередМатВПроизводство    = Неопределено;
			УзелРемЗона_ПередМатВЭксплуатацию    = Неопределено;
			УзелРемЗона_СписаниеЗапасов          = Неопределено;
			УзелАвтосервис_ПередМатВПроизводство = Неопределено;
			УзелАвтосервис_ПередМатВЭксплуатацию = Неопределено;
			УзелАвтосервис_СписаниеЗапасов       = Неопределено;
			
			Если ТекущиеДанные.Имя = "РемонтныйЛист" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "РемонтныйЛист_РемЗона_ПередМатВПроизводство" Тогда 
					УзелРемЗона_ПередМатВПроизводство = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "РемонтныйЛист_РемЗона_ПередМатВЭксплуатацию" Тогда 
					УзелРемЗона_ПередМатВЭксплуатацию = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "РемонтныйЛист_РемЗона_СписаниеЗапасов" Тогда 
					УзелРемЗона_СписаниеЗапасов = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "РемонтныйЛист_Автосервис_ПередМатВПроизводство" Тогда 
					УзелАвтосервис_ПередМатВПроизводство = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "РемонтныйЛист_Автосервис_ПередМатВЭксплуатацию" Тогда 
					УзелАвтосервис_ПередМатВЭксплуатацию = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "РемонтныйЛист_Автосервис_СписаниеЗапасов" Тогда 
					УзелАвтосервис_СписаниеЗапасов = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			// Снимаем пометки с конфликтующих вариантов
			Если ТекущиеДанные.Выбран
				И (ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_ПередМатВПроизводство"
				Или ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_ПередМатВЭксплуатацию"
				Или ТекущиеДанные.Имя = "РемонтныйЛист_РемЗона_СписаниеЗапасов") Тогда
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_РемЗона_ПередМатВПроизводство"
					И Не УзелРемЗона_ПередМатВПроизводство = Неопределено
					И УзелРемЗона_ПередМатВПроизводство.Выбран = 1 Тогда
					УзелРемЗона_ПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелРемЗона_ПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелРемЗона_ПередМатВПроизводство);
				КонецЕсли;
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_РемЗона_ПередМатВЭксплуатацию"
					И Не УзелРемЗона_ПередМатВЭксплуатацию = Неопределено
					И УзелРемЗона_ПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелРемЗона_ПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелРемЗона_ПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелРемЗона_ПередМатВЭксплуатацию);
				КонецЕсли;
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_РемЗона_СписаниеЗапасов"
					И Не УзелРемЗона_СписаниеЗапасов = Неопределено
					И УзелРемЗона_СписаниеЗапасов.Выбран = 1 Тогда
					УзелРемЗона_СписаниеЗапасов.Выбран = 0;
					ПроставитьПометкиВниз(УзелРемЗона_СписаниеЗапасов);
					ПроставитьПометкиВверх(УзелРемЗона_СписаниеЗапасов);
				КонецЕсли;
			
			ИначеЕсли ТекущиеДанные.Выбран
				И (ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_ПередМатВПроизводство"
				Или ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_ПередМатВЭксплуатацию"
				Или ТекущиеДанные.Имя = "РемонтныйЛист_Автосервис_СписаниеЗапасов") Тогда
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_Автосервис_ПередМатВПроизводство"
					И Не УзелАвтосервис_ПередМатВПроизводство = Неопределено
					И УзелАвтосервис_ПередМатВПроизводство.Выбран = 1 Тогда
					УзелАвтосервис_ПередМатВПроизводство.Выбран = 0;
					ПроставитьПометкиВниз(УзелАвтосервис_ПередМатВПроизводство);
					ПроставитьПометкиВверх(УзелАвтосервис_ПередМатВПроизводство);
				КонецЕсли;
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_Автосервис_ПередМатВЭксплуатацию"
					И Не УзелАвтосервис_ПередМатВЭксплуатацию = Неопределено
					И УзелАвтосервис_ПередМатВЭксплуатацию.Выбран = 1 Тогда
					УзелАвтосервис_ПередМатВЭксплуатацию.Выбран = 0;
					ПроставитьПометкиВниз(УзелАвтосервис_ПередМатВЭксплуатацию);
					ПроставитьПометкиВверх(УзелАвтосервис_ПередМатВЭксплуатацию);
				КонецЕсли;
				
				Если ТекущиеДанные.Имя <> "РемонтныйЛист_Автосервис_СписаниеЗапасов"
					И Не УзелАвтосервис_СписаниеЗапасов = Неопределено
					И УзелАвтосервис_СписаниеЗапасов.Выбран = 1 Тогда
					УзелАвтосервис_СписаниеЗапасов.Выбран = 0;
					ПроставитьПометкиВниз(УзелАвтосервис_СписаниеЗапасов);
					ПроставитьПометкиВверх(УзелАвтосервис_СписаниеЗапасов);
				КонецЕсли;
			ИначеЕсли ТекущиеДанные.Имя = "РемонтныйЛист" Тогда
				
				// Если для этой группы взаимоисключающих вариантов отправки у первого элемента флаг установлен,
				// то для остальных его нужно снять.
				Если Не УзелРемЗона_СписаниеЗапасов = Неопределено И УзелРемЗона_СписаниеЗапасов.Выбран = 1 Тогда
					
					Если Не УзелРемЗона_ПередМатВПроизводство = Неопределено
						И УзелРемЗона_ПередМатВПроизводство.Выбран = 1 Тогда
						УзелРемЗона_ПередМатВПроизводство.Выбран = 0;
						ПроставитьПометкиВниз(УзелРемЗона_ПередМатВПроизводство);
						ПроставитьПометкиВверх(УзелРемЗона_ПередМатВПроизводство);
					КонецЕсли;
					
					Если Не УзелРемЗона_ПередМатВЭксплуатацию = Неопределено
						И УзелРемЗона_ПередМатВЭксплуатацию.Выбран = 1 Тогда
						УзелРемЗона_ПередМатВЭксплуатацию.Выбран = 0;
						ПроставитьПометкиВниз(УзелРемЗона_ПередМатВЭксплуатацию);
						ПроставитьПометкиВверх(УзелРемЗона_ПередМатВЭксплуатацию);
					КонецЕсли;
					
				КонецЕсли;
				
				// Если для этой группы взаимоисключающих вариантов отправки у первого элемента флаг установлен,
				// то для остальных его нужно снять
				Если Не УзелАвтосервис_СписаниеЗапасов = Неопределено И УзелАвтосервис_СписаниеЗапасов.Выбран = 1 Тогда
					
					Если Не УзелАвтосервис_ПередМатВПроизводство = Неопределено
						И УзелАвтосервис_ПередМатВПроизводство.Выбран = 1 Тогда
						УзелАвтосервис_ПередМатВПроизводство.Выбран = 0;
						ПроставитьПометкиВниз(УзелАвтосервис_ПередМатВПроизводство);
						ПроставитьПометкиВверх(УзелАвтосервис_ПередМатВПроизводство);
					КонецЕсли;
					
					Если Не УзелАвтосервис_ПередМатВЭксплуатацию = Неопределено
						И УзелАвтосервис_ПередМатВЭксплуатацию.Выбран = 1 Тогда
						УзелАвтосервис_ПередМатВЭксплуатацию.Выбран = 0;
						ПроставитьПометкиВниз(УзелАвтосервис_ПередМатВЭксплуатацию);
						ПроставитьПометкиВверх(УзелАвтосервис_ПередМатВЭксплуатацию);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "СчетНаОплатуПокупателю" Или ТекущиеДанные.Имя = "СчетНаОплатуПокупателю_ВСчетПокупателю" 
				Или ТекущиеДанные.Имя = "СчетНаОплатуПокупателю_ВЗаказКлиента" Тогда 
			УзелВСчетПокупателю = Неопределено;
			УзелВЗаказКлиента   = Неопределено;
			
			Если ТекущиеДанные.Имя = "СчетНаОплатуПокупателю" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "СчетНаОплатуПокупателю_ВСчетПокупателю" Тогда 
					УзелВСчетПокупателю = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "СчетНаОплатуПокупателю_ВЗаказКлиента" Тогда 
					УзелВЗаказКлиента = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			Если Не УзелВСчетПокупателю = Неопределено И Не УзелВЗаказКлиента = Неопределено
					И УзелВСчетПокупателю.Выбран = 1 И УзелВЗаказКлиента.Выбран = 1 Тогда 
				Если ТекущиеДанные.Имя = "СчетНаОплатуПокупателю_ВЗаказКлиента" Тогда 
					УзелВСчетПокупателю.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелВСчетПокупателю);
					ПроставитьПометкиВверх(УзелВСчетПокупателю);
					
				Иначе 
					УзелВЗаказКлиента.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелВЗаказКлиента);
					ПроставитьПометкиВверх(УзелВЗаказКлиента);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущиеДанные.Имя = "СчетНаОплатуПоставщика" Или ТекущиеДанные.Имя = "СчетНаОплатуПоставщика_ВСчетПоставщика" 
				Или ТекущиеДанные.Имя = "СчетНаОплатуПоставщика_ВЗаказПоставщику" Тогда
			УзелВСчетПоставщика  = Неопределено;
			УзелВЗаказПоставщику = Неопределено;
			
			Если ТекущиеДанные.Имя = "СчетНаОплатуПоставщика" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если ТекУзел.Имя = "СчетНаОплатуПоставщика_ВСчетПоставщика" Тогда 
					УзелВСчетПоставщика = ТекУзел;
				КонецЕсли;
				
				Если ТекУзел.Имя = "СчетНаОплатуПоставщика_ВЗаказПоставщику" Тогда 
					УзелВЗаказПоставщику = ТекУзел;
				КонецЕсли;
			КонецЦикла;
			
			Если Не УзелВСчетПоставщика = Неопределено И Не УзелВЗаказПоставщику = Неопределено
					И УзелВСчетПоставщика.Выбран = 1 И УзелВЗаказПоставщику.Выбран = 1 Тогда 
				Если ТекущиеДанные.Имя = "СчетНаОплатуПоставщика_ВЗаказПоставщику" Тогда 
					УзелВСчетПоставщика.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелВСчетПоставщика);
					ПроставитьПометкиВверх(УзелВСчетПоставщика);
					
				Иначе 
					УзелВЗаказПоставщику.Выбран = 0;
					
					ПроставитьПометкиВниз(УзелВЗаказПоставщику);
					ПроставитьПометкиВверх(УзелВЗаказПоставщику);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьПарныеНастройкиПолучения(ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Тогда 
		УзелЗаказНаТС = Неопределено;
		
		Для Каждого ТекУзел Из ПравилаПолученияДанных.ПолучитьЭлементы() Цикл 
			Если ТекУзел.Имя = "ЗаказНаТС" Тогда 
				УзелЗаказНаТС = ТекУзел;
			КонецЕсли;
		КонецЦикла;
		
		Если Не УзелЗаказНаТС = Неопределено Тогда 
			СинхронизироватьПарныеНастройкиПолучения(УзелЗаказНаТС);
		КонецЕсли;
		
	Иначе 
		Если ТекущиеДанные.Имя = "ЗаказНаТС" Или 
			(ТекущиеДанные.ПолучитьРодителя() <> Неопределено И ТекущиеДанные.ПолучитьРодителя().Имя = "ЗаказНаТС") Тогда
			УзлыЗаказКлиента_ВЗаказНаТС = Новый Массив;
			УзлыРеализацияТУ_ВЗаказНаТС = Новый Массив;
			
			Если ТекущиеДанные.Имя = "ЗаказНаТС" Тогда 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьЭлементы();
			Иначе 
				КоллекцияПоиска = ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
			КонецЕсли;
			
			УзлыЗаказКлиента_ВЗаказНаТС_Выбраны = Ложь;
			УзлыРеализацияТУ_ВЗаказНаТС_Выбраны = Ложь;
			Для Каждого ТекУзел Из КоллекцияПоиска Цикл 
				Если СтрНайти(ТекУзел.Имя, "ЗаказКлиента_ВЗаказНаТС") <> 0 Тогда 
					УзлыЗаказКлиента_ВЗаказНаТС.Добавить(ТекУзел);
					Если ТекУзел.Выбран Тогда
						УзлыЗаказКлиента_ВЗаказНаТС_Выбраны = Истина;
					КонецЕсли;
				ИначеЕсли СтрНайти(ТекУзел.Имя, "РеализацияТоваровУслуг_ВЗаказНаТС") <> 0 Тогда 
					УзлыРеализацияТУ_ВЗаказНаТС.Добавить(ТекУзел);
					Если ТекУзел.Выбран Тогда
						УзлыРеализацияТУ_ВЗаказНаТС_Выбраны = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если УзлыЗаказКлиента_ВЗаказНаТС.Количество() > 0 И УзлыРеализацияТУ_ВЗаказНаТС.Количество() > 0
				И УзлыЗаказКлиента_ВЗаказНаТС_Выбраны И УзлыРеализацияТУ_ВЗаказНаТС_Выбраны Тогда 
				Если СтрНайти(ТекущиеДанные.Имя, "РеализацияТоваровУслуг_ВЗаказНаТС") <> 0 Тогда
					УзлыДляСнятияФлагаВыбран = УзлыЗаказКлиента_ВЗаказНаТС;
				Иначе 
					УзлыДляСнятияФлагаВыбран = УзлыРеализацияТУ_ВЗаказНаТС;
				КонецЕсли;
				Для Каждого ТекУзел Из УзлыДляСнятияФлагаВыбран Цикл
					ТекУзел.Выбран = 0;
				КонецЦикла;
				ПроставитьПометкиВниз(ТекУзел);
				ПроставитьПометкиВверх(ТекУзел);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНеиспользуемыеПравилаОтправки(УзелОбхода)
	
	СчСтрок = УзелОбхода.ПолучитьЭлементы().Количество();
	Пока СчСтрок > 0 Цикл 
		СчСтрок = СчСтрок - 1;
		
		ТекСтрока = УзелОбхода.ПолучитьЭлементы()[СчСтрок];
		
		УдалитьНеиспользуемыеПравилаОтправки(ТекСтрока);
		
		Если Не ЗначениеЗаполнено(ТекСтрока.НаименованиеПриемник) И ТекСтрока.ПолучитьЭлементы().Количество() = 0 Тогда 
			УзелОбхода.ПолучитьЭлементы().Удалить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНеиспользуемыеПравилаПолучения(УзелОбхода)
	
	СчСтрок = УзелОбхода.ПолучитьЭлементы().Количество();
	Пока СчСтрок > 0 Цикл 
		СчСтрок = СчСтрок - 1;
		
		ТекСтрока = УзелОбхода.ПолучитьЭлементы()[СчСтрок];
		
		УдалитьНеиспользуемыеПравилаПолучения(ТекСтрока);
		
		Если Не ЗначениеЗаполнено(ТекСтрока.НаименованиеИсточник) И ТекСтрока.ПолучитьЭлементы().Количество() = 0 Тогда 
			УзелОбхода.ПолучитьЭлементы().Удалить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
