#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	ДополнитьТаблицыЗапрещенныхОтключеннымиПравилами();
	
	// Очистка неиспользуемых реквизитов и заполнение служебных
	
	Если ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
		ИспользоватьОтборПоОрганизациям = Ложь;
		РежимВыгрузкиСправочников       = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		РежимВыгрузкиПриНеобходимости   = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		
	Иначе
		РежимВыгрузкиПриНеобходимости    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		
		Если ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" Тогда
			РежимВыгрузкиСправочников    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		Иначе
			РежимВыгрузкиСправочников    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		КонецЕсли;
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		
	ИначеЕсли ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		
	Иначе
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
	КонецЕсли;
	
	Если Не ИспользоватьОтборПоОрганизациям И Организации.Количество() <> 0 Тогда
		Организации.Очистить();
		
	ИначеЕсли Организации.Количество() = 0 И ИспользоватьОтборПоОрганизациям Тогда
		ИспользоватьОтборПоОрганизациям = Ложь;
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов <> "АвтоматическаяСинхронизация" Тогда
		ДатаНачалаВыгрузкиДокументов = Дата(1,1,1,0,0,0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВерсияФорматаОбмена) Тогда
		ВерсияФорматаОбмена = "1.2";
	КонецЕсли;
	
	ТипЭлектронныхКарт = уатЭлектронныеКартыСервер.ПолучитьТипИспользуемыхЭлектронныхКарт("Геокодирование");
	
	Если Не (ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM")
		Или ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс")
		Или ТипЭлектронныхКарт = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData")) Тогда 
		ЗаказыНаТС_ГеокодироватьПункты = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьТаблицыЗапрещенныхОтключеннымиПравилами()
	
	ПравилаОтправкиДанных = Новый ДеревоЗначений();
	ПравилаОтправкиДанных.Колонки.Добавить("Имя",                  Новый ОписаниеТипов("Строка"));
	ПравилаОтправкиДанных.Колонки.Добавить("НаименованиеИсточник", Новый ОписаниеТипов("Строка"));
	ПравилаОтправкиДанных.Колонки.Добавить("НаименованиеПриемник", Новый ОписаниеТипов("Строка"));
	
	ПравилаПолученияДанных = Новый ДеревоЗначений();
	ПравилаПолученияДанных.Колонки.Добавить("Имя",                  Новый ОписаниеТипов("Строка"));
	ПравилаПолученияДанных.Колонки.Добавить("НаименованиеИсточник", Новый ОписаниеТипов("Строка"));
	ПравилаПолученияДанных.Колонки.Добавить("НаименованиеПриемник", Новый ОписаниеТипов("Строка"));
	
	МакетПравил = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ПолучитьМакет("ПравилаОтправкиПолученияДанных");
	
	КолонкаПриемник = Неопределено;
	
	Для СчКолонок = 1 По МакетПравил.ШиринаТаблицы Цикл 
		Если НРег(МакетПравил.Область("R1C"+Формат(СчКолонок, "ЧН=0; ЧГ=0")).Текст) = НРег(ВариантНастройки) Тогда 
			КолонкаПриемник = СчКолонок;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если КолонкаПриемник = Неопределено Тогда 
		КолонкаПриемник = 9;
	КонецЕсли;
	
	Для СчСтрок = 2 По МакетПравил.ВысотаТаблицы Цикл
		ИмяПравила           = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C1").Текст);
		НаименованиеИсточник = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C2").Текст);
		НаименованиеПриемник = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C"+Формат(КолонкаПриемник, "ЧН=0; ЧГ=0")).Текст);
		РодительКлюч         = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C3").Текст);
		
		НаправлениеОбмена = СокрЛП(МакетПравил.Область("R"+Формат(СчСтрок, "ЧН=0; ЧГ=0")+"C4").Текст);
		Если НаправлениеОбмена = "Получение" Тогда 
			РежимПолучения = Истина;
		Иначе 
			РежимПолучения = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РодительКлюч) Тогда 
			УзелВставки = Неопределено;
			
			ДеревоПоиска = ?(РежимПолучения, ПравилаПолученияДанных, ПравилаОтправкиДанных);
			Для Каждого ТекУзел Из ДеревоПоиска.Строки Цикл 
				Если ТекУзел.Имя = РодительКлюч Тогда 
					УзелВставки = ТекУзел;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УзелВставки = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
		Иначе 
			УзелВставки = ?(РежимПолучения, ПравилаПолученияДанных, ПравилаОтправкиДанных);
		КонецЕсли;
		
		ТекЭлемент = УзелВставки.Строки.Добавить();
		ТекЭлемент.Имя                  = ИмяПравила;
		ТекЭлемент.НаименованиеИсточник = ?(РежимПолучения, НаименованиеПриемник, НаименованиеИсточник);
		ТекЭлемент.НаименованиеПриемник = ?(РежимПолучения, НаименованиеИсточник, НаименованиеПриемник);
	КонецЦикла;
	
	ДополнитьТаблицуЗапрещенныеКОтправке(ПравилаОтправкиДанных);
	ДополнитьТаблицуЗапрещенныеКПолучению(ПравилаПолученияДанных);
	
КонецПроцедуры

Процедура ДополнитьТаблицуЗапрещенныеКОтправке(УзелОбхода)
	
	СчСтрок = УзелОбхода.Строки.Количество();
	Пока СчСтрок > 0 Цикл 
		СчСтрок = СчСтрок - 1;
		
		ТекСтрока = УзелОбхода.Строки[СчСтрок];
		
		ДополнитьТаблицуЗапрещенныеКОтправке(ТекСтрока);
		
		Если Не ЗначениеЗаполнено(ТекСтрока.НаименованиеПриемник) И ТекСтрока.Строки.Количество() = 0 Тогда 
			НовСтрока = ЗапрещенныеКОтправке.Добавить();
			НовСтрока.Имя = ТекСтрока.Имя;
			
			УзелОбхода.Строки.Удалить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	// Для удаления дубликатов строк
	ЗапрещенныеКОтправке.Свернуть("Имя");
	
КонецПроцедуры

Процедура ДополнитьТаблицуЗапрещенныеКПолучению(УзелОбхода)
	
	СчСтрок = УзелОбхода.Строки.Количество();
	Пока СчСтрок > 0 Цикл 
		СчСтрок = СчСтрок - 1;
		
		ТекСтрока = УзелОбхода.Строки[СчСтрок];
		
		ДополнитьТаблицуЗапрещенныеКПолучению(ТекСтрока);
		
		Если Не ЗначениеЗаполнено(ТекСтрока.НаименованиеИсточник) И ТекСтрока.Строки.Количество() = 0 Тогда 
			НовСтрока = ЗапрещенныеКПолучению.Добавить();
			НовСтрока.Имя = ТекСтрока.Имя;
			
			УзелОбхода.Строки.Удалить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	// Для удаления дубликатов строк
	ЗапрещенныеКПолучению.Свернуть("Имя");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли