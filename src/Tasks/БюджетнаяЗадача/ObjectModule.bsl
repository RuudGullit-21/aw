#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Создает документ ЭкземплярБюджета в соотвествии с настройками действия
//
// Параметры:
//  НастройкаДействия	 - 	 - 
//
Процедура СоздатьЭкземплярБюджета(НастройкаДействия) Экспорт
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПериодДокумента = Период;
	Если Не ЗначениеЗаполнено(Период) Тогда
		ПериодДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Реквизиты = Новый Структура("Периодичность", "Родитель.Периодичность");
	Периодичность = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ШагБюджетногоПроцесса, Реквизиты).Периодичность;
	
	НачалоПериода = БюджетированиеКлиентСервер.ДатаНачалаПериода(Период, Периодичность);
	КонецПериода = БюджетированиеКлиентСервер.ДатаКонцаПериода(Период, Периодичность);
	
	ВидБюджета = Неопределено;
	СтрокаВидаБюджета = НастройкаДействия.НайтиСтроки(Новый Структура("Имя", "ВидБюджета"));
	Если СтрокаВидаБюджета.Количество() Тогда
		ВидБюджета = СтрокаВидаБюджета[0].Значение;
	КонецЕсли;
	Если ВидБюджета = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("en='В настройках действия не определен вид бюджета для создания документа.';ru='В настройках действия не определен вид бюджета для создания документа.'"));
		Возврат;
	КонецЕсли;
	Если Не Справочники.ВидыБюджетов.ВидБюджетаЗаполненПравильно(ВидБюджета) Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура();
	Для Каждого Настройка Из НастройкаДействия Цикл
		Если ЗначениеЗаполнено(Настройка.Значение) Тогда
			ЗначенияЗаполнения.Вставить(Настройка.Имя, Настройка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ЗначенияЗаполнения.Вставить("НачалоПериода", НачалоПериода);
	ЗначенияЗаполнения.Вставить("ОкончаниеПериода", КонецПериода);
	ЗначенияЗаполнения.Вставить("МодельБюджетирования", МодельБюджетирования);
	ЗначенияЗаполнения.Вставить("ВидБюджета", ВидБюджета);
	
	ЭкземплярБюджета = Документы.ЭкземплярБюджета.СоздатьДокумент();
	ЭкземплярБюджета.Заполнить(ЗначенияЗаполнения);
	ЭкземплярБюджета.Дата = ТекущаяДатаСеанса();
	ЭкземплярБюджета.Записать();
	
	Документ = ЭкземплярБюджета.Ссылка;
	
КонецПроцедуры

// Создает документ ЛимитыРасходаДенежныхСредств в соотвествии с настройками действия
//
// Параметры:
//  НастройкаДействия	 - 	 - 
//
Процедура СоздатьЛимитыРасходаДенежныхСредств(НастройкаДействия) Экспорт
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПериодДокумента = Период;
	Если Не ЗначениеЗаполнено(Период) Тогда
		ПериодДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура();
	Для Каждого Настройка из НастройкаДействия Цикл
		Если ЗначениеЗаполнено(Настройка.Значение) Тогда
			ЗначенияЗаполнения.Вставить(Настройка.Имя, Настройка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ЗначенияЗаполнения.Вставить("Период", НачалоМесяца(Период));
	
	ЛимитыРасходаДенежныхСредств = Документы.ЛимитыРасходаДенежныхСредств.СоздатьДокумент();
	ЛимитыРасходаДенежныхСредств.Заполнить(ЗначенияЗаполнения);
	ЛимитыРасходаДенежныхСредств.ЗаполнитьПоДаннымБюджетирования(МодельБюджетирования);
	
	ЛимитыРасходаДенежныхСредств.Дата = ТекущаяДатаСеанса();
	ЛимитыРасходаДенежныхСредств.Записать();
	
	Документ = ЛимитыРасходаДенежныхСредств.Ссылка;
	
КонецПроцедуры

// Создает документ планирования в соотвествии с настройками действия
//
// Параметры:
//  НастройкаДействия	 - 	 - 
//
Процедура СоздатьПлан(НастройкаДействия) Экспорт
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПериодДокумента = Период;
	Если Не ЗначениеЗаполнено(Период) Тогда
		ПериодДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура();
	Для Каждого Настройка из НастройкаДействия Цикл
		Если ЗначениеЗаполнено(Настройка.Значение) Тогда
			ЗначенияЗаполнения.Вставить(Настройка.Имя, Настройка.Значение);
		КонецЕсли;
	КонецЦикла; 
	
	ТипПлана = Неопределено;
	Сценарий = Неопределено;
	ВидПлана = Неопределено;
	Если Не ЗначенияЗаполнения.Свойство("ТипПлана", ТипПлана) Или Не ЗначениеЗаполнено(ТипПлана) Тогда
		ВызватьИсключение НСтр("en='В настройках действия не определен Тип плана.';ru='В настройках действия не определен Тип плана.'");
	ИначеЕсли Не ЗначенияЗаполнения.Свойство("Сценарий", Сценарий) Или Не ЗначениеЗаполнено(Сценарий) Тогда
		ВызватьИсключение НСтр("en='В настройках действия не определен Сценарий планирования.';ru='В настройках действия не определен Сценарий планирования.'");
	ИначеЕсли Не ЗначенияЗаполнения.Свойство("ВидПлана", ВидПлана) Или Не ЗначениеЗаполнено(ВидПлана) Тогда
		ВызватьИсключение НСтр("en='В настройках действия не определен Вид плана.';ru='В настройках действия не определен Вид плана.'");
	КонецЕсли;
	
	Периодичность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сценарий, "Периодичность");
	СценарийБюджетирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сценарий, "СценарийБюджетирования");
	НачалоПериода = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуНачалаБлижайшегоПериода(Период, Периодичность);
	ОкончаниеПериода = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(НачалоПериода, Периодичность, 1);
	ЗначенияЗаполнения.Вставить("СценарийБюджетирования", СценарийБюджетирования);
	ЗначенияЗаполнения.Вставить("Периодичность", Периодичность);
	ЗначенияЗаполнения.Вставить("НачалоПериода", НачалоПериода);
	ЗначенияЗаполнения.Вставить("ОкончаниеПериода", ОкончаниеПериода);
	ЗначенияЗаполнения.Вставить("ОтражаетсяВБюджетировании", Истина);
	
	План = Документы[ОбщегоНазначения.ИмяЗначенияПеречисления(ТипПлана)].СоздатьДокумент();
	План.Заполнить(ЗначенияЗаполнения);
	План.Дата = ТекущаяДатаСеанса();
	План.Записать();
	
	Документ = План.Ссылка;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЭтотОбъект.Дата = ТекущаяДатаСеанса();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ШагиБюджетныхПроцессов") Тогда
		Реквизиты = Новый Структура();
		Реквизиты.Вставить("МодельБюджетирования", "Владелец");
		Реквизиты.Вставить("Действие", "Действие");
		Реквизиты.Вставить("Наименование", "Наименование");
		Реквизиты.Вставить("НастройкаДействия", "НастройкаДействия");
		Реквизиты.Вставить("НастройкиКонтрольныхОтчетов", "НастройкиКонтрольныхОтчетов");
		Реквизиты.Вставить("ОписаниеЗадачи", "ОписаниеЗадачи");
		Реквизиты.Вставить("ШагБюджетногоПроцесса", "Ссылка");
		Реквизиты.Вставить("Исполнитель", "Ответственный");
		Реквизиты.Вставить("Периодичность", "Родитель.Периодичность");
		ЗначениеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, Реквизиты);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначениеРеквизитов);
		Задачи.БюджетнаяЗадача.УстановитьДлительностьЗадачи(ЭтотОбъект, ДанныеЗаполнения);
		Если Не ЗначениеЗаполнено(ЭтотОбъект.Период) Тогда
			ЭтотОбъект.Период = БюджетированиеКлиентСервер.ДатаНачалаПериода(ТекущаяДатаСеанса(), ЗначениеРеквизитов.Периодичность);
		КонецЕсли;
		ДополнительныеСвойства.Вставить("НастройкаДействия", ЗначениеРеквизитов.НастройкаДействия.Получить());
		ДополнительныеСвойства.Вставить("НастройкиКонтрольныхОтчетов", ЗначениеРеквизитов.НастройкиКонтрольныхОтчетов.Получить());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.МодельБюджетирования) 
		И (ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("МодельБюджетирования")) Тогда
		ЭтотОбъект.МодельБюджетирования = Справочники.МоделиБюджетирования.МодельБюджетированияПоУмолчанию(Дата);
	КонецЕсли;
	
	ТаблицаУтверждаемыхДокументов = Задачи.БюджетнаяЗадача.УтверждаемыеДокументыПоШагуПроцесса(Действие, НастройкаДействия.Получить(), Период);
	УтверждаемыеДокументы.Загрузить(ТаблицаУтверждаемыхДокументов);
	
	Автор = ПользователиКлиентСервер.АвторизованныйПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем Ошибки;
	
	Если КонецДня(СрокИсполнения) < Дата Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки, "Объект.СрокИсполнения", НСтр("en='Срок не может быть меньше даты назначения!';ru='Срок не может быть меньше даты назначения!'"), "");
	КонецЕсли;
	
	Если Выполнена Тогда
		
		Если ЗначениеЗаполнено(ДатаИсполнения) И ДатаИсполнения < Дата Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				Ошибки, "Объект.ДатаИсполнения", НСтр("en='Дата исполнения не может быть меньше даты назначения!';ru='Дата исполнения не может быть меньше даты назначения!'"), "");
		КонецЕсли;
		
		ПараметрыОпции = Новый Структура("МодельБюджетирования", МодельБюджетирования);
		ИспользоватьУтверждениеБюджетов = ПолучитьФункциональнуюОпцию("ИспользоватьУтверждениеБюджетов", ПараметрыОпции); 
		
		ЭтоСвязаннаяЗадача = ЗначениеЗаполнено(ИсходныйШагБюджетногоПроцесса);
		
		Если ИспользоватьУтверждениеБюджетов И Не ЭтоСвязаннаяЗадача Тогда
			
			Если ЗначениеЗаполнено(Документ)
				И (Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана
					Или Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета) Тогда
					
				РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Статус, Проведен");
				Если РеквизитыДокумента.Статус = Перечисления.СтатусыПланов.ВПодготовке Или Не РеквизитыДокумента.Проведен Тогда
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
						Ошибки, 
						, 
						НСтр("en='Для выполнения задачи документ должен быть проведен в статусе ""На утверждении""';ru='Для выполнения задачи документ должен быть проведен в статусе ""На утверждении""'"), "");
				КонецЕсли;
				
			ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	УтверждаемыеДокументы.НомерСтроки,
				|	УтверждаемыеДокументы.Документ,
				|	УтверждаемыеДокументы.ШагБюджетногоПроцесса
				|ПОМЕСТИТЬ УтверждаемыеДокументы
				|ИЗ
				|	&УтверждаемыеДокументы КАК УтверждаемыеДокументы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	УтверждаемыеДокументы.НомерСтроки КАК НомерСтроки,
				|	УтверждаемыеДокументы.Документ,
				|	ВЫБОР
				|		КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
				|			ТОГДА ЭкземплярБюджета.Статус
				|	КОНЕЦ КАК Статус,
				|	ВЫБОР
				|		КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
				|			ТОГДА ЭкземплярБюджета.Проведен
				|	КОНЕЦ КАК Проведен
				|ИЗ
				|	УтверждаемыеДокументы КАК УтверждаемыеДокументы
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШагиБюджетныхПроцессов КАК ШагиБюджетныхПроцессов
				|		ПО УтверждаемыеДокументы.ШагБюджетногоПроцесса = ШагиБюджетныхПроцессов.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭкземплярБюджета КАК ЭкземплярБюджета
				|		ПО УтверждаемыеДокументы.Документ = ЭкземплярБюджета.Ссылка
				|ГДЕ
				|	(НЕ ВЫБОР
				|					КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
				|						ТОГДА ЭкземплярБюджета.Статус
				|				КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден), ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Отменен))
				|			ИЛИ ВЫБОР
				|				КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
				|					ТОГДА ЭкземплярБюджета.Проведен
				|			КОНЕЦ = ЛОЖЬ)
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				Запрос.УстановитьПараметр("УтверждаемыеДокументы", УтверждаемыеДокументы.Выгрузить());
				Запрос.УстановитьПараметр("СтатусУтвержден", Перечисления.СтатусыПланов.Утвержден);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("en='Для выполнения задачи необходимо документ %1 провести в статусах ""Утвержден"" или ""Отклонен""';ru='Для выполнения задачи необходимо документ %1 провести в статусах ""Утвержден"" или ""Отклонен""'"),
						Выборка.Документ);
						
					ПолеОшибки = "Объект." 
						+ ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"УтверждаемыеДокументы", Выборка.НомерСтроки, "Документ");
					
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстСообщения, "");
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаИсполнения) И Выполнена Тогда
		ДатаИсполнения = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Выполнена и Не ПометкаУдаления Тогда
		Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			УстановитьПривилегированныйРежим(Истина);
			Задачи.БюджетнаяЗадача.ФормированиеБюджетныхЗадач();
			УстановитьПривилегированныйРежим(Ложь);
		Иначе
			ФоновыеЗадания.Выполнить("БюджетированиеСервер.ФормированиеБюджетныхЗадач");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли