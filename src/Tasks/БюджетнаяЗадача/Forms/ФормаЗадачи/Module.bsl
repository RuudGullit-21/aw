
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ТаблицаНастроекДействия = Объект.ШагБюджетногоПроцесса.НастройкаДействия.Получить();
		Если ТаблицаНастроекДействия <> Неопределено Тогда
			НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
		КонецЕсли;
		
		ТаблицаНастроекКонтрольныхОтчетов = Объект.ШагБюджетногоПроцесса.НастройкиКонтрольныхОтчетов.Получить();
		Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
			НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
		КонецЕсли;
		
		//Если НЕ (Параметры.ЗначенияЗаполнения <> Неопределено И Параметры.ЗначенияЗаполнения.Свойство("Исполнитель") 
		//	И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Ответственный))
		//	И (НЕ ЗначениеЗаполнено(Объект.Исполнитель) ИЛИ ЗначениеЗаполнено(Параметры.ЗначениеКопирования)) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Исполнитель) Тогда
			Объект.Исполнитель = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
		КонецЕсли;
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьИнформациюПоСвязаннымЗадачам();
	
	ТаблицаНастроекДействия = ТекущийОбъект.НастройкаДействия.Получить();
	Если ТаблицаНастроекДействия <> Неопределено Тогда
		НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
	КонецЕсли;
	
	ТаблицаНастроекКонтрольныхОтчетов = ТекущийОбъект.НастройкиКонтрольныхОтчетов.Получить();
	Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
		НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
	КонецЕсли;
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкаДействия = Новый ХранилищеЗначения(НастройкаДействия.Выгрузить());
	ТекущийОбъект.НастройкиКонтрольныхОтчетов = Новый ХранилищеЗначения(НастройкиКонтрольныхОтчетов.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусыУтверждаемыхДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПланЗакупок"
		Или ИмяСобытия = "Запись_ПланПродаж"
		Или ИмяСобытия = "Запись_ПланПроизводства"
		Или ИмяСобытия = "Запись_ПланСборкиРазборки"
		Или ИмяСобытия = "Запись_ЭкземплярБюджета" Тогда
		
		РезультатПоиска = Объект.УтверждаемыеДокументы.НайтиСтроки(Новый Структура("Документ", Источник));
		Если РезультатПоиска.Количество() Тогда
			УправлениеФормой();
		КонецЕсли;
		
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ДействиеПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗадачиПриИзменении(Элемент)
	
	УстановитьПериодЗадачиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ШагБюджетногоПроцессаПриИзменении(Элемент)
	
	УстановитьПериодЗадачиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УтверждаемыеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Документ = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(ВыбраннаяСтрока).Документ;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Документ);
	ОткрытьФорму(ИмяФормыДокумента(Документ), ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьДействие(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("en='Для настройки действия необходимо записать объект. Записать?';ru='Для настройки действия необходимо записать объект. Записать?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("НастроитьДействиеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	НастроитьДействиеФрагмент(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Если Не Записать() Тогда
            Отказ = Истина;
        КонецЕсли
    Иначе 
        Отказ = Истина;
    КонецЕсли;
    
    НастроитьДействиеФрагмент(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеФрагмент(Знач Отказ)
    
    Перем ИмяФормыНастройки, Оповещение, ПараметрыФормы;
    
    Если Отказ Тогда
        Возврат;
    КонецЕсли;
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиДействияВоВременноеХранилище());
    ПараметрыФормы.Вставить("ШагПроцесса",          Объект.ШагБюджетногоПроцесса);
    ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
    
    Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиДействия", ЭтотОбъект);
    
    ИмяФормыНастройки = ИмяФормыНастройкиНаСервере(Объект.Действие);
    ОткрытьФорму(ИмяФормыНастройки, ПараметрыФормы, ЭтотОбъект, , , , Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьКонтрольныеОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище());
	ПараметрыФормы.Вставить("ШагПроцесса",          Объект.ШагБюджетногоПроцесса);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиКонтрольныхОтчетов", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ШагиБюджетныхПроцессов.Форма.НастройкаКонтрольныхОтчетов", 
		ПараметрыФормы, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ЭтотОбъект.ПроверитьЗаполнение() Тогда
		ЭтотОбъект.Записать();
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИЗакрыть(Команда)
	
	Объект.Выполнена = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = ТекущаяДата();
	КонецЕсли;
	
	Если ЭтотОбъект.ПроверитьЗаполнение() Тогда
		ЭтотОбъект.Записать();
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	Если НеобходимоСозданиеНовогоДокумента(Объект.Документ, Объект.Действие) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьНовыйДокумент", ЭтотОбъект);
		ПоказатьВопрос(
			ОписаниеОповещения, 
			НСтр("en='Будет создан и записан новый документ. Продолжить?';ru='Будет создан и записан новый документ. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,
			60);
	Иначе
		ВыполнитьДействиеКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКонтрольныйОтчет(Команда)
	
	НастройкиОтчета = НастройкиКонтрольныхОтчетов[0];
	ОткрытьБюджетныйОтчет(НастройкиОтчета.ВидБюджета, 
		НастройкиОтчета.Сценарий, 
		НастройкиОтчета.Организации, 
		НастройкиОтчета.Подразделения,
		НастройкиОтчета.ДанныеКУтверждению,
		НастройкиОтчета.ДанныеВПодготовке);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище());
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	ПараметрыФормы.Вставить("Период",               Объект.Период);
	ПараметрыФормы.Вставить("Периодичность",        Периодичность);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.КонтрольныеОтчеты", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаПодготовку(Команда)
	
	УстановитьСтатус("ВПодготовке", НСтр("en='In preparation';ru='В подготовке'"));
	
	ВыделенныеСтроки = Элементы.УтверждаемыеДокументы.ВыделенныеСтроки; 
	
	ДополнительныйПараметры = Новый Структура("СтрокиДляВозвратаНаПодготовку", ВыделенныеСтроки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВводеПараметровЗадачиВернутьНаПодготовку", 
		ЭтотОбъект, ДополнительныйПараметры);
	
	ПараметрыФормы = Новый Структура;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("en='Формирование задач ответственным за подготовку документов';ru='Формирование задач ответственным за подготовку документов'"));
	Иначе
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("en='Формирование задачи ответственному за подготовку документа';ru='Формирование задачи ответственному за подготовку документа'"));
	КонецЕсли;
	ПараметрыФормы.Вставить("ФормированиеНесколькихЗадач", ВыделенныеСтроки.Количество() > 1);
	ПараметрыФормы.Вставить("ВыбиратьШагБюджетногоПроцесса", Ложь);
	ПараметрыФормы.Вставить("ВыбиратьИсполнителя", Ложь);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.ФормированиеСвязаннойЗадачи", 
		ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Утвердить(Команда)
	
	УстановитьСтатус("Утвержден", НСтр("en='Approved';ru='Утвержден'"));
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	УстановитьСтатус("Отменен", НСтр("en='Canceled';ru='Отменен'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	ТекущаяСтрока = Элементы.УтверждаемыеДокументы.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ТекущаяСтрока.Документ);
	ОткрытьФорму(ИмяФормыДокумента(ТекущаяСтрока.Документ), ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязаннуюЗадачу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВводеПараметровСвязаннойЗадачи", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФормированиеНесколькихЗадач", Ложь);
	ПараметрыФормы.Вставить("ВыбиратьШагБюджетногоПроцесса", Истина);
	ПараметрыФормы.Вставить("ВыбиратьИсполнителя", Истина);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.ФормированиеСвязаннойЗадачи", 
		ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЕстьАвтор = ЗначениеЗаполнено(Объект.Автор);
	Элементы.Автор.Видимость = ЕстьАвтор;
	Элементы.НадписьСформированаАвтоматически.Видимость = Не ЕстьАвтор;
	
	Реквизиты = Новый Структура("Периодичность", "Родитель.Периодичность");
	Периодичность = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(Объект.ШагБюджетногоПроцесса, Реквизиты).Периодичность;
	НадписьПериод = БюджетированиеКлиентСервер.ПредставлениеПериодаПоДате(Объект.Период, Периодичность);
	
	Если Объект.Выполнена Тогда
		Заголовок = НСтр("en='Completed';ru='Выполнено'");
	КонецЕсли;
	
	НастроитьСписокДействийЗадачи();
	УстановитьДоступностьМоделиБюджетирования();
	
	ТекущееДействие = Объект.Действие;
	
	УправлениеФормой();
	
	ОткрытьНастройки = ЗначениеЗаполнено(Объект.ШагБюджетногоПроцесса);
	Элементы.МодельБюджетирования.ТолькоПросмотр = ОткрытьНастройки;
	Элементы.ШагБюджетногоПроцесса.ТолькоПросмотр = ОткрытьНастройки;
	Элементы.Действие.ТолькоПросмотр = ОткрытьНастройки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыДокумента(Документ)
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	Возврат ОбъектМетаданных.ПолноеИмя() + ".ФормаОбъекта";
	
КонецФункции

&НаСервере
Процедура ВернутьДокументыВПодготовкуСервер(ПараметрыЗадачи, СтрокиДляВозвратаНаПодготовку)
	
	Для каждого Идентификатор Из СтрокиДляВозвратаНаПодготовку Цикл
		
		СтрокаДокумент = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(Идентификатор);
		
		ЗадачаОбъект = Задачи.БюджетнаяЗадача.СоздатьЗадачу();
		ЗаполнитьЗначенияСвойств(ЗадачаОбъект, ПараметрыЗадачи);
		ЗадачаОбъект.Дата = ТекущаяДатаСеанса();
		ЗадачаОбъект.МодельБюджетирования = Объект.МодельБюджетирования;
		ЗадачаОбъект.ШагБюджетногоПроцесса = Объект.ШагБюджетногоПроцесса;
		ЗадачаОбъект.Период = Объект.Период;
		ЗадачаОбъект.ИсходныйШагБюджетногоПроцесса = СтрокаДокумент.ШагБюджетногоПроцесса;
		ЗадачаОбъект.Исполнитель = СтрокаДокумент.Ответственный;
		Если ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.ЭкземплярБюджета") Тогда
			ЗадачаОбъект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета;
		Иначе
			ЗадачаОбъект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета;
		КонецЕсли;
		ЗадачаОбъект.ОсновнаяЗадача = Объект.Ссылка;
		ЗадачаОбъект.Документ = СтрокаДокумент.Документ;
		ЗадачаОбъект.Автор = ПользователиКлиентСервер.АвторизованныйПользователь();
		ЗадачаОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкиКонтрольныхОтчетов.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПоместитьНастройкиДействияВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкаДействия.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкиДействияСервер(Адрес)
	
	НастройкаДействия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес)
	
	НастройкиКонтрольныхОтчетов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеПараметровЗадачиВернутьНаПодготовку(ПараметрыЗадачи, ДополнительныеПараметры) Экспорт
	
	Если ПараметрыЗадачи <> Неопределено Тогда
		ВернутьДокументыВПодготовкуСервер(ПараметрыЗадачи, ДополнительныеПараметры.СтрокиДляВозвратаНаПодготовку);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеПараметровСвязаннойЗадачи(ПараметрыЗадачи, ДополнительныеПараметры) Экспорт
	
	Если ПараметрыЗадачи <> Неопределено Тогда
		СоздатьСвязаннуюЗадачуСервер(ПараметрыЗадачи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиДействия(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиДействияСервер(Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиКонтрольныхОтчетов(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокДействийЗадачи()
	
	РеквизитыМодели = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.МодельБюджетирования, "ИспользоватьДляЗаполненияЛимитовРасходаДС, ИспользоватьУтверждениеБюджетов");
		
	Если Не РеквизитыМодели.ИспользоватьДляЗаполненияЛимитовРасходаДС Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.УстановкаЛимитовРасходаДС);
	КонецЕсли;
	Если Не РеквизитыМодели.ИспользоватьУтверждениеБюджетов Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов);
	КонецЕсли;
	
	//Если Не (ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеЗакупок")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПродаж")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПроизводства")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеСборкиРазборки")) Тогда
	//	УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДействиеИзСписка(ТипДействия)
	
	ЭлементСписка = Элементы.Действие.СписокВыбора.НайтиПоЗначению(ТипДействия);
	Если ЭлементСписка <> Неопределено Тогда
		Элементы.Действие.СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДействиеПриИзмененииСервер()
	
	Если Объект.Действие = ТекущееДействие Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаДействия.Очистить();
	Если ЗначениеЗаполнено(Объект.Документ) Тогда
		Объект.Документ = Неопределено;
	КонецЕсли;
	
	ТекущееДействие = Объект.Действие;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСвязанныхЗадач(Дерево, ВсегоЗадач, Выполнено, ЗадачаВерхнегоУровня)
	
	Если Дерево = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДерева из Дерево.Строки Цикл
		Если СтрокаДерева.Задача = ЗадачаВерхнегоУровня Тогда
			Продолжить;
		КонецЕсли;
		ВсегоЗадач = ВсегоЗадач + 1;
		Если СтрокаДерева.ЗадачаВыполнена Тогда
			Выполнено = Выполнено + 1;
		КонецЕсли;
		ЗаполнитьСписокСвязанныхЗадач(СтрокаДерева, ВсегоЗадач, Выполнено, СтрокаДерева.Задача);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыНастройкиНаСервере(Действие)
	
	Возврат Перечисления.ТипыДействийШаговБюджетныхПроцессов.ИмяФормы(Действие)
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ОбновитьСтатусыУтверждаемыхДокументов();
	
	УстановитьПредставлениеДействия();
	
	ЭтоДействиеПрочее = (Объект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.Прочее);
	ЭтоДействиеУтверждения = (Объект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов);
	Элементы.СтраницаУтверждаемыеДокументы.Видимость = ЭтоДействиеУтверждения;
	
	ВидимостьНастроек = ЗначениеЗаполнено(Объект.Действие) И Не ЭтоДействиеПрочее;
	Элементы.НастройкиДействия.Видимость = ВидимостьНастроек;
	
	ПредставлениеНастройки = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ПолучитьПредставлениеДействия(НастройкаДействия);
	Элементы.ДекорацияНастройки.Заголовок = ПредставлениеНастройки;
	
	КоличествоОтчетов = НастройкиКонтрольныхОтчетов.Количество();
	
	ЗаголовокКонтрольныеОтчеты = НСтр("en='Настроить контрольные отчеты (%1)';ru='Настроить контрольные отчеты (%1)'");
	Элементы.НастроитьКонтрольныеОтчеты.Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ЗаголовокКонтрольныеОтчеты, 
			КоличествоОтчетов);
	Элементы.НастроитьКонтрольныеОтчеты.Видимость = ЭтоДействиеПрочее Или ЭтоДействиеУтверждения;
	
	ЕстьКонтрольныеОтчеты = (КоличествоОтчетов > 0);
	НесколькоКонтрольныхОтчетов = (КоличествоОтчетов > 1);
	ЕдинственныйКонтрольныйОтчет = (КоличествоОтчетов = 1);
	
	Элементы.ГруппаОтчеты.Видимость = ЕстьКонтрольныеОтчеты И ЭтоДействиеПрочее;
	Элементы.ГруппаОтчетыУтверждение.Видимость = ЕстьКонтрольныеОтчеты И ЭтоДействиеУтверждения;
	
	Элементы.СформироватьКонтрольныйОтчет.Видимость = ЕдинственныйКонтрольныйОтчет;
	Элементы.СформироватьКонтрольныйОтчетУтверждение.Видимость = ЕдинственныйКонтрольныйОтчет;
	Если ЕдинственныйКонтрольныйОтчет Тогда
		НастройкиОтчета = НастройкиКонтрольныхОтчетов[0];
		ЗаголовокОтчета = Строка(НастройкиОтчета.ВидБюджета);
		Элементы.СформироватьКонтрольныйОтчет.Заголовок = ЗаголовокОтчета;
		Элементы.СформироватьКонтрольныйОтчетУтверждение.Заголовок = ЗаголовокОтчета;
	КонецЕсли;
	
	Элементы.КонтрольныеОтчеты.Видимость = НесколькоКонтрольныхОтчетов;
	Элементы.КонтрольныеОтчетыУтверждение.Видимость = НесколькоКонтрольныхОтчетов;
	Если НесколькоКонтрольныхОтчетов Тогда
		ЗаголовокКонтрольныеОтчеты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("en='Контрольные отчеты (%1)';ru='Контрольные отчеты (%1)'"), 
			КоличествоОтчетов);
		Элементы.КонтрольныеОтчеты.Заголовок = ЗаголовокКонтрольныеОтчеты;
		Элементы.КонтрольныеОтчетыУтверждение.Заголовок = ЗаголовокКонтрольныеОтчеты;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПериодЗадачиПриИзмененииНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Объект.Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("Действие", "Действие");
	Реквизиты.Вставить("НастройкаДействия", "НастройкаДействия");
	Реквизиты.Вставить("НастройкиКонтрольныхОтчетов", "НастройкиКонтрольныхОтчетов");
	Реквизиты.Вставить("Периодичность", "Родитель.Периодичность");
	Реквизиты.Вставить("ТипДлительности", "ТипДлительности");
	Реквизиты.Вставить("Длительность", "Длительность");
	ЗначениеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ШагБюджетногоПроцесса, Реквизиты);
	
	Объект.Действие = ЗначениеРеквизитов.Действие;
	Периодичность = ЗначениеРеквизитов.Периодичность;
	Задачи.БюджетнаяЗадача.УстановитьДлительностьЗадачи(Объект, ЗначениеРеквизитов);
	Объект.Период = БюджетированиеКлиентСервер.ДатаНачалаПериода(Объект.Период, Периодичность);
	
	Если ЗначениеЗаполнено(ЗначениеРеквизитов.НастройкаДействия) Тогда
		ТаблицаНастроекДействия = ЗначениеРеквизитов.НастройкаДействия.Получить();
		Если ТаблицаНастроекДействия <> Неопределено Тогда
			НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеРеквизитов.НастройкиКонтрольныхОтчетов) Тогда
		ТаблицаНастроекКонтрольныхОтчетов = ЗначениеРеквизитов.НастройкиКонтрольныхОтчетов.Получить();
		Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
			НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаУтверждаемыхДокументов = Задачи.БюджетнаяЗадача.УтверждаемыеДокументыПоШагуПроцесса(
													Объект.Действие, НастройкаДействия, Объект.Период);
	Объект.УтверждаемыеДокументы.Загрузить(ТаблицаУтверждаемыхДокументов);
	
	НадписьПериод = БюджетированиеКлиентСервер.ПредставлениеПериодаПоДате(Объект.Период, Периодичность);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьМоделиБюджетирования()
	
	КоличествоДействующихМоделей
		= Справочники.МоделиБюджетирования.КоличествоДействующихМоделейБюджетирования(Объект.Дата);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, 
		"МодельБюджетирования", 
		"Видимость", 
		КоличествоДействующихМоделей <> 1 Или Не ЗначениеЗаполнено(Объект.МодельБюджетирования));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеДействия()
	
	Действие = Объект.Действие;
	
	ДействиеЗаполнено = ЗначениеЗаполнено(Действие);
	ЭтоДействиеПрочее = (Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.Прочее);
	
	ТекстПояснения = НСтр("en='Пояснение действия';ru='Пояснение действия'");
	ПредставлениеДействия = НСтр("en='Выполнить действие';ru='Выполнить действие'");
	Если Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета Тогда
		ТекстПояснения = НСтр("en='Для ввода бюджета нажмите на гиперссылку';ru='Для ввода бюджета нажмите на гиперссылку'");
		ПредставлениеДействия = ?(ЗначениеЗаполнено(Объект.Документ), 
			Строка(Объект.Документ), НСтр("en='<Ввести бюджет>';ru='<Ввести бюджет>'"));
	ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УстановкаЛимитовРасходаДС Тогда
		ТекстПояснения = НСтр("en='Для установки лимитов расхода ДС нажмите на гиперссылку';ru='Для установки лимитов расхода ДС нажмите на гиперссылку'");
		ПредставлениеДействия = ?(ЗначениеЗаполнено(Объект.Документ), 
			Строка(Объект.Документ), НСтр("en='<Установить лимиты расхода денежных средств>';ru='<Установить лимиты расхода денежных средств>'"));
	ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана Тогда
		ТекстПояснения = НСтр("en='Для ввода плана нажмите на гиперссылку';ru='Для ввода плана нажмите на гиперссылку'");
		ПредставлениеДействия = ?(ЗначениеЗаполнено(Объект.Документ), 
			Строка(Объект.Документ), НСтр("en='<Ввести план>';ru='<Ввести план>'"));
	ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов Тогда
		ТекстПояснения = НСтр("en='Для перехода к списку документов нажмите гиперссылку';ru='Для перехода к списку документов нажмите гиперссылку'");
		
		ВсегоДокументов = Объект.УтверждаемыеДокументы.Количество();
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.Утвержден);
		Утверждено = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.Отменен);
		Отменено = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.НаУтверждении);
		КУтверждению = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.ВПодготовке);
		ВПодготовке = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		Если ВсегоДокументов = 0 Тогда
			ПредставлениеДействия = НСтр("en='Нет документов к утверждению';ru='Нет документов к утверждению'");
		ИначеЕсли Утверждено = ВсегоДокументов Тогда
			ПредставлениеДействия = НСтр("en='Все документы утверждены';ru='Все документы утверждены'");
		ИначеЕсли Отменено = ВсегоДокументов Тогда
			ПредставлениеДействия = НСтр("en='Все документы отменены';ru='Все документы отменены'");
		ИначеЕсли ВсегоДокументов = Утверждено + Отменено Тогда
			ПредставлениеДействия = НСтр("ru = 'Утверждены: %1 %3, отменены: %2' %4");
			ПредставлениеДействия = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
					Утверждено, 
					Отменено,
					СклонениеДокументов(Утверждено),
					СклонениеДокументов(Отменено));
		ИначеЕсли КУтверждению <> 0 И ВПодготовке <> 0 Тогда
			ПредставлениеДействия = НСтр("en='К утверждению: %1 %3, не готовы к утверждению: %2 %4';ru='К утверждению: %1 %3, не готовы к утверждению: %2 %4'");
			ПредставлениеДействия = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
					КУтверждению, 
					ВПодготовке,
					СклонениеДокументов(КУтверждению),
					СклонениеДокументов(ВПодготовке));
		ИначеЕсли ВПодготовке <> 0 Тогда
			ПредставлениеДействия = НСтр("en='Не готовы к утверждению: %1 %2';ru='Не готовы к утверждению: %1 %2'");
			ПредставлениеДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
				ВПодготовке,
				СклонениеДокументов(ВПодготовке));
		Иначе 
			ПредставлениеДействия = НСтр("en='К утверждению: %1 %2';ru='К утверждению: %1 %2'");
			ПредставлениеДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
				КУтверждению,
				СклонениеДокументов(КУтверждению));
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ГруппаПояснениеДействия.Видимость = ДействиеЗаполнено И Не ЭтоДействиеПрочее;
	Элементы.ВыполнитьДействие.Видимость = ДействиеЗаполнено И Не ЭтоДействиеПрочее;
	
	Элементы.ГруппаОтчеты.Видимость = ЭтоДействиеПрочее;
	
	Элементы.ПояснениеДействия.Заголовок = ТекстПояснения;
	Элементы.ВыполнитьДействие.Заголовок = ПредставлениеДействия;
	
КонецПроцедуры

&НаСервере
Функция СклонениеДокументов(ЧислоДокументов)
	
	Возврат МониторингЦелевыхПоказателейКлиентСервер.ПолучитьСклонениеСлова(
		ЧислоДокументов, НСтр("en='документ';ru='документ'"), НСтр("en='document';ru='документа'"), НСтр("en='документов';ru='документов'"), НСтр("en='m';ru='м'"));
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействиеКлиент()
	
	Если Объект.Действие = ПредопределенноеЗначение("Перечисление.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов") Тогда
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаУтверждаемыеДокументы;
	Иначе
		Результат = ВыполнитьДействиеСервер();
		Если Результат <> Неопределено Тогда
			ОткрытьФорму(Результат.ИмяФормы, Результат.ПараметрыФормы, ЭтотОбъект, Результат.Уникальность);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НеобходимоСозданиеНовогоДокумента(Документ, Действие)
	
	Результат = Ложь;
	
	ДействияБезСозданияДокумента = Новый Массив;
	ДействияБезСозданияДокумента.Добавить(
		ПредопределенноеЗначение("Перечисление.ТипыДействийШаговБюджетныхПроцессов.Прочее"));
	ДействияБезСозданияДокумента.Добавить(
		ПредопределенноеЗначение("Перечисление.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов"));
	
	Если Не ЗначениеЗаполнено(Документ) И ДействияБезСозданияДокумента.Найти(Действие) = Неопределено Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНовыйДокумент(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполнитьДействиеКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБюджетныйОтчет(ВидБюджета, Сценарий, Организации, Подразделения, ДанныеКУтверждению, ДанныеВПодготовке)
	
	Если Не ЗначениеЗаполнено(ВидБюджета) Тогда
		ВызватьИсключение НСтр("en='Не определен Вид бюджета для построения отчета.';ru='Не определен Вид бюджета для построения отчета.'")
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	ПараметрыОтчета.Вставить("ВидБюджета", ВидБюджета);
	ПараметрыОтчета.Вставить("Сценарий", Сценарий);
	ПараметрыОтчета.Вставить("Организации", Организации);
	ПараметрыОтчета.Вставить("Подразделения", Подразделения);
	ПараметрыОтчета.Вставить("ДанныеКУтверждению", ДанныеКУтверждению);
	ПараметрыОтчета.Вставить("ДанныеВПодготовке", ДанныеВПодготовке);
	
	Период = ?(ЗначениеЗаполнено(Объект.Период), Объект.Период, ТекущаяДата());
	НачалоПериода = БюджетированиеКлиентСервер.ДатаНачалаПериода(Период, Периодичность);
	КонецПериода = БюджетированиеКлиентСервер.ДатаКонцаПериода(Период, Периодичность);
	ПараметрыОтчета.Вставить("Период", Новый СтандартныйПериод(НачалоПериода, КонецПериода));
	
	ПараметрыОтчета.Вставить("СформироватьБюджетныйОтчетПриОткрытии", Истина);
	ПараметрыОтчета.Вставить("НеИспользоватьСохраненныеНастройки", Истина);
	ПараметрыОтчета.Вставить("ПоказыватьПанельНастройки", Ложь);
	
	ОткрытьФорму("Отчет.БюджетныйОтчет.ФормаОбъекта", ПараметрыОтчета, ЭтотОбъект, Истина); 
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьДействиеСервер()
	
	Действие = Объект.Действие;
	Если НеобходимоСозданиеНовогоДокумента(Объект.Документ, Объект.Действие) Тогда
		ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
		Если Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета Тогда
			ЗадачаОбъект.СоздатьЭкземплярБюджета(НастройкаДействия.Выгрузить());
		ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УстановкаЛимитовРасходаДС Тогда
			ЗадачаОбъект.СоздатьЛимитыРасходаДенежныхСредств(НастройкаДействия.Выгрузить());
		ИначеЕсли Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана Тогда
			ЗадачаОбъект.СоздатьПлан(НастройкаДействия.Выгрузить());
		КонецЕсли;
		ЗначениеВРеквизитФормы(ЗадачаОбъект, "Объект");
		
		Если Не ЗначениеЗаполнено(Объект.Документ) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ЭтотОбъект.Записать();
		
	КонецЕсли;
	
	УстановитьПредставлениеДействия();
	
	ИмяФормыОбъекта = "";
	ПараметрыФормы = Новый Структура();
	Уникальность = Ложь;
	ИмяФормыОбъекта = "Документ." + Объект.Документ.Метаданные().Имя + ".ФормаОбъекта";
	ПараметрыФормы.Вставить("Ключ", Объект.Документ);
	
	Результат = Новый Структура();
	Результат.Вставить("ИмяФормы", ИмяФормыОбъекта);
	Результат.Вставить("ПараметрыФормы", ПараметрыФормы);
	Результат.Вставить("Уникальность", Уникальность);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьСтатусыУтверждаемыхДокументов()
	
	Если Объект.Действие <> Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УтверждаемыеДокументы.НомерСтроки,
	|	УтверждаемыеДокументы.Документ,
	|	УтверждаемыеДокументы.ШагБюджетногоПроцесса
	|ПОМЕСТИТЬ УтверждаемыеДокументы
	|ИЗ
	|	&УтверждаемыеДокументы КАК УтверждаемыеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УтверждаемыеДокументы.НомерСтроки КАК НомерСтроки,
	|	УтверждаемыеДокументы.Документ,
	|	ШагиБюджетныхПроцессов.Ответственный,
	|	ВЫБОР
	|		КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЭкземплярБюджета.Статус
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	УтверждаемыеДокументы КАК УтверждаемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШагиБюджетныхПроцессов КАК ШагиБюджетныхПроцессов
	|		ПО УтверждаемыеДокументы.ШагБюджетногоПроцесса = ШагиБюджетныхПроцессов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭкземплярБюджета КАК ЭкземплярБюджета
	|		ПО УтверждаемыеДокументы.Документ = ЭкземплярБюджета.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("УтверждаемыеДокументы", Объект.УтверждаемыеДокументы.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Для каждого Строка Из Объект.УтверждаемыеДокументы Цикл
		Если Строка.НомерСтроки <> Выборка.НомерСтроки Тогда
			Выборка.Следующий();
		КонецЕсли;
		Строка.Статус = Выборка.Статус;
		Строка.Ответственный = Выборка.Ответственный;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатус(Статус, ТексСтатуса)
	
	ДокументыДляУстановкиСтатуса = Новый Массив;
	Для каждого Идентификатор Из Элементы.УтверждаемыеДокументы.ВыделенныеСтроки Цикл
		Документ = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(Идентификатор).Документ;
		ДокументыДляУстановкиСтатуса.Добавить(Документ);
	КонецЦикла;
	
	Если ДокументыДляУстановкиСтатуса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	КоличествоОбработанных = 
		ОбщегоНазначенияУТВызовСервера.УстановитьСтатусДокументов(ДокументыДляУстановкиСтатуса, Статус);
	
	ОбщегоНазначенияУТКлиент.ОповеститьПользователяОбУстановкеСтатуса(Элементы.УтверждаемыеДокументы, КоличествоОбработанных, ДокументыДляУстановкиСтатуса.Количество(), ТексСтатуса);
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязаннуюЗадачуСервер(ПараметрыЗадачи)
	
	ВРамкахДругогоШага = 
		ЗначениеЗаполнено(ПараметрыЗадачи.ШагБюджетногоПроцесса) 
		И ПараметрыЗадачи.ШагБюджетногоПроцесса <> Объект.ШагБюджетногоПроцесса;
	
	Если ВРамкахДругогоШага Тогда
		ДанныеЗаполнения = ПараметрыЗадачи.ШагБюджетногоПроцесса;
	Иначе
		ДанныеЗаполнения = Новый Структура("МодельБюджетирования, ШагБюджетногоПроцесса, Действие, Период, Документ");
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Объект);
		ДанныеЗаполнения.Вставить("НастройкаДействия", Новый ХранилищеЗначения(НастройкаДействия.Выгрузить()));
		ДанныеЗаполнения.Вставить("НастройкиКонтрольныхОтчетов", Новый ХранилищеЗначения(НастройкиКонтрольныхОтчетов.Выгрузить()));
	КонецЕсли;
	
	НоваяЗадача = Задачи.БюджетнаяЗадача.СоздатьЗадачу();
	НоваяЗадача.Заполнить(ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(НоваяЗадача, ПараметрыЗадачи, "Наименование, СрокИсполнения, ОписаниеЗадачи, Исполнитель");
	
	НоваяЗадача.ОсновнаяЗадача = Объект.Ссылка;
	НоваяЗадача.Период = Объект.Период;
	НоваяЗадача.ИсходныйШагБюджетногоПроцесса = Объект.ШагБюджетногоПроцесса;
	
	Если НоваяЗадача.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов
		И Не ВРамкахДругогоШага Тогда
		НоваяЗадача.УтверждаемыеДокументы.Загрузить(Объект.УтверждаемыеДокументы.Выгрузить());
	КонецЕсли;
	
	НоваяЗадача.Записать();
	
	ОбновитьИнформациюПоСвязаннымЗадачам();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоСвязаннымЗадачам()
	
	ДеревоПодчиненныхЗадач = Задачи.БюджетнаяЗадача.ПолучитьДеревоПодчиненныхЗадач(Объект.Ссылка);
	НайденнаяСтрока = ДеревоПодчиненныхЗадач.Строки.Найти(Объект.Ссылка, , Истина);
	ВсегоЗадач = 0;
	Выполнено = 0;
	ЗаполнитьСписокСвязанныхЗадач(НайденнаяСтрока, ВсегоЗадач, Выполнено, Объект.Ссылка);
	Если ВсегоЗадач Тогда
		Элементы.НадписьВыполнено.Заголовок = НСтр("en='Выполнено %1 из %2';ru='Выполнено %1 из %2'");
		Элементы.НадписьВыполнено.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												Элементы.НадписьВыполнено.Заголовок, Выполнено, ВсегоЗадач);
	Иначе
		Элементы.НадписьВыполнено.Заголовок = НСтр("en='Связанные задачи не назначены';ru='Связанные задачи не назначены'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
