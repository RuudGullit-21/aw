
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура СоздатьПеревозкуПоШаблону(ДокументШаблон, ДокументыСсылка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументШаблон", ДокументШаблон);
	Запрос.УстановитьПараметр("Документ",       ДокументыСсылка);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСобытияПоПеревозке_уэ.ДнейОтДатыНачалаПеревозки КАК ДнейОтДатыНачалаПеревозки,
	               |	уатСобытияПоПеревозке_уэ.ТипДнейОтДатыНачалаПеревозки КАК ТипДнейОтДатыНачалаПеревозки,
	               |	уатСобытияПоПеревозке_уэ.ТипСобытия КАК ТипСобытия,
	               |	уатСобытияПоПеревозке_уэ.Тема КАК Тема,
	               |	уатСобытияПоПеревозке_уэ.Описание КАК Описание,
	               |	уатСобытияПоПеревозке_уэ.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	               |ИЗ
	               |	РегистрСведений.уатСобытияПоПеревозке_уэ КАК уатСобытияПоПеревозке_уэ
	               |ГДЕ
	               |	уатСобытияПоПеревозке_уэ.ДокументПеревозки = &ДокументШаблон
	               |	И ВЫБОР
	               |			КОГДА ТИПЗНАЧЕНИЯ(&Документ) = ТИП(Документ.уатЗаказГрузоотправителя)
	               |				ТОГДА уатСобытияПоПеревозке_уэ.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.уатВидыДокументовСобытийПоПеревозке_уэ.ЗаказГрузоотправителя)
	               |			ИНАЧЕ уатСобытияПоПеревозке_уэ.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.уатВидыДокументовСобытийПоПеревозке_уэ.МаршрутныйЛист)
	               |		КОНЕЦ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.уатСобытияПоПеревозке_уэ.СоздатьМенеджерЗаписи(); 
		МенеджерЗаписи.ТипСобытия        = Выборка.ТипСобытия; 
		МенеджерЗаписи.ДокументПеревозки = ДокументыСсылка; 
		
		Если ТипЗнч(ДокументыСсылка) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
			ДатаНачалаПеревозки = ДокументыСсылка.ДоставкаС;
		Иначе
			ДатаНачалаПеревозки = уатПроведение_проф.ПолучитьДатуОтсчетаДляСДПоПервомуЗаказуИлиМЛ(ДокументыСсылка);
		КонецЕсли;
		
		МенеджерЗаписи.ДатаПлан   = РассчитатьПлановуюДатуСобытия(ДокументыСсылка, 
			ДатаНачалаПеревозки, Выборка.ДнейОтДатыНачалаПеревозки,
			Выборка.ТипДнейОтДатыНачалаПеревозки, Выборка.ПроизводственныйКалендарь); 
		МенеджерЗаписи.Тема       = Выборка.Тема;
		МенеджерЗаписи.Описание   = Выборка.Описание;
		
		Попытка
			МенеджерЗаписи.Записать();  
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьПлановуюДатуСобытия(ДокументыСсылка, ДатаНачалаПеревозки, ДнейОтДатыНачалаПеревозки, ТипДнейОтДатыНачалаПеревозки, ПроизводственныйКалендарь) Экспорт
	
	ПлановаяДата = Дата(1,1,1);
	Если НРег(ТипДнейОтДатыНачалаПеревозки) = "календарные" Тогда
		ПлановаяДата = ДатаНачалаПеревозки + ДнейОтДатыНачалаПеревозки * 24 * 3600;
	Иначе
		Попытка
			ПлановаяДата = КалендарныеГрафики.ДатаПоКалендарю(ПроизводственныйКалендарь,
			ДатаНачалаПеревозки, ДнейОтДатыНачалаПеревозки);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПлановаяДата;
КонецФункции

#КонецОбласти

#КонецЕсли