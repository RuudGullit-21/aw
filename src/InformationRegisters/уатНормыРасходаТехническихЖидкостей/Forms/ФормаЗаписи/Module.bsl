
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.уатНормыРасходаТехническихЖидкостей) Тогда 
		Элементы.ВариантНормыСпидометра.Доступность  = Ложь;
		Элементы.ВариантНормыСпидометра1.Доступность = Ложь;
	КонецЕсли;
	
	// Элементы.ГСМ.СписокВыбора.Очистить();
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатНоменклатураГСМ.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.уатНоменклатураГСМ КАК уатНоменклатураГСМ
	|ГДЕ
	|	уатНоменклатураГСМ.ГруппаГСМ = ЗНАЧЕНИЕ(Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости)");
	ВыборкаНом = Запрос.Выполнить().Выбрать();
	Пока ВыборкаНом.Следующий() Цикл
		Элементы.ГСМ.СписокВыбора.Добавить(ВыборкаНом.Номенклатура);
	КонецЦикла;
	
	Если Запись.ЛинейнаяНорма <> 0 Тогда
		ВариантНормыСпидометра = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МодельТСПриИзменении(Элемент)
	Если МодельТСсоСпидометром(Запись.МодельТС) Тогда
		Запись.НормаНаМоточас = 0;
	Иначе
		Запись.ЛинейнаяНорма = 0;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокГруппДляОтбора = Новый СписокЗначений;
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	
	ДополнительныеПараметры	 = Новый Структура("ЗначениеГСМДоИзменения", Запись.ГСМ);
	ОписаниеОповещенияЗакр	 = Новый ОписаниеОповещения("ОписаниеОповещенияВыбораГСМ", ЭтотОбъект, ДополнительныеПараметры);

	уатЗащищенныеФункцииКлиент.ВыбратьГСМ(СписокГруппДляОтбора, ДополнительныеПараметры, ОписаниеОповещенияЗакр);
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Запись.ГСМ = Результат;
		Если Запись.ГСМ <> ДопПараметры.ЗначениеГСМДоИзменения Тогда 
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГСМАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	мсвГруппДляОтбора = Новый Массив;
	мсвГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	ДанныеВыбора = уатГСМ.ПолучитьСписокАвтоподбораПоляГСМ(Текст, мсвГруппДляОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ГСМОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ПараметрыПолученияДанных.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура ВариантНормыСпидометраПриИзменении(Элемент)
	// очистка значений старого варианта
	Если ВариантНормыСпидометра = 0 Тогда
		Запись.ЛинейнаяНорма = 0;
	Иначе
		Запись.Норма = 0;
		Запись.НормаНаДопТопливо = 0;
	КонецЕсли;
	
	Модифицированность = Истина;
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	Если МодельТСсоСпидометром(Запись.МодельТС) Тогда
		Элементы.ГруппаДопНорма.ТекущаяСтраница = Элементы.ГруппаСтраницаЛинейнаяНорма;
	Иначе
		Элементы.ГруппаДопНорма.ТекущаяСтраница = Элементы.ГруппаСтраницаНормаНаМоточас;
	КонецЕсли;
	Если ВариантНормыСпидометра = 0 Тогда
		Элементы.Норма1.Доступность             = Истина;
		Элементы.НормаНаДопТопливо1.Доступность = Истина;
		Элементы.ЛинейнаяНорма.Доступность      = Ложь;
	Иначе
		Элементы.Норма1.Доступность             = Ложь;
		Элементы.НормаНаДопТопливо1.Доступность = Ложь;
		Элементы.ЛинейнаяНорма.Доступность      = Истина;
	КонецЕсли;
	
	Элементы.НормаНаДопТопливо.Видимость  = МодельТСДваВидаТоплива(Запись.МодельТС);
	Элементы.НормаНаДопТопливо1.Видимость = Элементы.НормаНаДопТопливо.Видимость;
КонецПроцедуры

&НаСервереБезКонтекста
Функция МодельТСсоСпидометром(МодельТС)
	Если ТипЗнч(МодельТС) = Тип("СправочникСсылка.уатТС") Тогда
		Возврат МодельТС.Модель.НаличиеСпидометра;
	ИначеЕсли ТипЗнч(МодельТС) = Тип("СправочникСсылка.уатМоделиТС") Тогда
		Возврат МодельТС.НаличиеСпидометра;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция МодельТСДваВидаТоплива(МодельТС)
	Если ТипЗнч(МодельТС) = Тип("СправочникСсылка.уатТС") Тогда
		Возврат ЗначениеЗаполнено(МодельТС.Модель.ДополнительноеТопливо);
	ИначеЕсли ТипЗнч(МодельТС) = Тип("СправочникСсылка.уатМоделиТС") Тогда
		Возврат ЗначениеЗаполнено(МодельТС.ДополнительноеТопливо);
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

#КонецОбласти
