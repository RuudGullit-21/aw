
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("НачальноеЗначениеВыбора") Тогда
		НачальноеЗначение = Параметры.НачальноеЗначениеВыбора;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияВеса = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияВеса();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияВеса) Тогда
		Элементы.Вес.Заголовок = НСтр("en='Weight';ru='Вес'") +", " + ПредставлениеЕдиницыИзмеренияВеса;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияОбъема = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияОбъема();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияОбъема) Тогда
		Элементы.Объем.Заголовок = НСтр("en='Volume';ru='Объем'") + ", " + ПредставлениеЕдиницыИзмеренияОбъема;
	КонецЕсли;
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборПоВыводимымГрузам();
	
	Если ЗначениеЗаполнено(НачальноеЗначение) Тогда
		ТекРодитель = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(НачальноеЗначение, "Родитель");
		Если ЗначениеЗаполнено(ТекРодитель) Тогда
			Элементы.Дерево.ТекущаяСтрока = ТекРодитель;
		КонецЕсли;
		Элементы.Номенклатура.ТекущаяСтрока = НачальноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Дерево

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Номенклатура.Отбор, "Родитель");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Номенклатура.Отбор, "Родитель", ТекДанные.Ссылка, 
			ВидСравненияКомпоновкиДанных.ВИерархии);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Номенклатура

&НаКлиенте
Процедура НоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если НЕ уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ВыбраннаяСтрока, "ЭтоГруппа") тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(Элементы.Номенклатура.ТекущиеДанные.Ссылка);
	Иначе
	//	ЭлементыФормы.Дерево.ТекущаяСтрока = ВыбраннаяСтрока.Ссылка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Номенклатура", ТекДанные.Ссылка);
	Иначе 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Номенклатура", 
			ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	ТекСтрока = Элементы.Номенклатура.ТекущиеДанные;
	Если Копирование Тогда
		Если ТекСтрока <> Неопределено И (НЕ ТекСтрока.ЭтоГруппа) Тогда
			ПараметрыФормы.Вставить("Номенклатура", ТекСтрока.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если Группа Тогда
		ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
		ОткрытьФорму("Справочник.Номенклатура.ФормаГруппы", ПараметрыФормы,,,,, Новый ОписаниеОповещения("НоменклатураПередНачаломДобавленияГруппыЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	Иначе
		ОткрытьФорму("РегистрСведений.уатНоменклатураГрузов.ФормаЗаписи", ПараметрыФормы,,,,, Новый ОписаниеОповещения("НоменклатураПередНачаломДобавленияЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередУдалением(Элемент, Отказ)
	УдалитьГруз(Отказ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	УстановитьОтборПоВыводимымГрузам();
	Элементы.Номенклатура.Обновить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВсяНоменклатура(Команда)
	Элементы.ФормаВсяНоменклатура.Пометка = НЕ Элементы.ФормаВсяНоменклатура.Пометка;
	УстановитьОтборПоВыводимымГрузам();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборПоВыводимымГрузам()
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Номенклатура, "ВсяНоменклатура", 
		Элементы.ФормаВсяНоменклатура.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьГруз(Отказ)
	Отказ = Истина;
	ТекДанные = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено тогда
		возврат;
	КонецЕсли;
	
	УдалитьГрузСервер(ТекДанные.Ссылка);
	
	УстановитьОтборПоВыводимымГрузам();	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьГрузСервер(ТекГруз)
	МенЗаписи = РегистрыСведений.уатНоменклатураГрузов.СоздатьНаборЗаписей();
	МенЗаписи.Отбор.Номенклатура.Установить(ТекГруз);
	МенЗаписи.Записать();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередНачаломДобавленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Элементы.Номенклатура.Обновить();

КонецПроцедуры

&НаКлиенте 
Процедура НоменклатураПередНачаломДобавленияГруппыЗавершение(Результат, ДопПараметры) Экспорт
	 Элементы.Дерево.Обновить();
КонецПроцедуры

#КонецОбласти
