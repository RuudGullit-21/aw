
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
		Запись.Номенклатура = Параметры.Номенклатура;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ЕдиницаИзмерения) Тогда
		Запись.ЕдиницаИзмерения = Запись.Номенклатура.ЕдиницаХраненияОстатков;
	КонецЕсли;
	
	Отбор = Новый Массив;                    
	Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Запись.Номенклатура", РежимИзмененияСвязанногоЗначения.Очищать);
	Отбор.Добавить(Связь);
	Элементы.ЕдиницаИзмерения.СвязиПараметровВыбора = Новый ФиксированныйМассив(Отбор);
	Элементы.ЕдиницаИзмерения.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения");
	
	ПредставлениеЕдиницыИзмеренияВеса = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияВеса();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияВеса) Тогда
		Элементы.Вес.Заголовок = НСтр("en='Weight';ru='Вес'") + ", " + ПредставлениеЕдиницыИзмеренияВеса;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияОбъема = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияОбъема();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияОбъема) Тогда
		Элементы.Объем.Заголовок = НСтр("en='Volume';ru='Объем'") + ", " + ПредставлениеЕдиницыИзмеренияОбъема;
	КонецЕсли;
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	Запись.ЕдиницаИзмерения = ЕдиницаИзмеренияНоменклатуры(Запись.Номенклатура);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатОбщегоНазначенияКлиент.ТЧТоварыЕдиницаИзмеренияНачалоВыбора(Запись.Номенклатура,
		ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбъемНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РассчитатьОбъем();
КонецПроцедуры

&НаКлиенте
Процедура КлассыОпасностиНажатие(Элемент)
	ТабДокумент = КлассыОпасностиНажатиеНаСервере();
	ТабДокумент.ОтображатьСетку     = Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.ТолькоПросмотр      = Истина;
	
	ТабДокумент.Показать(НСтр("en='USS 19433-88 Dangerous cargo. Classification and marking';ru='ГОСТ 19433-88 Грузы опасные. Классификация и маркировка'"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РассчитатьОбъем()
	
	ОбъемМетрКуб = Запись.ДлинаГруза * Запись.ШиринаГруза * Запись.ВысотаГруза;
	
	Если Константы.уатЕдиницаИзмеренияОбъема.Получить() = Перечисления.уатЕдиницыИзмеренияОбъема.Литр Тогда 
		Запись.Объем = ОбъемМетрКуб * 1000;
	Иначе 
		Запись.Объем = ОбъемМетрКуб;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕдиницаИзмеренияНоменклатуры(Номенклатура)
	ЕдиницаИзмерения = Номенклатура.ЕдиницаХраненияОстатков;
	
	Возврат ЕдиницаИзмерения;
КонецФункции

&НаСервереБезКонтекста
Функция КлассыОпасностиНажатиеНаСервере()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "КлассификацияОпасныхГрузов";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет     = РегистрыСведений.уатНоменклатураГрузов.ПолучитьМакет("КлассификацияОпасныхГрузов");
	ОблШапка  = Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(ОблШапка);
	ОблКлассы = Макет.ПолучитьОбласть("Классы");
	ТабличныйДокумент.Вывести(ОблКлассы);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти
