
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Пункт1") Тогда
		Запись.Пункт1 = Параметры.Пункт1;
	КонецЕсли;
	
	ТипКартографии = уатЭлектронныеКартыСервер.ПолучитьТипИспользуемыхЭлектронныхКарт("ПостроениеМаршрутов");
	Если Константы.уатИспользоватьЭлектронныеКарты.Получить()
			И (ТипКартографии = Перечисления.уатТипыЭлектронныхКарт.OSM
			ИЛИ ТипКартографии = Перечисления.уатТипыЭлектронныхКарт.Яндекс) Тогда 
		Элементы.ФормаЗаполнитьПоOSM.Видимость = Истина;
	Иначе 
		Элементы.ФормаЗаполнитьПоOSM.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	#Если Клиент Тогда
		Оповестить("РасстоянияМеждуПунктами_Запись", Параметры.Ключ, ЭтотОбъект);
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(Запись.Пункт1) И Запись.Пункт1 = Запись.Пункт2 Тогда
		СтрокаСообщения = НСтр("en='Must be specified different values of points 1 and 2!';ru='Должны быть указаны разные значения пунктов 1 и 2!'");
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаСообщения, Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВремяПриИзменении(Элемент)
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(Запись.Время);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоOSM(Команда)
	
	ОшибкаЗаполнения = Ложь;
	
	Если Не ЗначениеЗаполнено(Запись.Пункт1) Тогда 
		ТекстОшибки = НСтр("ru = 'Необходимо заполнить пункт 1'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Запись.Пункт1",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.Пункт2) Тогда 
		ТекстОшибки = НСтр("ru = 'Необходимо заполнить пункт 2'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Запись.Пункт2",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если ОшибкаЗаполнения Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоOSMСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоOSMСервер()
	
	ОшибкаЗаполнения = Ложь;
	
	Если Запись.Пункт1.Лат = 0 И Запись.Пункт1.Лон = 0 Тогда 
		ТекстОшибки = НСтр("ru = 'В пункте 1 не указаны координаты'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Запись.Пункт1",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если Запись.Пункт2.Лат = 0 И Запись.Пункт2.Лон = 0 Тогда 
		ТекстОшибки = НСтр("ru = 'В пункте 2 не указаны координаты'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Запись.Пункт2",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если ОшибкаЗаполнения Тогда 
		Возврат;
	КонецЕсли;
	
	мсвТочкиМаршрута = Новый Массив();
	мсвТочкиМаршрута.Добавить(Новый Структура("Лат, Лон", Запись.Пункт1.Лат, Запись.Пункт1.Лон));
	мсвТочкиМаршрута.Добавить(Новый Структура("Лат, Лон", Запись.Пункт2.Лат, Запись.Пункт2.Лон));
	
	ДанныеМаршрута = Неопределено;
	ТекстОшибкиOSM = "";
	Если уатЗащищенныеФункцииСервер.РассчитатьМаршрут(мсвТочкиМаршрута, ДанныеМаршрута, ТекстОшибкиOSM) Тогда 
		мВремяСек = ДанныеМаршрута.Время;
		мВремяЧас = Цел(мВремяСек / 3600);
		мВремяМин = Цел((мВремяСек - мВремяЧас * 3600) / 60);
		
		Запись.Время      = мВремяЧас + (мВремяМин / 100);
		Запись.Расстояние = Окр(ДанныеМаршрута.Расстояние / 1000, 1);
		
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиOSM);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
