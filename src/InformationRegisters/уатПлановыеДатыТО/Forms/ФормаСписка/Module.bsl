
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьНадписьПоРемонтам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПланыРемонтов(Команда)
	
	уатОбщегоНазначения.ОбновитьПланыРемонтныхРабот();
	ОбновитьНадписьПоРемонтам();
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНадписьПоРемонтам()
	
	ДатаОбновленияПлана = Константы.уатДатаАктуальностиПланаРемонтныхРабот.Получить();
	
	Если НачалоДня(ДатаОбновленияПлана) <> НачалоДня(ТекущаяДата()) Тогда 
		Элементы.СостояниеОбновленияПлановРемонтов.Заголовок = "Данные по плану ремонтных работ не актуальны.";
	Иначе 
		Элементы.СостояниеОбновленияПлановРемонтов.Заголовок = "Данные по плану ремонтных работ обновлены в " + Формат(ДатаОбновленияПлана, "ДФ=HH:mm; ДП=00:00") + ".";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

