
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// Эти списки выбора не изменяется, достаточно заполнить его один раз
	ЗаполнитьСписокВыбораСервер(Элементы.ДокументИсточник);
	ЗаполнитьСписокВыбораСервер(Элементы.ТипРеквизитаПриемника);
	
	Если СпискиВыбораПрочитаны Тогда
		СпискиВыбораПрочитаны = Ложь;
	Иначе
		УстановитьТипРеквизитаПриемника();
		ТипЗначенияРеквизитаПриемника = ПолучитьТипРеквизитаПриемника(Запись.ДокументПриемник, Запись.РеквизитПриемника);
		
		ЗаполнитьСписокВыбораСервер(Элементы.ДополнительныйРеквизитИсточника);
		ЗаполнитьСписокВыбораСервер(Элементы.ДокументПриемник);
		ЗаполнитьСписокВыбораСервер(Элементы.РеквизитПриемника);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьТипРеквизитаПриемника();
	ТипЗначенияРеквизитаПриемника = ПолучитьТипРеквизитаПриемника(Запись.ДокументПриемник, Запись.РеквизитПриемника);
	
	ЗаполнитьСписокВыбораСервер(Элементы.ДополнительныйРеквизитИсточника);
	ЗаполнитьСписокВыбораСервер(Элементы.ДокументПриемник);
	ЗаполнитьСписокВыбораСервер(Элементы.РеквизитПриемника);
	СпискиВыбораПрочитаны = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументИсточникПриИзменении(Элемент)
	Запись.ДополнительныйРеквизитИсточника = Неопределено;
	ЗаполнитьСписокВыбораКлиент(Элементы.ДополнительныйРеквизитИсточника);
	Запись.ДокументПриемник = Неопределено;
	ЗаполнитьСписокВыбораКлиент(Элементы.ДокументПриемник);
	Запись.РеквизитПриемника = Неопределено;
	ТипЗначенияРеквизитаПриемника = Неопределено;
	ЗаполнитьСписокВыбораКлиент(Элементы.РеквизитПриемника);
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриемникПриИзменении(Элемент)
	Запись.РеквизитПриемника = Неопределено;
	ТипЗначенияРеквизитаПриемника = Неопределено;
	ЗаполнитьСписокВыбораКлиент(Элементы.РеквизитПриемника);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПриемникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение <> Запись.РеквизитПриемника Тогда
		ТипЗначенияРеквизитаПриемника = ПолучитьТипРеквизитаПриемника(Запись.ДокументПриемник, ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТипРеквизитаПриемникаПриИзменении(Элемент)
	Запись.РеквизитПриемника = Неопределено;
	ТипЗначенияРеквизитаПриемника = Неопределено;
	ЗаполнитьСписокВыбораКлиент(Элементы.РеквизитПриемника);
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокВыбораКлиент(Элемент)
	
	Элемент.СписокВыбора.Очистить();
	
	мсвВыбора = ПолучитьМассивВыбора(Элемент.Имя);
	Для Каждого ТекЭлемент Из мсвВыбора Цикл
		Если ТипЗнч(ТекЭлемент) = Тип("Структура") Тогда
			Элемент.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
		Иначе
			Элемент.СписокВыбора.Добавить(ТекЭлемент);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораСервер(Элемент)
	
	Элемент.СписокВыбора.Очистить();
	
	мсвВыбора = ПолучитьМассивВыбора(Элемент.Имя);
	Для Каждого ТекЭлемент Из мсвВыбора Цикл
		Если ТипЗнч(ТекЭлемент) = Тип("Структура") Тогда
			Элемент.СписокВыбора.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
		Иначе
			Элемент.СписокВыбора.Добавить(ТекЭлемент);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивВыбора(ИмяЭлемента);
	
	Если ИмяЭлемента = Элементы.ДополнительныйРеквизитИсточника.Имя Тогда
		мсвВыбора = ПолучитьДополнительныеРеквизитыНабора(Запись.ДокументИсточник, Запись.ДополнительныйРеквизитИсточника);
	ИначеЕсли ИмяЭлемента = Элементы.РеквизитПриемника.Имя И ТипРеквизитаПриемника = ДополнительныйРеквизит() Тогда
		мсвВыбора = ПолучитьДополнительныеРеквизитыНабора(Запись.ДокументПриемник, Запись.РеквизитПриемника);
	ИначеЕсли ИмяЭлемента = Элементы.РеквизитПриемника.Имя И ТипРеквизитаПриемника = ОсновнойРеквизит() Тогда
		мсвВыбора = ПолучитьРеквизитыДокумента(Запись.ДокументПриемник);
	ИначеЕсли ИмяЭлемента = Элементы.ДокументПриемник.Имя Тогда
		мсвВыбора = ПолучитьВводимыеНаОснованииДокументы(Запись.ДокументИсточник);
	ИначеЕсли ИмяЭлемента = Элементы.ДокументИсточник.Имя Тогда
		мсвВыбора = ПолучитьВсеДокументыОснования();
	ИначеЕсли ИмяЭлемента = Элементы.ТипРеквизитаПриемника.Имя Тогда
		мсвВыбора = Новый Массив;
		мсвВыбора.Добавить(ОсновнойРеквизит());
		мсвВыбора.Добавить(ДополнительныйРеквизит());
	Иначе
		мсвВыбора = Новый Массив;
	КонецЕсли;
	
	Возврат мсвВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДополнительныеРеквизитыНабора(НаборДополнительныхРеквизитов, ТекущееЗначение)
	
	Результат = Новый Массив;
	Если Не ЗначениеЗаполнено(НаборДополнительныхРеквизитов) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Свойство");
	Запрос.УстановитьПараметр("Ссылка", НаборДополнительныхРеквизитов);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Свойство");
	
	// Добавляется текущее значения (в случае, если оно исключено из набора),
	// чтобы отображение на формах списка и записи не отличались
	Если ЗначениеЗаполнено(ТекущееЗначение)
		И Результат.Найти(ТекущееЗначение) = Неопределено Тогда
		Результат.Добавить(ТекущееЗначение);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыДокумента(НаборДополнительныхРеквизитов)
	
	Результат = Новый Массив;
	Если Не ЗначениеЗаполнено(НаборДополнительныхРеквизитов) Тогда
		Возврат Результат;
	КонецЕсли;
	
	МетаданныеПриемника = уатОбщегоНазначенияСервер.МетаданныеДокументаПоНаборуДопРеквизитов(
		НаборДополнительныхРеквизитов);
		
	Если МетаданныеПриемника = Неопределено Тогда
		ТекстНСтр = СтрШаблон(
			НСтр("ru = 'Ошибка при определении типа документа, связанного с ""%1"". Выберите другой документ-приемник'"),
			НаборДополнительныхРеквизитов);
		ОбщегоНазначения.СообщитьПользователю(ТекстНСтр);
	Иначе
		РеквизитыДокумента = МетаданныеПриемника.Реквизиты;
		Для Каждого ТекРеквизит Из РеквизитыДокумента Цикл
			СтруктураРеквизит = Новый Структура("Значение, Представление");
			СтруктураРеквизит.Значение      = ТекРеквизит.Имя;
			СтруктураРеквизит.Представление = СтрШаблон("%1 (%2)", ТекРеквизит.Синоним, ТекРеквизит.Имя);
			Результат.Добавить(СтруктураРеквизит);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВводимыеНаОснованииДокументы(НаборДополнительныхРеквизитов)
	
	Результат = Новый Массив;
	Если Не ЗначениеЗаполнено(НаборДополнительныхРеквизитов) Тогда
		Возврат Результат;
	КонецЕсли;
	
	МетаданныеДокументаОснования = уатОбщегоНазначенияСервер.МетаданныеДокументаПоНаборуДопРеквизитов(
		НаборДополнительныхРеквизитов);
		
	Если МетаданныеДокументаОснования = Неопределено Тогда
		ТекстНСтр = СтрШаблон(
			НСтр("ru = 'Ошибка при определении типа документа, связанного с ""%1"". Выберите другой документ-источник'"),
			НаборДополнительныхРеквизитов);
		ОбщегоНазначения.СообщитьПользователю(ТекстНСтр);
	Иначе
		ИменаНаборов = Новый Массив;
		Для Каждого Метаданное Из Метаданные.Документы Цикл
			Если Метаданное.ВводитсяНаОсновании.Содержит(МетаданныеДокументаОснования) Тогда
				ИменаНаборов.Добавить(СтрШаблон("Документ_%1", Метаданное.Имя));
			КонецЕсли;
		КонецЦикла;
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НаборыДополнительныхРеквизитовИСведений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК НаборыДополнительныхРеквизитовИСведений
		|ГДЕ
		|	НаборыДополнительныхРеквизитовИСведений.ЭтоГруппа = ЛОЖЬ
		|	И НаборыДополнительныхРеквизитовИСведений.Предопределенный = ИСТИНА
		|	И НаборыДополнительныхРеквизитовИСведений.ИмяПредопределенныхДанных В(&ИменаНаборов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НаборыДополнительныхРеквизитовИСведений.Наименование");
		Запрос.УстановитьПараметр("ИменаНаборов", ИменаНаборов);
		Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВсеДокументыОснования()
	
	Результат = Новый Массив;
	
	мсвМетаданныеОснования = Новый Массив;
	Для Каждого Метаданное Из Метаданные.Документы Цикл
		Для Каждого МетаданноеОснование Из Метаданное.ВводитсяНаОсновании Цикл
			Если мсвМетаданныеОснования.Найти(МетаданноеОснование) = Неопределено
				И Метаданные.Документы.Найти(МетаданноеОснование.Имя) <> Неопределено Тогда
				мсвМетаданныеОснования.Добавить(МетаданноеОснование);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ИменаНаборов = Новый Массив;
	Для Каждого Метаданное Из мсвМетаданныеОснования Цикл
		Если СтрНачинаетсяС(Метаданное.Имя, "уат") Тогда
			ИменаНаборов.Добавить(СтрШаблон("Документ_%1", Метаданное.Имя));
		КонецЕсли;
	КонецЦикла;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаборыДополнительныхРеквизитовИСведений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК НаборыДополнительныхРеквизитовИСведений
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведений.ЭтоГруппа = ЛОЖЬ
	|	И НаборыДополнительныхРеквизитовИСведений.Предопределенный = ИСТИНА
	|	И НаборыДополнительныхРеквизитовИСведений.ИмяПредопределенныхДанных В(&ИменаНаборов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаборыДополнительныхРеквизитовИСведений.Наименование");
	Запрос.УстановитьПараметр("ИменаНаборов", ИменаНаборов);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОсновнойРеквизит()
	Возврат НСтр("ru = 'Основной'");
КонецФункции

&НаСервереБезКонтекста
Функция ДополнительныйРеквизит()
	Возврат НСтр("ru = 'Дополнительный'");
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТипРеквизитаПриемника(ДокументПриемник, РеквизитПриемника)
	
	Если Не ЗначениеЗаполнено(РеквизитПриемника) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(РеквизитПриемника) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		Возврат РеквизитПриемника.ТипЗначения;
	ИначеЕсли ТипЗнч(РеквизитПриемника) = Тип("Строка") И ЗначениеЗаполнено(ДокументПриемник) Тогда
		МетаданныеПриемника = уатОбщегоНазначенияСервер.МетаданныеДокументаПоНаборуДопРеквизитов(ДокументПриемник);
		МетаданныеРеквизитПриемника = МетаданныеПриемника.Реквизиты.Найти(РеквизитПриемника);
		Если МетаданныеРеквизитПриемника = Неопределено Тогда
			Возврат Неопределено;
		Иначе
			Возврат МетаданныеРеквизитПриемника.Тип;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьТипРеквизитаПриемника()
	Если ТипЗнч(Запись.РеквизитПриемника) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		ТипРеквизитаПриемника = ДополнительныйРеквизит();
	Иначе
		ТипРеквизитаПриемника = ОсновнойРеквизит();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
