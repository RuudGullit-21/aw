
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекОрганизация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьФорму", Новый Структура("КоэффициентИзмененияНормТоплива", Запись.КоэффициентИзмененияНормТоплива), Запись.ТС);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСтавку(Команда)
	ЗаполнитьСтавкуСервер();
	ОбновитьНадписьСтавкаТранспортногоНалога();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкуСервер()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	уатСтавкиПоТранспортномуНалогу.Ссылка КАК Ссылка,
	|	уатСтавкиПоТранспортномуНалогу.ЛСилОт КАК МощностьОт,
	|	уатСтавкиПоТранспортномуНалогу.ЛСилДо КАК МощностьДо,
	|	уатСтавкиПоТранспортномуНалогу.МинимальноеКоличествоЛетСГодаВыпускаТС КАК ВозрастОт,
	|	уатСтавкиПоТранспортномуНалогу.МаксимальноеКоличествоЛетСГодаВыпускаТС КАК ВозрастДо,
	|	уатСтавкиПоТранспортномуНалогу.Ставка КАК Ставка
	|ИЗ
	|	Справочник.уатСтавкиПоТранспортномуНалогу КАК уатСтавкиПоТранспортномуНалогу
	|ГДЕ
	|	НЕ уатСтавкиПоТранспортномуНалогу.ПометкаУдаления
	|	И уатСтавкиПоТранспортномуНалогу.ОКТМО = &ОКТМО
	|	И уатСтавкиПоТранспортномуНалогу.Период = &Период
	|	И уатСтавкиПоТранспортномуНалогу.Вид = &КатегорияТС");
	Запрос.УстановитьПараметр("Период", НачалоГода(НачалоГода(ТекущаяДата())-1));
	Запрос.УстановитьПараметр("ОКТМО", КодПоОКТМОРегиона(СокрЛП(Запись.ТС.Организация.КодПоОКТМО)));
	Запрос.УстановитьПараметр("КатегорияТС", Запись.ТС.КодПоКлассификатору.КатегорияТС);
	тблСтавки = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрокаСтавка Из тблСтавки Цикл
		Если (ТекСтрокаСтавка.МощностьОт = 0 И ТекСтрокаСтавка.МощностьДо = 0
			ИЛИ (Запись.ЕдиницаИзмеренияНалоговойБазы = "251" И ЗначениеЗаполнено(Запись.НалоговаяБаза)
			И Запись.НалоговаяБаза >= ТекСтрокаСтавка.МощностьОт И (Запись.НалоговаяБаза <= ТекСтрокаСтавка.МощностьДо ИЛИ ТекСтрокаСтавка.МощностьДо = 0)))
			И (ТекСтрокаСтавка.ВозрастОт = 0 И ТекСтрокаСтавка.ВозрастДо = 0
			ИЛИ (ЗначениеЗаполнено(Запись.ТС.ГодВыпуска)
			И Запись.ТС.ГодВыпуска >= ТекСтрокаСтавка.ВозрастОт И (Запись.ТС.ГодВыпуска <= ТекСтрокаСтавка.ВозрастДо ИЛИ ТекСтрокаСтавка.ВозрастДо = 0))) Тогда
			
			Запись.СтавкаТранспортногоНалога = ТекСтрокаСтавка.Ссылка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", ТекОрганизация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Запись.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", ТекОрганизация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", ТекОрганизация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура НачислятьТранспортныйНалогПриИзменении(Элемент)
	УстановитьВидимостьДоступность()
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияНалоговойБазыПриИзменении(Элемент)
	ОбновитьНалоговуюБазу();
КонецПроцедуры

&НаКлиенте
Процедура СтавкаТранспортногоНалогаПриИзменении(Элемент)
	ОбновитьНадписьСтавкаТранспортногоНалога();
КонецПроцедуры

&НаКлиенте
Процедура ОбщаяСобственностьПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура РегиональныйКодЛьготыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОснованиеЛьготы", Запись.РегиональныйКодЛьготы);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуРегиональныйКодЛьготыЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"РегистрСведений.уатСведенияОТС.Форма.ФормаВводаОснованияЛьготы", 
		ПараметрыФормы, 
		ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРегиональныйКодЛьготыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Запись.РегиональныйКодЛьготы = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговаяЛьготаПриИзменении(Элемент)
	Запись.КодНалоговойЛьготы = "";
	Запись.РегиональныйКодЛьготы = "";
	
	Если Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки") Тогда
		
		Запись.КодНалоговойЛьготы = "20230";
				
	ИначеЕсли Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах") Тогда
		
		Запись.КодНалоговойЛьготы = "20220";
				
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура История(Команда)
	ОткрытьФорму("РегистрСведений.уатСведенияОТС.ФормаСписка", Новый Структура("Отбор", Новый Структура("ТС", Запись.ТС)),, "История");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ГруппаНалог.Доступность = Запись.НачислятьТранспортныйНалог;
	Элементы.ГруппаНалог2.Доступность = Запись.НачислятьТранспортныйНалог;
	ОбновитьНалоговуюБазу();
	ОбновитьНадписьСтавкаТранспортногоНалога();
	Элементы.ГруппаДоляВПравеНаТС.Видимость = Запись.ОбщаяСобственность;
	
	ОсвобождениеОтНалогообложения = 
		Запись.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения");
	
	СнижениеНалоговойСтавки = 
		Запись.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки");
	
	УменьшениеСуммыНалогаВПроцентах = 
		Запись.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах");
		
	УменьшениеСуммыНалогаНаСумму = 
		Запись.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму");
		
	Элементы.ГруппаКодНалоговойЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах ИЛИ УменьшениеСуммыНалогаНаСумму;
	Элементы.ДекорацияКодЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.РегиональныйКодЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.ЛьготнаяСтавка.Видимость = СнижениеНалоговойСтавки;
	Элементы.ПроцентУменьшения.Видимость = УменьшениеСуммыНалогаВПроцентах;
	Элементы.СуммаУменьшения.Видимость = УменьшениеСуммыНалогаНаСумму;
	
	Элементы.КодНалоговойЛьготы.ТолькоПросмотр = СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.КодНалоговойЛьготы.КнопкаВыбора = ОсвобождениеОтНалогообложения ИЛИ УменьшениеСуммыНалогаНаСумму;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНалоговуюБазу()
	Если Запись.ЕдиницаИзмеренияНалоговойБазы = "251" Тогда
		Элементы.НалоговаяБаза.Заголовок = НСтр("en='Engine power';ru='Мощность двигателя'");
	ИначеЕсли Запись.ЕдиницаИзмеренияНалоговойБазы = "999" Тогда
		Элементы.НалоговаяБаза.Заголовок = НСтр("en='Motive force';ru='Сила тяги'");
	ИначеЕсли Запись.ЕдиницаИзмеренияНалоговойБазы = "181" Тогда
		Элементы.НалоговаяБаза.Заголовок = НСтр("en='Gross tonnage';ru='Валовая вместимость'");
	Иначе
		Элементы.НалоговаяБаза.Заголовок = НСтр("en='Tax base';ru='Налоговая база'");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьСтавкаТранспортногоНалога()
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Если Не ЗначениеЗаполнено(ВалютаРегл) Тогда
		ВалютаРегл = НСтр("en='rub.';ru='руб'");
	КонецЕсли;
	
	НадписьСтавкаТранспортногоНалога = ?(ЗначениеЗаполнено(Запись.СтавкаТранспортногоНалога), ""
		+ уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.СтавкаТранспортногоНалога, "Ставка") + " (" + ВалютаРегл + ")", "не указана");
КонецПроцедуры

// Возвращает код ОКТМО региона по коду ОКТМО регистрации в налоговом органе.
// Код ОКТМО региона используется в регистре ставок транспортного налога.
// 
// Параметры:
//  КодПоОКТМО - Строка - код по ОКТМО, где зарегистрирован объект налогообложения
// 
// Возвращаемое значение:
//  Строка - код по ОКТМО региона
Функция КодПоОКТМОРегиона(Знач КодПоОКТМО) 

	ПрефиксОКТМО = Лев(КодПоОКТМО, 3);

	Если ПрефиксОКТМО = "118" Или ПрефиксОКТМО = "718" Или ПрефиксОКТМО = "719" Тогда
		КодПоОКТМОРегиона = ПрефиксОКТМО + "00000";
	Иначе
		КодПоОКТМОРегиона = Лев(ПрефиксОКТМО, 2) + "000000";
	КонецЕсли;

	Возврат КодПоОКТМОРегиона;
	
КонецФункции

#КонецОбласти
