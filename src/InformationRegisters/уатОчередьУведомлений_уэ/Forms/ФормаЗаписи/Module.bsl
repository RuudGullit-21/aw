#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Запись.Шаблон) Тогда
		 Запись.Шаблон = Запись.ПравилоФормированияУведомлений.ШаблонСообщения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ТекстСообщения)
		Или (Запись.ПравилоФормированияУведомлений.ВидУведомления = Справочники.уатСпособыВзаимодействий_уэ.ЭлектронноеПисьмо 
		И Не ЗначениеЗаполнено(Запись.ТемаПисьма)) Тогда
		
		ПараметрыСообщения = Новый Структура("ДополнительныйДокумент, GUIDСтрокиМЛ, ДатаУстановкиСтатуса, СтатусДокумента, УбытиеПлан, ГрузовоеМесто");
		ЗаполнитьЗначенияСвойств(ПараметрыСообщения, Запись);
		
		Сообщение = ШаблоныСообщений.СформироватьСообщение(
						Запись.Шаблон,
						Запись.Документ,
						Новый УникальныйИдентификатор,
						ПараметрыСообщения
					);
		Если Не ЗначениеЗаполнено(Запись.ТекстСообщения) Тогда
			Запись.ТекстСообщения = Сообщение.Текст;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Запись.ТемаПисьма) Тогда
			Запись.ТемаПисьма = Сообщение.Тема;
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
	
	// Для электронных писем определяем, обычным они текстом или HTML.
	ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст;
	Если Запись.ПравилоФормированияУведомлений.ВидУведомления = Справочники.уатСпособыВзаимодействий_уэ.ЭлектронноеПисьмо или Запись.ПравилоФормированияУведомлений.ВидУведомления = Справочники.уатСпособыВзаимодействий_уэ.ОформлениеКомплектаДокументов Тогда
		ЭтоПисьмоHTML = СтрНачинаетсяС(Запись.ТекстСообщения, "<!DOCTYPE html") ИЛИ СтрНачинаетсяС(Запись.ТекстСообщения, "<html");
		Если ЭтоПисьмоHTML Тогда
			ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML;
			ВложенияФорматированныйДокумент = Новый Структура;
			//ТелоСообщенияОбычныйТекстВHTML = СтрЗаменить(Запись.ТекстСообщения, Символы.ПС, "<br>");
			ТелоСообщенияОбычныйТекстВHTML = Запись.ТекстСообщения;
			ТекстПисьмаФорматированныйДокумент.УстановитьHTML(ТелоСообщенияОбычныйТекстВHTML, ВложенияФорматированныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ТипТекстаПисьма = ПредопределенноеЗначение("Перечисление.СпособыРедактированияЭлектронныхПисем.HTML") Тогда
		ВложенияФорматированныйДокумент = Новый Структура;
		ТекстПисьмаФорматированныйДокумент.ПолучитьHTML(Запись.ТекстСообщения, ВложенияФорматированныйДокумент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьСообщение(Команда)
	ЭтаФорма.Записать();
	СформироватьСообщениеНаСервере();
	ЭтаФорма.Закрыть();
	Оповестить("ОбновитьОчередьУведомлений");
КонецПроцедуры

&НаСервере
Процедура СформироватьСообщениеНаСервере()
	УведомлениеМенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	УведомлениеМенеджерЗаписи.Прочитать();
	уатОбщегоНазначения_уэ.ОбработатьУведомление(УведомлениеМенеджерЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектронноеПисьмоОбычныйТекст(Команда)
	УстановитьЭлектронноеПисьмоОбычныйТекст(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЭлектронноеПисьмоHTML(Команда)
	УстановитьЭлектронноеПисьмоHTML(Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПравилоФормированияУведомленийПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	флЗаказНаТС = ТипЗнч(Запись.Документ) = Тип("ДокументСсылка.уатЗаказГрузоотправителя");
	флМаршрутныйЛист = ТипЗнч(Запись.Документ) = Тип("ДокументСсылка.уатМаршрутныйЛист");
	флЭлектронноеПисьмо = Запись.ПравилоФормированияУведомлений.ВидУведомления = Справочники.уатСпособыВзаимодействий_уэ.ЭлектронноеПисьмо;
	
	Элементы.СтатусДокумента.Видимость = флЗаказНаТС;
	Элементы.ДатаУстановкиСтатуса.Видимость = флЗаказНаТС;
	Элементы.ГрузовоеМесто.Видимость = флЗаказНаТС
		И Запись.Документ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам;
	Элементы.GUIDСтрокиМЛ.Видимость = ТипЗнч(Запись.Документ) = Тип("ДокументСсылка.уатМаршрутныйЛист");
	Элементы.ДополнительныйДокумент.Видимость = флЗаказНаТС Или флМаршрутныйЛист;
	
	Элементы.ТемаПисьма.Видимость = флЭлектронноеПисьмо;
	Элементы.ФормаВидТекстаЭлектронногоПисьма.Доступность = флЭлектронноеПисьмо;
	
	Если ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML Тогда
		Элементы.ФормаВидТекстаЭлектронногоПисьма.Заголовок = "HTML";
		Элементы.ФормаЭлектронноеПисьмоОбычныйТекст.Пометка = Ложь;
		Элементы.ФормаЭлектронноеПисьмоHTML.Пометка = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СообщениеТекстHTML;
		Элементы.СообщениеОбычныйТекст.Видимость = Ложь;
		Элементы.СообщениеТекстHTML.Видимость = Истина;
	Иначе
		Элементы.ФормаВидТекстаЭлектронногоПисьма.Заголовок = НСтр("ru='Обычный текст';en='Normal text'");
		Элементы.ФормаЭлектронноеПисьмоОбычныйТекст.Пометка = Истина;
		Элементы.ФормаЭлектронноеПисьмоHTML.Пометка = Ложь;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СообщениеОбычныйТекст;
		Элементы.СообщениеОбычныйТекст.Видимость = Истина;
		Элементы.СообщениеТекстHTML.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЭлектронноеПисьмоHTML(ТребуетсяПереносТекста = Ложь)
	
	ТипТекстаПисьма = ПредопределенноеЗначение("Перечисление.СпособыРедактированияЭлектронныхПисем.HTML");
	УстановитьВидимостьДоступность();
	
	Если ТребуетсяПереносТекста Тогда
		ВложенияФорматированныйДокумент = Новый Структура;
		ТелоСообщенияОбычныйТекстВHTML = СтрЗаменить(Запись.ТекстСообщения, Символы.ПС, "<br>");
		ТекстПисьмаФорматированныйДокумент.УстановитьHTML(ТелоСообщенияОбычныйТекстВHTML, ВложенияФорматированныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЭлектронноеПисьмоОбычныйТекст(ТребуетсяПереносТекста = Ложь)
	
	ТипТекстаПисьма = ПредопределенноеЗначение("Перечисление.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст");
	УстановитьВидимостьДоступность();
	
	Если ТребуетсяПереносТекста Тогда
		Запись.ТекстСообщения = ТекстПисьмаФорматированныйДокумент.ПолучитьТекст();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти