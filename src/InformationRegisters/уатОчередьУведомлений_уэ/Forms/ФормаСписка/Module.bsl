#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьОчередьУведомлений" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьСообщения(Команда)
	СформироватьСообщенияНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура СформироватьСообщенияНаСервере()
	ВыбранныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	// Сначала формируются тексты сообщений и удаляются дубликаты - сообщения с одинаковыми текстом, темой и получателем
	тзУникальныеУведомления = Новый ТаблицаЗначений;
	тзУникальныеУведомления.Колонки.Добавить("ТекстСообщения", Новый ОписаниеТипов("Строка"));
	тзУникальныеУведомления.Колонки.Добавить("ТемаПисьма", Новый ОписаниеТипов("Строка"));
	тзУникальныеУведомления.Колонки.Добавить("ВидУведомления", Новый ОписаниеТипов("СправочникСсылка.уатСпособыВзаимодействий_уэ"));
	тзУникальныеУведомления.Колонки.Добавить("Получатель");
	Для Каждого ТекСтрока Из ВыбранныеСтроки Цикл
		УведомлениеИзменено = Ложь;
		УведомлениеМенеджерЗаписи = РегистрыСведений.уатОчередьУведомлений_уэ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(УведомлениеМенеджерЗаписи, ТекСтрока);
		УведомлениеМенеджерЗаписи.Прочитать();
		
		ПараметрыСообщения = Новый Структура("ДополнительныйДокумент, GUIDСтрокиМЛ, ДатаУстановкиСтатуса, СтатусДокумента, УбытиеПлан, ГрузовоеМесто");
		ЗаполнитьЗначенияСвойств(ПараметрыСообщения, УведомлениеМенеджерЗаписи);
		
		// Заполнение текста сообщения (и темы, если это email)
		Если Не ЗначениеЗаполнено(УведомлениеМенеджерЗаписи.ТекстСообщения)
			Или (УведомлениеМенеджерЗаписи.ПравилоФормированияУведомлений.ВидУведомления = Справочники.уатСпособыВзаимодействий_уэ.ЭлектронноеПисьмо 
			И Не ЗначениеЗаполнено(УведомлениеМенеджерЗаписи.ТемаПисьма)) Тогда
			ПараметрыСообщения = Новый Структура("ДополнительныйДокумент, GUIDСтрокиМЛ, ДатаУстановкиСтатуса, СтатусДокумента, УбытиеПлан, ГрузовоеМесто");
			ЗаполнитьЗначенияСвойств(ПараметрыСообщения, УведомлениеМенеджерЗаписи);
			Сообщение = ШаблоныСообщений.СформироватьСообщение(
							УведомлениеМенеджерЗаписи.ПравилоФормированияУведомлений.ШаблонСообщения,
							УведомлениеМенеджерЗаписи.Документ,
							Новый УникальныйИдентификатор,
							ПараметрыСообщения
						);
			Если Не ЗначениеЗаполнено(УведомлениеМенеджерЗаписи.ТекстСообщения) Тогда
				УведомлениеМенеджерЗаписи.ТекстСообщения = Сообщение.Текст;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(УведомлениеМенеджерЗаписи.ТемаПисьма) Тогда
				УведомлениеМенеджерЗаписи.ТемаПисьма = Сообщение.Тема;
			КонецЕсли;
			УведомлениеИзменено = Истина;
		КонецЕсли;
		
		ПараметрыПоиска = Новый Структура("ТекстСообщения, ТемаПисьма, Получатель, ВидУведомления");
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, УведомлениеМенеджерЗаписи);
		ПараметрыПоиска.ВидУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УведомлениеМенеджерЗаписи.ПравилоФормированияУведомлений, "ВидУведомления");
		
		Если тзУникальныеУведомления.НайтиСтроки(ПараметрыПоиска).Количество() > 0 Тогда
			// Сообщение не уникально
			УведомлениеМенеджерЗаписи.Удалить();
		Иначе
			НовоеУникальноеУведомление = тзУникальныеУведомления.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеУникальноеУведомление, ПараметрыПоиска);
			Если УведомлениеИзменено Тогда 
				УведомлениеМенеджерЗаписи.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ВыбранныеСтроки Цикл
		УведомлениеМенеджерЗаписи = РегистрыСведений.уатОчередьУведомлений_уэ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(УведомлениеМенеджерЗаписи, ТекСтрока);
		УведомлениеМенеджерЗаписи.Прочитать();
		Если УведомлениеМенеджерЗаписи.Выбран() Тогда 
			уатОбщегоНазначения_уэ.ОбработатьУведомление(УведомлениеМенеджерЗаписи);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

