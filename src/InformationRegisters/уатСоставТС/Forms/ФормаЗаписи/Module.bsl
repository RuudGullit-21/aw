
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Запись.ВСоставе) И Параметры.Свойство("ВСоставе") Тогда
		Запись.ВСоставе = Параметры.ВСоставе;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Запись.ВСоставе = Запись.ТС Тогда
		ТекстОшибки = НСтр("en='You cannot specify as part of vehicle or equipment itself.';ru='Нельзя указывать в составе ТС или оборудование само на себя.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	уатСоставТС.ТС.Ссылка КАК ТССсылка,
	|	уатСоставТС.ВСоставе.Ссылка КАК ВСоставеСсылка
	|ИЗ
	|	РегистрСведений.уатСоставТС КАК уатСоставТС
	|ГДЕ
	|	уатСоставТС.ТС = &ПроверяемоеТС";
	
	Запрос.УстановитьПараметр("ПроверяемоеТС", Запись.ТС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если (Выборка.ВСоставеСсылка <> Запись.ВСоставе) Тогда
			ТекстОшибки = "Невозможно произвести операцию. ТС """ + Выборка.ТССсылка + """ уже находится в составе ТС """ + Выборка.ВСоставеСсылка + """!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Прицеп", Истина);
	СтруктураОтбора.Вставить("ТС",     Запись.ВСоставе);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Запись.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Прицеп", Истина);
	СтруктураОтбора.Вставить("ТС",     Запись.ВСоставе);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Прицеп", Истина);
	СтруктураОтбора.Вставить("ТС",     Запись.ВСоставе);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ВСоставеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Запись.ВСоставе, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВСоставеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВСоставеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти
