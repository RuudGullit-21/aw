#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СтарыйНабор = РегистрыСведений.уатСвязанныеДокументыЭПД.СоздатьНаборЗаписей();
	Для Каждого ЭлементОтбора Из Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			СтарыйНабор.Отбор[ЭлементОтбора.Имя].Установить(ЭлементОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	СтарыйНабор.Прочитать();
	
	ДокументыВНаборе = Новый Массив(); 
	СоответвиеЭПД    = Новый Соответствие();
	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл  
		Если ДокументыВНаборе.Найти(СтрокаНабора.ЗаказНаТС) = Неопределено Тогда
			ДокументыВНаборе.Добавить(СтрокаНабора.ЗаказНаТС); 
		КонецЕсли;
	КонецЦикла; 
	
	Для Каждого СтрокаНабора Из СтарыйНабор Цикл  
		Если ДокументыВНаборе.Найти(СтрокаНабора.ЗаказНаТС) = Неопределено Тогда
			ДокументыВНаборе.Добавить(СтрокаНабора.ЗаказНаТС); 
		КонецЕсли;
		Если ЭтотОбъект.Количество() = 0 Тогда   
			ДокОбъект = СоответвиеЭПД.Получить(СтрокаНабора.ЭПД);
			Если ДокОбъект = Неопределено 
				И ЗначениеЗаполнено(СтрокаНабора.ЭПД) Тогда 
				ДокОбъект = СтрокаНабора.ЭПД.ПолучитьОбъект();
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаНабора.ЭПД) 
				ИЛИ ДокОбъект = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТекСтрокиЗаказ = ДокОбъект.ДокументыОснования.НайтиСтроки(
				Новый Структура("ДокументОснование", СтрокаНабора.ЗаказНаТС));
			ТекСтрокиРейс = ДокОбъект.ДокументыОснования.НайтиСтроки(
				Новый Структура("ДокументОснование", СтрокаНабора.Рейс));
			Если ТекСтрокиЗаказ.Количество() <> 0 
				ИЛИ ТекСтрокиРейс.Количество() <> 0 Тогда 
				Для Каждого ТекСтрока Из ТекСтрокиЗаказ Цикл 
					ДокОбъект.ДокументыОснования.Удалить(ТекСтрока);
				КонецЦикла;
				Для Каждого ТекСтрока Из ТекСтрокиРейс Цикл 
					ДокОбъект.ДокументыОснования.Удалить(ТекСтрока);
				КонецЦикла;
				СоответвиеЭПД.Вставить(СтрокаНабора.ЭПД, ДокОбъект);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Для Каждого ТекСтрока Из СоответвиеЭПД Цикл
		Попытка    
			ТекСтрока.Значение.ДополнительныеСвойства.Вставить("НеПересчитывать", Истина);
			ТекСтрока.Значение.Записать(); 
		Исключение
		КонецПопытки;
	КонецЦикла;

	ДополнительныеСвойства.Вставить("ДокументыВНаборе", ДокументыВНаборе);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат; 
	КонецЕсли;
	
	ДокументыВНаборе = Новый ТаблицаЗначений();
	ДокументыВНаборе.Колонки.Добавить("Документ",
		Новый ОписаниеТипов("ДокументСсылка.уатЗаказГрузоотправителя"));
	
	Для Каждого ТекДокумент Из ДополнительныеСвойства.ДокументыВНаборе Цикл
		НоваяСтрока = ДокументыВНаборе.Добавить();
		НоваяСтрока.Документ = ТекДокумент;
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументыВНаборе", ДокументыВНаборе);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументыВНаборе.Документ КАК Документ
	               |ПОМЕСТИТЬ втДокументыВНаборе
	               |ИЗ
	               |	&ДокументыВНаборе КАК ДокументыВНаборе
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	втДокументыВНаборе.Документ КАК Документ,
	               |	ЕСТЬNULL(уатСвязанныеДокументыЭПД.ЭПД, """") КАК ЭПД,
	               |	ЕСТЬNULL(СостоянияПоОбъектамУчетаЭДО.ПредставлениеСостояния, """") КАК ПредставлениеСостояния,
	               |	СостоянияПоОбъектамУчетаЭДО.СостояниеЭДО КАК СостояниеЭДО
	               |ИЗ
	               |	втДокументыВНаборе КАК втДокументыВНаборе
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСвязанныеДокументыЭПД КАК уатСвязанныеДокументыЭПД
	               |		ПО (втДокументыВНаборе.Документ = уатСвязанныеДокументыЭПД.ЗаказНаТС
	               |				ИЛИ втДокументыВНаборе.Документ = уатСвязанныеДокументыЭПД.Рейс)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПоОбъектамУчетаЭДО КАК СостоянияПоОбъектамУчетаЭДО
	               |		ПО уатСвязанныеДокументыЭПД.ЭПД = СостоянияПоОбъектамУчетаЭДО.СсылкаНаОбъект";
	Попытка
		
		Основания = Запрос.Выполнить().Выгрузить();
		
		Для Каждого ТекущаяСтрока Из ДокументыВНаборе Цикл
			
			Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
				Продолжить;
			КонецЕсли;
			
			ОтборЭД = Новый Структура("Документ", ТекущаяСтрока.Документ);
			ОснованияЭД = Основания.НайтиСтроки(ОтборЭД);
			
			ПредставлениеЭПД       = "";
			ПредставлениеСостояния = "";
			СостояниеЭДО           = "";
			ЭПД                    = "";
			
			Если ЗначениеЗаполнено(ОснованияЭД) Тогда 
				КоличествоОснований = ОснованияЭД.Количество();
				Если КоличествоОснований = 1 Тогда
					ПредставлениеЭПД = Строка(ОснованияЭД[0].ЭПД);
				Иначе
					ШаблонСтроки = НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документов'");
					ПредставлениеЭПД = СтрокаСЧислом(ШаблонСтроки, КоличествоОснований, ВидЧисловогоЗначения.Количественное);
				КонецЕсли;
				
				Если КоличествоОснований > 0 Тогда  
					ПредставлениеСостояния = ОснованияЭД[0].ПредставлениеСостояния;
					СостояниеЭДО           = ОснованияЭД[0].СостояниеЭДО;
					ЭПД                    = ОснованияЭД[0].ЭПД;
				КонецЕсли;
			КонецЕсли;
		
			НаборЗаписей = РегистрыСведений.уатТекущееСостояниеЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументПеревозки.Установить(ТекущаяСтрока.Документ); 
			НаборЗаписей.Прочитать(); 
			
			Если НаборЗаписей.Количество() > 0 Тогда 
				Запись = НаборЗаписей[0];
				Если ПредставлениеЭПД = "" Тогда
					НаборЗаписей.Удалить(Запись);
					Продолжить;
				КонецЕсли;
			Иначе
				Запись = НаборЗаписей.Добавить();
				Запись.ДокументПеревозки = ТекущаяСтрока.Документ;
				Если ПредставлениеЭПД = "" Тогда
					Продолжить;
				КонецЕсли;
				Запись.ПредставлениеСостояния = ПредставлениеСостояния;
				Запись.СостояниеЭДО           = СостояниеЭДО;
				Запись.ЭПД                    = ЭПД;

			КонецЕсли;
			Запись.ПредставлениеЭПД = ПредставлениеЭПД;
			НаборЗаписей.Записать();
		КонецЦикла;
	Исключение
		Информация = ИнформацияОбОшибке();
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
