#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает свойства, которые должны быть заполнены для варианты работы процедуры "ОтразитьСвойстваМаршрута()" по маршруту-структуре.
//	Имеются обязательные и не обязательные свойства. Заполнение осуществляется разработчиком в переопределяемом модуле.
//
// Возвращаемое значение:
//	Структура - содержит:
//		* Ссылка			   - ОпределяемыйТип.ItobПутевойЛист - Ссылка на маршрутное задание.
//		* ТранспортноеСредство - ОпределяемыйТип.ItobТранспортноеСредство - транспортное средство.
//		* Водитель 			   - ОпределяемыйТип.ItobВодитель - водитель.
//		* Терминал			   - ОпределяемыйТип.ItobТерминал - терминал.
//		* Организация 		   - ОпределяемыйТип.Организация - организация.
//		* ДатаВыезда		   - Дата - Плановая дата выезда.
//		* ДатаВозвращения	   - Дата - Плановая дата возвращения.  
//		* ТочкаНачалаМаршрута  - ОпределяемыйТип.ItobПунктНазначения - (Необязательное) - Точки начала и конца обрабатываются отдельно и не отображаются в аналитических отчетах. 
//																						  Ими может быть, например, гараж у ТС.
//		* ТочкаКонцаМаршрута   - ОпределяемыйТип.ItobПунктНазначения - (Необязательное).
//		* ДатаВыездаФакт	   - Дата - (Необязательное) - Фактическая дата выезда. Перебивает плановую при работе с план-фактом. 
//		* ДатаВозвращенияФакт  - Дата - (Необязательное) - Фактическая дата возвращения. Перебивает плановую при работе с план-фактом. 
//		* ДлинаПутиПлан 	   - Число - (Необязательное) - Длина планового пути в километрах.
//
Функция ШаблонСвойствМаршрута() Экспорт
	
	Свойства = Новый Структура;
	
	СвойстваТаблицей = ШаблонТаблицыСвойствМаршрутногоЗадания();
	Для каждого Колонка Из СвойстваТаблицей.Колонки Цикл
		Свойства.Вставить(Колонка.Имя);	
	КонецЦикла;
	
	
	Возврат Свойства;
	
КонецФункции
 
// Переносит свойства из документа в регистр, для абстракции.
// Примечание: в случае удаления проведения достаточно передать ссылку на Маршрут 
// (даже если в документе нет требуемых реквизитов).
//
// Параметры:
//	Маршрут - ДокументСсылка, Структура - Ссылка на документ, в котором есть все реквизиты,
//			  аналогичные перечисленным в функции ШаблонСвойствМаршрута(),
//			  либо заполненная возвращаемая функцией ШаблонСвойствМаршрута() структура.
//	Отказ - Булево - Стандартный признак отказа от записи.
//	УдалениеПроведения - Булево - Признак того, что следует очистить движения по переданному маршруту.
//
//
Процедура ОтразитьСвойстваМаршрута(Маршрут, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	МаршрутноеЗаданиеСсылка = ?(ТипЗнч(Маршрут) = Тип("Структура"), Маршрут.Ссылка, Маршрут);
	
	Если УдалениеПроведения Тогда		                                                    	
		Набор = РегистрыСведений.ItobСвойстваМаршрутныхЗаданий.СоздатьНаборЗаписей();
		Набор.Отбор.МаршрутноеЗадание.Установить(МаршрутноеЗаданиеСсылка);
		Набор.Записать(); 
		
		Возврат;
	КонецЕсли;
	 	
	СтруктураПоиска = Новый Структура("МаршрутноеЗадание, ДатаВыезда, ДатаВозвращения, 
									  |Организация, ТранспортноеСредство, Водитель, Терминал, ТочекПлан, ТочекФакт,
									  |ДатаВыездаФактРасчетная, ДатаВозвращенияФактРасчетная, ЗаданПунктВыезда, ЗаданПунктВозвращения,
									  |ДатаВыездаФактРучнойВвод, ДатаВозвращенияФактРучнойВвод, ДлинаПутиПлан");
	
	ТаблицаСвойствМаршрутов = СоздатьТаблицуСвойствМаршрута(Маршрут);
	ТаблицаПредыдущихСвойствМаршрутов = СоздатьТаблицуПредыдущихСвойствМаршрута(МаршрутноеЗаданиеСсылка);
	Для каждого СтрокаТаблицы Из ТаблицаСвойствМаршрутов Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицы);
		МассивДействующихСвойств = ТаблицаПредыдущихСвойствМаршрутов.НайтиСтроки(СтруктураПоиска);
		
		СостояниеИзменено = НЕ Булево(МассивДействующихСвойств.Количество());
		Если СостояниеИзменено Тогда	
			Набор = РегистрыСведений.ItobСвойстваМаршрутныхЗаданий.СоздатьНаборЗаписей();
			Набор.Отбор.МаршрутноеЗадание.Установить(СтрокаТаблицы.МаршрутноеЗадание);
			
			СтрокаНабора = Набор.Добавить();
			ОкруглитьПроценты(СтрокаТаблицы.ПроцентВыполнения);
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТаблицы);			
			
			Попытка
				Набор.Записать();	
			Исключение	
				ТекстСообщения = НСтр("ru = 'Не удалось отразить свойства маршрута: %Ссылка% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", СтрокаТаблицы.МаршрутноеЗадание);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
										 УровеньЖурналаРегистрации.Ошибка,
										 Метаданные.Документы[ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ПутевойЛист")], 
										 СтрокаТаблицы.МаршрутноеЗадание, 
										 ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ШаблонТаблицыСвойствМаршрутногоЗадания()
	
	Шаблон = Новый ТаблицаЗначений;
	Шаблон.Колонки.Добавить("Ссылка", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("ПутевойЛист"));
	Шаблон.Колонки.Добавить("ТранспортноеСредство", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("ТранспортныеСредства"));
	Шаблон.Колонки.Добавить("Водитель", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("Водители"));
	Шаблон.Колонки.Добавить("Терминал", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("Терминалы"));
	Шаблон.Колонки.Добавить("Организация", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("Организации"));
	Шаблон.Колонки.Добавить("ДатаВыезда", Новый ОписаниеТипов("Дата"));   // Плановая дата выезда.
	Шаблон.Колонки.Добавить("ДатаВозвращения", Новый ОписаниеТипов("Дата")); 	// Плановая дата возвращения.
	
	// Точки начала и конца обрабатываются отдельно и не отображаются в аналитических отчетах. Ими может быть, например, гараж у ТС.
	Шаблон.Колонки.Добавить("ТочкаНачалаМаршрута", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("ПунктыНазначения"));
	Шаблон.Колонки.Добавить("ТочкаКонцаМаршрута", ItobВызовСервераПовтИсп.ОписаниеТиповПоИмени("ПунктыНазначения"));
	
	Шаблон.Колонки.Добавить("ДатаВыездаФакт", Новый ОписаниеТипов("Дата")); // Фактическая дата выезда. Перебивает плановую при работе с план-фактом. 
	Шаблон.Колонки.Добавить("ДатаВозвращенияФакт", Новый ОписаниеТипов("Дата"));  // Фактическая дата возвращения. Перебивает плановую при работе с план-фактом.
	
	Шаблон.Колонки.Добавить("ДлинаПутиПлан", Новый ОписаниеТипов("Число"));
	
	
	Возврат Шаблон;
	
КонецФункции
 
Функция СоздатьТаблицуСвойствМаршрута(Маршрут)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойПунктНазначения", ItobВызовСервераПовтИсп.ПустаяСсылкаПоИмени("ПунктыНазначения"));
	
	Если (ТипЗнч(Маршрут) = Тип("Структура")) Тогда
		ТекстЗапросаНачало = ТекстЗапросаДанныеМаршрутногоЗадания_ПоСтруктуреСвойств();
		
		СвойстваТаблицей = ШаблонТаблицыСвойствМаршрутногоЗадания();
		ЗаполнитьЗначенияСвойств(СвойстваТаблицей.Добавить(), Маршрут);
		Запрос.УстановитьПараметр("СвойстваМаршрутногоЗаданияТаблицей", СвойстваТаблицей);	
	Иначе
		ТекстЗапросаНачало= ТекстЗапросаДанныеМаршрутногоЗадания_ПоСсылке();
		
		Запрос.УстановитьПараметр("МаршрутноеЗадание", Маршрут);
	КонецЕсли; 
		
	ТекстЗапросаСередина = 
	"
	|;
	|///////////////////////////
	|";

	ТекстЗапросаКонец = ТекстЗапросаФормированиеТаблицыСвойствМаршрута();	
		
	
	Запрос.Текст = ТекстЗапросаНачало + ТекстЗапросаСередина + ТекстЗапросаКонец;
	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СоздатьТаблицуПредыдущихСвойствМаршрута(МаршрутноеЗадание)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МаршрутноеЗадание", МаршрутноеЗадание);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвойстваМаршрутныхЗаданий.МаршрутноеЗадание КАК МаршрутноеЗадание,
	|	СвойстваМаршрутныхЗаданий.ДатаВыезда КАК ДатаВыезда,
	|	СвойстваМаршрутныхЗаданий.ДатаВозвращения КАК ДатаВозвращения,
	|	СвойстваМаршрутныхЗаданий.Организация КАК Организация,
	|	СвойстваМаршрутныхЗаданий.ТранспортноеСредство КАК ТранспортноеСредство,
	|	СвойстваМаршрутныхЗаданий.Водитель КАК Водитель,
	|	СвойстваМаршрутныхЗаданий.Терминал КАК Терминал,
	|	СвойстваМаршрутныхЗаданий.ТочекПлан КАК ТочекПлан,
	|	СвойстваМаршрутныхЗаданий.ТочекФакт КАК ТочекФакт,
	|	СвойстваМаршрутныхЗаданий.ДатаВыездаФактРасчетная КАК ДатаВыездаФактРасчетная,
	|	СвойстваМаршрутныхЗаданий.ДатаВозвращенияФактРасчетная КАК ДатаВозвращенияФактРасчетная,
	|	СвойстваМаршрутныхЗаданий.ЗаданПунктВыезда КАК ЗаданПунктВыезда,
	|	СвойстваМаршрутныхЗаданий.ЗаданПунктВозвращения КАК ЗаданПунктВозвращения,
	|	СвойстваМаршрутныхЗаданий.ДатаВыездаФактРучнойВвод КАК ДатаВыездаФактРучнойВвод,
	|	СвойстваМаршрутныхЗаданий.ДатаВозвращенияФактРучнойВвод КАК ДатаВозвращенияФактРучнойВвод,
	|	СвойстваМаршрутныхЗаданий.ДлинаПутиПлан КАК ДлинаПутиПлан
	|ИЗ
	|	РегистрСведений.ItobСвойстваМаршрутныхЗаданий КАК СвойстваМаршрутныхЗаданий
	|ГДЕ
	|	СвойстваМаршрутныхЗаданий.МаршрутноеЗадание = &МаршрутноеЗадание";
	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ОкруглитьПроценты(ОкругляемоеЧисло)
	
	Если ОкругляемоеЧисло > 99
		И ОкругляемоеЧисло < 100 Тогда
		
		ОкругляемоеЧисло = 99;	
	КонецЕсли;
	
	Если ОкругляемоеЧисло > 0
		И ОкругляемоеЧисло < 1 Тогда
		
		ОкругляемоеЧисло = 1;	
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаДанныеМаршрутногоЗадания_ПоСтруктуреСвойств()
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СвойстваМаршрутногоЗаданияТаблицей.Ссылка КАК Ссылка,
	|	СвойстваМаршрутногоЗаданияТаблицей.ТранспортноеСредство КАК ТранспортноеСредство,
	|	СвойстваМаршрутногоЗаданияТаблицей.Водитель КАК Водитель,
	|	СвойстваМаршрутногоЗаданияТаблицей.Терминал КАК Терминал,
	|	СвойстваМаршрутногоЗаданияТаблицей.Организация КАК Организация,
	|	СвойстваМаршрутногоЗаданияТаблицей.ДатаВыезда КАК ДатаВыезда,
	|	СвойстваМаршрутногоЗаданияТаблицей.ДатаВозвращения КАК ДатаВозвращения,
	|	СвойстваМаршрутногоЗаданияТаблицей.ТочкаНачалаМаршрута КАК ТочкаНачалаМаршрута,
	|	СвойстваМаршрутногоЗаданияТаблицей.ТочкаКонцаМаршрута КАК ТочкаКонцаМаршрута,
	|	СвойстваМаршрутногоЗаданияТаблицей.ДатаВыездаФакт КАК ДатаВыездаФакт,
	|	СвойстваМаршрутногоЗаданияТаблицей.ДатаВозвращенияФакт КАК ДатаВозвращенияФакт,
	|	СвойстваМаршрутногоЗаданияТаблицей.ДлинаПутиПлан КАК ДлинаПутиПлан
	|ПОМЕСТИТЬ втДанныеМаршрутногоЗадания
	|ИЗ
	|	&СвойстваМаршрутногоЗаданияТаблицей КАК СвойстваМаршрутногоЗаданияТаблицей";	
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеМаршрутногоЗадания_ПоСсылке()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументМаршрутноеЗадание.Ссылка КАК Ссылка,
	|	ДокументМаршрутноеЗадание.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ДокументМаршрутноеЗадание.Водитель КАК Водитель,
	|	ДокументМаршрутноеЗадание.ТерминалДляПланФакта КАК Терминал,
	|	ДокументМаршрутноеЗадание.Организация КАК Организация,
	|	ДокументМаршрутноеЗадание.ДатаВыезда КАК ДатаВыезда,
	|	ДокументМаршрутноеЗадание.ДатаВозвращения КАК ДатаВозвращения,
	|	ДокументМаршрутноеЗадание.ТочкаНачалаМаршрута КАК ТочкаНачалаМаршрута,
	|	ДокументМаршрутноеЗадание.ТочкаКонцаМаршрута КАК ТочкаКонцаМаршрута,
	|	ДокументМаршрутноеЗадание.ДатаВыездаФакт КАК ДатаВыездаФакт,
	|	ДокументМаршрутноеЗадание.ДатаВозвращенияФакт КАК ДатаВозвращенияФакт,
	|	ДокументМаршрутноеЗадание.ДлинаПутиПлан КАК ДлинаПутиПлан
	|ПОМЕСТИТЬ втДанныеМаршрутногоЗадания
	|ИЗ
	|	Документ.ItobПутевойЛист КАК ДокументМаршрутноеЗадание
	|ГДЕ
	|	ДокументМаршрутноеЗадание.Ссылка = &МаршрутноеЗадание";
	
	ItobПутевыеЛисты.УстановитьАктуальноеИмяПутевогоЛистаВТекстеЗапроса(ТекстЗапроса);
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаФормированиеТаблицыСвойствМаршрута()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втДанныеМаршрутногоЗадания.Ссылка КАК МаршрутноеЗадание,
	|	втДанныеМаршрутногоЗадания.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втДанныеМаршрутногоЗадания.Водитель КАК Водитель,
	|	втДанныеМаршрутногоЗадания.Терминал КАК Терминал,
	|	втДанныеМаршрутногоЗадания.ДатаВыезда КАК ДатаВыезда,
	|	втДанныеМаршрутногоЗадания.ДатаВозвращения КАК ДатаВозвращения,
	|	втДанныеМаршрутногоЗадания.Организация КАК Организация,
	|	НЕ втДанныеМаршрутногоЗадания.ТочкаНачалаМаршрута = &ПустойПунктНазначения КАК ЗаданПунктВыезда,
	|	НЕ втДанныеМаршрутногоЗадания.ТочкаКонцаМаршрута = &ПустойПунктНазначения КАК ЗаданПунктВозвращения,
	|	втДанныеМаршрутногоЗадания.ДатаВыездаФакт КАК ДатаВыездаФактРучнойВвод,
	|	втДанныеМаршрутногоЗадания.ДатаВозвращенияФакт КАК ДатаВозвращенияФактРучнойВвод,
	|	втДанныеМаршрутногоЗадания.ДлинаПутиПлан КАК ДлинаПутиПлан,
	|	МаршрутыТочки.ИдентификаторТочки КАК ИдентификаторТочки,
	|	МаршрутыТочки.ТипТочки = ЗНАЧЕНИЕ(Перечисление.ItobТипыТочекМаршрута.ТочкаНачала) КАК ЭтоТочкаНачала,
	|	МаршрутыТочки.ТипТочки = ЗНАЧЕНИЕ(Перечисление.ItobТипыТочекМаршрута.ТочкаКонца) КАК ЭтоТочкаКонца,
	|	НЕ МаршрутыТочки.ТипТочки В (ЗНАЧЕНИЕ(Перечисление.ItobТипыТочекМаршрута.ТочкаНачала), ЗНАЧЕНИЕ(Перечисление.ItobТипыТочекМаршрута.ТочкаКонца)) КАК ЭтоТочкаСостава
	|ПОМЕСТИТЬ втМаршрутыТочки
	|ИЗ
	|	втДанныеМаршрутногоЗадания КАК втДанныеМаршрутногоЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ItobМаршрутыТочки КАК МаршрутыТочки
	|		ПО втДанныеМаршрутногоЗадания.Ссылка = МаршрутыТочки.МаршрутноеЗадание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМаршрутыТочки.МаршрутноеЗадание КАК МаршрутноеЗадание,
	|	втМаршрутыТочки.ДатаВыезда КАК ДатаВыезда,
	|	втМаршрутыТочки.ДатаВозвращения КАК ДатаВозвращения,
	|	втМаршрутыТочки.Организация КАК Организация,
	|	втМаршрутыТочки.ТранспортноеСредство КАК ТранспортноеСредство,
	|	втМаршрутыТочки.Водитель КАК Водитель,
	|	втМаршрутыТочки.Терминал КАК Терминал,
	|	ЕСТЬNULL(МИНИМУМ(ВЫБОР
	|				КОГДА втМаршрутыТочки.ЗаданПунктВыезда
	|					ТОГДА ВЫБОР
	|							КОГДА втМаршрутыТочки.ЭтоТочкаНачала
	|								ТОГДА ФактПосещенияСоставаПутевогоЛиста.Период
	|						КОНЕЦ
	|				ИНАЧЕ ФактПосещенияСоставаПутевогоЛиста.Период
	|			КОНЕЦ), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыездаФактРасчетная,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА втМаршрутыТочки.ЗаданПунктВозвращения
	|					ТОГДА ВЫБОР
	|							КОГДА втМаршрутыТочки.ЭтоТочкаКонца
	|								ТОГДА ФактПосещенияСоставаПутевогоЛиста.Период
	|						КОНЕЦ
	|				ИНАЧЕ ФактПосещенияСоставаПутевогоЛиста.Период
	|			КОНЕЦ), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВозвращенияФактРасчетная,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА втМаршрутыТочки.ЭтоТочкаСостава
	|				ТОГДА втМаршрутыТочки.ИдентификаторТочки
	|		КОНЕЦ) КАК ТочекПлан,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА втМаршрутыТочки.ЭтоТочкаСостава
	|				ТОГДА ФактПосещенияСоставаПутевогоЛиста.АналитикаТочки
	|		КОНЕЦ) КАК ТочекФакт,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА втМаршрутыТочки.ЭтоТочкаСостава
	|						ТОГДА втМаршрутыТочки.ИдентификаторТочки
	|				КОНЕЦ) > 0
	|			ТОГДА ВЫРАЗИТЬ(100 * КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|							КОГДА втМаршрутыТочки.ЭтоТочкаСостава
	|								ТОГДА ФактПосещенияСоставаПутевогоЛиста.АналитикаТочки
	|						КОНЕЦ) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|							КОГДА втМаршрутыТочки.ЭтоТочкаСостава
	|								ТОГДА втМаршрутыТочки.ИдентификаторТочки
	|						КОНЕЦ) КАК ЧИСЛО(10, 1))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентВыполнения,
	|	втМаршрутыТочки.ЗаданПунктВыезда КАК ЗаданПунктВыезда,
	|	втМаршрутыТочки.ЗаданПунктВозвращения КАК ЗаданПунктВозвращения,
	|	втМаршрутыТочки.ДатаВыездаФактРучнойВвод КАК ДатаВыездаФактРучнойВвод,
	|	втМаршрутыТочки.ДатаВозвращенияФактРучнойВвод КАК ДатаВозвращенияФактРучнойВвод,
	|	втМаршрутыТочки.ДлинаПутиПлан КАК ДлинаПутиПлан
	|ИЗ
	|	втМаршрутыТочки КАК втМаршрутыТочки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobФактПосещенияСоставаПутевогоЛиста КАК ФактПосещенияСоставаПутевогоЛиста
	|		ПО втМаршрутыТочки.МаршрутноеЗадание = ФактПосещенияСоставаПутевогоЛиста.ПутевойЛист
	|			И втМаршрутыТочки.ИдентификаторТочки = ФактПосещенияСоставаПутевогоЛиста.АналитикаТочки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА втМаршрутыТочки.ЭтоТочкаНачала
	|				ТОГДА ЕСТЬNULL(ФактПосещенияСоставаПутевогоЛиста.Событие, ЗНАЧЕНИЕ(Перечисление.ItobСобытияКонтроляПлана.Выезд)) = ЗНАЧЕНИЕ(Перечисление.ItobСобытияКонтроляПлана.Выезд)
	|			ИНАЧЕ ЕСТЬNULL(ФактПосещенияСоставаПутевогоЛиста.Событие, ЗНАЧЕНИЕ(Перечисление.ItobСобытияКонтроляПлана.Посещение)) = ЗНАЧЕНИЕ(Перечисление.ItobСобытияКонтроляПлана.Посещение)
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	втМаршрутыТочки.МаршрутноеЗадание,
	|	втМаршрутыТочки.ДатаВыезда,
	|	втМаршрутыТочки.ДатаВозвращения,
	|	втМаршрутыТочки.ТранспортноеСредство,
	|	втМаршрутыТочки.Водитель,
	|	втМаршрутыТочки.Терминал,
	|	втМаршрутыТочки.Организация,
	|	втМаршрутыТочки.ЗаданПунктВыезда,
	|	втМаршрутыТочки.ЗаданПунктВозвращения,
	|	втМаршрутыТочки.ДатаВыездаФактРучнойВвод,
	|	втМаршрутыТочки.ДатаВозвращенияФактРучнойВвод,
	|	втМаршрутыТочки.ДлинаПутиПлан";
	
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти 

#КонецЕсли
