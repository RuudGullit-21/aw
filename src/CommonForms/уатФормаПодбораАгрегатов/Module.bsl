
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Склад") Тогда
		Склад = Параметры.Склад;
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаРасчетов") Тогда
		ДатаРасчетов = Параметры.ДатаРасчетов;
	КонецЕсли;
		
	Если Параметры.Свойство("Команда") Тогда
		КомандаПодбора = Параметры.Команда;
		Если КомандаПодбора = "ПодборВТабличнуюЧастьШины" Тогда
			УстановитьОтборПоШинамАккумуляторам(Справочники.уатТипыАгрегатов.Шина);
		ИначеЕсли КомандаПодбора = "ПодборВТабличнуюЧастьАккумуляторы" Тогда
			УстановитьОтборПоШинамАккумуляторам(Справочники.уатТипыАгрегатов.Аккумулятор);
		Иначе
			СписокТиповАгрегата = Новый Массив();
			СписокТиповАгрегата.Добавить(Справочники.уатТипыАгрегатов.Аккумулятор);
			СписокТиповАгрегата.Добавить(Справочники.уатТипыАгрегатов.Шина);
			УстановитьОтборПоПрочимАгрегатам(СписокТиповАгрегата);
		КонецЕсли;
	КонецЕсли;
	
	Настройки = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить("уатФормаПодбораАгрегатов",);
	Если Настройки <> Неопределено Тогда
		Если Настройки.Свойство("РежимПолученияОстатков") Тогда
			РежимПолученияОстатков = Настройки.РежимПолученияОстатков;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаРасчетов) Тогда
		ДатаРасчетов = ТекущаяДатаСеанса();
		Элементы.РежимПолученияОстатков.Доступность = Ложь;
		РежимПолученияОстатковПред = ?(ЗначениеЗаполнено(РежимПолученияОстатков), РежимПолученияОстатков, Перечисления.уатРежимПолученияОстатков.НаТекущуюДату);
		РежимПолученияОстатков = Перечисления.уатРежимПолученияОстатков.НаТекущуюДату;
		Элементы.РежимПолученияОстатков.СписокВыбора.Очистить();
		Элементы.РежимПолученияОстатков.СписокВыбора.Добавить(Перечисления.уатРежимПолученияОстатков.НаТекущуюДату, "на текущую дату", Истина);
		Элементы.РежимПолученияОстатков.СписокВыбора.Добавить(Перечисления.уатРежимПолученияОстатков.НаДатуДокумента, "на дату документа", Ложь);
	Иначе
		Элементы.РежимПолученияОстатков.СписокВыбора.Очистить();
		Элементы.РежимПолученияОстатков.СписокВыбора.Добавить(Перечисления.уатРежимПолученияОстатков.НаТекущуюДату, "на текущую дату");
		Элементы.РежимПолученияОстатков.СписокВыбора.Добавить(Перечисления.уатРежимПолученияОстатков.НаДатуДокумента, "на дату документа (" + Строка(ДатаРасчетов) + ")");
		Если Не ЗначениеЗаполнено(РежимПолученияОстатков) Тогда
			РежимПолученияОстатков = Перечисления.уатРежимПолученияОстатков.НаТекущуюДату;
		КонецЕсли;
	КонецЕсли;
	
	//Элементы.ТолькоОстатки.Видимость = ЗначениеЗаполнено(Склад);
	Элементы.ТолькоОстатки.Заголовок = "Только в наличии" +
		?(ЗначениеЗаполнено(Склад), " на складе """ + Склад + """", " на всех складах");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьСписокСОстатками();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда 
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТолькоОстаткиПриИзменении(Элемент)
	СписокАгрегатов.Параметры.УстановитьЗначениеПараметра("ТолькоОстатки", ТолькоОстатки);
КонецПроцедуры

&НаКлиенте
Процедура РежимПолученияОстатковПриИзменении(Элемент)
	СписокАгрегатов.Параметры.УстановитьЗначениеПараметра("Дата", ПолучитьДатуОстатков(РежимПолученияОстатков, ДатаРасчетов));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_СписокАгрегатов

&НаКлиенте
Процедура СписокАгрегатовВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Команда",      КомандаПодбора);
	СтруктураПодбора.Вставить("Агрегат", Значение);
	ОповеститьОВыборе(СтруктураПодбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИеарархияАгрегатов

&НаКлиенте
Процедура ИеарархияАгрегатовПриАктивизацииСтроки(Элемент)
	УстановитьОтборПоИерархииАгрегатов(Элементы.ИеарархияАгрегатов.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ИеарархияАгрегатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УстановитьОтборПоИерархииАгрегатов(ВыбраннаяСтрока);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоШинамАккумуляторам(ЗначениеОтбора)
	
	ЭлементОтбора = СписокАгрегатов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипАгрегата");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = ЗначениеОтбора;
	
КонецПроцедуры //

&НаСервере
Процедура УстановитьОтборПоПрочимАгрегатам(ЗначениеОтбора)
	
	ЭлементОтбора = СписокАгрегатов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипАгрегата");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = ЗначениеОтбора;
	
КонецПроцедуры //

&НаСервере
Процедура УстановитьСписокСОстатками()
	
	СписокАгрегатов.ПроизвольныйЗапрос = Истина;
		
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		СписокАгрегатов.ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатСерииНоменклатуры.Наименование,
		|	уатСерииНоменклатуры.Ссылка,
		|	уатСерииНоменклатуры.Код,
		|	уатСерииНоменклатуры.СерийныйНомер,
		|	уатСерииНоменклатуры.ТипАгрегата,
		|	уатОстаткиАгрегатовОстатки.КоличествоОстаток
		|ИЗ
		|	Справочник.уатСерииНоменклатуры КАК уатСерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(&Дата, ) КАК уатОстаткиАгрегатовОстатки
		|		ПО уатСерииНоменклатуры.Ссылка = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоОстатки
		|				ТОГДА ЕСТЬNULL(уатОстаткиАгрегатовОстатки.КоличествоОстаток, 0) > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И НЕ уатСерииНоменклатуры.ЭтоГруппа";
	Иначе
		СписокАгрегатов.ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатСерииНоменклатуры.Наименование,
		|	уатСерииНоменклатуры.Ссылка,
		|	уатСерииНоменклатуры.Код,
		|	уатСерииНоменклатуры.СерийныйНомер,
		|	уатСерииНоменклатуры.ТипАгрегата,
		|	уатОстаткиАгрегатовОстатки.КоличествоОстаток
		|ИЗ
		|	Справочник.уатСерииНоменклатуры КАК уатСерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(&Дата, Склад = &Склад) КАК уатОстаткиАгрегатовОстатки
		|		ПО уатСерииНоменклатуры.Ссылка = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоОстатки
		|				ТОГДА ЕСТЬNULL(уатОстаткиАгрегатовОстатки.КоличествоОстаток, 0) > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И НЕ уатСерииНоменклатуры.ЭтоГруппа";
		
		СписокАгрегатов.Параметры.УстановитьЗначениеПараметра("Склад",Склад);
	КонецЕсли; 
	
	СписокАгрегатов.Параметры.УстановитьЗначениеПараметра("Дата", ПолучитьДатуОстатков(РежимПолученияОстатков, ДатаРасчетов));
	СписокАгрегатов.Параметры.УстановитьЗначениеПараметра("ТолькоОстатки", ТолькоОстатки);
	СписокАгрегатов.ОсновнаяТаблица = "Справочник.уатСерииНоменклатуры";	
	НайденныйЭлемент = Элементы.Найти("КоличествоОстаток");
	Если НайденныйЭлемент = Неопределено Тогда
		ПолеКоличество = Элементы.Добавить("КоличествоОстаток", Тип("ПолеФормы"), Элементы.СписокАгрегатов);
		ПолеКоличество.ПутьКДанным = "СписокАгрегатов.КоличествоОстаток";
		ПолеКоличество.Заголовок = НСтр("en='Remain';ru='Остаток'");
		ПолеКоличество.Подсказка = НСтр("en='Remain of car parts';ru='Остаток агрегатов'");
	КонецЕсли;
	
КонецПроцедуры //

&НаКлиенте
Процедура УстановитьОтборПоИерархииАгрегатов(ГруппаАгрегата)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокАгрегатов, "Ссылка",
		ГруппаАгрегата, ЗначениеЗаполнено(ГруппаАгрегата), ВидСравненияКомпоновкиДанных.ВИерархии);

КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()

	ПараметрыЗакрытия = Новый Структура;
	Если Элементы.РежимПолученияОстатков.Доступность Тогда
		ПараметрыЗакрытия.Вставить("РежимПолученияОстатков", РежимПолученияОстатков);
	Иначе
		ПараметрыЗакрытия.Вставить("РежимПолученияОстатков", РежимПолученияОстатковПред);
	КонецЕсли;
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("уатФормаПодбораАгрегатов", , ПараметрыЗакрытия);

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуОстатков(РежимПолученияОстатков, ДатаРасчетов)
	
	ДатаОстатки = ?(РежимПолученияОстатков = Перечисления.уатРежимПолученияОстатков.НаТекущуюДату, Неопределено, ДатаРасчетов);
	Возврат ДатаОстатки;
	
КонецФункции

#КонецОбласти
