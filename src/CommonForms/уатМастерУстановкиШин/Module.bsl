
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ТС", ТС);
	Параметры.Свойство("ДатаРасчетов", ДатаРасчетов);
	Параметры.Свойство("Склад", ОтборСклад);
	ТолькоОстатки = 1;
	
	СформироватьОстаткиПоНоменклатуре();
	
	Если Параметры.Свойство("Ссылка") И Параметры.Ссылка.Проведен Тогда
		ЗначениеВДанныеФормы(ШиныТС(Параметры.Ссылка), ТабличноеПолеУстановкаШины);
	Иначе
		ЗначениеВДанныеФормы(уатОбщегоНазначения.уатШиныТС(ТС, ДатаРасчетов), ТабличноеПолеУстановкаШины);
	КонецЕсли;	
	
	ТабличноеПолеУстановкаШины.Сортировать("ДатаУстановки");
	
	Для Каждого ТекСтрока Из ТабличноеПолеУстановкаШины Цикл
		НоваяСтрока = ТаблицаУстанавливаемыхШин.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.ШинаУстановлена = Истина;
	КонецЦикла;
	
	мШирина = Элементы.ГруппаТСВерхняя.Ширина;
	ИнициализацияДанныхМакетаТС();
	
	Если Параметры.Свойство("Шины") Тогда
		ЗаполнитьТаблицаУстанавливаемыхШинИзРЛ(Параметры.Шины);
		ОтрисоватьМестаУстановкиШин();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ВладелецФормы = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("en='Immediate opening for this object is prohibited!';ru='Непосредственное открытие для данного объекта запрещено!'"), 10);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ШиринаМакетаПриИзменении();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборМодельПриИзменении(Элемент)
	
	ОстаткиПоАгрегатам.Очистить();
	СформироватьОстаткиПоНоменклатуре();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	ОстаткиПоАгрегатам.Очистить();
	
	СформироватьОстаткиПоНоменклатуре();
КонецПроцедуры

&НаКлиенте
Процедура ШинаОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ШинаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
		ПараметрыПеретаскивания.Значение = Новый Структура("ПеретаскиваниеТЧ, ИмяЭлемента, МестоЗанято", Ложь, Элемент.Имя, Ложь);
		ТекМесто = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановкиИмя", Элемент.Имя));
		Если ТекМесто.Количество() <> 0 Тогда
			ПараметрыПеретаскивания.Значение.МестоЗанято = ТекМесто[0].МестоЗанято;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШинаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ШинаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	СтруктураПеретаскивания = ПараметрыПеретаскивания.Значение;
	Если ТипЗнч(СтруктураПеретаскивания) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекМестоПеретаскиванияОсь = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановкиИмя", Элемент.Имя));
	Если ТекМестоПеретаскиванияОсь.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТекМестоПеретаскивания = Неопределено;
	Для Каждого ТекМестоПерОсь Из ТекМестоПеретаскиванияОсь Цикл 
		Если ТекМестоПерОсь.МестоДоступно Тогда
			ТекМестоПеретаскивания = ТекМестоПерОсь;
			Прервать;
		Конецесли;
	КонецЦикла;
	
	Если ТекМестоПеретаскивания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураПеретаскивания.ПеретаскиваниеТЧ Тогда
		
		ТекМестоОсь = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановкиИмя", СтруктураПеретаскивания.ИмяЭлемента));
		Для Каждого ТекМесто Из ТекМестоОсь Цикл
			Если ТекМесто.МестоЗанято Тогда
				ТекМестоЭлмент = Новый Структура();
				ТекМестоЭлмент.Вставить("МестоЗанято");
				ТекМестоЭлмент.Вставить("СерияНоменклатуры");
				ЗаполнитьЗначенияСвойств(ТекМестоЭлмент, ТекМесто);
				ЗаполнитьЗначенияСвойств(ТекМесто, ТекМестоПеретаскивания, "СерияНоменклатуры, МестоЗанято");
				ЗаполнитьЗначенияСвойств(ТекМестоПеретаскивания, ТекМестоЭлмент, "СерияНоменклатуры, МестоЗанято");
				
				тчТекМесто = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекМесто.МестоУстановки));
				Если тчТекМесто.Количество() <> 0 Тогда
					Если ЗначениеЗаполнено(ТекМесто.СерияНоменклатуры) Тогда
						ЗаполнитьЗначенияСвойств(тчТекМесто[0], ТекМесто);
						тчТекМесто[0].Состояние      = ?(тчТекМесто[0].МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗАП"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе"));
					Иначе
						ТаблицаУстанавливаемыхШин.Удалить(тчТекМесто[0]);
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(ТекМесто.СерияНоменклатуры) Тогда
					тчТекМесто = ТаблицаУстанавливаемыхШин.Добавить();
					ЗаполнитьЗначенияСвойств(тчТекМесто, ТекМесто);
					тчТекМесто.Состояние      = ?(тчТекМесто.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗАП"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе"));
				КонецЕсли;
				
				тчТекМесто = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекМестоПеретаскивания.МестоУстановки));
				Если тчТекМесто.Количество() <> 0 Тогда
					ЗаполнитьЗначенияСвойств(тчТекМесто[0], ТекМестоПеретаскивания);
					тчТекМесто[0].Состояние      = ?(тчТекМесто[0].МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗАП"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе"));
				Иначе
					тчТекМесто = ТаблицаУстанавливаемыхШин.Добавить();
					ЗаполнитьЗначенияСвойств(тчТекМесто, ТекМестоПеретаскивания);
					тчТекМесто.Состояние      = ?(тчТекМесто.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗАП"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе"));
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ОтрисоватьМестаУстановкиШин();
	ИначеЕсли СтруктураПеретаскивания.ПеретаскиваниеТЧ Тогда
		
		Если ТекМестоПеретаскивания.МестоДоступно 
			И НЕ ТекМестоПеретаскивания.МестоЗанято Тогда
			ТекМестоПеретаскивания.МестоЗанято       = Истина;
			ТекМестоПеретаскивания.СерияНоменклатуры = СтруктураПеретаскивания.СерияНоменклатуры;
			
			НоваяСтрока = ТаблицаУстанавливаемыхШин.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекМестоПеретаскивания);
			НоваяСтрока.Состояние = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе");
			
			ОстаткиПоАгрегатам.Удалить(СтруктураПеретаскивания.Строка);
		ИначеЕсли ТекМестоПеретаскивания.МестоДоступно
			И ТекМестоПеретаскивания.МестоЗанято Тогда
			ТекстНСТР = НСтр("en='This tire is on the vehicle';ru='На этом месте уже установлена шина'");
			ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
		КонецЕсли;
		ОтрисоватьМестаУстановкиШин();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШинаНажатие(Элемент)
	ТекМесто = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановкиИмя", Элемент.Имя));
	СписокШин = Новый СписокЗначений();
	Для Каждого ТекШина Из ТекМесто Цикл
		Если ЗначениеЗаполнено(ТекШина.СерияНоменклатуры) Тогда
			СписокШин.Добавить(ТекШина.СерияНоменклатуры);
		КонецЕсли;
	КонецЦикла;
	Если СписокШин.Количество() Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораИзМеню", ЭтотОбъект);
		ПоказатьВыборИзМеню(Оповещение, СписокШин, Элемент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиПоАгрегатам

&НаКлиенте
Процедура ОстаткиПоАгрегатамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ОстаткиПоАгрегатам.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", ТекДанные.СерияНоменклатуры);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.Форма.ФормаЭлемента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоАгрегатамНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ОстаткиПоАгрегатам.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = Новый Структура("ПеретаскиваниеТЧ, СерияНоменклатуры, Строка", Истина, ТекДанные.СерияНоменклатуры, ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоАгрегатамПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоАгрегатамОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПоАгрегатамПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтруктураПеретаскивания = ПараметрыПеретаскивания.Значение;
	Если ТипЗнч(СтруктураПеретаскивания) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураПеретаскивания.ПеретаскиваниеТЧ Тогда
		// Текущее место перетаскивания
		ТекМестоОсь = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановкиИмя", СтруктураПеретаскивания.ИмяЭлемента));
		Для Каждого ТекМесто Из ТекМестоОсь Цикл
			Если ТекМесто.МестоЗанято Тогда
				
				ТекЭлемент = Элементы.Найти(СтруктураПеретаскивания.ИмяЭлемента);
				Если ТекЭлемент <> Неопределено Тогда
					ТекЭлемент.Картинка = Новый Картинка();
				КонецЕсли;
				
				ТекУстШина = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекМесто.МестоУстановки));
				Если ТекУстШина.Количество() = 0 Тогда
					// Шина установлена на ТС - Снятие
					СтрокаСнятия = ТаблицаУстанавливаемыхШин.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСнятия, ТекМесто);
					СтрокаСнятия.Состояние = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято");
				ИначеЕсли ТекУстШина.Количество() <> 0 Тогда
					ТаблицаУстанавливаемыхШин.Удалить(ТекУстШина[0]);
					ТекУстШина = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекМесто.СерияНоменклатуры));
					Если ТекУстШина.Количество() <> 0 Тогда
						СтрокаСнятия = ТаблицаУстанавливаемыхШин.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСнятия, ТекУстШина[0]);
						СтрокаСнятия.Состояние      = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято");
					КонецЕсли;
				КонецЕсли;
				
				ТекМесто.МестоЗанято       = Ложь;
				ТекМесто.СерияНоменклатуры = Неопределено;
				// Сняли одну шину
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ОтрисоватьМестаУстановкиШин();
		СформироватьОстаткиПоНоменклатуре();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаУстанавливаемыхШин

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинПослеУдаления(Элемент)
	ЗаполнитьУстановленныеШиныТС();
	ОтрисоватьМестаУстановкиШин();
	ОстаткиПоАгрегатам.Очистить();
	СформироватьОстаткиПоНоменклатуре();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ОстаткиПоАгрегатам.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ТекстНСТР = НСтр("en='Not selected element to drag';ru='Не выбран элемент для перетаскивания'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
		Возврат;
	КонецЕсли; 
	Агрегат = ТекДанные.СерияНоменклатуры;
	ПроверкаШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры", Агрегат));
	Если ПроверкаШины.Количество() > 0 Тогда
			ТекстНСТР = НСтр("en='This tire is on the vehicle';ru='Эта шина уже стоит на ТС'");
			ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
			Возврат;
	КонецЕсли;
	
	ТекстНСТР = НСтр("en='Specify the install location';ru='Укажите место установки'");
	МестаУстановки.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ТаблицаУстанавливаемыхАгрегатовПеретаскиваниеЗавершение1",
	ЭтотОбъект, Новый Структура("Агрегат", Агрегат)), ТекстНСТР);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаУстанавливаемыхШин.ТекущиеДанные;
	Если ТекДанные = Неопределено ИЛИ ФлагУдаление = Истина Тогда
		ФлагУдаление = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.СерияНоменклатуры) И ЗначениеЗаполнено(ТекДанные.МестоУстановки)
		И ЗначениеЗаполнено(ТекДанные.Состояние) Тогда
		
		ПроверкаШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры, Состояние", ТекДанные.СерияНоменклатуры, ТекДанные.Состояние));
		Если ПроверкаШины.Количество() > 1 Тогда
			ТекстНСТР = НСтр("en='This tire is on the vehicle';ru='Эта шина уже стоит на ТС'");
			ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
			ТекДанные.Состояние = Неопределено;
		КонецЕсли;
		
		Если НЕ ТекДанные.Состояние = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято") Тогда
			ПроверкаШины = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки, МестоЗанято", ТекДанные.МестоУстановки, Истина));
			Если ПроверкаШины.Количество() > 0 Тогда
				Если ПроверкаШины[0].СерияНоменклатуры <> ТекДанные.СерияНоменклатуры Тогда
					ТекстНСТР = НСтр("en='This tire is on the vehicle';ru='На этом месте уже установлена шина'");
					ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
					ТекДанные.МестоУстановки = Неопределено;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьУстановленныеШиныТС();
	ОтрисоватьМестаУстановкиШин();
	СформироватьОстаткиПоНоменклатуре();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинСостояниеПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаУстанавливаемыхШин.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.СерияНоменклатуры) И НЕ ЗначениеЗаполнено(ТекДанные.МестоУстановки)
		И ЗначениеЗаполнено(ТекДанные.Состояние) И ТекДанные.Состояние = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято") Тогда
		
		ТекШина = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекДанные.СерияНоменклатуры));
		Если ТекШина.Количество() > 0 Тогда
			ТекДанные.МестоУстановки = ТекШина[0].МестоУстановки;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	СписокШин = Новый Массив();
	СтруктураПереноса = Новый Структура("СерияНоменклатуры, Состояние, МестоУстановки");
	Для Каждого ТекШина Из ТаблицаУстанавливаемыхШин Цикл
		Если ТекШина.ШинаУстановлена Тогда
			Продолжить;
		КонецЕсли;
		СтруктураПереноса = Новый Структура("СерияНоменклатуры, Состояние, МестоУстановки");
		ЗаполнитьЗначенияСвойств(СтруктураПереноса, ТекШина);
		СписокШин.Добавить(СтруктураПереноса);
	КонецЦикла;
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("СписокШин", СписокШин);
	Оповестить("МастерУстановкиШин", СтруктураПодбора);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РазместитьАвтоматически(Команда)
	
	МестаШин = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоДоступно, МестоЗанято", Истина, Ложь));
	Остатки  = ОстаткиПоАгрегатам.НайтиСтроки(Новый Структура("ЕстьОстатки", Истина));
	Индекс   = 0;
	Для Каждого ТекМесто Из МестаШин Цикл
		Если Остатки.Количество() <> 0 И Остатки.Количество() > Индекс Тогда
			НоваяСтрока = ТаблицаУстанавливаемыхШин.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Остатки[Индекс]);
			НоваяСтрока.МестоУстановки = ТекМесто.МестоУстановки;
			НоваяСтрока.Состояние      = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе");
			ТекМесто.СерияНоменклатуры = Остатки[Индекс].СерияНоменклатуры;
			ТекМесто.МестоЗанято       = Истина;
		Иначе
			Прервать;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	СформироватьОстаткиПоНоменклатуре();
	ОтрисоватьМестаУстановкиШин();
	
КонецПроцедуры

&НаКлиенте
Процедура Установить(Команда)
	
	ТекДанные = Элементы.ОстаткиПоАгрегатам.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ТекстНСТР = НСтр("en='Not selected element to drag';ru='Не выбран элемент для перетаскивания'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
		Возврат;
	КонецЕсли; 
	Агрегат = ТекДанные.СерияНоменклатуры;
	ПроверкаШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры", Агрегат));
	Если ПроверкаШины.Количество() > 0 Тогда
			ТекстНСТР = НСтр("en='This tire is on the vehicle';ru='Эта шина уже стоит на ТС'");
			ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
			Возврат;
	КонецЕсли;
	
	ТекстНСТР = НСтр("en='Specify the install location';ru='Укажите место установки'");
	МестаУстановки.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ТаблицаУстанавливаемыхАгрегатовПеретаскиваниеЗавершение1",
	ЭтотОбъект, Новый Структура("Агрегат", Агрегат)), ТекстНСТР);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияДанныхМакетаТС()
	
	ЗаполнитьМестаУстановкиШин();

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТС", ТС);
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	уатМоделиТС.МакетТС.ХранилищеМакета КАК ХранилищеМакета,
	              |	уатМоделиТС.МакетТС.ДеревоМакета КАК ДеревоМакета,
	              |	уатМоделиТС.МакетТС.ХранитьМакетВоВнешнемФайле КАК ХранитьМакетВоВнешнемФайле
	              |ИЗ
	              |	Справочник.уатТС КАК уатТС
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.уатМоделиТС КАК уатМоделиТС
	              |		ПО уатТС.Модель = уатМоделиТС.Ссылка
	              |ГДЕ
	              |	уатТС.Ссылка = &ТС
	              |	И уатМоделиТС.МакетТС <> ЗНАЧЕНИЕ(Справочник.уатМакетыТС.ПустаяССылка)";
	
	МакетТС = Запрос.Выполнить().Выбрать();
	Если МакетТС.Следующий() Тогда
		РисунокКорпусаТС           = МакетТС.ХранилищеМакета.Получить();
		ДеревоНастроек             = МакетТС.ДеревоМакета.Получить();
		
		Если НЕ ЗначениеЗаполнено(РисунокКорпусаТС) Тогда
			РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
		ИначеЕсли ТипЗнч(РисунокКорпусаТС) = Тип("Структура") Тогда
			Если РисунокКорпусаТС.Свойство("Макет") Тогда
				Если РисунокКорпусаТС.Свойство("ШиринаМакета") Тогда
					мШирина = РисунокКорпусаТС.ШиринаМакета;
				КонецЕсли;
				РисунокКорпусаТС = РисунокКорпусаТС.Макет;
			ИначеЕсли РисунокКорпусаТС.Свойство("ИмяФайла") Тогда
				Если РисунокКорпусаТС.Свойство("ШиринаМакета") Тогда
					мШирина = РисунокКорпусаТС.ШиринаМакета;
				КонецЕсли;
				Картинка = ПоместитьВоВременноеХранилище(РисунокКорпусаТС.Файл, Новый УникальныйИдентификатор);
				КорпусТС = Картинка;
				РисунокКорпусаТС = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		// Таблица шин
		ВеткаШины = ДеревоНастроек.Строки.Найти("Шины", "Объект");
		Если ВеткаШины <> Неопределено Тогда
			Для Каждого ТекСтрокаШины Из ВеткаШины.Строки Цикл
				СтрокаШиныВДереве = МестаУстановкиШин.НайтиСтроки(Новый Структура("Объект", ТекСтрокаШины.Объект));
				Если СтрокаШиныВДереве.Количество() <> 0 Тогда
					Для Каждого ТекСтрокаНастройкаШины Из ТекСтрокаШины.Строки Цикл
						Если ТекСтрокаНастройкаШины.Объект = "Установлено" Тогда
							СтрокаШиныВДереве[0].МестоДоступно = ТекСтрокаНастройкаШины.Значение;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
		Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ") Тогда
				ТекСтрока.МестоДоступно = Ложь;
				Продолжить;
			КонецЕсли;
			ТекСтрока.МестоДоступно = Истина;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьУстановленныеШиныТС();
	ОтрисоватьМакет(РисунокКорпусаТС);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМестаУстановкиШин()
	Запрос = Новый Запрос();
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	уатМестаУстановкиШин.Ссылка КАК Ссылка,
	              |	уатМестаУстановкиШин.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	              |ИЗ
	              |	Справочник.уатМестаУстановкиШин КАК уатМестаУстановкиШин
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	уатМестаУстановкиШин.Наименование";
	
	СписокМестУстановки = Запрос.Выполнить().Выгрузить();
	
	МестаУстановкиШин.Очистить();
	Для Каждого ТекСтрока Из СписокМестУстановки Цикл
		НоваяШина = МестаУстановкиШин.Добавить();
		НоваяШина.МестоУстановки    = ТекСтрока.Ссылка;
		Если (ТекСтрока.ИмяПредопределенныхДанных = "ЗЛ" 
			ИЛИ ТекСтрока.ИмяПредопределенныхДанных = "ЗП") Тогда
			НоваяШина.МестоУстановкиИмя = ТекСтрока.ИмяПредопределенныхДанных + "В";
		Иначе
			НоваяШина.МестоУстановкиИмя = ТекСтрока.ИмяПредопределенныхДанных;
		КонецЕсли;
		НоваяШина.Объект            = СокрЛП("Шина_" + ТекСтрока.Ссылка);
		НоваяШина.МестоДоступно     = Ложь;
		НоваяШина.МестоЗанято       = Ложь;
		МестаУстановки.Добавить(ТекСтрока.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУстановленныеШиныТС()
	
	// Заполнили Установленные шины
	Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
		ТекСтрока.МестоЗанято       = Ложь;
		ТекСтрока.СерияНоменклатуры = Неопределено;
		УстУстановленныеШины = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("МестоУстановки", ТекСтрока.МестоУстановки));
		Если УстУстановленныеШины.Количество() <> 0 Тогда
			ТекСтрока.МестоЗанято       = Истина;
			ТекСтрока.СерияНоменклатуры = УстУстановленныеШины[0].СерияНоменклатуры;
		КонецЕсли;
	КонецЦикла;

	// Проверяем возможность снятия шины
	ТаблицаУстанавливаемыхШинСнятие = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("Состояние", Перечисления.уатСостоянияАгрегатов.Снято));
	Для Каждого ТекСтрока Из ТаблицаУстанавливаемыхШинСнятие Цикл
		Если ЗначениеЗаполнено(ТекСтрока.СерияНоменклатуры) И ЗначениеЗаполнено(ТекСтрока.МестоУстановки)
			И ЗначениеЗаполнено(ТекСтрока.Состояние) Тогда
			// Шина уже установлена
			УстановленныеШины = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекСтрока.СерияНоменклатуры));
			Если УстановленныеШины.Количество() <> 0 Тогда
				ТекМесто = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекСтрока.МестоУстановки));
				Если ТекМесто.Количество() Тогда
					ТекМесто[0].МестоЗанято       = Ложь;
					ТекМесто[0].СерияНоменклатуры = Неопределено;
				КонецЕсли;
			Иначе
				ТекстНСТР = НСтр("en='Tire %1 is not installed on vehicle!';ru='Шина %1 не установлена на ТС!'");
				ТекстНСТР = СтрШаблон(ТекстНСТР, ТекСтрока.СерияНоменклатуры);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
				ТекСтрока.Состояние = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Переставляем уст Шины
	Для Каждого ТекСтрока Из ТаблицаУстанавливаемыхШин Цикл
		Если ЗначениеЗаполнено(ТекСтрока.СерияНоменклатуры) И ЗначениеЗаполнено(ТекСтрока.МестоУстановки)
			И ЗначениеЗаполнено(ТекСтрока.Состояние) И ТекСтрока.Состояние <> Перечисления.уатСостоянияАгрегатов.Снято Тогда
			// Шина уже установлена
			УстановленныеШины = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекСтрока.СерияНоменклатуры));
			Если УстановленныеШины.Количество() <> 0 Тогда
				
				ТекМестоПереноса = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекСтрока.МестоУстановки));
				ТекМесто         = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", УстановленныеШины[0].МестоУстановки));

				Если НЕ (ТекМесто.Количество() И ТекМестоПереноса.Количество()) Тогда
					ТекСтрока.МестоУстановки = Неопределено;
					Продолжить;
				КонецЕсли;
				
				ТекМестоЭлмент = Новый Структура();
				ТекМестоЭлмент.Вставить("МестоЗанято");
				ТекМестоЭлмент.Вставить("СерияНоменклатуры");
				ЗаполнитьЗначенияСвойств(ТекМестоЭлмент, ТекМесто[0]);
				ЗаполнитьЗначенияСвойств(ТекМесто[0], ТекМестоПереноса[0], "СерияНоменклатуры, МестоЗанято");
				ЗаполнитьЗначенияСвойств(ТекМестоПереноса[0], ТекМестоЭлмент, "СерияНоменклатуры, МестоЗанято");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// Переставляем уст Шины
	Для Каждого ТекСтрока Из ТаблицаУстанавливаемыхШин Цикл
		Если ЗначениеЗаполнено(ТекСтрока.СерияНоменклатуры) И ЗначениеЗаполнено(ТекСтрока.МестоУстановки)
			И ЗначениеЗаполнено(ТекСтрока.Состояние) И ТекСтрока.Состояние <> Перечисления.уатСостоянияАгрегатов.Снято Тогда
			// Шина уже установлена
			УстановленныеШины = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекСтрока.СерияНоменклатуры));
			Если УстановленныеШины.Количество() = 0 Тогда
				
				ТекМестоПереноса = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекСтрока.МестоУстановки));
				Если ТекМестоПереноса.Количество() Тогда
					Если ТекМестоПереноса[0].МестоЗанято Тогда
						ТекСтрока.МестоУстановки = Неопределено;
						ТекстНСТР = НСтр("en='Tire ""%1"" is installed ""%2"" is already occupied by tire ""%3""!';ru='Шина ""%1"" установлена на место ""%2"", уже занятое шиной ""%3""!'");
						ТекстНСТР = СтрШаблон(ТекстНСТР, ТекСтрока.СерияНоменклатуры, СокрЛП(ТекСтрока.МестоУстановки), ТекМестоПереноса[0].СерияНоменклатуры);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
					Иначе
						ТекМестоПереноса[0].МестоЗанято       = Истина;
						ТекМестоПереноса[0].СерияНоменклатуры = ТекСтрока.СерияНоменклатуры;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОтрисоватьМакет(РисунокКорпусаТС)
	ОтрисоватьКорпус(РисунокКорпусаТС);
	ОтрисоватьМестаУстановкиШин(Истина);
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьКорпус(РисунокКорпусаТС)
	
	Если ТипЗнч(РисунокКорпусаТС) <> Тип("Картинка") Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		КартинкаКорпусаТС = ПоместитьВоВременноеХранилище(РисунокКорпусаТС, Новый УникальныйИдентификатор);
		КартинкаКорпусаТС = КартинкаКорпусаТС;
	Исключение
		ТекстНСТР = НСтр("en='Error displaying picture:';ru='Ошибка отображения картинки:'") + " " + ИнформацияОбОшибке().Описание + " " +
		НСтр("en='cause';ru='по причине'") + " " + ИнформацияОбОшибке().Причина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
	КонецПопытки;
	
	КорпусТС = КартинкаКорпусаТС;
	
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьМестаУстановкиШин(ПервичноеЗаполнение = Ложь)
	
	мМестаУстановкиШин = МестаУстановкиШин.Выгрузить();
	мМестаУстановкиШин.Свернуть("МестоУстановкиИмя", "МестоДоступно, МестоЗанято");
	
	Для Каждого СтрокаШины Из мМестаУстановкиШин Цикл
		
		РисунокШина = Элементы.Найти(СтрокаШины.МестоУстановкиИмя);
		Если РисунокШина <> Неопределено Тогда
			
			Если СтрокаШины.МестоЗанято И СтрокаШины.МестоДоступно Тогда
				РисунокШина.Картинка = ?(СтрокаШины.МестоУстановкиИмя = "ЗАП",БиблиотекаКартинок.уатШина90, БиблиотекаКартинок.уатШина);
			Иначе
				РисунокШина.Картинка = Новый Картинка();
			КонецЕсли;
			
			Если ПервичноеЗаполнение Тогда
				РисунокШина.Рамка = Новый Рамка(?(СтрокаШины.МестоДоступно, ТипРамкиЭлементаУправления.Одинарная, ТипРамкиЭлементаУправления.БезРамки),?(СтрокаШины.МестоДоступно,2,1));
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаУстанавливаемыхШинИзРЛ(Шины)
	
	ФлагДубльШины = Ложь;
	Для Каждого ТекШина Из Шины Цикл
		Если ЗначениеЗаполнено(ТекШина.Состояние)
			И ЗначениеЗаполнено(ТекШина.СерияНоменклатуры) Тогда
			Если ТекШина.Состояние = Перечисления.уатСостоянияАгрегатов.Снято Тогда
				ТекДубльШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры, Состояние", ТекШина.СерияНоменклатуры, ТекШина.Состояние));
				Если ТекДубльШины.Количество() <> 0 Тогда
					ФлагДубльШины = Истина;
					Продолжить;
				КонецЕсли;
			
				ТекУстШина   = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекШина.СерияНоменклатуры));
				Если ТекУстШина.Количество() <> 0 Тогда
					МестоУстановки                = ТекУстШина[0].МестоУстановки;
					НоваяСтрока                   = ТаблицаУстанавливаемыхШин.Добавить();
					НоваяСтрока.СерияНоменклатуры = ТекШина.СерияНоменклатуры;
					НоваяСтрока.МестоУстановки    = МестоУстановки;
					НоваяСтрока.Состояние         = ТекШина.Состояние;
					
					ТекМесто = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", НоваяСтрока.МестоУстановки));
					Если ТекМесто.Количество() <> 0 Тогда
						ТекМесто[0].МестоЗанято       = Ложь;
						ТекМесто[0].СерияНоменклатуры = Неопределено;
					КонецЕсли;
				Иначе
					ТекстНСТР = НСтр("en='Tire %1 is not installed on vehicle!';ru='Шина %1 не установлена на ТС!'");
					ТекстНСТР = СтрШаблон(ТекстНСТР, ТекШина.СерияНоменклатуры);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
					Продолжить;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(ТекШина.МестоУстановки) Тогда
				ТекДубльШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры, Состояние", ТекШина.СерияНоменклатуры, Перечисления.уатСостоянияАгрегатов.УстановленоВЗапас));
				Если ТекДубльШины.Количество() <> 0 Тогда
					ФлагДубльШины = Истина;
					Продолжить;
				КонецЕсли;
				ТекДубльШины = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("СерияНоменклатуры, Состояние", ТекШина.СерияНоменклатуры, Перечисления.уатСостоянияАгрегатов.УстановленоВРаботе));
				Если ТекДубльШины.Количество() <> 0 Тогда
					ФлагДубльШины = Истина;
					Продолжить;
				КонецЕсли;
			
				ТекМесто = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекШина.МестоУстановки));
				Если ТекМесто.Количество() <> 0 Тогда
					Если НЕ ТекМесто[0].МестоЗанято Тогда
						НоваяСтрока                   = ТаблицаУстанавливаемыхШин.Добавить();
						НоваяСтрока.СерияНоменклатуры = ТекШина.СерияНоменклатуры;
						НоваяСтрока.МестоУстановки    = ТекШина.МестоУстановки;
						НоваяСтрока.Состояние         = ТекШина.Состояние;
						
						ТекМесто[0].МестоЗанято       = Истина;
						ТекМесто[0].СерияНоменклатуры = ТекШина.СерияНоменклатуры;
					Иначе
						ТекУстШина = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры, МестоУстановки", ТекШина.СерияНоменклатуры, ТекШина.МестоУстановки));
						Если ТекУстШина.Количество() <> 0 Тогда
							НоваяСтрока                   = ТаблицаУстанавливаемыхШин.Добавить();
							НоваяСтрока.СерияНоменклатуры = ТекШина.СерияНоменклатуры;
							НоваяСтрока.МестоУстановки    = ТекШина.МестоУстановки;
							НоваяСтрока.Состояние         = ТекШина.Состояние;
						Иначе
							ТекстНСТР = НСтр("en='Tire ""%1"" is installed ""%2"" is already occupied by tire ""%3""!';ru='Шина ""%1"" установлена на место ""%2"", уже занятое шиной ""%3""!'");
							ТекстНСТР = СтрШаблон(ТекстНСТР, ТекШина.СерияНоменклатуры, СокрЛП(ТекШина.МестоУстановки), ТекМесто[0].СерияНоменклатуры);
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
							Продолжить;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				НоваяСтрока                   = ТаблицаУстанавливаемыхШин.Добавить();
				НоваяСтрока.СерияНоменклатуры = ТекШина.СерияНоменклатуры;
				НоваяСтрока.Состояние         = ТекШина.Состояние;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(ТекШина.СерияНоменклатуры) Тогда
				НоваяСтрока                   = ТаблицаУстанавливаемыхШин.Добавить();
				НоваяСтрока.СерияНоменклатуры = ТекШина.СерияНоменклатуры;
		КонецЕсли;
	КонецЦикла;
	
	Если ФлагДубльШины Тогда
		ТекстНСТР = НСтр("en='In tabular section ""Tyres"" contains lines with duplicate values of products and services series! All duplicates have been removed.';ru='В табличной части ""Шины"" присутствуют строки с дублированием значения серии номенклатуры! Все дубли были удалены.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьОстаткиПоНоменклатуре()
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Дата", Неопределено);
	Запрос.УстановитьПараметр("ТолькоОстатки",ТолькоОстатки = 1);
	
	СтрокаОтборов = "СерияНоменклатуры.ТипАгрегата = ЗНАЧЕНИЕ(Справочник.уатТипыАгрегатов.Шина)";
	Если ЗначениеЗаполнено(ОтборСклад) Тогда  
		Запрос.УстановитьПараметр("Склад", ОтборСклад);
		СтрокаОтборов = СтрокаОтборов + "И Склад = &Склад";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборНоменклатура) Тогда  
		Запрос.УстановитьПараметр("Номенклатура", ОтборНоменклатура);
		СтрокаОтборов = СтрокаОтборов + ?(ЗначениеЗаполнено(СтрокаОтборов), " И СерияНоменклатуры.Номенклатура = &Номенклатура", "СерияНоменклатуры.Номенклатура = &Номенклатура");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборМодель) Тогда
		Запрос.УстановитьПараметр("Модель", ОтборМодель);
		СтрокаОтборов = СтрокаОтборов + ?(ЗначениеЗаполнено(СтрокаОтборов), " И СерияНоменклатуры.Модель = &Модель", "СерияНоменклатуры.Модель = &Модель");
	КонецЕсли;
	
	Если ТаблицаУстанавливаемыхШин.Количество() <> 0 Тогда
		УстановленныеШины = ТаблицаУстанавливаемыхШин.Выгрузить().ВыгрузитьКолонку("СерияНоменклатуры");
		СтрокаОтборов = СтрокаОтборов + ?(ЗначениеЗаполнено(СтрокаОтборов), " И СерияНоменклатуры НЕ В(&УстановленныеШины)", "СерияНоменклатуры НЕ В(&УстановленныеШины)");
		Запрос.УстановитьПараметр("УстановленныеШины", УстановленныеШины);
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(уатОстаткиАгрегатовОстатки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.пустаяСсылка)) КАК Склад,
	|	уатСерииНоменклатуры.Ссылка КАК СерияНоменклатуры,
	|	СУММА(ЕСТЬNULL(уатОстаткиАгрегатовОстатки.КоличествоОстаток, 0)) КАК Остаток
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	Справочник.уатСерииНоменклатуры КАК уатСерииНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиАгрегатов.Остатки(&Дата, " + СтрокаОтборов + ") КАК уатОстаткиАгрегатовОстатки
	|		ПО уатСерииНоменклатуры.Ссылка = уатОстаткиАгрегатовОстатки.СерияНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	уатСерииНоменклатуры.Ссылка,
	|	ЕСТЬNULL(уатОстаткиАгрегатовОстатки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.пустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втОстатки.Склад КАК Склад,
	|	втОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	втОстатки.Остаток КАК Остаток,
	|	ВЫБОР
	|		КОГДА втОстатки.Остаток <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОстатки
	|ИЗ
	|	втОстатки КАК втОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТолькоОстатки
	|				ТОГДА втОстатки.Остаток <> 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И втОстатки.СерияНоменклатуры.ТипАгрегата = ЗНАЧЕНИЕ(Справочник.уатТипыАгрегатов.Шина)";
	
	Если ЗначениеЗаполнено(ОтборМодель) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И втОстатки.СерияНоменклатуры.Модель = &Модель";
	КонецЕсли;

	Если ЗначениеЗаполнено(ОтборСклад) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И втОстатки.Склад = &Склад";
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборНоменклатура) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И втОстатки.СерияНоменклатуры.Номенклатура = &Номенклатура";
	КонецЕсли;

	Если ТаблицаУстанавливаемыхШин.Количество() <> 0 Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И втОстатки.СерияНоменклатуры НЕ В(&УстановленныеШины)";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	втОстатки.СерияНоменклатуры.Наименование,
	|	втОстатки.СерияНоменклатуры.СерийныйНомер";
	
	ВыборкаПоОстаткамНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВДанныеФормы(ВыборкаПоОстаткамНоменклатуры, ОстаткиПоАгрегатам);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхАгрегатовПеретаскиваниеЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда 
		ТекстНСТР = НСтр("en='Not selected tire installation site';ru='Не выбрано место установки шины'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
		Возврат;
	Иначе
		МестоУст = ВыбранныйЭлемент.Значение;
		Если МожноУстановитьШину(МестоУст) Тогда 
			ДобавитьШинуВТабУА(ДополнительныеПараметры.Агрегат, МестоУст);
		Иначе
			ТекстНСТР = НСтр("en='At this place there is tire already';ru='На данном месте уже есть шина'");
			ПоказатьПредупреждение(Неопределено, ТекстНСТР,,"Ошибка");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция МожноУстановитьШину(МестоУст) 
	ТекСтрока = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", МестоУст));
	Если ТекСтрока.Количество() <> 0 Тогда
		Возврат НЕ ТекСтрока[0].МестоЗанято;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ДобавитьШинуВТабУА(Агрегат, МестоУст)
	
	СтрТз = ТаблицаУстанавливаемыхШин.Добавить();
	СтрТз.СерияНоменклатуры = Агрегат.Ссылка;
	СтрТз.МестоУстановки    = МестоУст;
	СтрТз.Состояние      = ?(СтрТз.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗАП"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас"), ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе"));
	
	ТекСтрока = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", МестоУст));
	Если ТекСтрока.Количество() <> 0 Тогда
		ТекСтрока[0].МестоЗанято       = Истина;
		ТекСтрока[0].СерияНоменклатуры = Агрегат.Ссылка;
	КонецЕсли;
	
	ОтрисоватьМестаУстановкиШин();
	СформироватьОстаткиПоНоменклатуре();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинСерияНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура("ТипАгрегата, РежимВыбора", "Шина", Истина);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.ФормаВыбора", ПараметрыОткрытия, Элемент);
КонецПроцедуры

&НаСервере
Функция ШиныТС(СсылкаРЛ)
	Запрос = Новый Запрос();
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	              |	уатАгрегатыТССрезПоследних.Период КАК ДатаУстановки,
	              |	уатАгрегатыТССрезПоследних.СостояниеАгрегата КАК Состояние,
	              |	уатАгрегатыТССрезПоследних.ТС КАК ТС,
	              |	уатАгрегатыТССрезПоследних.СерияНоменклатуры КАК СерияНоменклатуры,
	              |	уатАгрегатыТССрезПоследних.СерияНоменклатуры.СерийныйНомер КАК СерийныйНомер,
	              |	уатАгрегатыТССрезПоследних.МестоУстановки КАК МестоУстановки,
	              |	уатАгрегатыТССрезПоследних.СерияНоменклатуры.Модель КАК Модель,
	              |	уатАгрегатыТССрезПоследних.СерияНоменклатуры.Модель.Производитель КАК Производитель,
	              |	уатАгрегатыТССрезПоследних.СерияНоменклатуры.Модель.Наименование КАК Характеристики
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		уатАгрегатыТССрезПоследних.СерияНоменклатуры КАК СерияНоменклатуры,
	              |		МАКСИМУМ(уатАгрегатыТССрезПоследних.НомерСтроки) КАК НомерСтроки,
	              |		ВложенныйЗапрос.Период КАК Период
	              |	ИЗ
	              |		(ВЫБРАТЬ
	              |			уатАгрегатыТССрезПоследних.СерияНоменклатуры КАК СерияНоменклатуры,
	              |			МАКСИМУМ(уатАгрегатыТССрезПоследних.Период) КАК Период
	              |		ИЗ
	              |			РегистрСведений.уатАгрегатыТС.СрезПоследних(
	              |					&Дата,
	              |					ТС В (&ТС)
	              |						И СерияНоменклатуры.ТипАгрегата = &ТипАгрегата
	              |						И Регистратор <> &Ссылка) КАК уатАгрегатыТССрезПоследних
	              |		
	              |		СГРУППИРОВАТЬ ПО
	              |			уатАгрегатыТССрезПоследних.СерияНоменклатуры) КАК ВложенныйЗапрос
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(
	              |					&Дата,
	              |					ТС В (&ТС)
	              |						И СерияНоменклатуры.ТипАгрегата = &ТипАгрегата
	              |						И Регистратор <> &Ссылка) КАК уатАгрегатыТССрезПоследних
	              |			ПО ВложенныйЗапрос.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
	              |				И ВложенныйЗапрос.Период = уатАгрегатыТССрезПоследних.Период
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		уатАгрегатыТССрезПоследних.СерияНоменклатуры,
	              |		ВложенныйЗапрос.Период) КАК ВложенныйЗапрос
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатАгрегатыТС.СрезПоследних(
	              |				&Дата,
	              |				ТС В (&ТС)
	              |					И СерияНоменклатуры.ТипАгрегата = &ТипАгрегата
	              |					И Регистратор <> &Ссылка) КАК уатАгрегатыТССрезПоследних
	              |		ПО ВложенныйЗапрос.СерияНоменклатуры = уатАгрегатыТССрезПоследних.СерияНоменклатуры
	              |			И ВложенныйЗапрос.Период = уатАгрегатыТССрезПоследних.Период
	              |			И ВложенныйЗапрос.НомерСтроки = уатАгрегатыТССрезПоследних.НомерСтроки";
	Запрос.УстановитьПараметр("ТС",ТС);
	Запрос.УстановитьПараметр("ТипАгрегата", Справочники.уатТипыАгрегатов.Шина);
	Запрос.УстановитьПараметр("Ссылка", СсылкаРЛ);
	Запрос.УстановитьПараметр("Дата", ДатаРасчетов);
	РезультатТаблица = Запрос.Выполнить().Выгрузить();
	
	СписокСостоянийАгрегата = Новый СписокЗначений();
	СписокСостоянийАгрегата.Добавить(Перечисления.уатСостоянияАгрегатов.УстановленоВЗапас);
	СписокСостоянийАгрегата.Добавить(Перечисления.уатСостоянияАгрегатов.УстановленоВРаботе);
	Сч = РезультатТаблица.Количество()-1;
	Пока Сч >= 0 Цикл
		Если СписокСостоянийАгрегата.НайтиПоЗначению(РезультатТаблица[Сч].Состояние) = Неопределено Тогда
			РезультатТаблица.Удалить(Сч);
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;

	Возврат РезультатТаблица;
	
КонецФункции

&НаКлиенте
Процедура ПослеВыбораИзМеню(ВыбранныйЭлемент, Параметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыОткрытия = Новый Структура("Ключ", ВыбранныйЭлемент.Значение);
	ОткрытьФорму("Справочник.уатСерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыОткрытия,ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеШины(Команда)
	
	ТаблицаУстанавливаемыхШин.Очистить();
	Для Каждого СтрокаШины Из МестаУстановкиШин Цикл
		ТекСтрока   = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("МестоУстановки", СтрокаШины.МестоУстановки));
		Если ТекСтрока.Количество() <> 0 Тогда
			НоваяСтрока = ТаблицаУстанавливаемыхШин.Добавить();
			НоваяСтрока.СерияНоменклатуры = ТекСтрока[0].СерияНоменклатуры;
			НоваяСтрока.Состояние         = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято");
			НоваяСтрока.МестоУстановки    = ТекСтрока[0].МестоУстановки;
		КонецЕсли;
		СтрокаШины.МестоЗанято       = Ложь;
		СтрокаШины.СерияНоменклатуры = Неопределено;
	КонецЦикла;
	
	ОтрисоватьМестаУстановкиШин();
	СформироватьОстаткиПоНоменклатуре();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстанавливаемыхШинПередУдалением(Элемент, Отказ)
	ТекДанные = Элементы.ТаблицаУстанавливаемыхШин.ТекущиеДанные;
	Если ТекДанные = Неопределено ИЛИ ФлагУдаление = Истина Тогда
		ФлагУдаление = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ШинаУстановлена Тогда
		ТекМестоОсь = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекДанные.МестоУстановки));
		Для Каждого ТекМесто Из ТекМестоОсь Цикл
			Если ТекМесто.МестоЗанято Тогда
				
				ТекЭлемент = Элементы.Найти(ТекМесто.МестоУстановкиИмя);
				Если ТекЭлемент <> Неопределено Тогда
					ТекЭлемент.Картинка = Новый Картинка();
				КонецЕсли;
				
				ТекУстШина = ТаблицаУстанавливаемыхШин.НайтиСтроки(Новый Структура("МестоУстановки", ТекДанные.МестоУстановки));
				Если ТекУстШина.Количество() = 0 Тогда
					// Шина установлена на ТС - Снятие
					СтрокаСнятия = ТаблицаУстанавливаемыхШин.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСнятия, ТекМесто);
					СтрокаСнятия.Состояние = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято");
				ИначеЕсли ТекУстШина.Количество() <> 0 Тогда
					ТаблицаУстанавливаемыхШин.Удалить(ТекУстШина[0]);
					ТекУстШина = ТабличноеПолеУстановкаШины.НайтиСтроки(Новый Структура("СерияНоменклатуры", ТекДанные.СерияНоменклатуры));
					Если ТекУстШина.Количество() <> 0 Тогда
						СтрокаСнятия = ТаблицаУстанавливаемыхШин.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСнятия, ТекУстШина[0]);
						СтрокаСнятия.Состояние      = ПредопределенноеЗначение("Перечисление.уатСостоянияАгрегатов.Снято");
					КонецЕсли;
				КонецЕсли;
				
				ТекМесто.МестоЗанято       = Ложь;
				ТекМесто.СерияНоменклатуры = Неопределено;
				// Сняли одну шину
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ОтрисоватьМестаУстановкиШин();
		СформироватьОстаткиПоНоменклатуре();
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШиринаМакетаПриИзменении()
	Элементы.ГруппаТСВерхняя.Ширина = мШирина;
КонецПроцедуры

#КонецОбласти