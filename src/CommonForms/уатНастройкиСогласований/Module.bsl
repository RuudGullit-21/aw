
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		НастройкаПоОрганизации = Истина;
		Организация = Параметры.Организация;
		Элементы.ГруппаОбъектНастройки.ТолькоПросмотр = Истина;
	ИначеЕсли Параметры.Свойство("Подразделение") Тогда
		НастройкаПоОрганизации = Ложь;
		Подразделение = Параметры.Подразделение;
		Элементы.ГруппаОбъектНастройки.ТолькоПросмотр = Истина;
	Иначе
		НастройкаПоОрганизации = Истина;
		ТекПользователь = Пользователи.АвторизованныйПользователь();
		Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация");
	КонецЕсли;
	
	ПрочитатьНастройкиСогласований();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкаПоОрганизацииПриИзменении(Элемент)
	УстановитьВидимость();
	Если НастройкаПоОрганизации Тогда
		Подразделение = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
	Иначе
		Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	КонецЕсли;
	ПрочитатьНастройкиСогласований();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПрочитатьНастройкиСогласований();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПрочитатьНастройкиСогласований();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьНастройкиСогласованийИЗакрыть(Команда)
	ЗаписатьНастройки();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиСогласований(Команда)
	ЗаписатьНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Организация.Видимость = НастройкаПоОрганизации;
	Элементы.Подразделение.Видимость = Не НастройкаПоОрганизации;
	
	Элементы.НастройкиСогласованийСогласованиеПоУмолчанию.Видимость = НастройкаПоОрганизации;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиСогласований()
	
	НастройкиСогласований.Очистить();
	
	ИменаДокументовСогласования = Новый Массив();
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "АктСверкиВзаиморасчетов", "Акт сверки взаиморасчетов"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ВводВЭксплуатацию", "Ввод в эксплуатацию"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ВыбытиеИзЭксплуатации", "Выбытие ТС и оборудования"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ЗаявкаНаРасходованиеДС", "Заявка на расходование ДС"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ЗаявкаНаРемонт", "Заявка на ремонт"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ПеремещениеТСИОборудования", "Перемещение ТС и оборудования"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ПланированиеРаботыТС", "Планирование работы ТС"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "ПоступлениеТоваровУслуг", "Поступление материалов и услуг"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "РеестрПеревозок", "Реестр перевозок"));
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() Тогда
		ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "Рекламация", "Рекламация"));
	КонецЕсли;
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "РемонтныйЛист", "Ремонтный лист"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "СчетНаОплатуПоставщика", "Счет на оплату поставщика"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "УстановкаПрейскурантовТС", "Установка прейскурантов ТС"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "УстановкаТарифовЗП", "Установка тарифов ЗП"));
	ИменаДокументовСогласования.Добавить(Новый Структура("ВидДокумента, ПредставлениеДокумента", "УстановкаТарифовСебестоимости", "Установка тарифов себестоимости"));
	
	Для Каждого ТекСтрока Из ИменаДокументовСогласования Цикл
		НоваяСтрока = НастройкиСогласований.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатНастройкиСогласований.Объект КАК Объект,
	|	уатНастройкиСогласований.Настройки КАК Настройки
	|ИЗ
	|	РегистрСведений.уатНастройкиСогласований КАК уатНастройкиСогласований
	|ГДЕ
	|	уатНастройкиСогласований.Объект = &Объект");
	Если НастройкаПоОрганизации Тогда
		Запрос.УстановитьПараметр("Объект", Организация);
	Иначе
		Запрос.УстановитьПараметр("Объект", Подразделение);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураНастроек = Выборка.Настройки.Получить();
		Для Каждого ТекСтрока Из НастройкиСогласований Цикл
			Если СтруктураНастроек.Свойство(ТекСтрока.ВидДокумента) Тогда
				ЗаполнитьЗначенияСвойств(ТекСтрока, СтруктураНастроек[ТекСтрока.ВидДокумента]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройки()
	
	СтруктураНастроек = Новый Структура;
	Для Каждого ТекСтрока Из НастройкиСогласований Цикл
		Если НастройкаПоОрганизации Тогда
			НастройкиПоДокументу = Новый Структура("СогласованиеПоУмолчанию, ГруппаИсполнителейСогласованияПоУмолчанию");
		Иначе
			НастройкиПоДокументу = Новый Структура("ГруппаИсполнителейСогласованияПоУмолчанию");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НастройкиПоДокументу, ТекСтрока);
		СтруктураНастроек.Вставить(ТекСтрока.ВидДокумента, НастройкиПоДокументу);
	КонецЦикла;
	
	МенеджерЗаписи = РегистрыСведений.уатНастройкиСогласований.СоздатьМенеджерЗаписи();
	Если НастройкаПоОрганизации Тогда
		МенеджерЗаписи.Объект = Организация;
	Иначе
		МенеджерЗаписи.Объект = Подразделение;
	КонецЕсли;
	МенеджерЗаписи.Настройки = Новый ХранилищеЗначения(СтруктураНастроек);
	МенеджерЗаписи.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти