
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Маршрутизация.Видимость = уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП();
	
	ПолучитьНастройкиКартографииМаршрутизации();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью()
	
	Отказ              = Ложь;
	Модифицированность = Ложь;
	Если Картография_Использование Тогда
		Если Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
			Если НЕ ЗначениеЗаполнено(Картография_Сервер) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать сервер сервиса ""Картография"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		ИначеЕсли Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData") Тогда
			ТекстСообщения = НСтр("ru='Использование поставщика ""Dadata"" для сервиса ""Картография"" запрещено.'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		Иначе
			Если НЕ ЗначениеЗаполнено(Картография_ТипПоставщика) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать тип поставщика сервиса ""Картография"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			ИначеЕсли НЕ ЗначениеЗаполнено(Картография_Ключ) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Картография"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Геокодирование_Использование Тогда
		Если НЕ ЗначениеЗаполнено(Геокодирование_ТипПоставщика) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать тип поставщика сервиса ""Геокодирование"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		ИначеЕсли (Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM")
			Или Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData"))
			И НЕ ЗначениеЗаполнено(Геокодирование_Сервер) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать сервер сервиса ""Геокодирование"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		ИначеЕсли (Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс")
			Или Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData"))
			И НЕ ЗначениеЗаполнено(Геокодирование_Ключ) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Геокодирование"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		ИначеЕсли Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData")
			И Не ЗначениеЗаполнено(Геокодирование_ДополнительныйКлюч) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать секретный ключ сервиса ""Геокодирование"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ПодсказкиАдресов_Использование Тогда
		Если НЕ ЗначениеЗаполнено(ПодсказкиАдресов_ТипПоставщика) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать тип поставщика сервиса ""Подсказки при вводе адресов"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		ИначеЕсли (ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM")
			Или ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData"))
			И НЕ ЗначениеЗаполнено(ПодсказкиАдресов_Сервер) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать сервер сервиса ""Подсказки при вводе адресов"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		ИначеЕсли (ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс")
			Или ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData"))
			И НЕ ЗначениеЗаполнено(ПодсказкиАдресов_Ключ) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Подсказки при вводе адресов"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ПостроениеМаршрутов_Использование Тогда
		Если ПостроениеМаршрутов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
			Если НЕ ЗначениеЗаполнено(ПостроениеМаршрутов_Сервер) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать сервер сервиса ""Матрица расстояний и построения маршрутов"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		ИначеЕсли Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData") Тогда
			ТекстСообщения = НСтр("ru='Использование поставщика ""Dadata"" для сервиса ""Матрица расстояний и построения маршрутов"" запрещено.'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		Иначе
			Если НЕ ЗначениеЗаполнено(ПостроениеМаршрутов_ТипПоставщика) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать тип поставщика сервиса ""Матрица расстояний и построения маршрутов"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			ИначеЕсли НЕ ЗначениеЗаполнено(ПостроениеМаршрутов_Ключ) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Матрица расстояний и построения маршрутов"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Навигация_Использование Тогда
		Если (ЗначениеЗаполнено(Навигация_Ключ)
			ИЛИ ЗначениеЗаполнено(Навигация_ИдентификаторКлиента)) Тогда
			Если НЕ ЗначениеЗаполнено(Навигация_Ключ) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Навигация"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Навигация_ИдентификаторКлиента) Тогда
				ТекстСообщения = НСтр("ru='Необходимо указать идентификатор клиента сервиса ""Навигация"".'");
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Навигация"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Маршрутизация_Использование Тогда
		Если НЕ ЗначениеЗаполнено(Маршрутизация_Ключ) Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать ключ сервиса ""Маршрутизация"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Маршрутизация_Токен) 
			И Маршрутизация_ТипАвторизации = "OAuth-токен" Тогда
			ТекстСообщения = НСтр("ru='Необходимо указать токен сервиса ""Маршрутизация"".'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипПоставщикаПриИзменении(Элемент)
	
	ТипПоставщикаOSM    = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM");
	ТипПоставщикаЯндекс = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
	Если Картография_Использование
		И Картография_ТипПоставщика = ТипПоставщикаOSM 
		И НЕ Геокодирование_Использование
		И НЕ ПостроениеМаршрутов_Использование Тогда
		
		Геокодирование_ТипПоставщика      = ТипПоставщикаOSM;
		ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаOSM;
		Геокодирование_Использование      = Истина;
		ПостроениеМаршрутов_Использование = Истина;
		
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресКартография"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресГеокодирования"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутов"));
		
	ИначеЕсли Картография_Использование
		И Картография_ТипПоставщика = ТипПоставщикаЯндекс
		И НЕ Геокодирование_Использование
		И НЕ ПостроениеМаршрутов_Использование Тогда
		
		Геокодирование_ТипПоставщика      = ТипПоставщикаЯндекс;
		ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаЯндекс;
		Геокодирование_Использование      = Истина;
		ПостроениеМаршрутов_Использование = Истина;

	КонецЕсли;
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПостроениеМаршрутов_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Геокодирование_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Картография_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Навигация_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Маршрутизация_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Геокодирование_ТипПоставщикаПриИзменении(Элемент)
	
	ТипПоставщикаOSM    = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM");
	ТипПоставщикаЯндекс = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
	Если Геокодирование_Использование
		И Геокодирование_ТипПоставщика = ТипПоставщикаOSM 
		И НЕ Картография_Использование
		И НЕ ПостроениеМаршрутов_Использование Тогда
		
		Картография_ТипПоставщика         = ТипПоставщикаOSM;
		ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаOSM;
		Картография_Использование         = Истина;
		ПостроениеМаршрутов_Использование = Истина;
		
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресКартография"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресГеокодирования"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутов"));
		
	ИначеЕсли Геокодирование_Использование
		И Геокодирование_ТипПоставщика = ТипПоставщикаЯндекс
		И НЕ Картография_Использование
		И НЕ ПостроениеМаршрутов_Использование Тогда
		
		Картография_ТипПоставщика         = ТипПоставщикаЯндекс;
		ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаЯндекс;
		Картография_Использование         = Истина;
		ПостроениеМаршрутов_Использование = Истина;
		
	КонецЕсли;
	
	Геокодирование_Сервер             = "";
	Геокодирование_Ключ               = "";
	Геокодирование_ДополнительныйКлюч = "";
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПостроениеМаршрутов_ТипПоставщикаПриИзменении(Элемент)
	
	ТипПоставщикаOSM    = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM");
	ТипПоставщикаЯндекс = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
	Если ПостроениеМаршрутов_Использование
		И ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаOSM 
		И НЕ Картография_Использование
		И НЕ Геокодирование_Использование Тогда
		
		Картография_ТипПоставщика         = ТипПоставщикаOSM;
		Геокодирование_ТипПоставщика      = ТипПоставщикаOSM;
		Картография_Использование         = Истина;
		Геокодирование_Использование      = Истина;
		
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресКартография"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресГеокодирования"));
		ЗаполнитьАдресПоУмолчанию(Команды.Найти("ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутов"));
		
	ИначеЕсли ПостроениеМаршрутов_Использование
		И ПостроениеМаршрутов_ТипПоставщика = ТипПоставщикаЯндекс
		И НЕ Картография_Использование
		И НЕ Геокодирование_Использование Тогда
		
		Картография_ТипПоставщика         = ТипПоставщикаЯндекс;
		Геокодирование_ТипПоставщика      = ТипПоставщикаЯндекс;
		Картография_Использование         = Истина;
		Геокодирование_Использование      = Истина;
		
	КонецЕсли;

	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПостроениеМаршрутовЖД_ТипПоставщикаПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Навигация_ТипПоставщикаПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Маршрутизация_ТипПоставщикаПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Маршрутизация_ТипАвторизацииПриИзменении(Элемент)
	Маршрутизация_Токен                 = "";
	Маршрутизация_ИдентификаторКомпании = "";
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкиАдресов_ИспользованиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкиАдресов_ТипПоставщикаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
	ПодсказкиАдресов_Сервер = "";
	ПодсказкиАдресов_Ключ   = "";
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьАдресПоУмолчанию(Команда)
	ВидОперации = Команда.Имя;
	
	Если ВидОперации = "ЗаполнитьПоУмолчаниюАдресКартография" Тогда
		Картография_Сервер = "https://{s}.tile.openstreetmap.org/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресГеокодирования" Тогда
		Геокодирование_Сервер = "https://nominatim.openstreetmap.org/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресСервисаПодсказок" Тогда
		ПодсказкиАдресов_Сервер = "https://nominatim.openstreetmap.org/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресГеокодированияDaData" Тогда
		Геокодирование_Сервер = "https://cleaner.dadata.ru/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресСервисаПодсказокDaData" Тогда
		ПодсказкиАдресов_Сервер = "https://suggestions.dadata.ru/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутов" Тогда
		ПостроениеМаршрутов_Сервер = "https://router.project-osrm.org/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутовРарус" Тогда
		ПостроениеМаршрутов_Сервер = "https://maps.rarus-cloud.ru/";
	ИначеЕсли ВидОперации = "ЗаполнитьПоУмолчаниюАдресПостроениеМаршрутовЖД" Тогда
		ПостроениеМаршрутовЖД_Сервер = "https://signal.eu.org/osm/eu/";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ПередЗаписью();
	СохранитьНастройкиКартографииМаршрутизации();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ПередЗаписью();
	СохранитьНастройкиКартографииМаршрутизации();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроксиСервера(Команда)
	
	ПараметрыФормы = Неопределено;
	Если ОбщегоНазначенияКлиент.ИнформационнаяБазаФайловая() Тогда
		ПараметрыФормы = Новый Структура("НастройкаПроксиНаКлиенте", Истина);
	КонецЕсли;
	
	ПолучениеФайловИзИнтернетаКлиент.ОткрытьФормуПараметровПроксиСервера(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьOAuthтокен(Команда)
	ОткрытьФорму(
	"Обработка.уатАРМЛогиста_уэ.Форма.ФормаOAuth",
	,
	ЭтотОбъект,
	,
	,
	,
	Новый ОписаниеОповещения("ПолучитьТокенЯндексЗавершение", ЭтотОбъект),
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьНастройкиКартографииМаршрутизации()
	
	СтруктураНастроек = уатЭлектронныеКартыСервер.ПолучитьНастройкиСервераКартографииМаршрутизации();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиКартографииМаршрутизации()
	
	Картография_Сервер           = СокрЛП(Картография_Сервер);
	Геокодирование_Сервер        = СокрЛП(Геокодирование_Сервер);
	ПостроениеМаршрутов_Сервер   = СокрЛП(ПостроениеМаршрутов_Сервер);
	ПостроениеМаршрутовЖД_Сервер = СокрЛП(ПостроениеМаршрутовЖД_Сервер);
	
	Если ЗначениеЗаполнено(Картография_Сервер)
		И Прав(Картография_Сервер, 1) <> "/" Тогда 
		Картография_Сервер = Картография_Сервер + "/";
	КонецЕсли;
	Если ЗначениеЗаполнено(Геокодирование_Сервер)
		И Прав(Геокодирование_Сервер, 1) <> "/" Тогда 
		Геокодирование_Сервер = Геокодирование_Сервер + "/";
	КонецЕсли;
	Если ЗначениеЗаполнено(ПостроениеМаршрутов_Сервер)
		И Прав(ПостроениеМаршрутов_Сервер, 1) <> "/" Тогда 
		ПостроениеМаршрутов_Сервер = ПостроениеМаршрутов_Сервер + "/";
	КонецЕсли;
	Если ЗначениеЗаполнено(ПостроениеМаршрутовЖД_Сервер)
		И Прав(ПостроениеМаршрутовЖД_Сервер, 1) <> "/" Тогда 
		ПостроениеМаршрутовЖД_Сервер = ПостроениеМаршрутовЖД_Сервер + "/";
	КонецЕсли;
	
	СтруктураНастроек = уатЭлектронныеКартыСервер.НастройкиСервераКартографииМаршрутизацииПоУмолчанию();
	ЗаполнитьЗначенияСвойств(СтруктураНастроек, ЭтотОбъект);
	уатЭлектронныеКартыСервер.СохранитьНастройкиСервераКартографииМаршрутизации(СтруктураНастроек);
		
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ГруппаКартография.Доступность           = Картография_Использование;
	Элементы.ГруппаГеокодирование.Доступность        = Геокодирование_Использование;
	Элементы.ГруппаПодсказкиАдресов.Доступность      = ПодсказкиАдресов_Использование;
	Элементы.ГруппаПостроениеМаршрутов.Доступность   = ПостроениеМаршрутов_Использование;
	Элементы.ГруппаНавигация.Доступность             = Навигация_Использование;
	Элементы.ГруппаМаршрутизация.Доступность         = Маршрутизация_Использование;
	Элементы.ГруппаПостроениеМаршрутовЖД.Доступность = ПостроениеМаршрутовЖД_Использование;
	
	Элементы.СтраницыКартография.Доступность           = ЗначениеЗаполнено(Картография_ТипПоставщика);
	Элементы.СтраницыГеокодирование.Доступность        = ЗначениеЗаполнено(Геокодирование_ТипПоставщика);
	Элементы.ПодсказкиАдресовНастройки.Доступность     = ЗначениеЗаполнено(ПодсказкиАдресов_ТипПоставщика);
	Элементы.СтраницыПостроениеМаршрутов.Доступность   = ЗначениеЗаполнено(ПостроениеМаршрутов_ТипПоставщика);
	Элементы.СтраницыПостроениеМаршрутовЖД.Доступность = ЗначениеЗаполнено(ПостроениеМаршрутовЖД_ТипПоставщика);
	
	Если Картография_Использование
		И Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
		Элементы.СтраницыКартография.ТекущаяСтраница = Элементы.СтраницаКартографияOSM;
		Элементы.СтраницаКартографияOSM.Видимость    = Истина;
		Картография_Ключ   = "";
	ИначеЕсли Картография_Использование
		И Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Элементы.СтраницыКартография.ТекущаяСтраница = Элементы.СтраницаКартографияЯндекс;
		Элементы.СтраницаКартографияOSM.Видимость    = Ложь;
		
		Картография_Сервер = "";
	Иначе
		Элементы.СтраницыКартография.ТекущаяСтраница = Элементы.СтраницаКартографияOSM;
		Элементы.СтраницаКартографияOSM.Видимость    = Истина;
		
		Картография_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка");
		Картография_Сервер = "";
		Картография_Ключ   = "";
	КонецЕсли;
	
	Если Геокодирование_Использование
		И Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
		Элементы.СтраницыГеокодирование.ТекущаяСтраница = Элементы.СтраницаГеокодированиеOSM;
		Элементы.СтраницаГеокодированиеDaData.Видимость = Ложь;
		Элементы.СтраницаГеокодированиеOSM.Видимость    = Истина;
		Элементы.СтраницаГеокодированиеЯндекс.Видимость = Ложь;
		
		Геокодирование_Ключ = "";
		Геокодирование_ДополнительныйКлюч = "";
	ИначеЕсли Геокодирование_Использование
		И Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Элементы.СтраницыГеокодирование.ТекущаяСтраница = Элементы.СтраницаГеокодированиеЯндекс;
		Элементы.СтраницаГеокодированиеЯндекс.Видимость = Истина;
		Элементы.СтраницаГеокодированиеOSM.Видимость    = Ложь;
		Элементы.СтраницаГеокодированиеDaData.Видимость = Ложь;
		
		Геокодирование_Сервер = "";
		Геокодирование_ДополнительныйКлюч = "";
	ИначеЕсли Геокодирование_Использование
		И Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData") Тогда
		Элементы.СтраницаГеокодированиеDaData.Видимость = Истина;
		Элементы.СтраницаГеокодированиеOSM.Видимость    = Ложь;
		Элементы.СтраницаГеокодированиеЯндекс.Видимость = Ложь;
	Иначе
		Элементы.СтраницыГеокодирование.ТекущаяСтраница = Элементы.СтраницаГеокодированиеOSM;
		Элементы.СтраницаГеокодированиеDaData.Видимость = Ложь;
		Элементы.СтраницаГеокодированиеOSM.Видимость    = Истина;
		Элементы.СтраницаГеокодированиеЯндекс.Видимость = Ложь;
		
		Геокодирование_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка");
		Геокодирование_Сервер = "";
		Геокодирование_Ключ = "";
		Геокодирование_ДополнительныйКлюч = "";
	КонецЕсли;
	
	Если ПодсказкиАдресов_Использование
		И ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
		Элементы.СтраницыПодсказкиАдресов.ТекущаяСтраница = Элементы.СтраницаПодсказкиАдресовOSM;
		Элементы.СтраницаПодсказкиАдресовDaData.Видимость = Ложь;
		Элементы.СтраницаПодсказкиАдресовOSM.Видимость    = Истина;
		Элементы.СтраницаПодсказкиАдресовЯндекс.Видимость = Ложь;
		
		ПодсказкиАдресов_Ключ   = "";
	ИначеЕсли ПодсказкиАдресов_Использование
		И ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Элементы.СтраницыПодсказкиАдресов.ТекущаяСтраница = Элементы.СтраницаПодсказкиАдресовЯндекс;
		Элементы.СтраницаПодсказкиАдресовЯндекс.Видимость = Истина;
		Элементы.СтраницаПодсказкиАдресовOSM.Видимость    = Ложь;
		Элементы.СтраницаПодсказкиАдресовDaData.Видимость = Ложь;
		
		ПодсказкиАдресов_Сервер = "";
	ИначеЕсли ПодсказкиАдресов_Использование
		И ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.DaData") Тогда
		Элементы.СтраницаПодсказкиАдресовDaData.Видимость = Истина;
		Элементы.СтраницаПодсказкиАдресовOSM.Видимость    = Ложь;
		Элементы.СтраницаПодсказкиАдресовЯндекс.Видимость = Ложь;
	Иначе
		Элементы.СтраницыПодсказкиАдресов.ТекущаяСтраница = Элементы.СтраницаПодсказкиАдресовOSM;
		Элементы.СтраницаПодсказкиАдресовDaData.Видимость = Ложь;
		Элементы.СтраницаПодсказкиАдресовOSM.Видимость    = Истина;
		Элементы.СтраницаПодсказкиАдресовЯндекс.Видимость = Ложь;
		
		ПодсказкиАдресов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка");
		ПодсказкиАдресов_Сервер = "";
		ПодсказкиАдресов_Ключ   = "";
		ПодсказкиАдресов_СоздаватьПунктыВЗаказеНаТС = Ложь;
	КонецЕсли;
		

	Если ПостроениеМаршрутов_Использование
		И ПостроениеМаршрутов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
		Элементы.СтраницыПостроениеМаршрутов.ТекущаяСтраница = Элементы.СтраницаПостроениеМаршрутовOSM;
		Элементы.СтраницаПостроениеМаршрутовOSM.Видимость    = Истина;
		
		ПостроениеМаршрутов_Ключ   = "";
	ИначеЕсли ПостроениеМаршрутов_Использование
		И ПостроениеМаршрутов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Элементы.СтраницыПостроениеМаршрутов.ТекущаяСтраница = Элементы.СтраницаПостроениеМаршрутовЯндекс;
		Элементы.СтраницаПостроениеМаршрутовOSM.Видимость    = Ложь;
		
		ПостроениеМаршрутов_Сервер = "";
	Иначе
		Элементы.СтраницыПостроениеМаршрутов.ТекущаяСтраница = Элементы.СтраницаПостроениеМаршрутовOSM;
		Элементы.СтраницаПостроениеМаршрутовOSM.Видимость    = Истина;
		
		ПостроениеМаршрутов_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка");
		ПостроениеМаршрутов_Сервер = "";
		ПостроениеМаршрутов_Ключ   = "";
	КонецЕсли;
	
	Если ПостроениеМаршрутовЖД_Использование
		И ПостроениеМаршрутовЖД_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.OSM") Тогда
		Элементы.СтраницыПостроениеМаршрутовЖД.ТекущаяСтраница = Элементы.СтраницаПостроениеМаршрутовЖДOSM;
		Элементы.СтраницаПостроениеМаршрутовЖДOSM.Видимость    = Истина;
	Иначе
		Элементы.СтраницыПостроениеМаршрутовЖД.ТекущаяСтраница = Элементы.СтраницаПостроениеМаршрутовЖДOSM;
		Элементы.СтраницаПостроениеМаршрутовЖДOSM.Видимость    = Истина;
		
		ПостроениеМаршрутовЖД_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.ПустаяСсылка");
		ПостроениеМаршрутовЖД_Сервер        = "";
	КонецЕсли;
	
	Если Навигация_Использование
		И Навигация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Навигация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
	Иначе
		Навигация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
		Навигация_Ключ                 = "";
		Навигация_ИдентификаторКлиента = "";
	КонецЕсли;
	
	Если Маршрутизация_Использование
		И Маршрутизация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс") Тогда
		Маршрутизация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
	Иначе
		Маршрутизация_ТипПоставщика = ПредопределенноеЗначение("Перечисление.уатТипыЭлектронныхКарт.Яндекс");
		Маршрутизация_ИдентификаторКомпании  = "";
		Маршрутизация_Ключ                   = "";
		Маршрутизация_Токен                  = "";
	КонецЕсли;  
	Элементы.Маршрутизация_Ключ.Видимость        = НЕ Маршрутизация_ТипАвторизации = "OAuth-токен";
	Элементы.ГруппаМаршрутизация_Токен.Видимость = Маршрутизация_ТипАвторизации = "OAuth-токен";
	Элементы.Маршрутизация_Ключ.ПодсказкаВвода   = ?(Маршрутизация_ТипАвторизации = "OAuth-токен",
		Нстр("ru = 'Ключ оптимизации'"), Нстр("ru = 'Ключ маршрутизации и оптимизации'"));
	
КонецПроцедуры

Процедура ПолучитьТокенЯндексЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Маршрутизация_Токен = Результат;
	
КонецПроцедуры

#КонецОбласти
