
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресВрХранилища = Параметры.АдресВрХранилища;
	
	ЭтоКОРП = уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП();
	Элементы.ГруппаОтборСортировкаГрузовПоЗонам.Видимость  = ЭтоКОРП;
	
	Если Параметры.Свойство("ЭтоАРМДиспетчера") Тогда
		Заголовок = Нстр("ru = 'АРМ Диспетчера: Отбор'");
		Элементы.ГруппаОтборПоСвойствамГруза.Видимость  = Ложь;
	КонецЕсли;
	  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	КомпоновщикДанныхЗаказов = ВладелецФормы.ЗаказыСписок.КомпоновщикНастроек;
	КомпоновщикДанныхЗаказов.Настройки.Отбор.Элементы.Очистить();
	Для Каждого ТекОтбор Из ВладелецФормы.ЗаказыСписок.Отбор.Элементы Цикл
		Если ТекОтбор.РежимОтображения 
			= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
			Продолжить;
		КонецЕсли;
		Отбор = КомпоновщикДанныхЗаказов.Настройки.Отбор;
		Если ТипЗнч(ТекОтбор) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			НовыйОтбор = Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекОтбор);
			СоздатьОтборы(НовыйОтбор, ТекОтбор.Элементы);
		Иначе
			НовыйОтбор = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекОтбор);
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьТаблицыОтборов();
	
	УстановитьВидимостьДоступность();
	ОбновитьСписокЗон();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	ПараметрыПередачи = Новый Структура;
	ПараметрыПередачи.Вставить("АдресВрХранилища", ПолучитьСтруктуруПараметровОтборовАдрес());
	ПараметрыПередачи.Вставить("КомпоновщикДанныхЗаказов", КомпоновщикДанныхЗаказов.Настройки.Отбор.Элементы);
	
	Закрыть(ПараметрыПередачи);		
КонецПроцедуры

&НаКлиенте
Процедура ЗоныОтметитьВсе(Команда)
	
	Для Каждого ТекСтрока Из ОтборЗоны.ПолучитьЭлементы() Цикл
		Для Каждого ТекСтрока1 Из ТекСтрока.ПолучитьЭлементы() Цикл
			ТекСтрока1.Использование = 1;
		КонецЦикла;
		ТекСтрока.Использование = 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗоныСнятьВсе(Команда)
		
	Для Каждого ТекСтрока Из ОтборЗоны.ПолучитьЭлементы() Цикл
		Для Каждого ТекСтрока1 Из ТекСтрока.ПолучитьЭлементы() Цикл
			ТекСтрока1.Использование = 0;
		КонецЦикла;
		ТекСтрока.Использование = 0;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗоныСвернутьВсе(Команда)
	Для каждого ТекСтрока ИЗ ОтборЗоны.ПолучитьЭлементы() Цикл
		Элементы.ОтборЗоны.Свернуть(ТекСтрока.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗоныРазвернутьВсе(Команда)
	Для каждого ТекСтрока ИЗ ОтборЗоны.ПолучитьЭлементы() Цикл
		Элементы.ОтборЗоны.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗоныОбновить(Команда)
	ОбновитьСписокЗон();
	Для Каждого ТекСтрока Из ОтборЗоны.ПолучитьЭлементы() Цикл
		Элементы.ОтборЗоны.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПоСвойствамГрузаЗначениеПриИзменении(Элемент) 
	ТекСтрока = Элементы.ОтборПоСвойствамГруза.ТекущиеДанные;
	ТекСтрока.Пометка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствамЗаказаЗначениеПриИзменении(Элемент)
	ТекСтрока = Элементы.ОтборПоСвойствамЗаказа.ТекущиеДанные;
	ТекСтрока.Пометка = Истина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ОтборЗоныИспользованиеПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОтборЗоны.ТекущиеДанные;
	
	ПодчСтроки = ТекДанные.ПолучитьЭлементы();
	
	Если ПодчСтроки.Количество() = 0 И ТекДанные.Использование = 2 тогда 
		ТекДанные.Использование = 0;
		
	ИначеЕсли ПодчСтроки.Количество() = 0 Тогда
		НовЗначФл = ?(ТекДанные.Использование = 2, 0, ТекДанные.Использование);
		
	Иначе
		НовЗначФл = ?(ТекДанные.Использование = 2, 0, ТекДанные.Использование);
		ТекДанные.Использование = НовЗначФл;
		Для Каждого ТекСтрока Из ТекДанные.ПолучитьЭлементы() Цикл
			ТекСтрока.Использование = НовЗначФл;
		КонецЦикла;
	КонецЕсли;
	
	КолОтмеченных = 0;
	СтрокаРодитель = ТекДанные.ПолучитьРодителя();
	Если СтрокаРодитель <> Неопределено тогда
		Для Каждого ТекСтрока Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			Если ТекСтрока.Использование тогда
				КолОтмеченных = КолОтмеченных + 1;
			КонецЕсли;
		КонецЦикла;
		Если КолОтмеченных = 0 тогда
			СтрокаРодитель.Использование = 0;
		ИначеЕсли СтрокаРодитель.ПолучитьЭлементы().Количество() = КолОтмеченных тогда
			СтрокаРодитель.Использование = 1;
		Иначе
			СтрокаРодитель.Использование = 2;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПунктаОтправленияВЗонеПриИзменении(Элемент)
	Если НЕ ПроверкаПунктаОтправленияВЗоне И НЕ ПроверкаПунктаНазначенияВЗоне Тогда
		ЗоныСнятьВсе(Неопределено);
	КонецЕсли;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПунктаНазначенияВЗонеПриИзменении(Элемент)
	Если НЕ ПроверкаПунктаОтправленияВЗоне И НЕ ПроверкаПунктаНазначенияВЗоне Тогда
		ЗоныСнятьВсе(Неопределено);
	КонецЕсли;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствамГрузаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствамГрузаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствамЗаказаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствамЗаказаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьОтборы(ЗаказыСписокОтбор, КомпоновщикДанныхЗаказов)
	
	Для Каждого ТекЭлемент Из КомпоновщикДанныхЗаказов Цикл
		Если ТипЗнч(ТекЭлемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			ТекНастройка = ЗаказыСписокОтбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ТекНастройка, ТекЭлемент);
			СоздатьОтборы(ТекНастройка, ТекЭлемент.Элементы);
		Иначе
			Если НЕ ЗначениеЗаполнено(ТекЭлемент.ЛевоеЗначение) Тогда
				Продолжить;
			КонецЕсли;
			ТекНастройка = ЗаказыСписокОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ТекНастройка, ТекЭлемент);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПараметровОтборовАдрес()
	
	врОтборПоСвойствамГруза = РеквизитФормыВЗначение("ОтборПоСвойствамГруза");
	врОтборПоСвойствамЗаказа = РеквизитФормыВЗначение("ОтборПоСвойствамЗаказа");
	врОтборЗоны = РеквизитФормыВЗначение("ОтборЗоны");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("врПроверкаПунктаОтправленияВЗоне",	 ПроверкаПунктаОтправленияВЗоне);
	СтруктураПараметров.Вставить("врПроверкаПунктаНазначенияВЗоне",		 ПроверкаПунктаНазначенияВЗоне);
	СтруктураПараметров.Вставить("врОтборПоСвойствамГруза",				 врОтборПоСвойствамГруза);
	СтруктураПараметров.Вставить("врОтборПоСвойствамЗаказа",			 врОтборПоСвойствамЗаказа);
	СтруктураПараметров.Вставить("врОтборЗоны",							 врОтборЗоны);
		
	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметров, Новый УникальныйИдентификатор);	
				
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицыОтборов()
	
	СтруктураПараметров = ПолучитьИзВременногоХранилища(АдресВрХранилища);
	ПроверкаПунктаОтправленияВЗоне = СтруктураПараметров.врПроверкаПунктаОтправленияВЗоне;
	ПроверкаПунктаНазначенияВЗоне  = СтруктураПараметров.врПроверкаПунктаНазначенияВЗоне;
	
	врОтборПоСвойствамГруза  = РеквизитФормыВЗначение("ОтборПоСвойствамГруза");
	врОтборПоСвойствамЗаказа = РеквизитФормыВЗначение("ОтборПоСвойствамЗаказа");
	врОтборЗоны = РеквизитФормыВЗначение("ОтборЗоны");
	
	врОтборПоСвойствамГруза  = СтруктураПараметров.врОтборПоСвойствамГруза;
	врОтборПоСвойствамЗаказа = СтруктураПараметров.врОтборПоСвойствамЗаказа;
	врОтборЗоны = СтруктураПараметров.врОтборЗоны;
	
	ЗначениеВРеквизитФормы(врОтборПоСвойствамГруза,"ОтборПоСвойствамГруза");
	ЗначениеВРеквизитФормы(врОтборПоСвойствамЗаказа,"ОтборПоСвойствамЗаказа");
	ЗначениеВРеквизитФормы(врОтборЗоны,"ОтборЗоны");
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ОтборЗоны.Доступность = ПроверкаПунктаОтправленияВЗоне ИЛИ ПроверкаПунктаНазначенияВЗоне;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗон()
	ЗоныДерево = РеквизитФормыВЗначение("ОтборЗоны");
	КопияЗонДерево = ЗоныДерево.Скопировать();
	
	ЗоныДерево.Строки.Очистить();
	Выборка1 = Справочники.уатГеозоны_уэ.Выбрать(Справочники.уатГеозоны_уэ.ПустаяСсылка());
	
	ПравоОграничениеЗонПоСотруднику = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(),ПланыВидовХарактеристик.уатПраваИНастройки.РазрешитьВыборТолькоЗакрепленныхЗон);
	
	Пока Выборка1.Следующий() Цикл
		Если НЕ Выборка1.ЭтоГруппа Тогда
			Если ПравоОграничениеЗонПоСотруднику = Истина Тогда
				тблСотрудникиЗоны = Выборка1.Сотрудники;
				Если тблСотрудникиЗоны.Количество() > 0
					И тблСотрудникиЗоны.НайтиСтроки(Новый Структура("Сотрудник", ПользователиКлиентСервер.АвторизованныйПользователь())).Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		НовСтрока1 = ЗоныДерево.Строки.Добавить();
		НовСтрока1.Зона = Выборка1.Ссылка;
		НовСтрока1.ЭтоГруппа = Выборка1.ЭтоГруппа;
		НайдСтрока = КопияЗонДерево.Строки.Найти(Выборка1.Ссылка, "Зона", Истина);
		Если НайдСтрока <> Неопределено И НЕ НайдСтрока.Зона.ЭтоГруппа И НайдСтрока.Использование тогда
			НовСтрока1.Использование = 1;
		КонецЕсли;
		
		Если Выборка1.Ссылка.ЭтоГруппа Тогда
			Выборка2 = Справочники.уатГеозоны_уэ.ВыбратьИерархически(Выборка1.Ссылка);
			КолИспользуемыхНиже = 0;
			Пока Выборка2.Следующий() Цикл
				
				Если ПравоОграничениеЗонПоСотруднику = Истина Тогда
					тблСотрудникиЗоны = Выборка2.Сотрудники;
					Если тблСотрудникиЗоны.Количество() > 0
						И тблСотрудникиЗоны.НайтиСтроки(Новый Структура("Сотрудник", ПользователиКлиентСервер.АвторизованныйПользователь())).Количество() = 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			
				НовСтрока2 = НовСтрока1.Строки.Добавить();
				НовСтрока2.Зона = Выборка2.Ссылка;
				НовСтрока2.ЭтоГруппа = НовСтрока2.ЭтоГруппа;
				НайдСтрока = КопияЗонДерево.Строки.Найти(Выборка2.Ссылка,"Зона",Истина);
				Если НайдСтрока <> Неопределено И НЕ НайдСтрока.Зона.ЭтоГруппа И НайдСтрока.Использование Тогда
					НовСтрока2.Использование = 1;
					КолИспользуемыхНиже = КолИспользуемыхНиже + 1;
				КонецЕсли;
				НовСтрока2.Картинка = ?(Выборка2.ЭтоГруппа, 0, 1);
			КонецЦикла;
			Если НовСтрока1.Строки.Количество() = КолИспользуемыхНиже И КолИспользуемыхНиже <> 0 Тогда
				НовСтрока1.Использование = 1;
			ИначеЕсли КолИспользуемыхНиже > 0 Тогда
				НовСтрока1.Использование = 2;
			КонецЕсли;
		КонецЕсли;
		
		НовСтрока1.Картинка = ?(Выборка1.ЭтоГруппа, 0, 1);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ЗоныДерево, "ОтборЗоны");
КонецПроцедуры

#КонецОбласти
