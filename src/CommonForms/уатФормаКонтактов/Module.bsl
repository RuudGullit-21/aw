#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументИсточник = Параметры.ДокументИсточник;
	ЗаполнитьКонтактныеЛицаСервер(ДокументИсточник);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокКонтактов

&НаКлиенте
Процедура СписокКонтактовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СписокКонтактовКонтакт  И ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.СписокКонтактов.ТекущиеДанные;
		Если ТипЗнч(ТекСтрока.Контакт) = Тип("СправочникСсылка.Сотрудники") Тогда
			уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(ТекСтрока.Контакт, СтандартнаяОбработка);
		Иначе	
			ПоказатьЗначение(,ТекСтрока.Контакт);
		КонецЕсли;
	КонецЕсли;
	
	Если Поле = Элементы.СписокКонтактовКонтЛицо  И ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.СписокКонтактов.ТекущиеДанные;
		Если ТипЗнч(ТекСтрока.КонтЛицо) = Тип("СправочникСсылка.Сотрудники") Тогда
			уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(ТекСтрока.КонтЛицо, СтандартнаяОбработка);
		Иначе	
			ПоказатьЗначение(,ТекСтрока.КонтЛицо);
		КонецЕсли;
	КонецЕсли;
	
	Если Поле = Элементы.СписокКонтактовНомерЗаказа И ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.СписокКонтактов.ТекущиеДанные;
		ПоказатьЗначение(,ТекСтрока.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтактовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКонтакнуюИнформациюСервер(ТекущиеДанные.Контакт);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтактовПриАктивизацииПоля(Элемент)
	Элементы.Контакты.ТекущаяСтрока = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтактовПриАктивизацииЯчейки(Элемент)
	Элементы.Контакты.ТекущаяСтрока = Неопределено;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтакты

&НаКлиенте
Процедура КонтактыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.КонтактыКонтакт  И ВыбраннаяСтрока <> Неопределено Тогда
		ТекСтрока = Элементы.Контакты.ТекущиеДанные;
		Если ТипЗнч(ТекСтрока.Ссылка) = Тип("СправочникСсылка.Сотрудники") Тогда
			уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(ТекСтрока.Ссылка, СтандартнаяОбработка);
		Иначе	
			ПоказатьЗначение(,ТекСтрока.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапланироватьВзаимодействие(Команда)
	
	Взаимодействие("ЗапланированноеВзаимодействие");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланироватьВстречу(Команда)
	
	Взаимодействие("Встреча");
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьSMS(Команда)
	
	Взаимодействие("СообщениеSMS", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьЭлектронноеПисьмо(Команда)
	
	Взаимодействие("ЭлектронноеПисьмоИсходящее", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"));
	
КонецПроцедуры

&НаКлиенте
Процедура Позвонить(Команда)
	
	Взаимодействие("ТелефонныйЗвонок", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
	
КонецПроцедуры

&НаКлиенте
Процедура Сообщения(Команда)
	
	ТекДанныеПредмет = Элементы.СписокКонтактов.ТекущиеДанные;
	
	Если ТекДанныеПредмет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанныеПредмет.Роль = "Водитель" Тогда
		Водители = Новый Массив();
		
		Если ТипЗнч(ТекДанныеПредмет.Контакт) = Тип("СправочникСсылка.Сотрудники") Тогда 
			Водители.Добавить(ПолучитьФизЛицо(ТекДанныеПредмет.Контакт));
		Иначе 
			Водители.Добавить(ТекДанныеПредмет.Контакт);
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("ОтборПоВодителям", Водители);
		ОткрытьФорму("Обработка.уатСообщенияМобильногоПриложения.Форма", ПараметрыФормы, ЭтотОбъект);
		
	Иначе
		ПоказатьПредупреждение(, НСтр("en='To open the form it is required to select the driver.';ru='Для открытия формы требуется выбрать водителя.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКонтактныеЛицаСервер(Ссылка)
		
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.уатТС") Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	уатТС.Водитель КАК Водитель,
		               |	уатТС.Ссылка КАК Ссылка,
		               |	уатТС.ПринадлежностьТС КАК ПринадлежностьТС
		               |ПОМЕСТИТЬ ТрС
		               |ИЗ
		               |	Справочник.уатТС КАК уатТС
		               |ГДЕ
		               |	уатТС.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	&Ссылка КАК Ссылка,
		               |	"""" КАК НомерЗаказа,
		               |	ВЫБОР
		               |		КОГДА ТрС.ПринадлежностьТС = ЗНАЧЕНИЕ(Перечисление.уатПринадлежностьТС.Привлеченное)
		               |			ТОГДА ВЫБОР
		               |					КОГДА уатСостояниеТССрезПоследних.Регистратор ЕСТЬ NULL
		               |						ТОГДА ЕСТЬNULL(ТрС.Водитель, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		               |					ИНАЧЕ уатСостояниеТССрезПоследних.Регистратор.Водитель1
		               |				КОНЕЦ
		               |		ИНАЧЕ ВЫБОР
		               |				КОГДА уатСостояниеТССрезПоследних.Регистратор ЕСТЬ NULL
		               |					ТОГДА ЕСТЬNULL(ЭкипажТС.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		               |				ИНАЧЕ уатСостояниеТССрезПоследних.Регистратор.Водитель1
		               |			КОНЕЦ
		               |	КОНЕЦ КАК Водитель
		               |ИЗ
		               |	ТрС КАК ТрС
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСостояниеТС.СрезПоследних(, ТС = &Ссылка) КАК уатСостояниеТССрезПоследних
		               |		ПО ТрС.Ссылка = уатСостояниеТССрезПоследних.ТС
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			уатЭкипажТС.ТС КАК ТС,
		               |			МАКСИМУМ(уатЭкипажТС.Сотрудник) КАК Сотрудник
		               |		ИЗ
		               |			РегистрСведений.уатЭкипажТС КАК уатЭкипажТС
		               |		ГДЕ
		               |			уатЭкипажТС.ЧленЭкипажа = ЗНАЧЕНИЕ(Перечисление.уатЧленыЭкипажа.ОсновнойВодитель)
		               |			И уатЭкипажТС.ТС = &Ссылка
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			уатЭкипажТС.ТС) КАК ЭкипажТС
		               |		ПО ТрС.Ссылка = ЭкипажТС.ТС";
		
	Иначе
		
		ИмяДокументы = Ссылка.Метаданные().Имя;
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка     КАК Ссылка,
		|	""""                КАК НомерЗаказа,
		|	Документ.Контрагент КАК Перевозчик,";
		
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка           КАК Ссылка,
			|	Документ.Номер            КАК НомерЗаказа,
			|	Документ.Контрагент       КАК Заказчик,
			|	Документ.Грузоотправитель КАК Отправитель,
			|	Документ.Грузополучатель  КАК Получатель";
			
		ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатЗаказПеревозчику_уэ") Тогда
			
			Запрос.Текст = Запрос.Текст +"
			|	Документ.Водитель КАК Водитель,
			|	0 КАК Отправитель,
			|	0 КАК Получатель";
			
		ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатМаршрутныйЛист") 
			ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
			
			Запрос.Текст = Запрос.Текст +"
			|	Документ.Водитель1 КАК Водитель1,
			|	Документ.Водитель2 КАК Водитель2,
			|	0 КАК Отправитель,
			|	0 КАК Получатель";
			
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + СтрШаблон("
		|ИЗ
		|	Документ.%1 КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка", ИмяДокументы);
		
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
			
			Запрос.Текст = Запрос.Текст + СтрШаблон("
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	уатДокументЗаказы.ЗаказГрузоотправителя.Ссылка,
			|	уатДокументЗаказы.ЗаказГрузоотправителя.Номер,
			|	уатДокументЗаказы.ЗаказГрузоотправителя.Контрагент,
			|	0,
			|	0,
			|	уатДокументЗаказы.ЗаказГрузоотправителя.Грузоотправитель,
			|	уатДокументЗаказы.ЗаказГрузоотправителя.Грузополучатель
			|ИЗ
			|	Документ.%1.Заказы КАК уатДокументЗаказы
			|ГДЕ
			|	уатДокументЗаказы.Ссылка = &Ссылка", ИмяДокументы);
			
		КонецЕсли;
		
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.уатЗаказПеревозчику_уэ") Тогда
			
			Запрос.Текст = Запрос.Текст + СтрШаблон("
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	уатДокументЗаказы.Заказ.Ссылка,
			|	уатДокументЗаказы.Заказ.Номер,
			|	уатДокументЗаказы.Заказ.Контрагент,
			|	0,
			|	уатДокументЗаказы.Заказ.Грузоотправитель,
			|	уатДокументЗаказы.Заказ.Грузополучатель
			|ИЗ
			|	Документ.%1.Грузы КАК уатДокументЗаказы
			|ГДЕ
			|	уатДокументЗаказы.Ссылка = &Ссылка", ИмяДокументы);
			
		КонецЕсли;
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	НаборКолонок = РезультатЗапроса.Колонки;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для Каждого Колонка Из НаборКолонок Цикл
				
				Если Колонка.Имя = "НомерЗаказа" 
					ИЛИ Колонка.Имя = "Ссылка"
					ИЛИ НЕ ЗначениеЗаполнено(Выборка[Колонка.Имя]) 
					ИЛИ ТипЗнч(Выборка[Колонка.Имя]) = Тип("СправочникСсылка.Организации") 
					ИЛИ Выборка[Колонка.Имя] = 0 Тогда
						Продолжить;
				КонецЕсли;
					
				НоваяСтрока = СписокКонтактов.Добавить();
				НоваяСтрока.НомерЗаказа = Выборка["НомерЗаказа"];
				НоваяСтрока.Ссылка      = Выборка["Ссылка"];
				НоваяСтрока.Контакт     = Выборка[Колонка.Имя];
				
				// Роли
				Если Колонка.Имя = "Водитель1" ИЛИ Колонка.Имя = "Водитель2" Тогда
					НоваяСтрока.Роль    = НСтр("en='Driver';ru='Водитель'");
				ИначеЕсли Колонка.Имя = "Перевозчик" 
					И ЗначениеЗаполнено(Выборка["НомерЗаказа"]) Тогда
					НоваяСтрока.Роль    = НСтр("en='Customer';ru='Заказчик'");
				ИначеЕсли Колонка.Имя = "Отправитель" Тогда
					НоваяСтрока.Роль    = НСтр("en='Sender';ru='Отправитель'");
				ИначеЕсли Колонка.Имя = "Получатель" Тогда
					НоваяСтрока.Роль    = НСтр("en='Receiver';ru='Получатель'");
				КонецЕсли;
				
				// Контактные лица (Водитель)
				Если НоваяСтрока.Роль = НСтр("en='Driver';ru='Водитель'") Тогда
					НоваяСтрока.КонтЛицо = Выборка[Колонка.Имя];
					НоваяСтрока.КонтЛицоПредставление = НоваяСтрока.КонтЛицо;
					Продолжить;
				КонецЕсли;
				
				// Контактные лица (Перевозчик, Заказчик, Отправитель, Получатель)
				Если ТипЗнч(Выборка[Колонка.Имя]) =Тип("СправочникСсылка.Контрагенты") Тогда
					НоваяСтрока.КонтЛицо = ПолучитьКонтактноеЛицоКонтрагента(НоваяСтрока.Контакт, НоваяСтрока.Роль, НоваяСтрока.Ссылка);
					НоваяСтрока.КонтЛицоПредставление = НоваяСтрока.КонтЛицо;
				ИначеЕсли ТипЗнч(Выборка[Колонка.Имя]) =Тип("СправочникСсылка.Организации") Тогда
					НоваяСтрока.КонтЛицо = Выборка[Колонка.Имя];
					НоваяСтрока.КонтЛицоПредставление = НоваяСтрока.КонтЛицо;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтакнуюИнформациюСервер(Контакт)
	
	Контакты.Очистить();
	
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ЗаполнитьКИКонтрагента(Контакт);
		
	КонецЕсли;
	
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Сотрудники") Тогда
		
		ЗаполнитьКИСотрудника(Контакт);
		
	КонецЕсли;
	
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		ЗаполнитьКИФизЛица(Контакт);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКИСотрудника(Контакт) 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Контакт);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Сотрудники.ФизическоеЛицо.ФИО КАК ФизическоеЛицоФИО
	|ПОМЕСТИТЬ Сотрудник
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сотрудник.ФизическоеЛицоФИО КАК Контакт,
	|	ФизическиеЛицаКонтактнаяИнформация.Вид КАК Вид,
	|	ВЫБОР ФизическиеЛицаКонтактнаяИнформация.Тип
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ТОГДА 7
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|			ТОГДА 8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ВебСтраница)
	|			ТОГДА 9
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Факс)
	|			ТОГДА 10
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	|			ТОГДА 11
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|			ТОГДА 12
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Skype)
	|			ТОГДА 20
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Картинка,
	|	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Значение,
	|	Сотрудник.ФизическоеЛицо КАК Ссылка,
	|	ФизическиеЛицаКонтактнаяИнформация.Тип КАК Тип
	|ИЗ
	|	Сотрудник КАК Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО Сотрудник.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Вид)Тогда
				НоваяСтрока = Контакты.Добавить();
				НоваяСтрока.Ссылка   = Выборка.Ссылка;
				НоваяСтрока.Контакт  = Выборка.Контакт;
				НоваяСтрока.Вид      = Выборка.Вид;
				НоваяСтрока.Значение = Выборка.Значение;
				НоваяСтрока.Картинка = Выборка.Картинка;
				НоваяСтрока.Тип      = Выборка.Тип;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКИФизЛица(Контакт) 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Контакт);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка,
	               |	ФизическиеЛицаКонтактнаяИнформация.Вид КАК Вид,
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Значение,
	               |	ВЫБОР ФизическиеЛицаКонтактнаяИнформация.Тип
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ТОГДА 7
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |			ТОГДА 8
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ВебСтраница)
	               |			ТОГДА 9
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Факс)
	               |			ТОГДА 10
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	               |			ТОГДА 11
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |			ТОГДА 12
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Skype)
	               |			ТОГДА 20
	               |		ИНАЧЕ 3
	               |	КОНЕЦ КАК Картинка,
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка.ФИО КАК Контакт,
	               |	ФизическиеЛицаКонтактнаяИнформация.Тип КАК Тип
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Вид)Тогда
				НоваяСтрока = Контакты.Добавить();
				НоваяСтрока.Ссылка   = Выборка.Ссылка;
				НоваяСтрока.Контакт  = Выборка.Контакт;
				НоваяСтрока.Вид      = Выборка.Вид;
				НоваяСтрока.Значение = Выборка.Значение;
				НоваяСтрока.Картинка = Выборка.Картинка;
				НоваяСтрока.Тип      = Выборка.Тип;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКИКонтрагента(Контакт) 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Контакт);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
	               |	КонтрагентыКонтактнаяИнформация.Вид КАК Вид,
	               |	ВЫБОР КонтрагентыКонтактнаяИнформация.Тип
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ТОГДА 7
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |			ТОГДА 8
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ВебСтраница)
	               |			ТОГДА 9
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Факс)
	               |			ТОГДА 10
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	               |			ТОГДА 11
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |			ТОГДА 12
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Skype)
	               |			ТОГДА 20
	               |		ИНАЧЕ 3
	               |	КОНЕЦ КАК Картинка,
	               |	КонтрагентыКонтактнаяИнформация.Представление КАК Значение,
	               |	КонтрагентыКонтактнаяИнформация.Ссылка.Наименование КАК Контакт,
	               |	КонтрагентыКонтактнаяИнформация.Тип КАК Тип
	               |ИЗ
	               |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	               |ГДЕ
	               |	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	               |	И КонтрагентыКонтактнаяИнформация.Вид <> ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	КонтактныеЛицаКонтактнаяИнформация.Ссылка,
	               |	КонтактныеЛицаКонтактнаяИнформация.Вид,
	               |	ВЫБОР КонтактныеЛицаКонтактнаяИнформация.Тип
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |			ТОГДА 7
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |			ТОГДА 8
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ВебСтраница)
	               |			ТОГДА 9
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Факс)
	               |			ТОГДА 10
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	               |			ТОГДА 11
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |			ТОГДА 12
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Skype)
	               |			ТОГДА 20
	               |		ИНАЧЕ 3
	               |	КОНЕЦ,
	               |	КонтактныеЛицаКонтактнаяИнформация.Представление,
	               |	КонтактныеЛицаКонтактнаяИнформация.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	КонтактныеЛицаКонтактнаяИнформация.Ссылка.ОбъектВладелец = &Ссылка
	               |	И КонтактныеЛицаКонтактнаяИнформация.Вид <> ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Вид)Тогда
				НоваяСтрока = Контакты.Добавить();
				НоваяСтрока.Ссылка   = Выборка.Ссылка;
				НоваяСтрока.Контакт  = Выборка.Контакт;
				НоваяСтрока.Вид      = Выборка.Вид;
				НоваяСтрока.Значение = Выборка.Значение;
				НоваяСтрока.Картинка = Выборка.Картинка;
				НоваяСтрока.Тип      = Выборка.Тип;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Взаимодействие(НаименованиеДок, ТипКонтактИнф = Неопределено)
	
	ТекДанныеКонтакт = Элементы.Контакты.ТекущиеДанные;
	ТекДанныеПредмет = Элементы.СписокКонтактов.ТекущиеДанные;
	
	Если ТекДанныеПредмет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуетсяСофтФон = сфпСофтФонПроСервер.сфпИспользоватьСофтФон() И сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпИспользоватьСофтФон");
	Если ИспользуетсяСофтФон 
		И НаименованиеДок = "ТелефонныйЗвонок" Тогда
		Если ЭтотОбъект.ТекущийЭлемент.Имя = "СписокКонтактов"
			ИЛИ ТекДанныеКонтакт = Неопределено Тогда
			
			Если ЗначениеЗаполнено(ТекДанныеПредмет.КонтЛицо) Тогда
				СписокОбъектов = Новый СписокЗначений();
				Если ТипЗнч(ТекДанныеПредмет.КонтЛицо) = Тип("СправочникСсылка.Сотрудники") Тогда
					ФизическоеЛицо = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекДанныеПредмет.КонтЛицо, "ФизическоеЛицо");
					СписокОбъектов.Добавить(ФизическоеЛицо);
				Иначе
					СписокОбъектов.Добавить(ТекДанныеПредмет.КонтЛицо);
				КонецЕсли;
				сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);
			Иначе
				ВзаимодействияКлиент.СоздатьВзаимодействиеИлиПредмет(СтрШаблон("Документ.%1.ФормаОбъекта", НаименованиеДок),
				ТекДанныеПредмет.Ссылка, ЭтотОбъект);
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
		СписокОбъектов = Новый СписокЗначений();
		Если ТипЗнч(ТекДанныеКонтакт.Ссылка) = Тип("СправочникСсылка.Сотрудники") Тогда
			ФизическоеЛицо = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекДанныеКонтакт.Ссылка, "ФизическоеЛицо");
			СписокОбъектов.Добавить(ФизическоеЛицо);
		Иначе
			СписокОбъектов.Добавить(ТекДанныеКонтакт.Ссылка);
		КонецЕсли;
		сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);

	Иначе
		Если ЭтотОбъект.ТекущийЭлемент.Имя = "СписокКонтактов"
			ИЛИ ТекДанныеКонтакт = Неопределено Тогда
			
			Если ЗначениеЗаполнено(ТекДанныеПредмет.КонтЛицо) Тогда
				ОткрытьФормуВзаимодействия(НаименованиеДок, ТипКонтактИнф, ТекДанныеПредмет);
			Иначе
				ВзаимодействияКлиент.СоздатьВзаимодействиеИлиПредмет(СтрШаблон("Документ.%1.ФормаОбъекта", НаименованиеДок),
				ТекДанныеПредмет.Ссылка, ЭтотОбъект);
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
		
		ОткрытьФормуВзаимодействия(НаименованиеДок, ТипКонтактИнф, ТекДанныеПредмет, ТекДанныеКонтакт);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФизЛицо(КонтЛицо)
	
	Возврат КонтЛицо.ФизическоеЛицо;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКИ(Контакт, Представление, Адрес, ТипКонтактнойИнформации)
	Взаимодействия.ДозаполнитьПоляКонтактов(Контакт, Представление, Адрес, ТипКонтактнойИнформации);
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВзаимодействия(НаименованиеДок, ТипКонтактИнф, ТекДанныеПредмет, ТекДанныеКонтакт = Неопределено)
	
	Адрес = "";
	Представление = "";
	
	Если ТипЗнч(ТекДанныеПредмет.Ссылка) <> Тип("СправочникСсылка.уатТС") Тогда
		Предмет = ТекДанныеПредмет.Ссылка;
	Иначе 
		Предмет = "";
	КонецЕсли;
	
	Если ТекДанныеКонтакт = Неопределено Тогда
		Если ТипЗнч(ТекДанныеПредмет.КонтЛицо) = Тип("СправочникСсылка.Сотрудники") Тогда
			Контакт = ПолучитьФизЛицо(ТекДанныеПредмет.КонтЛицо); 
		Иначе
			Контакт = ТекДанныеПредмет.КонтЛицо;
		КонецЕсли;
	Иначе
		Контакт = ТекДанныеКонтакт.Ссылка;
		Если ТекДанныеКонтакт.Тип = ТипКонтактИнф Тогда
			Адрес = ТекДанныеКонтакт.Значение;
		КонецЕсли;
		Если НаименованиеДок = "ЗапланированноеВзаимодействие" 
			ИЛИ НаименованиеДок = "Встреча" Тогда
			ТипКонтактИнф = ТекДанныеКонтакт.Тип;
			Адрес = ТекДанныеКонтакт.Значение;
		КонецЕСли;
	КонецЕсли;
	
	ПолучитьКИ(Контакт, Представление, Адрес, ТипКонтактИнф);
	ДанныеУчастника = Новый Структура();
	ДанныеУчастника.Вставить("ИсточникКонтактнойИнформации", Контакт);
	ДанныеУчастника.Вставить("Представление", Представление);


	Если НаименованиеДок = "СообщениеSMS" Тогда 
		
		ДанныеУчастника.Вставить("Телефон", Адрес);
		
		Адресаты = Новый Массив;
		Адресаты.Добавить(ДанныеУчастника);
		
		ВзаимодействияКлиент.ОткрытьФормуОтправкиSMS(Адресаты,,Предмет);
		
	ИначеЕсли НаименованиеДок = "ЭлектронноеПисьмоИсходящее" Тогда 
		
		ДанныеУчастника.Вставить("Адрес", Адрес);
		Адресаты = Новый Массив;
		Адресаты.Добавить(ДанныеУчастника);
		
		ПараметрыОтправки = Новый Структура();
		ПараметрыОтправки.Вставить("Получатель", Адресаты);
		ПараметрыОтправки.Вставить("ЗначенияЗаполнения",    Новый Структура("Предмет", Предмет));
		
		РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
		
	ИначеЕсли НаименованиеДок = "ТелефонныйЗвонок" Тогда
		
		ДанныеУчастника.Вставить("Контакт", Контакт);
		ДанныеУчастника.Вставить("КакСвязаться", Адрес);
		
		ПараметрыОтправки = Новый Структура();
		ПараметрыОтправки.Вставить("ЗначенияЗаполнения", Новый Структура("Предмет", Предмет));
		ПараметрыОтправки.Вставить("ДанныеУчастника", ДанныеУчастника);
		Форма = ОткрытьФорму(СтрШаблон("Документ.%1.ФормаОбъекта",НаименованиеДок), ПараметрыОтправки);
		
	ИначеЕсли НаименованиеДок = "ЗапланированноеВзаимодействие" Тогда
		
		ДанныеУчастника.Вставить("Контакт", Новый Структура("Контакт, Представление, Адрес", Контакт, Представление, Адрес));
		Форма = ОткрытьФорму(СтрШаблон("Документ.%1.ФормаОбъекта",НаименованиеДок));
		Форма.Предмет = Предмет;
		ДанныеФормы   = Форма.Объект;
		ЗаполнитьВзаимодействиеНаСервере(ДанныеФормы, ДанныеУчастника);
		ВзаимодействияКлиентСервер.ПроверитьЗаполнениеКонтактов(ДанныеФормы, Форма, "ЗапланированноеВзаимодействие");
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		Форма.КоличествоУчастников = ДанныеФормы.Участники.Количество();
		Форма.Объект.Дата = НачалоДня(ТекущаяДата());
		Форма.ИзменилисьКонтакты  = Истина;
		
	ИначеЕсли НаименованиеДок = "Встреча" Тогда
		
		ДанныеУчастника.Вставить("Контакт", Новый Структура("Контакт, Представление, Адрес", Контакт, Представление, Адрес));
		Форма = ОткрытьФорму(СтрШаблон("Документ.%1.ФормаОбъекта",НаименованиеДок));
		Форма.Предмет = Предмет;
		ДанныеФормы   = Форма.Объект;
		ЗаполнитьВстречаНаСервере(ДанныеФормы, ДанныеУчастника);
		ВзаимодействияКлиентСервер.ПроверитьЗаполнениеКонтактов(ДанныеФормы, Форма, "Встреча");
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		Форма.Объект.Дата = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьВзаимодействиеНаСервере(ДанныеФормы, ДанныеУчастника)
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.ЗапланированноеВзаимодействие"));
	Док = Документы.ЗапланированноеВзаимодействие.СоздатьДокумент();
	Док.Заполнить(ДанныеУчастника);

	ЗначениеВДанныеФормы(Док,ДанныеФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьВстречаНаСервере(ДанныеФормы, ДанныеУчастника)
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.Встреча"));
	Док = Документы.Встреча.СоздатьДокумент();
	Док.Заполнить(ДанныеУчастника);

	ЗначениеВДанныеФормы(Док,ДанныеФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонтактноеЛицоКонтрагента(Контрагент, Роль, Заказ)
	
	Если Роль = "Отправитель" Тогда
		Если ЗначениеЗаполнено(Заказ.КонтактноеЛицоГрузоотправителя) Тогда
			КонтЛицо = Заказ.КонтактноеЛицоГрузоотправителя;
		Иначе
			КонтЛицо = Контрагент.ОсновноеКонтактноеЛицо;
		КонецЕсли;
	ИначеЕсли Роль = "Получатель" Тогда
		Если ЗначениеЗаполнено(Заказ.КонтактноеЛицоГрузополучателя) Тогда
			КонтЛицо = Заказ.КонтактноеЛицоГрузополучателя;
		Иначе
			КонтЛицо = Контрагент.ОсновноеКонтактноеЛицо;
		КонецЕсли;
	Иначе
		КонтЛицо = Контрагент.ОсновноеКонтактноеЛицо;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонтЛицо) Тогда
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Контрагент);
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	КонтактныеЛица.Ссылка КАК КонтЛицо
		               |ИЗ
		               |	Справочник.КонтактныеЛица КАК КонтактныеЛица
		               |ГДЕ
		               |	КонтактныеЛица.ОбъектВладелец = &Ссылка
		               |	И НЕ КонтактныеЛица.ПометкаУдаления";
		ВыборкаКонтЛиц = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаКонтЛиц.Следующий() Тогда
			
			КонтЛицо = ВыборкаКонтЛиц.КонтЛицо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонтЛицо;
	
КонецФункции

#КонецОбласти
