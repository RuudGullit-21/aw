
#Область Переменные_формы

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("РежимОбновления", РежимОбновления);
	
	Если НЕ (РежимОбновления = "ЗагрузкаВКластеры"
		ИЛИ РежимОбновления = "ЗагрузкаВПункты") Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ИспользоватьЭлектронныеКарты		 = Константы.уатИспользоватьЭлектронныеКарты.Получить();
	ПостроениеМаршрутов_Использование	 = уатЭлектронныеКартыСервер.ПолучитьНастройкуСервераКартографииМаршрутизации(
		"ПостроениеМаршрутов_Использование");
	Элементы.ДекорацияКартыОтключены.Видимость	 = НЕ ИспользоватьЭлектронныеКарты;
	Элементы.ДекорацияСервисОтключен.Видимость	 = ИспользоватьЭлектронныеКарты И НЕ ПостроениеМаршрутов_Использование;
	Элементы.ТекстВопроса.Видимость				 = ИспользоватьЭлектронныеКарты И ПостроениеМаршрутов_Использование;
	Элементы.ФормаКомандаДалее.Доступность		 = ИспользоватьЭлектронныеКарты И ПостроениеМаршрутов_Использование;
	Элементы.ФормаКомандаДалее.Видимость		 = РежимОбновления = "ЗагрузкаВКластеры" ИЛИ РежимОбновления = "ЗагрузкаВПункты";
	
	УстановитьСтраницуШагаОбновления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДалее(Команда)
	
	Если ТекущийШаг = 1 И Не Команда = Неопределено Тогда 
		ОтменитьВыполнениеЗадания();
		ПоказатьПредупреждение(, НСтр("en='Update the time and distance is cancelled by the user';ru='Обновление времени и расстояния отменено пользователем'"));
		Закрыть();
		
	Иначе 
		ТекущийШаг = ТекущийШаг + 1;
		УстановитьСтраницуШагаОбновления();
		ОбработатьДействияШага();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтменитьВыполнениеЗадания()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтраницуШагаОбновления()
	
	Если ТекущийШаг = 1 Тогда 
		Элементы.ШагиОбновления.ТекущаяСтраница = Элементы.ОжиданиеЗагрузки;
	ИначеЕсли ТекущийШаг = 2 Тогда 
		Элементы.ШагиОбновления.ТекущаяСтраница = Элементы.УспешноеЗавершение;
	Иначе // ТекущийШаг = 0.
		Элементы.ШагиОбновления.ТекущаяСтраница = Элементы.ПодтверждениеДлительнойОперации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДействияШага()
	
	Если ТекущийШаг = 1 Тогда 
		Элементы.ФормаЗакрыть.Видимость = Ложь;
		Элементы.ФормаКомандаДалее.Заголовок = НСтр("en='Cancel';ru='Отмена'");
		НачатьОбновлениеВремениРасстояния();
		
	ИначеЕсли ТекущийШаг = 2 Тогда 
		Элементы.ФормаЗакрыть.Видимость = Истина;
		Элементы.ФормаКомандаДалее.Видимость = Ложь;
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = Истина;
		
	Иначе // ТекущийШаг = 0.
		// Стартовая страница.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОбновлениеВремениРасстояния()
	
	Если ВыполнятьОбновлениеВФоне() Тогда 
		ЗаданиеВыполнено = ОбновитьВремяРасстояниеНаСервере();
		Если ЗаданиеВыполнено Тогда
			КомандаДалее(Неопределено);
			Возврат;
		КонецЕсли;
		
		// Операция еще не завершена, выполняется с помощью фонового задания (асинхронно).
		ПараметрыОбработчикаОжидания = Новый Структура(
			"МинимальныйИнтервал,
			|МаксимальныйИнтервал,
			|ТекущийИнтервал,
			|КоэффициентУвеличенияИнтервала", 
			1, 15, 1, 1.4);
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		
	Иначе 
		ТекстСтатуса = НСтр("en='Updating of cluster list is running';ru='Выполняется обновление кластеров'");
		
		Если РежимОбновления = "ЗагрузкаВКластеры" Тогда 
			уатЗащищенныеФункцииСервер_уэ.ОбновитьДанныеКластеров();
		ИначеЕсли РежимОбновления = "ЗагрузкаВПункты" Тогда 
			уатЗащищенныеФункцииСервер_уэ.ОбновитьВремяРасстояниеМеждуПунктами();
		КонецЕсли;
		
		КомандаДалее(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнятьОбновлениеВФоне()
	
	Возврат Константы.уатОбновлениеРасстоянийВФоновомРежиме_уэ.Получить();
	
КонецФункции // ВыполнятьОбновлениеВФоне()

&НаСервере
Функция ОбновитьВремяРасстояниеНаСервере()
	
	АдресХранилищаДО = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ЗаданиеВыполнено = Ложь; 
	
	НаименованиеЗадания = НСтр("en='Update time and distance';ru='Обновление времени и расстояния'");
	
	ПараметрыВыполнения = Новый Массив();
	ПараметрыВыполнения.Добавить(АдресХранилищаДО);
	
	Если ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая Тогда
		ВремяОжидания = 4;
	Иначе
		ВремяОжидания = 2;
	КонецЕсли;
	
	Если РежимОбновления = "ЗагрузкаВКластеры" Тогда 
		Задание = ФоновыеЗадания.Выполнить("уатЗащищенныеФункцииСервер_уэ.ОбновитьДанныеКластеров", ПараметрыВыполнения,, НаименованиеЗадания);
	ИначеЕсли РежимОбновления = "ЗагрузкаВПункты" Тогда 
		Задание = ФоновыеЗадания.Выполнить("уатЗащищенныеФункцииСервер_уэ.ОбновитьВремяРасстояниеМеждуПунктами", ПараметрыВыполнения,, НаименованиеЗадания);
	КонецЕсли;
	
	Попытка
		Задание.ОжидатьЗавершения(ВремяОжидания);
	Исключение  
		// Специальная обработка не требуется. Предположительно, исключение вызвано истечением времени ожидания.
	КонецПопытки;
	
	ИдентификаторЗадания = Задание.УникальныйИдентификатор;
	// Если операция уже завершилась, то сразу обрабатываем результат.
	Если ЗаданиеВыполнено() Тогда
		ЗаданиеВыполнено = Истина;
	КонецЕсли; 
	
	Возврат ЗаданиеВыполнено;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено() Тогда 
			КомандаДалее(Неопределено);
			Возврат;
		КонецЕсли;
	Исключение
		ПоказатьПредупреждение(, НСтр("en='In the process of updating the distance and time the exception occurred';ru='В процессе обновления времени и расстояния возникла исключительная ситуация'"));
		Закрыть();
	КонецПопытки;
	
	ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.ТекущийИнтервал * ПараметрыОбработчикаОжидания.КоэффициентУвеличенияИнтервала;
	Если ПараметрыОбработчикаОжидания.ТекущийИнтервал > ПараметрыОбработчикаОжидания.МаксимальныйИнтервал Тогда
		ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.МаксимальныйИнтервал;
	КонецЕсли;
	
	ТекстСтатуса = ПолучитьСостояниеВыполнения();
	
	ПодключитьОбработчикОжидания(
		"Подключаемый_ПроверитьВыполнениеЗадания", 
		ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
		Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСостояниеВыполнения()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилищаДО);
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Результат.Свойство("СообщениеПользователю") Тогда 
		Возврат Результат.СообщениеПользователю;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗаданиеВыполнено()
	
	Задание = НайтиЗаданиеПоИдентификатору();
	
	Если Задание <> Неопределено И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Задание = Неопределено Тогда
		ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("en='The background job (id=%1) is not found';ru='Фоновое задание (id=%1) не найдено'"), ИдентификаторЗадания);
		ЗаписьЖурналаРегистрации(НСтр("en='Long-running operation';ru='Длительная операция'"),
			УровеньЖурналаРегистрации.Ошибка,,, ТекстКомментария);
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ОшибкаЗадания = Задание.ИнформацияОбОшибке;
		Если ОшибкаЗадания <> Неопределено Тогда
			ЗаписьЖурналаРегистрации(НСтр("en='Long-running operation';ru='Длительная операция'"),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ОшибкаЗадания));
		Иначе
			ЗаписьЖурналаРегистрации(НСтр("en='Long-running operation';ru='Длительная операция'"),
				УровеньЖурналаРегистрации.Ошибка,,,
				НСтр("en='Task ended with an unknown error.';ru='Задание завершилось с неизвестной ошибкой.'"));
		КонецЕсли;
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		ЗаписьЖурналаРегистрации(НСтр("en='Long-running operation';ru='Длительная операция'"),
			УровеньЖурналаРегистрации.Ошибка,,,
			НСтр("en='Background job cancelled by administrator';ru='Фоновое задание отменено администратором'"));
		Возврат Истина;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
	ВызватьИсключение(НСтр("en='Could not perform this operation. For details, see. in the register.';ru='Не удалось выполнить данную операцию. Подробности см. в Журнале регистрации.'"));
	
КонецФункции

&НаСервере
Функция НайтиЗаданиеПоИдентификатору()
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	Возврат Задание;
	
КонецФункции

&НаКлиенте
Процедура ДекорацияСервисОтключенОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.уатНастройкиЭлектронныхКарт");
КонецПроцедуры

#КонецОбласти
