
#Область ОписаниеПеременных

&НаКлиенте
Перем мЗапчасти; // Буферная переменная для хранения кэша выбранных запчастей.
&НаКлиенте
Перем мРаботы; // Буферная переменная для хранения кэша выбранных работ.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("РаботаПоОбслуживанию") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтрокаАвтоработы = Автоработы.ПолучитьЭлементы().Добавить();
	СтрокаАвтоработы.Тип              = 0;
	СтрокаАвтоработы.Работа           = Параметры.РаботаПоОбслуживанию;
	СтрокаАвтоработы.ФлагВыбора       = 1;

	ЗаполнитьСвязанныеМатериалы(Параметры.РаботаПоОбслуживанию, СтрокаАвтоработы);
	Если КолвоЭлементов = 0 Тогда
		Отказ = Истина;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Автотест Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	мЗапчасти = Новый Соответствие();
	мРаботы   = Новый Соответствие();

	ОтобразитьВсеСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоработыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.Автоработы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Элемент.ТекущийЭлемент = Элементы.АвтоработыФлагВыбора Тогда
		ТекСтрока.ФлагВыбора = НЕ ТекСтрока.ФлагВыбора;
		
		Если ТекСтрока.Тип = 0 Тогда
			КолВоПредУслуга = мРаботы.Получить(ТекСтрока.Работа);

			Если ТекСтрока.ФлагВыбора Тогда
				мРаботы.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), ТекСтрока.Количество + КолВоПредУслуга, ТекСтрока.Количество));
			ИначеЕсли КолВоПредУслуга <> Неопределено Тогда
				Если ТекСтрока.Количество >= КолВоПредУслуга Тогда
					мРаботы.Удалить(ТекСтрока.Работа);
				Иначе
					мРаботы.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), КолВоПредУслуга - ТекСтрока.Количество, ТекСтрока.Количество));
				КонецЕсли;
			КонецЕсли;
		Иначе
			КолВоПредУслуга = мЗапчасти.Получить(ТекСтрока.Работа);

			Если ТекСтрока.ФлагВыбора Тогда
				мЗапчасти.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), ТекСтрока.Количество + КолВоПредУслуга, ТекСтрока.Количество));
			ИначеЕсли КолВоПредУслуга <> Неопределено Тогда
				Если ТекСтрока.Количество >= КолВоПредУслуга Тогда
					мЗапчасти.Удалить(ТекСтрока.Работа);
				Иначе
					мЗапчасти.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), КолВоПредУслуга - ТекСтрока.Количество, ТекСтрока.Количество));
				КонецЕсли;
			КонецЕсли;
		Конецесли;
	Иначе
		ПараметрыФормы = Новый Структура("Ключ", ТекСтрока.Работа);
		Если ТипЗнч(ТекСтрока.Работа) = Тип("СправочникСсылка.Номенклатура") Тогда
			ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ОткрытьФорму("Справочник.уатРаботыПоРемонту.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтобразитьВсеСтроки(Команда)
	
	ОбойтиДеревоЗначений(Автоработы);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкиВоВсехСтроках(Команда)
	
	ОбойтиДеревоЗначений(Автоработы, 0);

КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	мсвЗапчасти = Новый Массив();
	Для Каждого ТекСтрока Из мЗапчасти Цикл
		мсвЗапчасти.Добавить(Новый Структура("Номенклатура, Количество", ТекСтрока.Ключ, ТекСтрока.Значение));
	КонецЦикла;
	
	мсвРаботы   = Новый Массив();
	Для Каждого ТекСтрока Из мРаботы Цикл
		мсвРаботы.Добавить(Новый Структура("Номенклатура, Количество", ТекСтрока.Ключ, ТекСтрока.Значение));
	КонецЦикла;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Запчасти", мсвЗапчасти);
	ЗначенияЗаполнения.Вставить("Работы",   мсвРаботы);

	Закрыть(ЗначенияЗаполнения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСвязанныеМатериалы(АвтоРабота, СтрокаАвтоработы, Знач ТекущийУровень = 0)
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	уатСвязанныеРаботыПоРемонту.СвязаннаяРабота КАК Номенклатура,
	                |	уатСвязанныеРаботыПоРемонту.Количество КАК Количество,
	                |	ВЫБОР
	                |		КОГДА уатСвязанныеРаботыПоРемонту.СвязаннаяРабота ССЫЛКА Справочник.Номенклатура
	                |			ТОГДА 0
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК Работа
	                |ИЗ
	                |	РегистрСведений.уатСвязанныеРаботыПоРемонту КАК уатСвязанныеРаботыПоРемонту
	                |ГДЕ
	                |	уатСвязанныеРаботыПоРемонту.Работа = &Авторабота
	                |	И уатСвязанныеРаботыПоРемонту.СвязаннаяРабота <> &Авторабота
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Работа УБЫВ";
	мЗапрос.УстановитьПараметр("Авторабота", АвтоРабота);
	тблМатериалы = мЗапрос.Выполнить().Выгрузить();
	Для Каждого ТекСтрока Из тблМатериалы Цикл
		
		КолвоЭлементов = КолвоЭлементов + 1;
		Если ТекСтрока.Работа Тогда
				СтрокаАвтоработыУслуга = СтрокаАвтоработы.ПолучитьЭлементы().Добавить();
				СтрокаАвтоработыУслуга.Работа      = ТекСтрока.Номенклатура;
				СтрокаАвтоработыУслуга.Количество  = ТекСтрока.Количество;
				СтрокаАвтоработыУслуга.Тип         = 0;
				СтрокаАвтоработыУслуга.ФлагВыбора  = 0;
				
				Если ТекущийУровень < 3 Тогда
					ЗаполнитьСвязанныеМатериалы(ТекСтрока.Номенклатура, СтрокаАвтоработыУслуга, ТекущийУровень + 1);
				КонецЕсли;
		Иначе
			СтрокаАвтоработыНоменклатура = СтрокаАвтоработы.ПолучитьЭлементы().Добавить();
			СтрокаАвтоработыНоменклатура.Работа           = ТекСтрока.Номенклатура;
			СтрокаАвтоработыНоменклатура.Количество       = ТекСтрока.Количество;
			СтрокаАвтоработыНоменклатура.ЕдиницаИзмерения = ТекСтрока.Номенклатура.ЕдиницаИзмерения;
			СтрокаАвтоработыНоменклатура.ФлагВыбора       = 0;
			СтрокаАвтоработыНоменклатура.Тип              = 1;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбойтиДеревоЗначений(Строка, ВыделятьЭлемент = 1)
	ПодчиненныйЭлемент = Строка.ПолучитьЭлементы();
	Для Каждого ТекСтрока из ПодчиненныйЭлемент Цикл
		ТекСтрока.ФлагВыбора = ВыделятьЭлемент;
		
		Если ТекСтрока.Тип = 0 Тогда
			КолВоПредУслуга = мРаботы.Получить(ТекСтрока.Работа);

			Если ТекСтрока.ФлагВыбора Тогда
				мРаботы.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), ТекСтрока.Количество + КолВоПредУслуга, ТекСтрока.Количество));
			ИначеЕсли КолВоПредУслуга <> Неопределено Тогда
				Если ТекСтрока.Количество >= КолВоПредУслуга Тогда
					мРаботы.Удалить(ТекСтрока.Работа);
				Иначе
					мРаботы.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), КолВоПредУслуга - ТекСтрока.Количество, ТекСтрока.Количество));
				КонецЕсли;
			КонецЕсли;
		Иначе
			КолВоПредУслуга = мЗапчасти.Получить(ТекСтрока.Работа);
			
			Если ТекСтрока.ФлагВыбора Тогда
				мЗапчасти.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), ТекСтрока.Количество + КолВоПредУслуга, ТекСтрока.Количество));
			ИначеЕсли КолВоПредУслуга <> Неопределено Тогда
				Если ТекСтрока.Количество >= КолВоПредУслуга Тогда
					мЗапчасти.Удалить(ТекСтрока.Работа);
				Иначе
					мЗапчасти.Вставить(ТекСтрока.Работа, ?(ЗначениеЗаполнено(КолВоПредУслуга), КолВоПредУслуга - ТекСтрока.Количество, ТекСтрока.Количество));
				КонецЕсли;
			КонецЕсли;
		Конецесли;
		
		ОбойтиДеревоЗначений(ТекСтрока, ВыделятьЭлемент);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
