#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Пользователь") Тогда 
		Отказ					= Истина;
		СтандартнаяОбработка	= Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		Отказ					= Истина;
		СтандартнаяОбработка	= Ложь;
	КонецЕсли;	
	ТекущийПользователь	= Параметры.Пользователь;
	сфпПривязкаНомера = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпПривязатьВнутреннийНомер");
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	Заголовок = НСтр("ru = 'Персональные настройки СофтФон'");
	Если НЕ (ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь()) Тогда
		Заголовок = Заголовок + "(" + Строка(ТекущийПользователь) + ")";
	КонецЕсли;	
	МассивАвтоматическихДействий = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	Для Каждого ЭлементМассива Из МассивАвтоматическихДействий Цикл
		СписокАвтоматическихДействий.Добавить(ЭлементМассива.Наименование);				
	КонецЦикла;	
	ЗаполнитьДерево();
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии"
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы = Неопределено Тогда 
		ЗавершениеРаботы = Ложь;
	КонецЕсли;
	
	Если ЗавершениеРаботы Тогда
		Возврат
	КонецЕсли;
	
	ОбновитьНастройки();
	
	Если сфпПереподключитьСофтФон И ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь() Тогда
		Если НЕ сфпСофтФонПроСервер.сфпИспользоватьСофтФон() Тогда
			сфпСофтФонПроКлиент.сфпОтключитьСофтФон();

		ИначеЕсли НЕ сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпИспользоватьСофтФон") Тогда
			сфпСофтФонПроКлиент.сфпОтключитьСофтФон();

		Иначе	
			сфпСофтФонПроКлиент.сфпПодключитьСофтФон();
		КонецЕсли;
		
		сфпСофтФонПроКлиент.сфпДобавитьГлобальныйПараметр("сфпЗакрыватьПанельПриЗавершенииРаботы", сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпЗакрыватьПанельПриЗавершенииРаботы"));
	КонецЕсли;

КонецПроцедуры // ПриЗакрытии()

&НаКлиенте
// Процедура - обработчик события формы "ОбработкаОповещения"
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВыбранТелефонныйНомерПользователя" Тогда
		ТД = Элементы.ДеревоНастроек.ТекущиеДанные;
		Если ТД = Неопределено Тогда Возврат; КонецЕсли;
		Если НЕ (ТД.Значение = Параметр) Тогда
			// Если изменился текущий внутренний номер пользователя
			ТД.Значение = Параметр;
			УстановитьУсловноеОформлениеПоля(ТД.Настройка);		
			// Запишем внутренний номер для текущего пользователя
			МассивПользователей = сфпСофтФонПроСервер.сфпЗаписатьНомерПользователю(Параметр, ТекущийПользователь);
			Если сфпСофтФонПроСервер.сфпИспользоватьМаршрутизацию() Тогда
				// Изменим маршрутизацию в АТС
				СтарыйНабор	= сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(, ТекущийПользователь);
				Для Каждого ПользовательМассива Из МассивПользователей Цикл
					НаборПользователя	= сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(, ПользовательМассива);
					Для Каждого СтрокаНабора Из НаборПользователя Цикл
						СтарыйНабор.Добавить(СтрокаНабора);
					КонецЦикла;	
				КонецЦикла;	
				НовыйНабор	= сфпСофтФонПроСервер.сфпПолучитьТаблицуМаршрутизации(, ТекущийПользователь);
				// Изменяем внутренний номер на новый
				Для Каждого СтрокаНабора Из НовыйНабор Цикл
					СтрокаНабора.ВнутреннийНомер = Параметр;
				КонецЦикла;	
				СписокМаршрутизации = сфпСофтФонПроСервер.сфпСформироватьСписокМаршрутизации(СтарыйНабор, НовыйНабор);
				сфпСофтФонПроСервер.сфпИзменитьМаршрутизациюВАТС(СписокМаршрутизации);
			КонецЕсли;
			сфпПереподключитьСофтФон = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбработкаОповещения()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
// Процедура - обработчик события "ПередНачаломИзменения" таблицы формы "ДеревоНастроек"
//
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	
	ИмяПВХ_СофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяПВХ_СофтфонНастройкиПользователей();
	
	ТД = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Отказ = Истина;
		
	ИначеЕсли ТД.ЭтоГруппа Тогда
		Отказ = Истина;
		
	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпИспользоватьСофтФон") Тогда
		Если ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь() Тогда
			сфпПереподключитьСофтФон = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпТекущийВнутреннийНомер") Тогда
		Если ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь() И Не сфпПривязкаНомера Тогда
			Отказ = Истина;
			
		ИначеЕсли НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, сфпУправлениеМаршрутизацией") И Не сфпПривязкаНомера Тогда
			Отказ = Истина;
			
		ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ДеревоНастроекЗначение" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ТекущийНомер", ТД.Значение);
			ОткрытьФорму("ОбщаяФорма.сфпСписокВнутреннихНомеров", ПараметрыФормы, ЭтаФорма);
		КонецЕсли;
		
	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпДополнительныеВнутренниеНомера") Тогда
		Отказ = Истина;

	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпДействиеПриВходящемЗвонке") Тогда
		Если Элемент.ТекущийЭлемент.Имя = "ДеревоНастроекЗначение" Тогда
			ВыбранныйЭлемент		= СписокАвтоматическихДействий.НайтиПоЗначению(ТД.Значение);
			ДополнительныеПараметры	= Новый Структура;
			ОповещениеВыбора		= Новый ОписаниеОповещения("ОбработкаВыбораАктивногоДействия", ЭтаФорма, ДополнительныеПараметры);
			ПоказатьВыборИзСписка(ОповещениеВыбора, СписокАвтоматическихДействий, Элементы.ДеревоНастроекЗначение, ВыбранныйЭлемент);
		КонецЕсли;
		
	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпДействиеПриИсходящемЗвонке") Тогда
		Если Элемент.ТекущийЭлемент.Имя = "ДеревоНастроекЗначение" Тогда
			ВыбранныйЭлемент		= СписокАвтоматическихДействий.НайтиПоЗначению(ТД.Значение);
			ДополнительныеПараметры	= Новый Структура;
			ОповещениеВыбора		= Новый ОписаниеОповещения("ОбработкаВыбораАктивногоДействия", ЭтаФорма, ДополнительныеПараметры);
			ПоказатьВыборИзСписка(ОповещениеВыбора, СписокАвтоматическихДействий, Элементы.ДеревоНастроекЗначение, ВыбранныйЭлемент);
		КонецЕсли;	
		
	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпЛогинНаСерверСофтФон") Тогда
		Если НЕ сфпПривязкаНомера Тогда
			Отказ = Истина;
		КонецЕсли;
		сфпПереподключитьСофтФон = Истина;
		
	ИначеЕсли ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпПарольНаСерверСофтФон") Тогда
		Если НЕ сфпПривязкаНомера Тогда
			Отказ = Истина;
		КонецЕсли;
		сфпПереподключитьСофтФон = Истина;
		
	ИначеЕсли ТипЗнч(ТД.Значение) = Тип("Булево") Тогда
		Отказ = Истина;
		ТД.Значение = НЕ ТД.Значение;
		//УстановитьУсловноеОформлениеПоля(ТД.Настройка);		
		Если ТД.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпПривязатьВнутреннийНомер") Тогда
			сфпПривязкаНомера = ТД.Значение;
			
			сфпПереподключитьСофтФон = Истина;
			
			ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы();
			Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
				Если ЭлементДерева.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпНастройкиСофтФон") Тогда
					ЭлементыДереваСофтфон = ЭлементДерева.ПолучитьЭлементы();
					Для Каждого ЭлементДереваСофтфон Из ЭлементыДереваСофтфон Цикл
						Если ЭлементДереваСофтфон.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + ".сфпАвторизацияНаСерверСофтфона") Тогда
							ЭлементДереваСофтфон.СкрыватьКолонку = НЕ сфпПривязкаНомера;
							ЭлементыДереваАвторизация = ЭлементДереваСофтфон.ПолучитьЭлементы();
							Для Каждого ЭлементДереваАвторизация Из ЭлементыДереваАвторизация Цикл
								ЭлементДереваАвторизация.СкрыватьКолонку = НЕ сфпПривязкаНомера;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДеревоНастроекПередНачаломИзменения()

&НаКлиенте
// Процедура - обработчик выбора активного действия
//
// Параметры:
//	ВыбранныйЭлемент		- ЭлементСпискаЗначений	- Выбранное действие
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров
//
Процедура ОбработкаВыбораАктивногоДействия(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда Возврат; КонецЕсли;
	ТД = Элементы.ДеревоНастроек.ТекущиеДанные;
	ТД.Значение = ВыбранныйЭлемент.Значение;
	УстановитьУсловноеОформлениеПоля(ТД.Настройка);		
КонецПроцедуры // ОбработкаВыбораАктивногоДействия()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды формы "Записать"
//
Процедура Записать(Команда)
	ОбновитьНастройки();
	СнятьУсловноеОформлениеПолей();
КонецПроцедуры // Записать()

&НаКлиенте
// Процедура - обработчик команды формы "ЗаписатьИЗакрыть"
//
Процедура ЗаписатьИЗакрыть(Команда)
	ОбновитьНастройки();
	Закрыть();
КонецПроцедуры // ЗаписатьИЗакрыть()

&НаКлиенте
Процедура сфпСправка(Команда)
	ПерейтиПоНавигационнойСсылке("https://www.telefon.1crm.ru");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура выполняет рекурсивный поиск настройки в дереве настроек
//
// Параметры:
//	СтрокиДерева	- КоллекцияСтрокДереваЗначений	- Строки дерева, в которых выполняется поиск
//	Настройка		- ПланВидовХарактеристикСсылка	- Настройка для поиска
//	ТолькоГруппы	- Булево						- Признак поиска только групп
//
// Возвращаемое значение:
//	СтрокаДереваЗначений	- Строка настройки
//
Функция НайтиНастройкуВДереве(СтрокиДерева, Настройка, ТолькоГруппы = Истина)
	НайденныйЭлемент = Неопределено;
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если ТолькоГруппы И НЕ СтрокаДерева.ЭтоГруппа Тогда Продолжить; КонецЕсли;
		Если СтрокаДерева.Настройка = Настройка Тогда
			НайденныйЭлемент = СтрокаДерева;
		Иначе
			ПодчиненныеСтрокиДерева = СтрокаДерева.ПолучитьЭлементы();
			НайденныйЭлемент = НайтиНастройкуВДереве(ПодчиненныеСтрокиДерева, Настройка, ТолькоГруппы);
		КонецЕсли;			
		Если НЕ (НайденныйЭлемент = Неопределено) Тогда Прервать; КонецЕсли; 
	КонецЦикла;	
	Возврат НайденныйЭлемент;
КонецФункции // НайтиНастройкуВДереве()	

&НаСервере
// Процедура обновляет информацию в таблице настроек.
//
Процедура ЗаполнитьДерево()
	
	НастройкиЭлементы = ДеревоНастроек.ПолучитьЭлементы();
	НастройкиЭлементы.Очистить();
	
	ИмяПВХ_СофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяПВХ_СофтфонНастройкиПользователей();
	ИмяРегистраСофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяРегистраСофтфонНастройкиПользователей();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Настройки.Родитель,
	|	Настройки.Ссылка,
	|	Настройки.ЭтоГруппа КАК ЭтоГруппа,
	|	НЕ Настройки.ЭтоГруппа КАК НомерКартинки,
	|	ЗначениеНастроек.Значение
	|ИЗ
	|	ПланВидовХарактеристик." + ИмяПВХ_СофтфонНастройкиПользователей + " КАК Настройки
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСофтфонНастройкиПользователей + " КАК ЗначениеНастроек
	|	ПО (ЗначениеНастроек.Настройка = Настройки.Ссылка)
	|	И (ЗначениеНастроек.Пользователь = &Пользователь)
	|ГДЕ
	|	НЕ Настройки.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоГруппа ИЕРАРХИЯ УБЫВ,
	|	Настройки.Код");
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДобавленныхГрупп = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
			СтрокаГруппы = НастройкиЭлементы;
			Если ЗначениеЗаполнено(Выборка.Родитель) Тогда
				НайденныйРодитель = НайтиНастройкуВДереве(СтрокаГруппы, Выборка.Родитель);
				Если НайденныйРодитель <> Неопределено Тогда
					СтрокаГруппы = НайденныйРодитель.ПолучитьЭлементы();
				КонецЕсли;	
			КонецЕсли;
			
			СтрокаНастройки = СтрокаГруппы.Добавить();
			СтрокаНастройки.Настройка = Выборка.Ссылка;
			СтрокаНастройки.ЭтоГруппа = Выборка.ЭтоГруппа;
			СтрокаНастройки.НомерКартинки = Выборка.НомерКартинки;
			Если Выборка.Ссылка = ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпАвторизацияНаСерверСофтфона Тогда
				  СтрокаНастройки.СкрыватьКолонку = НЕ сфпПривязкаНомера;
			Иначе СтрокаНастройки.СкрыватьКолонку = Ложь;
			КонецЕсли;
			СтрокаГруппыЭлементы = СтрокаНастройки.ПолучитьЭлементы();
			
		Иначе
			СтрокаНастройки = СтрокаГруппыЭлементы.Добавить();
			СтрокаНастройки.Настройка = Выборка.Ссылка;
			Если СтрокаНастройки.Настройка = ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпДействиеПриВходящемЗвонке Тогда
				ЭлементСписка = СписокАвтоматическихДействий.НайтиПоЗначению(Выборка.Значение);
				Если ЭлементСписка = Неопределено Тогда
					ЭлементСписка = СписокАвтоматическихДействий[0];
				КонецЕсли;	
				СтрокаНастройки.Значение  = ЭлементСписка.Значение;
				
			ИначеЕсли СтрокаНастройки.Настройка = ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпДействиеПриИсходящемЗвонке Тогда
				ЭлементСписка = СписокАвтоматическихДействий.НайтиПоЗначению(Выборка.Значение);
				Если ЭлементСписка = Неопределено Тогда
					ЭлементСписка = СписокАвтоматическихДействий[0];
				КонецЕсли;	
				СтрокаНастройки.Значение  = ЭлементСписка.Значение;
				
			Иначе	
				СтрокаНастройки.Значение  = Выборка.Ссылка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
			КонецЕсли;	
			СтрокаНастройки.ЭтоГруппа = Выборка.ЭтоГруппа;
			СтрокаНастройки.НомерКартинки = Выборка.НомерКартинки;
			
			Если Выборка.Ссылка = ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпЛогинНаСерверСофтФон ИЛИ
			     Выборка.Ссылка = ПланыВидовХарактеристик[ИмяПВХ_СофтфонНастройкиПользователей].сфпПарольНаСерверСофтФон Тогда
				СтрокаНастройки.СкрыватьКолонку = НЕ сфпПривязкаНомера;
			Иначе
				СтрокаНастройки.СкрыватьКолонку = Ложь;
			КонецЕсли;
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДерево()

&НаСервере
// Процедура добавляет записи в регистр настроек пользователей
//
// Параметры:
//	НастройкиЭлементы	- КоллекцияСтрокДереваЗначений	- Строки настроек
//
Процедура ДобавитьПодчиненныеНастройки(НастройкиЭлементы)
	
	ИмяРегистраСофтфонНастройкиПользователей = сфпСофтФонПроСервер.сфпИмяРегистраСофтфонНастройкиПользователей();
	
	Для Каждого СтрокаНастроек Из НастройкиЭлементы Цикл
		Если СтрокаНастроек.ЭтоГруппа Тогда
			ДобавитьПодчиненныеНастройки(СтрокаНастроек.ПолучитьЭлементы());
			
		Иначе	
			ЗаписьРегистра = РегистрыСведений[ИмяРегистраСофтфонНастройкиПользователей].СоздатьМенеджерЗаписи();
			ЗаписьРегистра.Пользователь	= ТекущийПользователь;
			ЗаписьРегистра.Настройка = СтрокаНастроек.Настройка;
			ЗаписьРегистра.Значение	= СтрокаНастроек.Настройка.ТипЗначения.ПривестиЗначение(СтрокаНастроек.Значение);
			ЗаписьРегистра.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ДобавитьПодчиненныеНастройки()	

&НаСервере
// Процедура выполняет запись значений настроек в регистр сведений.
//
Процедура ОбновитьНастройки()
	ДобавитьПодчиненныеНастройки(ДеревоНастроек.ПолучитьЭлементы());		
КонецПроцедуры // ОбновитьНастройки()

&НаСервере
// Процедура устанавливает условное оформление поля (цвет и шрифт)
//
// Параметры:
//	ИмяНастройки	- Строка	- Имя настройки
//
Процедура УстановитьУсловноеОформлениеПоля(ИмяНастройки);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоНастроек.Настройка");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.Использование = Истина;
	ЭлементОтбораДанных.ПравоеЗначение = ИмяНастройки;
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДеревоНастроекЗначение");
	
	ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "сфпСофтФон";
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста",	Новый Цвет(0, 170, 0));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
КонецПроцедуры // УстановитьУсловноеОформлениеПоля()

&НаСервере
// Процедура снимает оформление изменённых ячеек
//
// Параметры:
//	Нет.
//
Процедура СнятьУсловноеОформлениеПолей()
	КоличествоЭлементов = УсловноеОформление.Элементы.Количество();
	Для Сч = 1 По КоличествоЭлементов Цикл
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Получить(КоличествоЭлементов - Сч);
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "сфпСофтФон" Тогда
			УсловноеОформление.Элементы.Удалить(ЭлементУсловногоОформления);
		КонецЕсли;			
	КонецЦикла;		
КонецПроцедуры // СнятьУсловноеОформлениеПолей()

#КонецОбласти