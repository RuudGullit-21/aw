
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Автотест Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ВладелецФормы = Неопределено Тогда
		Отказ = Истина;
		Сообщить(НСтр("en='Immediate opening for this object is prohibited!';ru='Непосредственное открытие для данного объекта запрещено!'"));
		Возврат;
	ИначеЕсли НЕ ВладелецФормы.Объект.Свойство("ДоговорКонтрагента")
		ИЛИ НЕ ЗначениеЗаполнено(ВладелецФормы.Объект.ДоговорКонтрагента) Тогда
		Отказ = Истина;
		Сообщить(НСтр("ru='Для изменения настроек заполнения по услугам в документе необходимо указать договор контрагента.'"));
		Возврат;
	КонецЕсли;
	
	ДокументОснование = ВладелецФормы.Объект.Ссылка;
	ДокументОснование_ДоговорКонтрагента = ВладелецФормы.Объект.ДоговорКонтрагента;
	Если ВладелецФормы.Объект.Свойство("Контрагент") Тогда
		ДокументОснование_Контрагент = ВладелецФормы.Объект.Контрагент;
	ИначеЕсли ВладелецФормы.Объект.Свойство("Перевозчик") Тогда
		ДокументОснование_Контрагент = ВладелецФормы.Объект.Перевозчик;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатРеализацияУслуг")
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатСчетНаОплатуПокупателю") Тогда
		ПолучательУслуг = ПредопределенноеЗначение("Перечисление.уатПолучателиУслуг.Контрагент");
	Иначе
		ПолучательУслуг = ПредопределенноеЗначение("Перечисление.уатПолучателиУслуг.НашаОрганизация");
	КонецЕсли;
	
	ВосстановитьНастройки();
	ОтобразитьИнформациюПоНастройкам();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписьНастроекЗаполненияПоУслугам" Тогда
		ВосстановитьНастройки();
		ОтобразитьИнформациюПоНастройкам();
		УстановитьВидимость();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьНастройкуПоДоговору(Команда)
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения",
		Новый Структура("Контрагент, Договор",
		ДокументОснование_Контрагент, ДокументОснование_ДоговорКонтрагента));
	ОткрытьФорму("РегистрСведений.уатНастройкиЗаполненияПоУслугам.Форма.ФормаЗаписи",
		ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНастройкуПоДоговору(Команда)
	ПараметрыФормы = Новый Структура("Ключ",
		КлючЗаписиРегистраНастроек(ДокументОснование_Контрагент, ДокументОснование_ДоговорКонтрагента));
	ОткрытьФорму("РегистрСведений.уатНастройкиЗаполненияПоУслугам.Форма.ФормаЗаписи",
		ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВсеНастройкиЗаполнения(Команда)
	ОткрытьФорму("РегистрСведений.уатНастройкиЗаполненияПоУслугам.Форма.ФормаСписка");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьНастройки()
	
	Если Не ЗначениеЗаполнено(ДокументОснование_ДоговорКонтрагента) Тогда
		ШаблонПоУмолчанию = Истина;
		Возврат;
	КонецЕсли;
	
	ШаблонЗаполнения = уатОбщегоНазначения.ШаблонЗаполненияПоУслугам(
		ДокументОснование_ДоговорКонтрагента, ПолучательУслуг, ШаблонПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Если ШаблонПоУмолчанию Тогда
		Элементы.ДобавитьНастройкуПоДоговору.Видимость  = Истина;
		Элементы.ВыбратьНастройкуПоДоговору.Видимость   = Ложь;
		Элементы.ГруппаСтраницыНастроек.ТекущаяСтраница = Элементы.ГруппаСтраницаСтандартныйШаблон;
	Иначе
		Элементы.ДобавитьНастройкуПоДоговору.Видимость  = Ложь;
		Элементы.ВыбратьНастройкуПоДоговору.Видимость   = Истина;
		Элементы.ГруппаСтраницыНастроек.ТекущаяСтраница = Элементы.ГруппаСтраницаШаблонПоДоговору;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтобразитьИнформациюПоНастройкам()
	
	НадписьВидыДокументов = ?(ШаблонЗаполнения.ИспользоватьДанныеТТД, "ТТД, ", "")
		+ ?(ШаблонЗаполнения.ИспользоватьДанныеЗаказНаТС, "Заказ на ТС, ", "")
		+ ?(ШаблонЗаполнения.ИспользоватьДанныеЗаказПеревозчику, "Заказ перевозчику, ", "")
		+ ?(ШаблонЗаполнения.ИспользоватьДанныеМаршрутныйЛист, "Маршрутный лист, ", "")
		+ ?(ШаблонЗаполнения.ИспользоватьДанныеКорректировкаЗаписей, "Корректировка записей регистров, ", "");
	Если ПустаяСтрока(НадписьВидыДокументов) Тогда
		НадписьВидыДокументов = "<не указано>";
	Иначе
		НадписьВидыДокументов = Лев(НадписьВидыДокументов, СтрДлина(НадписьВидыДокументов) - 2);
	КонецЕсли;
	
	НадписьСверткаПоПолямДетализации = ?(ШаблонЗаполнения.СворачиватьПоПолямДетализации, "Используется", "Не используется");
	
	Если ШаблонЗаполнения.СортировкаЗаказов = 0 Тогда
		НадписьСортировкаЗаказов = "По дате документа";
	ИначеЕсли ШаблонЗаполнения.СортировкаЗаказов = 1 Тогда
		НадписьСортировкаЗаказов = "По времени отправления";
	ИначеЕсли ШаблонЗаполнения.СортировкаЗаказов = 2 Тогда
		НадписьСортировкаЗаказов = "По времени прибытия";
	КонецЕсли;
	
	Элементы.ГруппаШаблон.Заголовок = СтрШаблон("Используется шаблон ""%1""", ШаблонЗаполнения);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция КлючЗаписиРегистраНастроек(ДокументОснование_Контрагент, ДокументОснование_ДоговорКонтрагента)
	СтруктураЗаписи = Новый Структура("Контрагент, Договор",
		ДокументОснование_Контрагент, ДокументОснование_ДоговорКонтрагента);
	КлючЗаписи = РегистрыСведений.уатНастройкиЗаполненияПоУслугам.СоздатьКлючЗаписи(СтруктураЗаписи);
	Возврат КлючЗаписи;
КонецФункции

#КонецОбласти
