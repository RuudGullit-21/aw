
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Год") Тогда
		Год = Параметры.Год;
	Иначе
		Год = Год(ТекущаяДатаСеанса());
	КонецЕсли;
		
	Если Параметры.Свойство("МассивОбъектов") Тогда
		Если ТипЗнч(Параметры.МассивОбъектов) = Тип("СправочникСсылка.Календари") Тогда
			Календарь = Параметры.МассивОбъектов;
		КонецЕсли;
	КонецЕсли;
	Если Параметры.Свойство("Сотрудник") Тогда
		Сотрудник = Параметры.Сотрудник;
	КонецЕсли;
		
	СформироватьПФ();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	СформироватьПФ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	ПоказатьДиалогОтправкиПоПочте();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьПФ() 
	ТабДок = ПечатнаяФормаГрафиковРаботы(Календарь, Год);
КонецПроцедуры

&НаСервере
Функция ПечатнаяФормаГрафиковРаботы(МассивОбъектов, Год)
	РезультатыЗапроса     = ЗапросДляПечатиГрафиков(МассивОбъектов, Год).ВыполнитьПакет();
	КоличествоРезультатов = РезультатыЗапроса.Количество();
	
	ВыборкаДанныхОВремени = РезультатыЗапроса[КоличествоРезультатов - 2].Выбрать();
	ВыборкаДанныхГрафиков = РезультатыЗапроса[КоличествоРезультатов - 1].Выбрать();
	

	Макет = УправлениеПечатью.МакетПечатнойФормы("Общиймакет.ПФ_MXL_ФормаГрафикаРаботы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ФормаГрафикаРаботы";

	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб = Истина;
	
	ОбластиМакета = Новый Массив;	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластиМакета.Добавить(ОбластьШапка);
	
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластиМакета.Добавить(ОбластьЗаголовокТаблицы);
	
	ОбластьИтогоЗаМесяц = Макет.ПолучитьОбласть("ИтогоЗаМесяц");
	ОбластиМакета.Добавить(ОбластьИтогоЗаМесяц);

	ОбластьИтогоПоВидамВремениЗаМесяц = Макет.ПолучитьОбласть("ИтогоПоВидамВремениЗаМесяц");
	ОбластиМакета.Добавить(ОбластьИтогоПоВидамВремениЗаМесяц);

	ОбластьИтогоЗаКвартал = Макет.ПолучитьОбласть("ИтогоЗаКвартал");
	ОбластиМакета.Добавить(ОбластьИтогоЗаКвартал);
	
	ОбластьИтогоЗаКварталПоВидуВремени = Макет.ПолучитьОбласть("ИтогоЗаКварталПоВидамВремени");
	ОбластиМакета.Добавить(ОбластьИтогоЗаКварталПоВидуВремени);

	ОбластьИтогоЗаГод = Макет.ПолучитьОбласть("ИтогоЗаГод");
	ОбластиМакета.Добавить(ОбластьИтогоЗаГод);

	ОбластьИтогоЗаГодПоВидамВремени = Макет.ПолучитьОбласть("ИтогоЗаГодПоВидамВремени");
	ОбластиМакета.Добавить(ОбластьИтогоЗаГодПоВидамВремени);

	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	ОбластиМакета.Добавить(ОбластьПодпись);
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	ОписаниеГрафика = ОписаниеГрафикаРаботы(ВыборкаДанныхГрафиков, МассивОбъектов); 
	
	УстановитьШиринуКолонокТабличногоДокумента(ОбластиМакета);
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ОбластьШапка.Параметры.Наименование = Сотрудник.Наименование;
	Иначе
		ОбластьШапка.Параметры.Наименование = ОписаниеГрафика.Наименование;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Год = Формат(Год, "ЧГ="); 
	
	ОбластьШапка.Параметры.ОписаниеГрафика = ТекстОписанияГрафикаРаботы(ОписаниеГрафика);
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьЗаголовокТаблицы.Параметры.ОбластьДнейЗаголовок = НСтр("ru = 'Часов за день'");
	ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
	
	ДнейЗаГод  = 0;
	ЧасовЗаГод = 0;
	
	РабочихДнейЗаГодПоКалендарю = 0;
	РабочихЧасовЗаГодПоКалендарю = 0;
	ВыходныхДнейЗаГодПоКалендарю = 0;

	Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Квартал") Цикл
		
		ДнейЗаКвартал  = 0;
		ЧасовЗаКвартал = 0;
		
		РабочихДнейЗаКварталПоКалендарю = 0;
		РабочихЧасовЗаКварталПоКалендарю = 0;
		ВыходныхДнейЗаКварталПоКалендарю = 0;
		
		Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Месяц") Цикл 
			
			ДнейЗаМесяц  = 0;
			ЧасовЗаМесяц = 0;
			
			ОчиститьОбластьЯчеек(ОбластьИтогоЗаМесяц);
			ОчиститьОбластьЯчеек(ОбластьИтогоПоВидамВремениЗаМесяц);	
			
			ОбластьИтогоЗаМесяц.Параметры.Месяц = Формат(ВыборкаДанныхОВремени.Месяц, "ДФ=ММММ");
			
			Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Дата") Цикл
				
				ЧасовЗаДень			 = 0;
				ЧасовПоВидамВремениТекст = "";
				Пока ВыборкаДанныхОВремени.Следующий() Цикл 
					
					НомерДня = День(ВыборкаДанныхОВремени.Дата);
					ЧасовЗаДень = ЧасовЗаДень + Окр(ВыборкаДанныхОВремени.Часов, 2);
				КонецЦикла;	
				
				ЧасовЗаМесяц = ЧасовЗаМесяц + ЧасовЗаДень;
				ДнейЗаМесяц = ДнейЗаМесяц + ?(ЧасовЗаДень > 0, 1, 0);
				
				ОбластьИтогоЗаМесяц.Параметры["ИтогоЗаДень" + НомерДня] = ЧасовЗаДень;
				
			КонецЦикла;
			
			
			ОбластьИтогоЗаМесяц.Параметры.ДнейЗаМесяц  = ДнейЗаМесяц;
			ОбластьИтогоЗаМесяц.Параметры.ЧасовЗаМесяц = ЧасовЗаМесяц;
			
			ОбластьИтогоЗаМесяц.Параметры.ДнейПоКалендарю = ВыборкаДанныхОВремени.РабочихДней;
			ОбластьИтогоЗаМесяц.Параметры.ЧасовПоКалендарю    = Окр(ВыборкаДанныхОВремени.РабочихЧасов, 2);
			ОбластьИтогоЗаМесяц.Параметры.ВыходныхПоКалендарю = ВыборкаДанныхОВремени.ВыходныхДней;
			
			ДнейЗаКвартал  = ДнейЗаКвартал + ДнейЗаМесяц;
			ЧасовЗаКвартал = ЧасовЗаКвартал + ЧасовЗаМесяц; 
			РабочихДнейЗаКварталПоКалендарю = РабочихДнейЗаКварталПоКалендарю + ВыборкаДанныхОВремени.РабочихДней;
			РабочихЧасовЗаКварталПоКалендарю = РабочихЧасовЗаКварталПоКалендарю + Окр(ВыборкаДанныхОВремени.РабочихЧасов, 2);
			ВыходныхДнейЗаКварталПоКалендарю = ВыходныхДнейЗаКварталПоКалендарю + ВыборкаДанныхОВремени.ВыходныхДней;
			
			ДнейЗаГод  = ДнейЗаГод + ДнейЗаМесяц;
			ЧасовЗаГод = ЧасовЗаГод + ЧасовЗаМесяц; 
			РабочихДнейЗаГодПоКалендарю  = РабочихДнейЗаГодПоКалендарю + ВыборкаДанныхОВремени.РабочихДней;
			РабочихЧасовЗаГодПоКалендарю = РабочихЧасовЗаГодПоКалендарю + Окр(ВыборкаДанныхОВремени.РабочихЧасов, 2);
			ВыходныхДнейЗаГодПоКалендарю = ВыходныхДнейЗаГодПоКалендарю + ВыборкаДанныхОВремени.ВыходныхДней;
			
			
			ТабличныйДокумент.Вывести(ОбластьИтогоЗаМесяц);
			
			НомерПервойСтрокиМесяц = ТабличныйДокумент.ВысотаТаблицы;
			НомерПоследнейСтрокиМесяц = НомерПервойСтрокиМесяц;
			
			
			Для НомерДня = День(КонецМесяца(ВыборкаДанныхОВремени.Месяц)) + 1 По 31 Цикл
				Область = ТабличныйДокумент.Область(НомерПервойСтрокиМесяц, НомерДня + 1, НомерПоследнейСтрокиМесяц, НомерДня + 1);  
				Область.Объединить();
				Область.Текст = "Х";
				Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
				Область.ВертикальноеПоложение   = ВертикальноеПоложение.Центр;
			КонецЦикла;
		КонецЦикла;
		
		ОбластьИтогоЗаКвартал.Параметры.Квартал = Формат(ВыборкаДанныхОВремени.Квартал, "ДФ='к ""квартал""'");
		ОбластьИтогоЗаКвартал.Параметры.ДнейЗаКвартал  = ДнейЗаКвартал;
		ОбластьИтогоЗаКвартал.Параметры.ЧасовЗаКвартал = ЧасовЗаКвартал;
		ОбластьИтогоЗаКвартал.Параметры.ДнейЗаКварталПоКалендарю = РабочихДнейЗаКварталПоКалендарю;
		ОбластьИтогоЗаКвартал.Параметры.ЧасовЗаКварталПоКалендарю = РабочихЧасовЗаКварталПоКалендарю;
		ОбластьИтогоЗаКвартал.Параметры.ВыходныхЗаКварталПоКалендарю = ВыходныхДнейЗаКварталПоКалендарю;
		
		
		ТабличныйДокумент.Вывести(ОбластьИтогоЗаКвартал);
		
	КонецЦикла;
	
	ОбластьИтогоЗаГод.Параметры.ДнейЗаГод = ДнейЗаГод;
	ОбластьИтогоЗаГод.Параметры.ЧасовЗаГод = ЧасовЗаГод;
	ОбластьИтогоЗаГод.Параметры.ДнейЗаГодПоКалендарю = РабочихДнейЗаГодПоКалендарю;
	ОбластьИтогоЗаГод.Параметры.ЧасовЗаГодПоКалендарю = РабочихЧасовЗаГодПоКалендарю;
	ОбластьИтогоЗаГод.Параметры.ВыходныхЗаГодПоКалендарю = ВыходныхДнейЗаГодПоКалендарю;
	
	
	ТабличныйДокумент.Вывести(ОбластьИтогоЗаГод);
	
	Область = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	Область.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьПодпись) Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьПодпись);
	
	
	Возврат ТабличныйДокумент;
КонецФункции

&НаСервере
Функция ДлительностьРабочейНедели(График)
	
	ДлительностьРабочейНедели = 0;
	Для Каждого СтрокаШаблона Из График.ШаблонЗаполнения Цикл
		Если НЕ СтрокаШаблона.ДеньВключенВГрафик Тогда
			Продолжить;
		КонецЕсли;
		ДлительностьРабочейНедели = ДлительностьРабочейНедели + ПредставлениеРасписанияДня(СтрокаШаблона.НомерСтроки, График);
	КонецЦикла;
	
	Возврат ДлительностьРабочейНедели;
	
КонецФункции

&НаСервере
Функция ПредставлениеРасписанияДня(НомерДня, График)
	
	ПредставлениеИнтервалов = "";
	Секунд = 0;
	Для Каждого СтрокаРасписания Из График.РасписаниеРаботы Цикл
		Если СтрокаРасписания.НомерДня <> НомерДня Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаРасписания.ВремяОкончания) Тогда
			СекундИнтервала = КонецДня(СтрокаРасписания.ВремяОкончания) - СтрокаРасписания.ВремяНачала + 1;
		Иначе
			СекундИнтервала = СтрокаРасписания.ВремяОкончания - СтрокаРасписания.ВремяНачала;
		КонецЕсли;
		Секунд = Секунд + СекундИнтервала;
	КонецЦикла;
	
	Если Секунд = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Часов = Окр(Секунд / 3600, 1);
	
	Возврат Часов;
	
КонецФункции

&НаСервере
Функция ЗапросДляПечатиГрафиков(Знач МассивОбъектов, Год)
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		мсвВсеСотрудники = Новый Массив;
		мсвВсеСотрудники.Добавить(Сотрудник);
		КэшГрафикиСотрудников = Неопределено;
		МассивОбъектов = Новый Массив;
		
		тблГрафикиРаботыСотрудника = Новый ТаблицаЗначений;
		тблГрафикиРаботыСотрудника.Колонки.Добавить("ДатаГрафика",  Новый ОписаниеТипов("Дата"));
		тблГрафикиРаботыСотрудника.Колонки.Добавить("ГрафикРаботы", Новый ОписаниеТипов("СправочникСсылка.Календари"));
		тблГрафикиРаботыСотрудника.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
		ТекДата = Дата(Год, 1, 1);
		Пока ТекДата <= Дата(Год, 12, 31) Цикл
			НоваяСтрока = тблГрафикиРаботыСотрудника.Добавить();
			НоваяСтрока.ДатаГрафика  = ТекДата;
			НоваяСтрока.ГрафикРаботы = уатОбщегоНазначения.ГрафикРаботыСотрудникаНаДату(Сотрудник, ТекДата, КэшГрафикиСотрудников, мсвВсеСотрудники);
			НоваяСтрока.Наименование = НоваяСтрока.ГрафикРаботы.Наименование;
			
			Если МассивОбъектов.Найти(НоваяСтрока.ГрафикРаботы) = Неопределено Тогда
				МассивОбъектов.Добавить(НоваяСтрока.ГрафикРаботы);
			КонецЕсли;
						
			ТекДата = ТекДата + 24*3600;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("тблГрафикиРаботыСотрудника", тблГрафикиРаботыСотрудника);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ГрафикиРаботы.СоздатьВТРасписанияРаботыНаПериод(МенеджерВременныхТаблиц, МассивОбъектов, Дата(Год, 1, 1), Дата(Год, 12, 31));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Год", Год);

	Если ТипЗнч(МассивОбъектов) = Тип("СправочникСсылка.Календари") И
		МассивОбъектов.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияГрафикаРаботы.ПоНеделям") Тогда
		ДлительностьРабочейНедели = ДлительностьРабочейНедели(МассивОбъектов);
		Если НЕ ЗначениеЗаполнено(ДлительностьРабочейНедели) Тогда
			ДлительностьРабочейНедели = 40;
		КонецЕсли;
	Иначе
		ДлительностьРабочейНедели = 40;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДлительностьРабочейНедели", ДлительностьРабочейНедели);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	уатОбщегоНазначения.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, Дата(Год, 1, 1), Дата(Год, 12, 31), "День");
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасписанияРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|	РасписанияРаботы.ДатаГрафика КАК ДатаГрафика,
	|	ЕСТЬNULL(РасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ВремяНачала,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ДЕНЬ), ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) = 0
	|			ТОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ДЕНЬ)
	|		ИНАЧЕ ЕСТЬNULL(РасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	КОНЕЦ КАК ВремяОкончания
	|ПОМЕСТИТЬ втРасписаниеРаботы
	|ИЗ
	|	ВТРасписанияРаботы КАК РасписанияРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ГрафикРаботы КАК ГрафикРаботы,
	|	ВложенныйЗапрос.ДатаГрафика КАК ДатаГрафика,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Время > 24
	|			ТОГДА 24
	|		ИНАЧЕ ВложенныйЗапрос.Время
	|	КОНЕЦ КАК Время
	|ПОМЕСТИТЬ втВремяПоГрафику
	|ИЗ
	|	(ВЫБРАТЬ
	|		втРасписаниеРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|		втРасписаниеРаботы.ДатаГрафика КАК ДатаГрафика,
	|		СУММА(РАЗНОСТЬДАТ(втРасписаниеРаботы.ВремяНачала, втРасписаниеРаботы.ВремяОкончания, СЕКУНДА) / 3600) КАК Время
	|	ИЗ
	|		втРасписаниеРаботы КАК втРасписаниеРаботы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		втРасписаниеРаботы.ГрафикРаботы,
	|		втРасписаниеРаботы.ДатаГрафика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Календари.Ссылка КАК ГрафикРаботы,
	|	Периоды.Период КАК Дата,
	|	Календари.Наименование КАК Наименование,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТГрафикиПериоды
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
	|		ПО (Календари.Ссылка В (&МассивОбъектов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РабочихДней,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Воскресенье)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыходныхДней,
	|	НАЧАЛОПЕРИОДА(ДанныеПроизводственногоКалендаря.Дата, МЕСЯЦ) КАК Месяц,
	|	Календари.Ссылка КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА &ДлительностьРабочейНедели / 5
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|						ТОГДА &ДлительностьРабочейНедели / 5 - 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК РабочихЧасов
	|ПОМЕСТИТЬ ВТДанныеПроизводственныхКалендарейЗаМесяц
	|ИЗ
	|	Справочник.Календари КАК Календари
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО (Календари.Ссылка В (&МассивОбъектов))
	|			И (ДанныеПроизводственногоКалендаря.Год = &Год)
	|			И Календари.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|
	|СГРУППИРОВАТЬ ПО
	|	Календари.Ссылка,
	|	НАЧАЛОПЕРИОДА(ДанныеПроизводственногоКалендаря.Дата, МЕСЯЦ)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы КАК ДатаРаботы,
	|	МАКСИМУМ(уатКорректировкаПланаРабочегоВремениСотрудников.ДокументКорректировки) КАК ДокументКорректировки
	|ПОМЕСТИТЬ КорректировкаПланаСвернутая
	|ИЗ
	|	РегистрСведений.уатКорректировкаПланаРабочегоВремениСотрудников КАК уатКорректировкаПланаРабочегоВремениСотрудников
	|ГДЕ
	|	уатКорректировкаПланаРабочегоВремениСотрудников.Сотрудник = &Сотрудник
	|	И ГОД(уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы) = &Год
	|
	|СГРУППИРОВАТЬ ПО
	|	уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы КАК ДатаРаботы,
	|	уатКорректировкаПланаРабочегоВремениСотрудников.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|	уатКорректировкаПланаРабочегоВремениСотрудников.Время КАК Время
	|ПОМЕСТИТЬ уатКорректировкаПланаРабочегоВремениСотрудников
	|ИЗ
	|	КорректировкаПланаСвернутая КАК КорректировкаПланаСвернутая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатКорректировкаПланаРабочегоВремениСотрудников КАК уатКорректировкаПланаРабочегоВремениСотрудников
	|		ПО уатКорректировкаПланаРабочегоВремениСотрудников.Сотрудник = &Сотрудник
	|			И КорректировкаПланаСвернутая.ДатаРаботы = уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы
	|			И КорректировкаПланаСвернутая.ДокументКорректировки = уатКорректировкаПланаРабочегоВремениСотрудников.ДокументКорректировки
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТГрафикиПериоды.ГрафикРаботы КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ВТГрафикиПериоды.Дата, МЕСЯЦ) КАК Месяц,
	|	ВТГрафикиПериоды.Дата КАК Дата,
	|	НАЧАЛОПЕРИОДА(ВТГрафикиПериоды.Дата, КВАРТАЛ) КАК Квартал,
	|	ЕСТЬNULL(КалендарныеГрафики.КоличествоДнейВГрафикеСНачалаГода, 0) КАК Дней,
	|	ВЫБОР
	|		КОГДА уатКорректировкаПланаРабочегоВремениСотрудников.Время ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(втВремяПоГрафику.Время, 0) КАК ЧИСЛО(10, 1))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА уатКорректировкаПланаРабочегоВремениСотрудников.ВидИспользованияРабочегоВремени.ИспользоватьКакЦелодневныйПростой
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(уатКорректировкаПланаРабочегоВремениСотрудников.Время / 3600 КАК ЧИСЛО(10, 1))
	|			КОНЕЦ
	|	КОНЕЦ КАК Часов,
	|	ЕСТЬNULL(ВТДанныеПроизводственныхКалендарейЗаМесяц.РабочихДней, 0) КАК РабочихДней,
	|	ЕСТЬNULL(ВТДанныеПроизводственныхКалендарейЗаМесяц.ВыходныхДней, 0) КАК ВыходныхДней,
	|	ЕСТЬNULL(ВТДанныеПроизводственныхКалендарейЗаМесяц.РабочихЧасов, 0) КАК РабочихЧасов
	|ИЗ
	|	ВТГрафикиПериоды КАК ВТГрафикиПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|		ПО ВТГрафикиПериоды.ГрафикРаботы = КалендарныеГрафики.Календарь
	|			И ВТГрафикиПериоды.Дата = КалендарныеГрафики.ДатаГрафика
	|			И (ГОД(ВТГрафикиПериоды.Дата) = КалендарныеГрафики.Год)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВремяПоГрафику КАК втВремяПоГрафику
	|		ПО ВТГрафикиПериоды.ГрафикРаботы = втВремяПоГрафику.ГрафикРаботы
	|			И ВТГрафикиПериоды.Дата = втВремяПоГрафику.ДатаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПроизводственныхКалендарейЗаМесяц КАК ВТДанныеПроизводственныхКалендарейЗаМесяц
	|		ПО ВТГрафикиПериоды.ГрафикРаботы = ВТДанныеПроизводственныхКалендарейЗаМесяц.Ссылка
	|			И ВТГрафикиПериоды.Месяц = ВТДанныеПроизводственныхКалендарейЗаМесяц.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ уатКорректировкаПланаРабочегоВремениСотрудников КАК уатКорректировкаПланаРабочегоВремениСотрудников
	|		ПО ВТГрафикиПериоды.Дата = уатКорректировкаПланаРабочегоВремениСотрудников.ДатаРаботы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Календари.Наименование КАК Наименование,
	|	Календари.СпособЗаполнения КАК СпособЗаполнения,
	|	Календари.УчитыватьПраздники КАК УчитыватьПраздники,
	|	Календари.Ссылка КАК Ссылка,
	|	Календари.ШаблонЗаполнения.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ДеньВключенВГрафик КАК ДеньВключенВГрафик
	|	) КАК ШаблонЗаполнения
	|ИЗ
	|	Справочник.Календари КАК Календари
	|ГДЕ
	|	Календари.Ссылка В(&МассивОбъектов)";
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		
		"////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Календари.Ссылка КАК ГрафикРаботы,
		|	Периоды.Период КАК Дата,
		|	Календари.Наименование КАК Наименование,
		|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц
		|ПОМЕСТИТЬ ВТГрафикиПериоды
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
		|		ПО (Календари.Ссылка В (&МассивОбъектов))",
		
		"////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	тблГрафикиРаботыСотрудника.ГрафикРаботы КАК ГрафикРаботы,
		|	тблГрафикиРаботыСотрудника.Наименование КАК Наименование,
		|	тблГрафикиРаботыСотрудника.ДатаГрафика КАК Дата,
		|	НАЧАЛОПЕРИОДА(тблГрафикиРаботыСотрудника.ДатаГрафика, МЕСЯЦ) КАК Месяц
		|ПОМЕСТИТЬ ВТГрафикиПериоды
		|ИЗ
		|	&тблГрафикиРаботыСотрудника КАК тблГрафикиРаботыСотрудника");
	КонецЕсли;
	
	Возврат Запрос;
КонецФункции

&НаСервере
Процедура УстановитьШиринуКолонокТабличногоДокумента(ОбластиМакета)
	Для Каждого ТабличныйДокумент Из ОбластиМакета Цикл
		ТабличныйДокумент.Область(1, 2, ТабличныйДокумент.ВысотаТаблицы, 32).ШиринаКолонки   = 4;
		ТабличныйДокумент.Область(1, 33, ТабличныйДокумент.ВысотаТаблицы, 33).ШиринаКолонки  = 4;
		ТабличныйДокумент.Область(1, 34, ТабличныйДокумент.ВысотаТаблицы, 34).ШиринаКолонки  = 7.5;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ТекстОписанияГрафикаРаботы(ОписаниеГрафикаРаботы) 
	Понедельник = '20120514';
	РабочееВремяТекст = "";
	
	Если ОписаниеГрафикаРаботы.СпособЗаполнения = Перечисления.СпособыЗаполненияГрафикаРаботы.ПоНеделям Тогда
		
		НомерДняНачалаИнтервала = 0;
		НомерДняОкончанияИнтервала = 0;
		РабочиеДниИдутПодряд = Истина;
		НомераРабочихДней = Новый Массив;
		НомераВыходныхДней = Новый Массив;
		Для Каждого СтрокаШаблонаЗаполнения Из ОписаниеГрафикаРаботы.ШаблонЗаполнения Цикл
			Если СтрокаШаблонаЗаполнения.ДеньВключенВГрафик И 
				НомерДняНачалаИнтервала <> 0 И 
				СтрокаШаблонаЗаполнения.НомерСтроки - НомерДняОкончанияИнтервала <> 1  Тогда
				РабочиеДниИдутПодряд = Ложь;				
			КонецЕсли;	
			Если СтрокаШаблонаЗаполнения.ДеньВключенВГрафик Тогда  
				Если НомерДняНачалаИнтервала = 0 Тогда
					НомерДняНачалаИнтервала = СтрокаШаблонаЗаполнения.НомерСтроки;
				КонецЕсли;	
				
				НомерДняОкончанияИнтервала = СтрокаШаблонаЗаполнения.НомерСтроки;
				НомераРабочихДней.Добавить(СтрокаШаблонаЗаполнения.НомерСтроки);
			Иначе
				НомераВыходныхДней.Добавить(СтрокаШаблонаЗаполнения.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		КоличествоРабочихДней = НомераРабочихДней.Количество();
		
		Если КоличествоРабочихДней = 5 Тогда
			ВидГрафикаСтрока = НСтр("en='Five-day work period';ru='Пятидневка'");
		ИначеЕсли КоличествоРабочихДней = 6 Тогда
			ВидГрафикаСтрока = НСтр("en='Six-day work period';ru='Шестидневка'");
		Иначе
			ВидГрафикаСтрока = НСтр("ru = 'Недельный график'");
		КонецЕсли;
		
		Если КоличествоРабочихДней = 0 Тогда
			РабочиеДниТекст = "";
		Иначе	
			Если РабочиеДниИдутПодряд Тогда
				РабочиеДниТекст = Формат(Понедельник + (НомерДняНачалаИнтервала - 1) * 86400, "ДФ=ддд") + "-" + 
				Формат(Понедельник + (НомерДняОкончанияИнтервала - 1) * 86400, "ДФ=ддд");
			Иначе 
				ПеречислениеДнейТекст = "";
				Для Каждого НомерРабочегоДня Из НомераРабочихДней Цикл
					ПеречислениеДнейТекст = ПеречислениеДнейТекст + ?(ПустаяСтрока(ПеречислениеДнейТекст), "", ", ") + 
					Формат(Понедельник + (НомерРабочегоДня - 1) * 86400, "ДФ=ддд");
				КонецЦикла;	
				РабочиеДниТекст = ПеречислениеДнейТекст;
			КонецЕсли;	
		КонецЕсли;
		
		Если НомераВыходныхДней.Количество() = 0 Тогда
			ВыходныеДниТекст = НСтр("ru = 'без выходных'");
		Иначе	
			ПеречислениеДнейТекст = "";
			Для Каждого НомерВыходногоДня Из НомераВыходныхДней Цикл
				ПеречислениеДнейТекст = ПеречислениеДнейТекст + ?(ПустаяСтрока(ПеречислениеДнейТекст), "", ", ") + 
				Формат(Понедельник + (НомерВыходногоДня - 1) * 86400, "ДФ=ддд");
			КонецЦикла;	
			ВыходныеДниТекст = ПеречислениеДнейТекст;
		КонецЕсли;
		
	Иначе
		ВидГрафикаСтрока = НСтр("ru = 'Скользящий график'");	
	КонецЕсли;	
	
	СтрокаНастройкиЗаполнения = НСтр("ru = '%1, раб. дни: %2, выходн. дни: %3
	|Длительность рабочей недели: чс.'");
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаНастройкиЗаполнения,
	ВидГрафикаСтрока,
	РабочиеДниТекст,
	ВыходныеДниТекст);
КонецФункции

&НаСервере
Функция ОписаниеГрафикаРаботы(ВыборкаПоГрафикам, ГрафикРаботы)
	ВыборкаПоГрафикам.Сбросить();
	
	ОписаниеГрафика = Новый Структура();
	ОписаниеГрафика.Вставить("Наименование", "");
	ОписаниеГрафика.Вставить("СпособЗаполнения");
	ОписаниеГрафика.Вставить("ШаблонЗаполнения", Новый ТаблицаЗначений);
	ОписаниеГрафика.Вставить("УчитыватьПраздники", Ложь);
	
	Если ВыборкаПоГрафикам.НайтиСледующий(Новый Структура("Ссылка", ГрафикРаботы)) Тогда
		ВыборкаПоГрафикам.СледующийПоЗначениюПоля("Ссылка");
		
		ОписаниеГрафика.Наименование       = ВыборкаПоГрафикам.Наименование;
		ОписаниеГрафика.СпособЗаполнения   = ВыборкаПоГрафикам.СпособЗаполнения;
		ОписаниеГрафика.ШаблонЗаполнения   = ВыборкаПоГрафикам.ШаблонЗаполнения.Выгрузить();
		ОписаниеГрафика.УчитыватьПраздники = ВыборкаПоГрафикам.УчитыватьПраздники;
	КонецЕсли;
	
	Возврат ОписаниеГрафика;
КонецФункции

&НаСервере
Процедура ОчиститьОбластьЯчеек(ОбластьЯчеек)
	КоличествоПараметров = ОбластьЯчеек.Параметры.Количество();
	
	Для ИндексПараметра = 0 По КоличествоПараметров - 1 Цикл  
		ОбластьЯчеек.Параметры.Установить(ИндексПараметра, Неопределено);
	КонецЦикла;	
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьДиалогОтправкиПоПочте()
	Вложение = Новый Структура;
	Вложение.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(ТабДок, УникальныйИдентификатор));
	Вложение.Вставить("Представление", Нстр("en='Work schedule';ru='График работы'"));
	
	СписокВложений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Вложение);
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
		ПараметрыОтправки = МодульРаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма();
		ПараметрыОтправки.Тема = Нстр("en='Work schedule';ru='График работы'");
		ПараметрыОтправки.Вложения = СписокВложений;
		МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти




