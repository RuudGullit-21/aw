
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ТекПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	ПредПользователь = ТекПользователь;
	АдминистративныеПрава = ПравоДоступа("Администрирование", Метаданные);
	Если НЕ АдминистративныеПрава Тогда
		Элементы.ТекПользователь.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗаполнитьТаблицуНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда 
		Если НастройкиМодифицированы() Тогда
			Отказ = Истина;
			ТекстПредупреждения = НСтр("en='Personal settings changed. All changes will be lost.';ru='Персональные настройки изменены. Все изменения будут потеряны.'");
			Возврат;
		КонецЕсли;
	ИначеЕсли НастройкиМодифицированы() Тогда 
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		ТекстНСТР = НСтр("en='Personal settings changed. To abandon the changes and close the form?';ru='Персональные настройки изменены. Отказаться от изменений и закрыть форму?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекПользовательПриИзменении(Элемент)
	ПоискПольз = НайтиПользователяИБ(ТекПользователь);
	Если ПоискПольз = Ложь Тогда
		ТекстНСТР = СтрШаблон(НСтр("en='Settings are only saved for users of IB. User ""%1"" is not a user of IB!';ru='Настройки сохраняются только для пользователей ИБ. Пользователь ""%1"" не является пользователем ИБ!'"), ТекПользователь);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		ТекПользователь = ПредПользователь;
		Возврат;
	КонецЕсли;
	
	Если ТекПользователь = ПредПользователь Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиМодифицированы() Тогда
		Ответ = Неопределено;
		ТекстНСТР = СтрШаблон(НСтр("en='Personal settings of user ""%1"" changed! Save changes?';ru='Персональные настройки пользователя ""%1"" изменены! Сохранить изменения?'"), ПредПользователь);
		ПоказатьВопрос(Новый ОписаниеОповещения("ТекПользовательПриИзмененииЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
        Возврат;
	КонецЕсли;
	
	ТекПользовательПриИзмененииФрагмент1();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПользователейЗначениеПриИзменении(Элемент)
	Элементы.НастройкиПользователей.ТекущиеДанные.Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Если НастройкиМодифицированы() Тогда
		СохранитьНастройки();
		ОбновитьНастройкуПодтверждениеПриЗавершенииПрограммы();
	КонецЕсли;
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	СохранитьНастройки();
	ОбновитьНастройкуПодтверждениеПриЗавершенииПрограммы();
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСохраненным(Команда)
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ВернутьсяКСохраненнымЗавершение", ЭтотОбъект), НСтр("en='Back to the saved settings?';ru='Вернуться к сохраненным значениям настроек?'"), РежимДиалогаВопрос.ОКОтмена);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает набор настроек пользователя УАТ
//
Функция ПолучитьСписокНастроекПользователяУАТ()
	тблНастройки = Новый ТаблицаЗначений;
	тблНастройки.Колонки.Добавить("ИмяНастройки");
	тблНастройки.Колонки.Добавить("Представление");
	тблНастройки.Колонки.Добавить("ЗначениеПоУмолчанию");
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы";
	НоваяСтрока.Представление = НСтр("en='Request confirmation at program termination';ru='Запрашивать подтверждение при завершении программы'");
	НоваяСтрока.ЗначениеПоУмолчанию = ОбщегоНазначения.ОбщиеПараметрыБазовойФункциональности().ЗапрашиватьПодтверждениеПриЗавершенииПрограммы;
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнаяЕдиницаПоКлассификатору";
	НоваяСтрока.Представление = НСтр("en='Basic unit by classifier';ru='Основная единица по классификатору'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнаяОрганизация";
	НоваяСтрока.Представление = НСтр("en='Main company';ru='Основная организация'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.Организации.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнаяСтавкаНДС";
	НоваяСтрока.Представление = НСтр("en='Basic VAT rate';ru='Основная ставка НДС'");
	НоваяСтрока.ЗначениеПоУмолчанию = Перечисления.СтавкиНДС.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновноеПодразделениеОрганизации";
	НоваяСтрока.Представление = НСтр("en='Basic department of company';ru='Основное подразделение организации'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнойОтветственный";
	НоваяСтрока.Представление = НСтр("en='Main responsible';ru='Основной ответственный'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.Пользователи.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнойПокупатель";
	НоваяСтрока.Представление = НСтр("en='Main buyer';ru='Основной покупатель'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.Контрагенты.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнойПоставщик";
	НоваяСтрока.Представление = НСтр("en='Main supplier';ru='Основной поставщик'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.Контрагенты.ПустаяСсылка();
	
	НоваяСтрока = тблНастройки.Добавить();
	НоваяСтрока.ИмяНастройки = "ОсновнойСклад";
	НоваяСтрока.Представление = НСтр("en='Main warehouse';ru='Основной склад'");
	НоваяСтрока.ЗначениеПоУмолчанию = Справочники.Склады.ПустаяСсылка();
	
	тблНастройки.Сортировать("Представление");
	
	Возврат тблНастройки;
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуНастроек()
	тблНастройкиПользователей = ПолучитьСписокНастроекПользователяУАТ();
	
	НастройкиПользователей.Очистить();
	
	Для Каждого ТекНастройка Из тблНастройкиПользователей Цикл
		ТекЗначениеНастройки = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, ТекНастройка.ИмяНастройки);
		Если ТекЗначениеНастройки = Неопределено Тогда
			ТекЗначениеНастройки = ТекНастройка.ЗначениеПоУмолчанию;
		КонецЕсли;
		НоваяСтрока = НастройкиПользователей.Добавить();
		НоваяСтрока.Настройка = ТекНастройка.ИмяНастройки;
		НоваяСтрока.Представление = ТекНастройка.Представление;
		НоваяСтрока.Значение = ТекЗначениеНастройки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки(Знач Пользователь = Неопределено)
	Если Пользователь = Неопределено Тогда
		Пользователь = ТекПользователь;
	КонецЕсли;
	
	мсвСтрокМодифицированных = НастройкиПользователей.НайтиСтроки(Новый Структура("Модифицированность", Истина));
	Для Каждого ТекСтрока Из мсвСтрокМодифицированных Цикл
		уатОбщегоНазначенияПовтИсп.УстановитьЗначениеПоУмолчанию(ТекСтрока.Настройка, ТекСтрока.Значение, Пользователь);
		ТекСтрока.Модифицированность = Ложь;
	КонецЦикла;
	
	Если мсвСтрокМодифицированных.Количество() > 0 Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция НастройкиМодифицированы()
	мсвСтрокМодифицированных = НастройкиПользователей.НайтиСтроки(Новый Структура("Модифицированность", Истина));
	Возврат (мсвСтрокМодифицированных.Количество() > 0);
КонецФункции

&НаСервере
Функция НайтиПользователяИБ(ТекПользователь)
	Возврат ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
		уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекПользователь, "ИдентификаторПользователяИБ")) <> Неопределено;
КонецФункции

&НаКлиенте
Процедура ТекПользовательПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        СохранитьНастройки(ПредПользователь);
    ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
    Иначе
        ТекПользователь = ПредПользователь;
        Возврат;
    КонецЕсли;
    
    ТекПользовательПриИзмененииФрагмент1();

КонецПроцедуры

&НаКлиенте
Процедура ТекПользовательПриИзмененииФрагмент1()
    
    ТекПользовательПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ТекПользовательПриИзмененииФрагмент()
    
    ЗаполнитьТаблицуНастроек();
    ПредПользователь = ТекПользователь;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСохраненнымЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.ОК Тогда
        ЗаполнитьТаблицуНастроек();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Для Каждого ТекСтрока из НастройкиПользователей Цикл
			ТекСтрока.Модифицированность = Ложь;
		КонецЦикла;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройкуПодтверждениеПриЗавершенииПрограммы()
	Если ТекПользователь = ПользователиКлиентСервер.АвторизованныйПользователь() Тогда 
		Для Каждого ТекСтрока Из НастройкиПользователей Цикл
			Если Не ВРег(ТекСтрока.Настройка) = ВРег("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы") Тогда 
				Продолжить;
			КонецЕсли;
			
			СтандартныеПодсистемыКлиент.УстановитьПараметрКлиента("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы", ТекСтрока.Значение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
		
#КонецОбласти

