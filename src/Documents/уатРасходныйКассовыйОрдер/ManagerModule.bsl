#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатРасходныйКассовыйОрдер";
	КомандаПечати.Идентификатор = "КО2";
	КомандаПечати.Представление = НСтр("en='CO-2';ru='КО-2'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Registry of document ""Cash payment voucher""';ru='Реестр документов ""Расходный кассовый ордер""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КО2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КО2",
			"КО-2", ПечатьРКО(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	уатУправлениеПечатью.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Если НЕ ДокументСсылка.Оплачено Тогда
		Возврат;
	КонецЕсли;
		
	флПодотчетник = (ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийРКО.ВыдачаПодотчетнику);
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	ВидОперацииПрочее = (ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийРКО.РасходДенежныхСредствПрочее);
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Взаиморасчеты"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежаДок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Сделка,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КурсДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КурсВзаиморасчетов
	|	КОНЕЦ КАК КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КратностьДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КратностьВзаиморасчетов
	|	КОНЕЦ КАК КратностьВзаиморасчетов,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
	|		ИНАЧЕ РасшифровкаПлатежаДок.СуммаПлатежа
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтавкаНДС КАК СтавкаНДС,
	|	РасшифровкаПлатежаДок.СуммаНДС КАК СуммаНДС,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ДвижениеДС"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	РасшифровкаПлатежаДок.Ссылка.Касса КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.уатФормыОплаты.Наличные) КАК ВидДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо
	|		ИНАЧЕ РасшифровкаПлатежаДок.Ссылка.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РасшифровкаПлатежаДок.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Сделка,
	|	РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента КАК Валюта,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ОстаткиДС"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.Касса КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.уатФормыОплаты.Наличные) КАК ВидДенежныхСредств,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ОстаткиДСуПодотчетныхЛиц"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента КАК Валюта,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ПлатежныйКалендарь"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.НашаОрганизация) КАК ПолучательУслуг,
	|	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежаДок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказНаТС,
	|	РасшифровкаПлатежаДок.Сделка КАК Сделка,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КурсДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КурсВзаиморасчетов
	|	КОНЕЦ КАК КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КратностьДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КратностьВзаиморасчетов
	|	КОНЕЦ КАК КратностьВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
	|		ИНАЧЕ РасшифровкаПлатежаДок.СуммаПлатежа
	|	КОНЕЦ КАК СуммаРасход,
	|	0 КАК СуммаРасходУпр
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|	И (РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|	ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|	ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Сделка КАК Сделка,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо
	|		ИНАЧЕ РасшифровкаПлатежаДок.Ссылка.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РасшифровкаПлатежаДок.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	РасшифровкаПлатежаДок.ДокументПланированияПлатежа КАК ЗаявкаНаРасходование,
	|	СУММА(РасшифровкаПлатежаДок.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(РасшифровкаПлатежаДок.СуммаПлатежа) КАК Сумма,
	|	0 КАК СуммаУпр
	|ПОМЕСТИТЬ ДокументуатРасходныйКассовыйОрдер
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|	И РасшифровкаПлатежаДок.ДокументПланированияПлатежа ССЫЛКА Документ.уатЗаявкаНаРасходованиеДС
	|	И РасшифровкаПлатежаДок.ДокументПланированияПлатежа <> ЗНАЧЕНИЕ(Документ.уатЗаявкаНаРасходованиеДС.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежаДок.Ссылка,
	|	РасшифровкаПлатежаДок.Сделка,
	|	РасшифровкаПлатежаДок.ДокументПланированияПлатежа,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РасшифровкаПлатежаДок.ДоговорКонтрагента
	|	КОНЕЦ,
	|	РасшифровкаПлатежаДок.Ссылка.Дата,
	|	РасшифровкаПлатежаДок.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо
	|		ИНАЧЕ РасшифровкаПлатежаДок.Ссылка.Контрагент
	|	КОНЕЦ,
	|	РасшифровкаПлатежаДок.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ЗаявкиНаРасходованиеДС"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Регистратор КАК Регистратор,
	|	РасшифровкаПлатежаДок.ДокументДвижения КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Сделка КАК Сделка,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	РасшифровкаПлатежаДок.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежаДок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	РасшифровкаПлатежаДок.ЗаявкаНаРасходование КАК ЗаявкаНаРасходование,
	|	РасшифровкаПлатежаДок.ЗаявкаНаРасходование.ВалютаДокумента КАК ВалютаЗаявки,
	|	РасшифровкаПлатежаДок.ЗаявкаНаРасходование.КурсДокумента КАК КурсЗаявки,
	|	РасшифровкаПлатежаДок.ЗаявкаНаРасходование.КратностьДокумента КАК КратностьЗаявки,
	|	РасшифровкаПлатежаДок.Сумма КАК Сумма,
	|	РасшифровкаПлатежаДок.Сумма КАК СуммаВзаиморасчетов,
	|	РасшифровкаПлатежаДок.Сумма КАК СуммаУпр
	|ИЗ
	|	ДокументуатРасходныйКассовыйОрдер КАК РасшифровкаПлатежаДок");
		
	Запрос.УстановитьПараметр("Ссылка",             ДокументСсылка);
	Запрос.УстановитьПараметр("флПодотчетник",      флПодотчетник);
	Запрос.УстановитьПараметр("ВидОперацииПрочее",  ВидОперацииПрочее);
	Запрос.УстановитьПараметр("КурсДокумента",      СтруктураДополнительныеСвойства.КурсДокумента);
	Запрос.УстановитьПараметр("КратностьДокумента", СтруктураДополнительныеСвойства.КратностьДокумента);
	Запрос.УстановитьПараметр("ПериодОстатки",      ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("МноговалютныйУчет",  флМноговалютныйУчет);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// взаиморасчеты
	ТаблицаВзаиморасчетов = МассивРезультатов[0].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаВзаиморасчетов Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаВзаиморасчетов,
			ТекСтрока.Валюта,                  СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			ТекСтрока.КурсВзаиморасчетов,      СтруктураДополнительныеСвойства.КурсУпр,
			ТекСтрока.КратностьВзаиморасчетов, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТабВзаиморасчетов.Свернуть("ВидДвижения, Период, Регистратор, ДоговорКонтрагента, Сделка, Организация, Контрагент, Валюта", "СуммаВзаиморасчетов, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВзаиморасчетов", ТаблицаВзаиморасчетов);
	
	// ДДС
	ТаблицаДвижениеДС = МассивРезультатов[1].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаДвижениеДС Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
			ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
			СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТаблицаДвижениеДС.Свернуть("ВидДвижения, Период, Регистратор, Валюта, БанковскийСчетКасса, ВидДенежныхСредств, ПриходРасход, СтатьяДвиженияДенежныхСредств, ДокументДвижения, Контрагент, ДоговорКонтрагента, Сделка, Организация","Сумма, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеДС", ТаблицаДвижениеДС);
	
	// Остатки ДС	
	ТаблицаОстаткиДС = МассивРезультатов[2].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаОстаткиДС Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
			ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
			СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТаблицаОстаткиДС.Свернуть("ВидДвижения, Период, Регистратор, Организация, БанковскийСчетКасса, ВидДенежныхСредств, СтатьяДвиженияДенежныхСредств", "Сумма, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстаткиДС", ТаблицаОстаткиДС);
	
	// Остатки ДС у подотчетных лиц
	Если флПодотчетник Тогда
		ТаблицаОстаткиДСУПодотчетныхЛиц = МассивРезультатов[3].Выгрузить();
		Для Каждого ТекСтрока Из ТаблицаОстаткиДСУПодотчетныхЛиц Цикл
			ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
				ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
				СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
				СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЦикла;
		//ТаблицаОстаткиДСУПодотчетныхЛиц.Свернуть("ВидДвижения, Период, Регистратор, Организация, ПодотчетноеЛицо, Валюта", "Сумма, СуммаУпр");
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстаткиДСУПодотчетныхЛиц", ТаблицаОстаткиДСУПодотчетныхЛиц);
	КонецЕсли;
	
	// Платежный календарь
	ТаблицаПлатежныйКалендарь = МассивРезультатов[4].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаПлатежныйКалендарь Цикл
		ТекСтрока.СуммаРасходУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаРасход,
			ТекСтрока.Валюта,                  СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			ТекСтрока.КурсВзаиморасчетов,      СтруктураДополнительныеСвойства.КурсУпр,
			ТекСтрока.КратностьВзаиморасчетов, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	ТаблицаПлатежныйКалендарь.Свернуть("Период, Регистратор, Организация, Контрагент, ДоговорКонтрагента, ПолучательУслуг, ЗаказНаТС, Валюта, Сделка", "СуммаРасход, СуммаРасходУпр");
	уатПроведение_проф.РаспределитьПлатежныйКалендарьПоГрафикуОплаты(ТаблицаПлатежныйКалендарь, ДокументСсылка);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", ТаблицаПлатежныйКалендарь);
	
	// Заявки на расходование ДС
	ТаблицаЗаявокНаРасходованиеДС = МассивРезультатов[6].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаЗаявокНаРасходованиеДС Цикл
		Если ДокументСсылка.ВалютаДокумента <> СтруктураДополнительныеСвойства.ВалютаУпрУчета Тогда
			ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
				ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
				СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
				СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЕсли;
		Если ДокументСсылка.ВалютаДокумента <> ТекСтрока.ВалютаЗаявки Тогда
			ТекСтрока.Сумма = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
				ДокументСсылка.ВалютаДокумента,                     ТекСтрока.ВалютаЗаявки,
				СтруктураДополнительныеСвойства.КурсДокумента,      ТекСтрока.КурсЗаявки,
				СтруктураДополнительныеСвойства.КратностьДокумента, ТекСтрока.КратностьЗаявки);
			ТекСтрока.СуммаВзаиморасчетов = ТекСтрока.Сумма;
		КонецЕсли;
	КонецЦикла;
	//ТаблицаЗаявокНаРасходованиеДС.Свернуть("ВидДвижения, Период, Регистратор, ДоговорКонтрагента, ЗаявкаНаРасходование, Контрагент, Организация, Сделка, СтатьяДвиженияДенежныхСредств", "Сумма, СуммаВзаиморасчетов, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаявокНаРасходованиеДС", ТаблицаЗаявокНаРасходованиеДС);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
КонецПроцедуры

// Получает дополнительные реквизиты для отображения в отчете "Реестр документов"
// 
// Возвращаемое значение:
//  Структура - доп. реквизитов
//
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПечатьРКО(МассивОбъектов, ОбъектыПечати)  
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_КО-2";
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивРКО", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходныйКассовыйОрдер.Номер,
	|	РасходныйКассовыйОрдер.Дата КАК ДатаДокумента,
	|	РасходныйКассовыйОрдер.Организация,
	|	РасходныйКассовыйОрдер.Организация КАК ЮрФизЛицо,
	|	РасходныйКассовыйОрдер.Организация КАК Руководители,
	|	РасходныйКассовыйОрдер.Подразделение,
	|	РасходныйКассовыйОрдер.Подразделение.Представление КАК ПредставлениеПодразделения,
	|	РасходныйКассовыйОрдер.СуммаДокумента КАК Сумма,
	|	РасходныйКассовыйОрдер.Контрагент,
	|	РасходныйКассовыйОрдер.Контрагент.Представление КАК ФИОПолучателя,
	|	РасходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
	|	РасходныйКассовыйОрдер.ВалютаДокумента.Представление КАК ВалютаПредставление,
	|	РасходныйКассовыйОрдер.Выдать,
	|	РасходныйКассовыйОрдер.Приложение,
	|	РасходныйКассовыйОрдер.ПоДокументу,
	|	РасходныйКассовыйОрдер.Основание,
	|	РасходныйКассовыйОрдер.Ссылка,
	|	РасходныйКассовыйОрдер.ВидОперации,
	|	РасходныйКассовыйОрдер.РасчетныйДокумент
	|ИЗ
	|	Документ.уатРасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка В(&МассивРКО)";
	
	ДокументРКО = Запрос.Выполнить().Выбрать();
	
	Пока ДокументРКО.Следующий() Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_КО-2";
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_КО2");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ЕстьРасчетыСКонтрагентами = уатОбщегоНазначения_проф.ЕстьРасчетыСКонтрагентами(ДокументРКО.ВидОперации);
		
		СведенияОбОрганизации = уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ДокументРКО.ЮрФизЛицо, ДокументРКО.ДатаДокумента);
		
		// Выводим шапку накладной
		ОбластьМакета.Параметры.Заполнить(ДокументРКО);
		ОбластьМакета.Параметры.ПредставлениеОрганизации   = уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеПодразделения = ДокументРКО.ПредставлениеПодразделения;
		
		СуммаПрописью = уатОбщегоНазначенияТиповые.уатСформироватьСуммуПрописью(ДокументРКО.Сумма, ДокументРКО.Валюта);
		СуммаПрописьюПродолжение = "";
		Если СтрДлина(СуммаПрописью) > 92 Тогда
			СимволовВСтроке = 92;
			Пока СимволовВСтроке > 0 И Сред(СуммаПрописью, СимволовВСтроке, 1) <> " " Цикл
				СимволовВСтроке = СимволовВСтроке -1;
			КонецЦикла;
			
			СуммаПрописьюПродолжение = Сред(СуммаПрописью, СимволовВСтроке + 1);
			СуммаПрописью = Лев(СуммаПрописью, СимволовВСтроке);
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаПрописью         = СуммаПрописью;
		ОбластьМакета.Параметры.СуммаПрописьюПродолжение = СуммаПрописьюПродолжение;
		ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента     = ДокументРКО.ДатаДокумента;
		
		ПечатьПрефиксовВключена = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументРКО.Организация, ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ВыводитьПрефиксПриПечати"));
		Если ПечатьПрефиксовВключена Тогда
			ОбластьМакета.Параметры.НомерДокумента = ДокументРКО.Номер;
		Иначе
			ОбластьМакета.Параметры.НомерДокумента    = уатОбщегоНазначенияКлиентСервер.НомерДокументаНаПечать(ДокументРКО.Номер, Истина, Истина);
		КонецЕсли;
		
		Руководители = уатОбщегоНазначенияТиповые.уатОтветственныеЛицаОрганизаций(ДокументРКО.Руководители, КонецДня(ДокументРКО.ДатаДокумента),);
		Руководитель = Руководители.Руководитель;
		РуководительДолжность = Руководители.РуководительДолжность;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		Кассир       = Руководители.Кассир;
		
		ОбластьМакета.Параметры.ФИОРуководителя       = Руководитель;
		ОбластьМакета.Параметры.ДолжностьРуководителя = РуководительДолжность;
		
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
		ОбластьМакета.Параметры.ФИОКассира            = Кассир;
		
		ТекстОснование = ДокументРКО.Основание;
		
		Если ТекстОснование = "" И ЗначениеЗаполнено(ДокументРКО.РасчетныйДокумент) Тогда
			
			ТекстОснование = Лев(Строка(ДокументРКО.РасчетныйДокумент),Найти(Строка(ДокументРКО.РасчетныйДокумент),
				Строка(ДокументРКО.РасчетныйДокумент.Дата))-1)+Формат(ДокументРКО.РасчетныйДокумент.Дата,"ДФ=dd.MM.yyyy");
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Основание             = ТекстОснование;
		ОбластьМакета.Параметры.Приложение            = ДокументРКО.Приложение;
		
		ТекстВыдать = ДокументРКО.Выдать;
		ТекстПоДокументу = ДокументРКО.ПоДокументу;
		
		Если ТекстВыдать = "" И ЗначениеЗаполнено(ДокументРКО.Контрагент) Тогда
			
			Если ЕстьРасчетыСКонтрагентами Тогда
				
				ТекстВыдать = ?(ДокументРКО.Контрагент.НаименованиеПолное="",ДокументРКО.Контрагент.Наименование, 
					ДокументРКО.Контрагент.НаименованиеПолное);
				
			Иначе
				
				Запрос=Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
				|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
				|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
				|ИЗ
				|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ФизическоеЛицо=&ФизЛицо) КАК ФИОФизЛицСрезПоследних";
				Запрос.УстановитьПараметр("Дата",    ДокументРКО.ДатаДокумента);
				Запрос.УстановитьПараметр("ФизЛицо", ДокументРКО.Контрагент);
				
				Результат = Запрос.Выполнить().Выбрать();
				Если Результат.Следующий() Тогда
					
					ТекстВыдать = ?(НЕ ПустаяСтрока(Результат.Фамилия), 
					Результат.Фамилия + ?(НЕ ПустаяСтрока(Результат.Имя)," " + Результат.Имя + " " + ?(НЕ ПустаяСтрока(Результат.Отчество),Результат.Отчество, ""), ""),"");
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ФИОПолучателя = ТекстВыдать;
		ОбластьМакета.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = ТекстПоДокументу;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументРКО.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Процедура - Заполнить структуру получателей печатных форм
//
// Параметры:
//  СтруктураДанныхОбъектаПечати - Структура - Структура данных получателей печатной формы
//
Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Контрагент";
	 
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли