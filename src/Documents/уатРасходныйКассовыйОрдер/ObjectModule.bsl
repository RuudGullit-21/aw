#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
		
	МассивДоговоров = ЭтотОбъект.РасшифровкаПлатежа.ВыгрузитьКолонку("ДоговорКонтрагента");
	ТаблицаДоговоров = Новый таблицаЗначений;
	ТаблицаДоговоров.Колонки.Добавить("Договор");
	ТаблицаДоговоров.ЗагрузитьКолонку(МассивДоговоров,"Договор");
	ТаблицаДоговоров.Свернуть("Договор");
	
	Если ТаблицаДоговоров.Количество() = 1 Тогда
		ДоговорКонтрагента = ТаблицаДоговоров[0].Договор;
	Иначе
		ДоговорКонтрагента = Неопределено;
	КонецЕсли;

	уатПроведение_проф.ПолучитьСтарыеЗаказыПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НЕ Оплачено Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	Документы.уатРасходныйКассовыйОрдер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение_проф.ОтразитьОстаткиДС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение_проф.ОтразитьЗаявкиНаРасходованиеДС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение_проф.ОтразитьДвижениеДДС(ДополнительныеСвойства, Движения, Отказ);
	
	Если ВидОперации = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику 
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ВозвратПокупателю Тогда 
		
		уатПроведение_проф.ОтразитьВзаиморасчетыСКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
		
		Если ПолучитьФункциональнуюОпцию("уатИспользоватьПлатежныйКалендарь") Тогда
			уатПроведение_проф.ОтразитьПлатежныйКалендарь(ДополнительныеСвойства, Движения, Отказ);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.уатВидыОперацийРКО.ВыдачаПодотчетнику Тогда
		уатПроведение_проф.ОтразитьОстаткиДСУПодотчетныхЛиц(ДополнительныеСвойства, Движения, Отказ);
		
	КонецЕсли;
		
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	уатПроведение_проф.ОбновитьТекущееСостояниеОплатыЗаказов(ЭтотОбъект);
	
	Документы.уатРасходныйКассовыйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры // ОбработкаПроведения

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	уатПроведение_проф.ОбновитьТекущееСостояниеОплатыЗаказов(ЭтотОбъект);
	
	// Контроль
	Документы.уатРасходныйКассовыйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации = Перечисления.уатВидыОперацийРКО.ВыдачаПодотчетнику Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Контрагент"));
	Иначе
		Если ВидОперации = Перечисления.уатВидыОперацийРКО.РасходДенежныхСредствПрочее Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Контрагент"));
		КонецЕсли;
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПодотчетноеЛицо"));
	КонецЕсли;
		
	Если НЕ РасшифровкаПлатежа.Итог("СуммаПлатежа")= СуммаДокумента Тогда
		ТекстНСТР = НСтр("en='Not the same amount of the document and its interpretation.';ru='Не совпадают сумма документа и ее расшифровка.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
	КонецЕсли;
	
	Для Каждого Платеж Из РасшифровкаПлатежа Цикл
		
		// Сделка должна быть заполнена, если учет взаиморасчетов ведется по заказам.
		Если ВидОперации = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ВозвратПокупателю Тогда
			
			Если Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = НСтр("en='Not completed requisite value ""Invoice""';ru='Не заполнено значение реквизита ""Счет на оплату""'");
					Иначе
						ТекстНСТР = НСтр("en='At line №%1 was not filled in attribute value ""Invoice""';ru='В строке №%1 не заполнено значение реквизита ""Счет на оплату""'");
						ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			ИначеЕсли Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = НСтр("en='Not completed requisite value ""Receipt""';ru='Не заполнено значение реквизита ""Поступление""'");
					Иначе
						ТекстНСТР = НСтр("en='At line №%1 was not filled in attribute value ""Receipt""';ru='В строке №%1 не заполнено значение реквизита ""Поступление""'");
						ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			ИначеЕсли Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = "Не заполнено значение реквизита ""Заказ на ТС""";
					Иначе
						ТекстНСТР = СтрШаблон("В строке №%1 не заполнено значение реквизита ""Заказ на ТС""", Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Платеж.ДоговорКонтрагента)
				И Организация <> Платеж.ДоговорКонтрагента.Организация Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Selected the contract of a counterparty, not corresponding to company specified in the document!';ru='Выбран договор контрагента, не соответствующий организации, указанной в документе!'");
				Иначе
					ТекстНСТР = НСтр("en='At line №%1 selected counterparty contract that does not match to company specified in document!';ru='В строке №%1 выбран договор контрагента, не соответствующий организации, указанной в документе!'");
					ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если ВидОперации = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийРКО.ВозвратПокупателю Тогда
			
			Если Не ЗначениеЗаполнено(Платеж.ДоговорКонтрагента) Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Counterparty contract not filled!';ru='Не заполнен договор контрагента!'");
				Иначе
					ТекстНСТР = НСтр("en='At line №%1 is not fill counterparty contract!';ru='В строке №%1 не заполнен договор контрагента!'");
					ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Платеж.СуммаПлатежа) Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Sum is not filled!';ru='Не заполнена сумма!'");
				Иначе
					ТекстНСТР = НСтр("en='In line №%1 was not filled sum!';ru='В строке №%1 не заполнена сумма!'");
					ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(Платеж.ДоговорКонтрагента) И Платеж.ДоговорКонтрагента.ВалютаВзаиморасчетов <> ВалютаДокумента Тогда
		//	ТекстНСТР = НСтр("en='In line №%1, the counterparty contract currency differs from document currency!';ru='В строке №%1 валюта договора контрагента отличается от валюты документа!'");
		//	ТекстНСТР = СтрШаблон(ТекстНСТР, Платеж.НомерСтроки);
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
		//КонецЕсли;
		
	КонецЦикла;
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, ПользователиКлиентСервер.АвторизованныйПользователь());
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаявкаНаРасходованиеДС") Тогда
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		ВалютаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
		ДатаВходящегоДокумента = ДанныеЗаполнения.ДатаВходящегоДокумента;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Если ДанныеЗаполнения.ВидОперации = Перечисления.уатВидыОперацийЗаявкиНаРасходование.ВыдачаПодотчетнику Тогда
			ВидОперации = Перечисления.уатВидыОперацийРКО.ВыдачаПодотчетнику;
			ПодотчетноеЛицо = ДанныеЗаполнения.ПодотчетноеЛицо;
		Иначе
			Контрагент = ДанныеЗаполнения.Контрагент;
		КонецЕсли;
		Касса = ДанныеЗаполнения.БанковскийСчетКасса;
		НомерВходящегоДокумента = ДанныеЗаполнения.НомерВходящегоДокумента;
		Организация = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		Основание = ДанныеЗаполнения;
		Приложение = ДанныеЗаполнения.Приложение;
		ПринятоОт = ДанныеЗаполнения.ПринятоОт;
		РасчетныйДокумент = ДанныеЗаполнения.РасчетныйДокумент;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаРасшифровкаПлатежа Из ДанныеЗаполнения.РасшифровкаПлатежа Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ДоговорКонтрагента            = ТекСтрокаРасшифровкаПлатежа.ДоговорКонтрагента;
			НоваяСтрока.ВалютаВзаиморасчетов          = ВалютаДокумента;
			//НоваяСтрока.КратностьВзаиморасчетов = ТекСтрокаРасшифровкаПлатежа.КратностьВзаиморасчетов;
			//НоваяСтрока.КурсВзаиморасчетов = ТекСтрокаРасшифровкаПлатежа.КурсВзаиморасчетов;
			ВалютаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(НоваяСтрока.ВалютаВзаиморасчетов, ТекущаяДата());
			НоваяСтрока.КурсВзаиморасчетов            = ВалютаКурсКратность.Курс;
			НоваяСтрока.КратностьВзаиморасчетов       = ВалютаКурсКратность.Кратность;
			НоваяСтрока.СтатьяДвиженияДенежныхСредств = ТекСтрокаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств;
			НоваяСтрока.СуммаПлатежа                  = ТекСтрокаРасшифровкаПлатежа.СуммаПлатежа;
			НоваяСтрока.СуммаВзаиморасчетов           = ТекСтрокаРасшифровкаПлатежа.СуммаПлатежа;
			НоваяСтрока.Сделка                        = ТекСтрокаРасшифровкаПлатежа.Сделка;
			НоваяСтрока.ДокументПланированияПлатежа   = ДанныеЗаполнения;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРемонтныйЛист") Тогда
		Если ДанныеЗаполнения.СпособРемонта = Перечисления.уатСпособыРемонта.Автосервис Тогда
			ВидОперации = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику;
			ДокументОснование = ДанныеЗаполнения;
			Основание = ДанныеЗаполнения;
			Контрагент = ДанныеЗаполнения.Контрагент;
			ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
			ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
			
			СуммаВзаиморасчетов = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ДанныеЗаполнения, "Работы")
				+ уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ДанныеЗаполнения, "Материалы");
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
			НоваяСтрока.ВалютаВзаиморасчетов = ВалютаДокумента;
			//НоваяСтрока.КратностьВзаиморасчетов = ТекСтрокаРасшифровкаПлатежа.КратностьВзаиморасчетов;
			//НоваяСтрока.КурсВзаиморасчетов = ТекСтрокаРасшифровкаПлатежа.КурсВзаиморасчетов;
			ВалютаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(НоваяСтрока.ВалютаВзаиморасчетов, ТекущаяДата());
			НоваяСтрока.КурсВзаиморасчетов      = ВалютаКурсКратность.Курс;
			НоваяСтрока.КратностьВзаиморасчетов = ВалютаКурсКратность.Кратность;
			НоваяСтрока.СуммаПлатежа = СуммаВзаиморасчетов;
			НоваяСтрока.СуммаВзаиморасчетов = СуммаВзаиморасчетов;
			НоваяСтрока.Сделка = ДанныеЗаполнения.Сделка;
						
			СуммаДокумента = СуммаВзаиморасчетов;
			Организация = ДанныеЗаполнения.Организация;
			Комментарий = ДанныеЗаполнения.Комментарий;
			Подразделение = ДанныеЗаполнения.Подразделение;
		Иначе
			ДокументОснование = ДанныеЗаполнения;
			Основание = ДанныеЗаполнения;
			Организация = ДанныеЗаполнения.Организация;
			ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
			Подразделение = ДанныеЗаполнения.Подразделение;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатСчетНаОплатуПоставщика") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг")
			И ДанныеЗаполнения.ОплатаПодотчетнымЛицом Тогда
			ВидОперации     = Перечисления.уатВидыОперацийРКО.ВыдачаПодотчетнику;
			ПодотчетноеЛицо = ДанныеЗаполнения.ПодотчетноеЛицо;
		Иначе
			ВидОперации     = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику;
		КонецЕсли;
		ДокументОснование   = ДанныеЗаполнения;
		Основание           = ДанныеЗаполнения;
		Контрагент          = ДанныеЗаполнения.Контрагент;
		ДоговорКонтрагента  = ДанныеЗаполнения.ДоговорКонтрагента;
		ВалютаДокумента     = ДанныеЗаполнения.ВалютаДокумента;
		Организация         = ДанныеЗаполнения.Организация;
		Комментарий         = ДанныеЗаполнения.Комментарий;
		
		флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	уатПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	уатПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК Валюта,
		|	уатПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЗНАЧЕНИЕ(Документ.уатЗаказГрузоотправителя.ПустаяСсылка) КАК ЗаказНаТС,
		|	уатПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
		|	уатПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
		|	уатПоступлениеТоваровУслугТовары.Сумма КАК СуммаВалютная,
		|	уатПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДСвалютная
		|ИЗ
		|	Документ.уатПоступлениеТоваровУслуг.Товары КАК уатПоступлениеТоваровУслугТовары
		|ГДЕ
		|	уатПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатПоступлениеТоваровУслугУслуги.Номенклатура,
		|	уатПоступлениеТоваровУслугУслуги.Валюта,
		|	уатПоступлениеТоваровУслугУслуги.СтавкаНДС,
		|	уатПоступлениеТоваровУслугУслуги.ЗаказНаТС,
		|	уатПоступлениеТоваровУслугУслуги.Сумма,
		|	уатПоступлениеТоваровУслугУслуги.СуммаНДС,
		|	уатПоступлениеТоваровУслугУслуги.СуммаВалютная,
		|	уатПоступлениеТоваровУслугУслуги.СуммаНДСвалютная
		|ИЗ
		|	Документ.уатПоступлениеТоваровУслуг.Услуги КАК уатПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	уатПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатСчетНаОплатуПоставщикаТовары.Номенклатура КАК Номенклатура,
		|	уатСчетНаОплатуПоставщикаТовары.Ссылка.ВалютаДокумента КАК Валюта,
		|	уатСчетНаОплатуПоставщикаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЗНАЧЕНИЕ(Документ.уатЗаказГрузоотправителя.ПустаяСсылка) КАК ЗаказНаТС,
		|	уатСчетНаОплатуПоставщикаТовары.Сумма КАК Сумма,
		|	уатСчетНаОплатуПоставщикаТовары.СуммаНДС КАК СуммаНДС,
		|	уатСчетНаОплатуПоставщикаТовары.Сумма КАК СуммаВалютная,
		|	уатСчетНаОплатуПоставщикаТовары.СуммаНДС КАК СуммаНДСвалютная
		|ИЗ
		|	Документ.уатСчетНаОплатуПоставщика.Товары КАК уатСчетНаОплатуПоставщикаТовары
		|ГДЕ
		|	уатСчетНаОплатуПоставщикаТовары.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	уатСчетНаОплатуПоставщикаУслуги.Номенклатура,
		|	уатСчетНаОплатуПоставщикаУслуги.Валюта,
		|	уатСчетНаОплатуПоставщикаУслуги.СтавкаНДС,
		|	уатСчетНаОплатуПоставщикаУслуги.ЗаказНаТС,
		|	уатСчетНаОплатуПоставщикаУслуги.Сумма,
		|	уатСчетНаОплатуПоставщикаУслуги.СуммаНДС,
		|	уатСчетНаОплатуПоставщикаУслуги.СуммаВалютная,
		|	уатСчетНаОплатуПоставщикаУслуги.СуммаНДСвалютная
		|ИЗ
		|	Документ.уатСчетНаОплатуПоставщика.Услуги КАК уатСчетНаОплатуПоставщикаУслуги
		|ГДЕ
		|	уатСчетНаОплатуПоставщикаУслуги.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		тблДанные = Запрос.Выполнить().Выгрузить();
		
		Для Каждого ТекСтрока Из тблДанные Цикл
			Если флМноговалютныйУчет Тогда
				ВалютаСтроки = ТекСтрока.Валюта;
				ВалютаСтрокиКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ДанныеЗаполнения.Дата);
				СуммаСтроки = ТекСтрока.СуммаВалютная;
				СуммаНДССтроки = ТекСтрока.СуммаНДСВалютная;
			Иначе 
				ВалютаСтроки = ДанныеЗаполнения.ВалютаДокумента;
				ВалютаСтрокиКурсКратность = Новый Структура("Курс, Кратность",
					ДанныеЗаполнения.КурсВзаиморасчетов, ДанныеЗаполнения.КратностьВзаиморасчетов);
				СуммаСтроки = ТекСтрока.Сумма;
				СуммаНДССтроки = ТекСтрока.СуммаНДС;
			КонецЕсли;
			
			Если ДанныеЗаполнения.УчитыватьНДС И НЕ ДанныеЗаполнения.СуммаВключаетНДС Тогда
				СуммаСтроки = СуммаСтроки + СуммаНДССтроки;
			КонецЕсли;
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ДоговорКонтрагента      = ДанныеЗаполнения.ДоговорКонтрагента;
			
			Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС Тогда
				НоваяСтрока.Сделка = ТекСтрока.ЗаказНаТС;
			Иначе
				Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг") Тогда
					Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным Тогда
						НоваяСтрока.Сделка = ДанныеЗаполнения;
					Иначе
						НоваяСтрока.Сделка = ДанныеЗаполнения.Сделка;
					КонецЕсли;
				Иначе
					Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам Тогда
						НоваяСтрока.Сделка = ДанныеЗаполнения;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			
			Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг") Тогда
				НоваяСтрока.ВалютаВзаиморасчетов = ДанныеЗаполнения.ВалютаВзаиморасчетов;
			Иначе
				Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг") Тогда
					НоваяСтрока.ВалютаВзаиморасчетов = ДанныеЗаполнения.ДокументОснование.ВалютаВзаиморасчетов;
				Иначе
					НоваяСтрока.ВалютаВзаиморасчетов = ДоговорКонтрагента.ВалютаВзаиморасчетов;
				КонецЕсли;
			КонецЕсли;
			
			ВалютаВзаиморасчетовКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(НоваяСтрока.ВалютаВзаиморасчетов, ТекущаяДата());
			НоваяСтрока.КурсВзаиморасчетов      = ВалютаВзаиморасчетовКурсКратность.Курс;
			НоваяСтрока.КратностьВзаиморасчетов = ВалютаВзаиморасчетовКурсКратность.Кратность;
			
			Если НоваяСтрока.ВалютаВзаиморасчетов = ВалютаСтроки Тогда
				НоваяСтрока.СуммаВзаиморасчетов = СуммаСтроки;
			Иначе
				НоваяСтрока.СуммаВзаиморасчетов = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаСтроки,
					ВалютаСтроки,                        НоваяСтрока.ВалютаВзаиморасчетов,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаВзаиморасчетовКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаВзаиморасчетовКурсКратность.Кратность);
			КонецЕсли;
			
			// валюта документа = валюте платежа = валюте счета
			Если ВалютаДокумента = ВалютаСтроки Тогда
				НоваяСтрока.СуммаПлатежа = СуммаСтроки;
				НоваяСтрока.СуммаНДС     = СуммаНДССтроки;
			Иначе
				ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
				
				НоваяСтрока.СуммаПлатежа = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаСтроки,
					ВалютаСтроки,                        ВалютаДокумента,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаДокументаКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаДокументаКурсКратность.Кратность);
				НоваяСтрока.СуммаНДС = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаНДССтроки,
					ВалютаСтроки,                        ВалютаДокумента,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаДокументаКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаДокументаКурсКратность.Кратность);
			КонецЕсли;
			НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.СуммаПлатежа;
		КонецЦикла;
		
		РасшифровкаПлатежа.Свернуть("ДоговорКонтрагента, Сделка, СтавкаНДС, ВалютаВзаиморасчетов, КурсВзаиморасчетов, КратностьВзаиморасчетов, СтатьяДвиженияДенежныхСредств",
			"СуммаПлатежа, СуммаНДС, СуммаВзаиморасчетов");
		
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
						
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатШтраф") Тогда
		ВидОперации = Перечисления.уатВидыОперацийРКО.ОплатаПоставщику;
		ДокументОснование = ДанныеЗаполнения;
		Основание   = ДанныеЗаполнения;
		Контрагент  = ДанныеЗаполнения.ПолучательПлатежа;

		Организация = ДанныеЗаполнения.Организация;
		Комментарий = СтрШаблон(Нстр("ru = 'Оплата по документу ""%1""'"), ДанныеЗаполнения);
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.СуммаВзаиморасчетов = ДанныеЗаполнения.СуммаОплаты;
		НоваяСтрока.СуммаПлатежа = ДанныеЗаполнения.СуммаОплаты;
		НоваяСтрока.ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПолучателя;
		
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
