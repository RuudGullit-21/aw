#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатИнвентаризацияАгрегатов";
	КомандаПечати.Идентификатор = "ИнвентаризацияАгрегатов";
	КомандаПечати.Представление = НСтр("en='Inventory';ru='Инвентаризация'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Registry of documents ""Inventory of car parts""';ru='Реестр документов ""Инвентаризация агрегатов""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияАгрегатов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИнвентаризацияАгрегатов",
			"Инвентаризация агрегатов", ПечатьИнвентаризацияАгрегатов(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеДляПечатиДокумента(ТекущийДокумент) Экспорт
	
	ПараметрыПечати = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатИнвентаризацияАгрегатов.Номер КАК Номер,
	|	уатИнвентаризацияАгрегатов.Дата КАК Дата,
	|	уатИнвентаризацияАгрегатов.Организация КАК Организация,
	|	уатИнвентаризацияАгрегатов.Склад КАК Склад,
	|	уатИнвентаризацияАгрегатов.АгрегатыСклад.(
	|		Ссылка,
	|		НомерСтроки,
	|		Агрегат,
	|		Наличие,
	|		НаличиеУчет
	|	),
	|	уатИнвентаризацияАгрегатов.АгрегатыТС.(
	|		Ссылка,
	|		НомерСтроки,
	|		Агрегат,
	|		Наличие,
	|		НаличиеУчет,
	|		ТС
	|	)
	|ИЗ
	|	Документ.уатИнвентаризацияАгрегатов КАК уатИнвентаризацияАгрегатов
	|ГДЕ
	|	уатИнвентаризацияАгрегатов.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокСклад = Шапка.АгрегатыСклад.Выбрать();
	ВыборкаСтрокТС = Шапка.АгрегатыТС.Выбрать();
	
	// Выводим шапку накладной
	ПараметрыПечати.Вставить("ТекстЗаголовка", уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(Шапка, НСтр("en='Inventory of car parts';ru='Инвентаризация агрегатов'")));
	
	// Выводим данные об организации и складе
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "НаименованиеДляПечатныхФорм,"));
	ПараметрыПечати.Вставить("ПредставлениеСклада", Шапка.Склад);
	
	Позиции = Новый Массив;
	
	НомерСтроки = 1;
	Пока ВыборкаСтрокСклад.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Агрегат"    , ВыборкаСтрокСклад.Агрегат);
		ПараметрыПозиции.Вставить("НомерСтроки", НомерСтроки);
		ПараметрыПозиции.Вставить("Наличие"    , ВыборкаСтрокСклад.Наличие);
		ПараметрыПозиции.Вставить("НаличиеУчет", ВыборкаСтрокСклад.НаличиеУчет);
		
		НомерСтроки = НомерСтроки + 1;
		Позиции.Добавить(ПараметрыПозиции);
		
	КонецЦикла;
	
	НомерСтроки = 1;
	Пока ВыборкаСтрокТС.Следующий() Цикл
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Агрегат",     ВыборкаСтрокТС.Агрегат);
		ПараметрыПозиции.Вставить("ТС",          Строка(ВыборкаСтрокТС.ТС));
		ПараметрыПозиции.Вставить("НомерСтроки", НомерСтроки);
		ПараметрыПозиции.Вставить("Наличие",     ВыборкаСтрокТС.Наличие);
		ПараметрыПозиции.Вставить("НаличиеУчет", ВыборкаСтрокТС.НаличиеУчет);
		
		НомерСтроки = НомерСтроки + 1;
		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Позиции", Позиции);
	
	Возврат ПараметрыПечати;
	
КонецФункции //ПолучитьДанныеДляПечатиДокумента()

// Получает дополнительные реквизиты для отображения в отчете "Реестр документов"
// 
// Возвращаемое значение:
//   Структура доп. реквизитов
//
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПечатьИнвентаризацияАгрегатов(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ИнвентаризацияТоваров";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияАгрегатов_ИнвентаризацияАгрегатов";
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатИнвентаризацияАгрегатов.ПФ_MXL_ИнвентаризацияАгрегатов");
		
		ПараметрыПечати = ПолучитьДанныеДляПечатиДокумента(ТекущийДокумент);
		
		Если ТекущийДокумент.ВидОперации = Перечисления.уатВидыДокументаИнвентаризацияАгрегатов.ИнвентаризацияНаСкладах Тогда
			ОбластьШапки  = "ШапкаТаблицыСклад";
			ОбластьСтроки = "СтрокаСклад";
		Иначе
			ОбластьШапки  = "ШапкаТаблицыТС";
			ОбластьСтроки = "СтрокаТС";
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку таблицы
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета    = Макет.ПолучитьОбласть(ОбластьСтроки);
		Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл	
			
			ОбластьМакета.Параметры.Заполнить(ПараметрыПозиции);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
	
		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

#КонецОбласти

#КонецЕсли