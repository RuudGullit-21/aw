#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// необходима для подключения внешних ПФ
	Заглушка = Истина;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуТарифов(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	//Зарезервировано
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуТарифов(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблТарифыЗП = Новый ТаблицаЗначений;
	тблТарифыЗП.Колонки.Добавить("Регистратор");
	тблТарифыЗП.Колонки.Добавить("Период");
	тблТарифыЗП.Колонки.Добавить("ТарифЗП");
	тблТарифыЗП.Колонки.Добавить("Сотрудник");
	тблТарифыЗП.Колонки.Добавить("ДатаНачала");
	// тблТарифыЗП.Колонки.Добавить("Действует");
	тблТарифыЗП.Колонки.Добавить("ДатаОкончания");
	
	Для Каждого ТекСтрокаТариф Из ДокументСсылка.Тарифы Цикл
		НоваяСтрока = тблТарифыЗП.Добавить();
		НоваяСтрока.Период = ТекСтрокаТариф.ДатаНачала;
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.ТарифЗП = ТекСтрокаТариф.Тариф;
		НоваяСтрока.Сотрудник = ТекСтрокаТариф.Сотрудник;
		НоваяСтрока.ДатаНачала = ТекСтрокаТариф.ДатаНачала;
		//НоваяСтрока.Действует = ТекСтрокаТариф.Действует;
		НоваяСтрока.ДатаОкончания = ТекСтрокаТариф.ДатаОкончания;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТарифыЗП", тблТарифыЗП);
КонецПроцедуры

#КонецОбласти

#КонецЕсли