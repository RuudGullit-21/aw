#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		СтандартнаяОбработка = Ложь;
		
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		Комментарий     = ДанныеЗаполнения.Комментарий;
		
		КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
		КурсВзаиморасчетов      = ДанныеЗаполнения.КурсВзаиморасчетов;
		Организация             = ДанныеЗаполнения.Организация;
		Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
						  ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
		СуммаВключаетНДС        = ДанныеЗаполнения.СуммаВключаетНДС;
		УчитыватьНДС            = ДанныеЗаполнения.УчитыватьНДС;
		
		ЗаполнитьГрузыПоЗаказуНаТС(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
		СтандартнаяОбработка = Ложь;
		
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		МаршрутныйЛист    = ДанныеЗаполнения.Ссылка;
		Организация       = ДанныеЗаполнения.Организация;
		Ответственный     = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
						  ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
		
		Если ДанныеЗаполнения.ТС.ПринадлежностьТС = Перечисления.уатПринадлежностьТС.Привлеченное Тогда
			ДанныеПеревозчика = уатЗащищенныеФункцииСервер_уэ.ПолучитьДанныеПеревозчика(ДанныеЗаполнения.Контрагент);
			
			СтрокаПеревозчика = Перевозчики.Добавить();
			СтрокаПеревозчика.Перевозчик = ДанныеЗаполнения.Контрагент;
			СтрокаПеревозчика.Услуга     = ДанныеПеревозчика.Услуга;
			
			Если ЗначениеЗаполнено(ДанныеПеревозчика.СтавкаНДС) Тогда 
				СтрокаПеревозчика.СтавкаНДС = ДанныеПеревозчика.СтавкаНДС;
				
			Иначе 
				СтрокаПеревозчика.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
					ПользователиКлиентСервер.АвторизованныйПользователь(), 
					"ОсновнаяСтавкаНДС");
			КонецЕсли;
		КонецЕсли;
		
		Комментарий = ДанныеЗаполнения.Комментарий;
		
		ОснЗаказ = Неопределено;
		Для Каждого ТекСтрокаЗаказ Из ДанныеЗаполнения.Заказы Цикл
			Если ТекСтрокаЗаказ.ТипТочкиМаршрута = Перечисления.уатТипыТочекМаршрута.Погрузка
				И ЗначениеЗаполнено(ТекСтрокаЗаказ.ЗаказГрузоотправителя) Тогда
				ОснЗаказ = ТекСтрокаЗаказ.ЗаказГрузоотправителя;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ОснЗаказ <> Неопределено Тогда
			ВалютаДокумента         = ОснЗаказ.ВалютаДокумента;
			КратностьВзаиморасчетов = ОснЗаказ.КратностьВзаиморасчетов;
			КурсВзаиморасчетов      = ОснЗаказ.КурсВзаиморасчетов;
			СуммаВключаетНДС        = ОснЗаказ.СуммаВключаетНДС;
			УчитыватьНДС            = ОснЗаказ.УчитыватьНДС;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Победитель = Неопределено;
	
	Для Каждого ТекСтрока Из Перевозчики Цикл 
		Если ТекСтрока.ЭтоПобедитель = 1 Тогда 
			Победитель = ТекСтрока.Перевозчик;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Уведомления
	Если Не Отказ И Не ПометкаУдаления И ПолучитьФункциональнуюОпцию("уатИспользоватьУведомления_уэ") Тогда
		// Заполнение ТЧ "Получатели уведомлений"
		Если Модифицированность() Тогда
			тблПолучатели = уатОбщегоНазначения_уэ.СформироватьСписокПолучателейУведомлений(ЭтотОбъект);
			ПолучателиУведомлений.Загрузить(тблПолучатели);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаОкончания < ДатаНачала Тогда 
		ТекстНСТР = НСтр("en='End date of tender cannot be less than start date.';ru='Дата окончания тендера не может быть меньше даты начала.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР, ЭтотОбъект, "ДатаОкончания",, Отказ);
	КонецЕсли;
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ДополнительныеСвойства.Свойство("флИзменениеСтатуса") И ДополнительныеСвойства.флИзменениеСтатуса Тогда
		уатОбщегоНазначения_уэ.СформироватьУведомление(Ссылка, Перечисления.уатТипыСобытийДляУведомления_уэ.ИзменениеСтатусаОтветаПеревозчика, ДополнительныеСвойства);
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИдентификаторАТИ = "";
	СтатусТендера    = Справочники.уатСтатусы_уэ.Новый;
	Перевозчики.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьГрузыПоЗаказуНаТС(ЗаказНаТС) Экспорт
	
	Если ЗаказНаТС.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам Тогда
		Для Каждого ТекГруз Из ЗаказНаТС.ГрузовойСостав Цикл
			СтрокаГруз = Грузы.Добавить();
			СтрокаГруз.Заказ            = ЗаказНаТС.Ссылка;
			СтрокаГруз.ГрузовоеМесто    = ТекГруз.ГрузовоеМесто;
			СтрокаГруз.Количество       = ТекГруз.КоличествоМест;
			СтрокаГруз.ЕдиницаИзмерения = ТекГруз.ВидУпаковки;
		КонецЦикла;
		
	ИначеЕсли ЗаказНаТС.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоТоварам Тогда
		Для Каждого ТекГруз Из ЗаказНаТС.Товары Цикл
			СтрокаГруз = Грузы.Добавить();
			СтрокаГруз.Заказ            = ЗаказНаТС.Ссылка;
			СтрокаГруз.ГрузовоеМесто    = ТекГруз.Номенклатура;
			СтрокаГруз.Количество       = ТекГруз.Количество;
			СтрокаГруз.ЕдиницаИзмерения = ТекГруз.ЕдиницаИзмерения;
		КонецЦикла;
		
	Иначе 
		СтрокаГруз = Грузы.Добавить();
		СтрокаГруз.Заказ      = ЗаказНаТС.Ссылка;
		СтрокаГруз.Количество = 1;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли