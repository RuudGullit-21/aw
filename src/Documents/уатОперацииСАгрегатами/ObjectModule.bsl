
//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Документы.уатОперацииСАгрегатами.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьАгрегатыТС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение.ОтразитьОстаткиАгрегатов(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатОперацииСАгрегатами.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	//Документы.уатОперацииСАгрегатами.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	ЕстьСписание = Ложь;
	ЕстьПриходование = Ложь;
	Для Каждого ТекСтрока ИЗ ПрочиеАгрегаты Цикл
		Если ТекСтрока.Состояние = Перечисления.уатСостоянияАгрегатов.Снято тогда
			ЕстьПриходование = Истина;
		ИначеЕсли ТекСтрока.Состояние = Перечисления.уатСостоянияАгрегатов.УстановленоВРаботе тогда
			ЕстьСписание = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьСписание тогда
		ПроверяемыеРеквизиты.Добавить("СкладОтправитель");
	КонецЕсли;
	Если ЕстьПриходование тогда
		ПроверяемыеРеквизиты.Добавить("СкладПолучатель");
	КонецЕсли;
	
	мТаб = ПрочиеАгрегаты.Выгрузить();
	мТаб.Свернуть("СерияНоменклатуры");
	
	Если мТаб.Количество() <> ПрочиеАгрегаты.Количество() тогда
		ТекстНСТР = НСтр("en='Document has iterative car parts';ru='В документе есть повторяющиеся агрегаты'");
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ПрочиеАгрегаты Цикл
		Если ТекСтрока.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина тогда
			ТекстНСТР = НСтр("en='The use of tires and batteries is not allowed in document. Line №%1, tire ""%2"".';ru='В документе не допустимо использование шин и аккумуляторов. Строка №%1, шина ""%2""'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, ТекСтрока.НомерСтроки, ТекСтрока.СерияНоменклатуры.СерийныйНомер);
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
			
		ИначеЕсли ТекСтрока.СерияНоменклатуры.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор тогда
			ТекстНСТР = НСтр("en='Document is not permissible to use tyres and batteries. Line №%1, battery ""%2""';ru='В документе не допустимо использование шин и аккумуляторов. Строка №%1, аккумулятор ""%2""'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, ТекСтрока.НомерСтроки, ТекСтрока.СерияНоменклатуры.СерийныйНомер);
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
			
		КонецЕсли;
	КонецЦикла;
	
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатИнвентаризацияАгрегатов")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатИнвентаризацияАгрегатов") Тогда
		
		Организация       = ДанныеЗаполнения.Организация;
		Подразделение     = ДанныеЗаполнения.Подразделение;
		Комментарий       = ДанныеЗаполнения.Комментарий;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Ответственный     = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
		
		Если ДанныеЗаполнения.ВидОперации = Перечисления.уатВидыДокументаИнвентаризацияАгрегатов.ИнвентаризацияНаТС Тогда
			Для Каждого ТекСтрокаАгрегатыТС Из ДанныеЗаполнения.АгрегатыТС Цикл
				Если ТекСтрокаАгрегатыТС.Агрегат.ТипАгрегата <> Справочники.уатТипыАгрегатов.Аккумулятор И 
					ТекСтрокаАгрегатыТС.Агрегат.ТипАгрегата <> Справочники.уатТипыАгрегатов.Шина Тогда
					НоваяСтрока 				  = ПрочиеАгрегаты.Добавить();
					НоваяСтрока.ТС 				  = ТекСтрокаАгрегатыТС.ТС;
					НоваяСтрока.СерияНоменклатуры = ТекСтрокаАгрегатыТС.Агрегат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти