
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьОграничениеСотрудника();
	УстановитьВидимость();
	
	уатОбщегоНазначенияСервер.НастроитьПолеЕдиницыИзмерения(ЭтотОбъект, "ТехническиеЖидкости");
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииКлиентПереопределяемый.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Установить видимость реквизитов и заголовков колонок.
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокДоступнВидыОпераций = Новый СписокЗначений;
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПоАкту"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПоТО"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПрочее"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.Слив"));
	ДанныеВыбора = СписокДоступнВидыОпераций;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента();
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТехническиеЖидкости

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(
												СтрокаТабличнойЧасти.Номенклатура, "ЕдиницаХраненияОстатков");
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	уатОбщегоНазначения.ЗаполнитьЭкипажТС(ТекСтрока.ТС, Объект.Организация, Объект.Дата, ТекСтрока.Водитель);
	
	ОбновитьСписокВыбораЭкипажа();
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.ТехническиеЖидкости.ТекущиеДанные.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Элементы.ТехническиеЖидкости.ТекущиеДанные.Водитель, Новый Структура("Организация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Элементы.ТехническиеЖидкости.ТекущиеДанные.Водитель, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда //выбор из списка
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", Объект.Организация, Объект.Дата);
	уатИнтерфейсВводаСотрудников.СотрудникАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", Объект.Организация, Объект.Дата);
	уатИнтерфейсВводаСотрудников.СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ОбновитьСписокВыбораЭкипажа();
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	мсвГруппДляОтбора = Новый Массив;
	мсвГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	ДопПараметры = Новый Структура("ТС, Организация", ТекСтрока.ТС, Объект.Организация);
	ДанныеВыбора = уатГСМ.ПолучитьСписокАвтоподбораПоляГСМ(Текст, мсвГруппДляОтбора, ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	СтандартнаяОбработка	 = Ложь;
	СписокГруппДляОтбора	 = Новый СписокЗначений;
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	
	ДополнительныеПараметры	 = Новый Структура("ЗначениеГСМДоИзменения", Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура);
	ОписаниеОповещенияЗакр	 = Новый ОписаниеОповещения("ОписаниеОповещенияВыбораГСМ", ЭтотОбъект, ДополнительныеПараметры);
	уатЗащищенныеФункцииКлиент.ВыбратьГСМ(СписокГруппДляОтбора,ДополнительныеПараметры,ОписаниеОповещенияЗакр);
	
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура = Результат;
	Если Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура <> ДопПараметры.ЗначениеГСМДоИзменения Тогда 
		ТехническиеЖидкостиНоменклатураПриИзменении(Неопределено);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Параметры.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатОбщегоНазначенияКлиент.ТЧТоварыЕдиницаИзмеренияНачалоВыбора(
		Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьВидимость()
	Элементы.Склад.Видимость = Объект.ВидОперации <> 
		ПредопределенноеЗначение("Перечисление.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокФормыДокумента()
	АвтоЗаголовок = Ложь; // заголовок будем писать сами
	
	Если ПустаяСтрока(Строка(Объект.ВидОперации)) Тогда
		АвтоЗаголовок = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = НСтр("en='Operation with fluids (FMS)';ru='Операции с техническими жидкостями (уат)'") + ": " + Строка(Объект.ВидОперации) + ". ";
	
	Если Объект.Ссылка.Пустая() Тогда  
		Заголовок = Заголовок + НСтр("en='New';ru='Новый'");
	Иначе
		Если Объект.Проведен Тогда
			Заголовок = Заголовок + НСтр("en='Posted';ru='Проведен'");
		Иначе
			Заголовок = Заголовок + НСтр("en='Not held';ru='Не проведен'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОграничениеСотрудника()
	ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	Элементы.ТехническиеЖидкостиВодитель.ОграничениеТипа = ОграничениеТипа;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораЭкипажа()
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТехническиеЖидкостиВодитель.СписокВыбора.Очистить();
	
	ЭкипажТССписок = уатЗащищенныеФункцииСервер.ЭкипажТССписок(ТекСтрока.ТС, Объект.Дата);
	ЭкипажТССписок_Количество = ЭкипажТССписок.Количество();
	
	Элементы.ТехническиеЖидкостиВодитель.КнопкаВыпадающегоСписка = (ЭкипажТССписок_Количество > 0);
	
	Если ЭкипажТССписок_Количество = 0 Тогда	
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСотр Из ЭкипажТССписок Цикл
		Элементы.ТехническиеЖидкостиВодитель.СписокВыбора.Добавить(ТекСотр.Значение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция СтруктураОтборТС()
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураОтбор.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		СтруктураОтбор.Вставить("Колонна", Объект.Колонна);
	КонецЕсли;
	
	Возврат СтруктураОтбор;
КонецФункции

#КонецОбласти
