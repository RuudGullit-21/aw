#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатАвансовыйОтчет";
	КомандаПечати.Идентификатор = "АвансовыйОтчет";
	КомандаПечати.Представление = НСтр("en='Expense report';ru='Авансовый отчет'");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатАвансовыйОтчет";
	КомандаПечати.Идентификатор = "АвансовыйОтчетАО_1";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Представление = НСтр("en='Expense report (AO-1)';ru='Авансовый отчет (АО-1)'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Registry of documents ""Advance report""';ru='Реестр документов ""Авансовый отчет""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если НЕ уатОбщегоНазначенияСервер.РазрешениеПечатиНепроведенногоДокумента(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АвансовыйОтчет",
			"Авансовый отчет", ПечатьАвансовыйОтчет(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчетАО_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АвансовыйОтчетАО_1",
			"Авансовый отчет", ПечатьАвансовыйОтчетАО_1(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	мЗапрос = Новый Запрос;
	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	мЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	КОНЕЦПЕРИОДА(Расходы.ДатаОтражения, ДЕНЬ) КАК Период,
	|	Расходы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Расходы.УчитыватьНДС КАК УчитыватьНДС,
	|	Расходы.Ссылка КАК Регистратор,
	|	Расходы.Ссылка.Организация КАК Организация,
	|	Расходы.Ссылка.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Валюта
	|		ИНАЧЕ Расходы.Ссылка.ВалютаДокумента
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Курс
	|		ИНАЧЕ Расходы.Ссылка.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Кратность
	|		ИНАЧЕ Расходы.Ссылка.Кратность
	|	КОНЕЦ КАК Кратность,
	|	Расходы.Сумма КАК Сумма,
	|	Расходы.СуммаНДС КАК СуммаНДС,
	|	Расходы.СуммаНДС КАК СуммаНДСУпр,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.уатАвансовыйОтчет.Расходы КАК Расходы
	|ГДЕ
	|	Расходы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Расходы.ДатаОтражения КАК Период,
	|	Расходы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Расходы.УчитыватьНДС КАК УчитыватьНДС,
	|	Расходы.Ссылка КАК Регистратор,
	|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
	|	Расходы.Ссылка.Организация КАК Организация,
	|	Расходы.Ссылка.Подразделение КАК Подразделение,
	|	Расходы.ТС КАК ТС,
	|	Расходы.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Валюта
	|		ИНАЧЕ Расходы.Ссылка.ВалютаДокумента
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Курс
	|		ИНАЧЕ Расходы.Ссылка.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА Расходы.Ссылка.Мультивалютный
	|			ТОГДА Расходы.Кратность
	|		ИНАЧЕ Расходы.Ссылка.Кратность
	|	КОНЕЦ КАК Кратность,
	|	Расходы.Сумма КАК Сумма,
	|	0 КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	Расходы.СуммаНДС КАК СуммаНДС,
	|	Расходы.СуммаНДС КАК СуммаНДСУпр
	|ИЗ
	|	Документ.уатАвансовыйОтчет.Расходы КАК Расходы
	|ГДЕ
	|	Расходы.Ссылка = &Ссылка
	|	И (Расходы.ДокументРасхода = НЕОПРЕДЕЛЕНО
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатПрочиеДоходыРасходы.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатПоступлениеТоваровУслуг.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатПутевойЛист.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатРемонтныйЛист.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатЗаправкаГСМ.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатКомандировкиОрганизаций.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатРасходныйКассовыйОрдер.ПустаяСсылка)
	|			ИЛИ Расходы.ДокументРасхода = ЗНАЧЕНИЕ(Документ.уатПлатежноеПоручениеИсходящее.ПустаяСсылка))";
	
	мсвРезультат = мЗапрос.ВыполнитьПакет();
	
	ТабДвиженияДСПодотчетников = мсвРезультат[0].Выгрузить();
	ТабРасходы = мсвРезультат[1].Выгрузить();
	
	Для Каждого ТекСтрока Из ТабДвиженияДСПодотчетников Цикл
		ТекСтрока.Сумма = ТекСтрока.Сумма + ?(ТекСтрока.УчитыватьНДС И НЕ ТекСтрока.СуммаВключаетНДС, ТекСтрока.СуммаНДС, 0);
		
		ТекСтрока.СуммаУпр = ТекСтрока.Сумма;
		Если ТекСтрока.Валюта <> СтруктураДополнительныеСвойства.ВалютаУпрУчета Тогда
			ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаУпр,
				ТекСтрока.Валюта,    СтруктураДополнительныеСвойства.ВалютаУпрУчета,
				ТекСтрока.Курс,      СтруктураДополнительныеСвойства.КурсУпр,
				ТекСтрока.Кратность, СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ТабРасходы Цикл
		СуммаВсего = ТекСтрока.Сумма + ?(ТекСтрока.УчитыватьНДС И НЕ ТекСтрока.СуммаВключаетНДС, ТекСтрока.СуммаНДС, 0);
		
		ТекСтрока.СуммаРегл = СуммаВсего;
		Если ТекСтрока.Валюта <> СтруктураДополнительныеСвойства.ВалютаРеглУчета Тогда
			ТекСтрока.СуммаРегл = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаРегл,
				ТекСтрока.Валюта,    СтруктураДополнительныеСвойства.ВалютаРеглУчета,
				ТекСтрока.Курс,      СтруктураДополнительныеСвойства.КурсРегл,
				ТекСтрока.Кратность, СтруктураДополнительныеСвойства.КратностьРегл);
		КонецЕсли;
		
		ТекСтрока.СуммаУпр = СуммаВсего;
		Если ТекСтрока.Валюта <> СтруктураДополнительныеСвойства.ВалютаУпрУчета Тогда
			ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаУпр,
				ТекСтрока.Валюта,    СтруктураДополнительныеСвойства.ВалютаУпрУчета,
				ТекСтрока.Курс,      СтруктураДополнительныеСвойства.КурсУпр,
				ТекСтрока.Кратность, СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЕсли;
					
		ТекСтрока.СуммаНДС = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДС,
			ТекСтрока.Валюта,    СтруктураДополнительныеСвойства.ВалютаРеглУчета,
			ТекСтрока.Курс,      СтруктураДополнительныеСвойства.КурсРегл,
			ТекСтрока.Кратность, СтруктураДополнительныеСвойства.КратностьРегл);
			
		ТекСтрока.СуммаНДСУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДСУпр,
			ТекСтрока.Валюта,    СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			ТекСтрока.Курс,      СтруктураДополнительныеСвойства.КурсУпр,
			ТекСтрока.Кратность, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстаткиДСУПодотчетныхЛиц", ТабДвиженияДСПодотчетников);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасходы", ТабРасходы);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ПодотчетноеЛицо");
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПечатьАвансовыйОтчет(МассивОбъектов, ОбъектыПечати)  
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АвансовыйОтчет";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДокументВыборка Из МассивОбъектов Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_АвансовыйОтчет";
		
		Если ДокументВыборка.Мультивалютный Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатАвансовыйОтчет.ПФ_MXL_АвансовыйОтчетМультивалютный");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатАвансовыйОтчет.ПФ_MXL_АвансовыйОтчет");
		КонецЕсли;
		
		// Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ДокументВыборка.Ссылка, "Авансовый отчет");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыОрганизации");
		СведенияОбОрганизации = уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ДокументВыборка.Организация, ДокументВыборка.Дата);
		ОбластьМакета.Параметры.Организация = уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.Подразделение = ДокументВыборка.Подразделение;
		ДанныеФизЛица = уатОбщегоНазначенияТиповыеСервер.ДанныеФизЛица(ДокументВыборка.Организация, ДокументВыборка.ПодотчетноеЛицо, ДокументВыборка.Дата, Ложь);
		ОбластьМакета.Параметры.ПодотчетноеЛицоФИО = ДанныеФизЛица.Представление;
		ОбластьМакета.Параметры.ПодотчетноеЛицо = ДокументВыборка.ПодотчетноеЛицо;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СуммаИтого    = 0;
		СуммаНДСИтого = 0;
		СуммаНДСВключаетИтого = 0;
		Ном           = 0;
		УчитыватьНДС  = Ложь;
		тблИтогиПоВалютам = Новый ТаблицаЗначений;
		тблИтогиПоВалютам.Колонки.Добавить("Валюта");
		тблИтогиПоВалютам.Колонки.Добавить("Сумма");
		тблИтогиПоВалютам.Колонки.Добавить("СуммаНДС");
		тблИтогиПоВалютам.Колонки.Добавить("СуммаНДСВкл");
		
		// ТЧ
		Для Каждого ВыборкаСтрок Из ДокументВыборка.Расходы Цикл
			Ном = Ном + 1;
			
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.НомерСтроки = Ном;
			ОбластьСтрока.Параметры.Дата = ВыборкаСтрок.ДатаОтражения;
			Если ЗначениеЗаполнено(ВыборкаСтрок.ТС) Тогда
				Если ЗначениеЗаполнено(ВыборкаСтрок.Контрагент) Тогда
					ОбластьСтрока.Параметры.ТСКонтрагент = Строка(ВыборкаСтрок.ТС) + " / " + ВыборкаСтрок.Контрагент;
				Иначе
					ОбластьСтрока.Параметры.ТСКонтрагент = Строка(ВыборкаСтрок.ТС);
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(ВыборкаСтрок.Контрагент) Тогда
				    ОбластьСтрока.Параметры.ТСКонтрагент = ВыборкаСтрок.Контрагент;
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаСтрок.ДокументРасхода) Тогда
				ОбластьСтрока.Параметры.ДокументРасхода = ВыборкаСтрок.ДокументРасхода;
			ИначеЕсли ЗначениеЗаполнено(ВыборкаСтрок.НаименованиеВходящегоДокумента) Тогда
				ОбластьСтрока.Параметры.ДокументРасхода = ВыборкаСтрок.НаименованиеВходящегоДокумента
					+ " №" + ВыборкаСтрок.НомерВходящегоДокумента
					+ " от " + Формат(ВыборкаСтрок.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
			КонецЕсли;
			ОбластьСтрока.Параметры.Назначение = ВыборкаСтрок.СтатьяРасходов;
			ОбластьСтрока.Параметры.Сумма = ВыборкаСтрок.Сумма;
			
			Если ДокументВыборка.Мультивалютный Тогда
				ОбластьСтрока.Параметры.Валюта = ВыборкаСтрок.Валюта;
				ОбластьСтрока.Параметры.Курс = ВыборкаСтрок.Курс;
			КонецЕсли;
						
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ВалютаСтроки = ?(ДокументВыборка.Мультивалютный, ВыборкаСтрок.Валюта, ДокументВыборка.ВалютаДокумента);
			СтрокаИтогов = тблИтогиПоВалютам.Найти(ВалютаСтроки, "Валюта");
			Если СтрокаИтогов = Неопределено Тогда
				СтрокаИтогов = тблИтогиПоВалютам.Добавить();
				СтрокаИтогов.Валюта = ВалютаСтроки;
				СтрокаИтогов.Сумма = 0;
				СтрокаИтогов.СуммаНДС = 0;
				СтрокаИтогов.СуммаНДСВкл = 0;
			КонецЕсли;
			СтрокаИтогов.Сумма = СтрокаИтогов.Сумма + ВыборкаСтрок.Сумма;
			Если ВыборкаСтрок.СуммаВключаетНДС Тогда
				СтрокаИтогов.СуммаНДСВкл = СтрокаИтогов.СуммаНДСВкл + ВыборкаСтрок.СуммаНДС;
			Иначе
				СтрокаИтогов.СуммаНДС = СтрокаИтогов.СуммаНДС + ВыборкаСтрок.СуммаНДС;
			КонецЕсли;
			Если ВыборкаСтрок.УчитыватьНДС Тогда
				УчитыватьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		тблИтогиПоВалютам.Сортировать("Валюта");
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		Для Каждого ТекСтрока Из тблИтогиПоВалютам Цикл
			// Вывести Итого
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьИтого.Параметры.Валюта = ТекСтрока.Валюта;
			ОбластьИтого.Параметры.Всего = уатОбщегоНазначенияТиповые.уатФорматСумм(ТекСтрока.Сумма);
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
						
			// Вывести Итого НДС
			Если УчитыватьНДС Тогда
				СтавкиНДС = ОбщегоНазначения.ВыгрузитьКолонку(ДокументВыборка.Расходы, "СтавкаНДС", Истина);
				Если ТекСтрока.СуммаНДСВкл <> 0 Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДСВключает");
					ДанныеПечатиНДС = уатОбщегоНазначенияТиповые.уатДанныеПечатиИтоговНДС(ТекСтрока.СуммаНДСВкл, СтавкиНДС, УчитыватьНДС, ":");
					ОбластьМакета.Параметры.НДС = ДанныеПечатиНДС.НДС;
					ОбластьМакета.Параметры.ВсегоНДС = ДанныеПечатиНДС.ВсегоНДС;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
				Если ТекСтрока.СуммаНДС <> 0 Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
					ДанныеПечатиНДС = уатОбщегоНазначенияТиповые.уатДанныеПечатиИтоговНДС(ТекСтрока.СуммаНДС, СтавкиНДС, УчитыватьНДС, ":");
					ОбластьМакета.Параметры.НДС = ДанныеПечатиНДС.НДС;
					ОбластьМакета.Параметры.ВсегоНДС = ДанныеПечатиНДС.ВсегоНДС;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
				Если ТекСтрока.СуммаНДС = 0 И ТекСтрока.СуммаНДСВкл = 0 Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
					ДанныеПечатиНДС = уатОбщегоНазначенияТиповые.уатДанныеПечатиИтоговНДС(0, СтавкиНДС, УчитыватьНДС, ":");
					ОбластьМакета.Параметры.НДС = ДанныеПечатиНДС.НДС;
					ОбластьМакета.Параметры.ВсегоНДС = ДанныеПечатиНДС.ВсегоНДС;
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// Вывести итоговую строку и сумму прописью
		ОбластьМакета  = Макет.ПолучитьОбласть("СуммаПрописью");
		ИтоговаяСтрока = СтрШаблон("Всего позиций расходов %1, на сумму ", Ном);
		СуммаПрописью = "";
		Для Каждого ТекСтрока Из тблИтогиПоВалютам Цикл
			ИтоговаяСтрока = ИтоговаяСтрока + уатОбщегоНазначенияТиповые.уатФорматСумм(ТекСтрока.Сумма + ТекСтрока.СуммаНДС, ТекСтрока.Валюта) + ", ";
			СуммаПрописью  = СуммаПрописью + уатОбщегоНазначенияТиповые.уатСформироватьСуммуПрописью(ТекСтрока.Сумма + ТекСтрока.СуммаНДС, ТекСтрока.Валюта) + ", ";
		КонецЦикла;
		ИтоговаяСтрока = Лев(ИтоговаяСтрока, СтрДлина(ИтоговаяСтрока)-2);
		СуммаПрописью = Лев(СуммаПрописью, СтрДлина(СуммаПрописью)-2);
		ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
		ОбластьМакета.Параметры.СуммаПрописью = СуммаПрописью;
		ТабличныйДокумент.Вывести(ОбластьМакета);
				
		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ПодотчетноеЛицоФИО = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ДокументВыборка.ПодотчетноеЛицо);
		ОбластьМакета.Параметры.ПодотчетноеЛицо = ДокументВыборка.ПодотчетноеЛицо;
		Руководители = уатОбщегоНазначенияТиповые.уатОтветственныеЛицаОрганизаций(ДокументВыборка.Организация, ДокументВыборка.Дата);
		ОбластьМакета.Параметры.Руководитель = Руководители.Руководитель;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументВыборка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

Функция ПечатьАвансовыйОтчетАО_1(МассивОбъектов, ОбъектыПечати)  
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаУпрУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АвансовыйОтчетАО_1";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	МенВрТаб = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатАвансовыйОтчет.Ссылка КАК Ссылка,
	|	уатАвансовыйОтчет.МоментВремени КАК МоментВремени,
	|	уатАвансовыйОтчет.Организация КАК Организация,
	|	уатАвансовыйОтчет.ПодотчетноеЛицо КАК ПодотчетноеЛицо
	|ПОМЕСТИТЬ АвансовыйОтчетНаПечатьВТ
	|ИЗ
	|	Документ.уатАвансовыйОтчет КАК уатАвансовыйОтчет
	|ГДЕ
	|	уатАвансовыйОтчет.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АвансовыйОтчетНаПечатьВТ.Ссылка КАК Ссылка,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Дата КАК ДатаДокумента,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Номер КАК Номер,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Мультивалютный КАК Мультивалютный,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчетНаПечатьВТ.Ссылка.Организация.ВариантНаименованияДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВариантыНаименованияДляПечатныхФорм.СокращенноеНаименование)
	|			ТОГДА АвансовыйОтчетНаПечатьВТ.Ссылка.Организация.НаименованиеСокращенное
	|		ИНАЧЕ АвансовыйОтчетНаПечатьВТ.Ссылка.Организация.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеОрганизации,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Подразделение КАК ПредставлениеПодразделения,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.Подразделение.Код КАК КодПодразделения,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.ВалютаДокумента КАК Валюта,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.ВалютаДокумента.Представление КАК ВалютаДокументаПредставление,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.НазначениеАванса КАК НазначениеАванса,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.КоличествоДокументов КАК КоличествоДокументов,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.КоличествоЛистов КАК КоличествоЛистов,
	|	АвансовыйОтчетНаПечатьВТ.Ссылка.СуммаДокумента КАК Сумма
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ КАК АвансовыйОтчетНаПечатьВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатАвансовыйОтчетРасходы.Ссылка КАК Ссылка,
	|	уатАвансовыйОтчетРасходы.НаименованиеВходящегоДокумента КАК НаименованиеРасхода,
	|	уатАвансовыйОтчетРасходы.НомерВходящегоДокумента КАК ДокументНомер,
	|	уатАвансовыйОтчетРасходы.ДатаВходящегоДокумента КАК ДокументДата,
	|	уатАвансовыйОтчетРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	уатАвансовыйОтчетРасходы.ДокументРасхода КАК АналитикаРасходов,
	|	уатАвансовыйОтчетРасходы.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА уатАвансовыйОтчетРасходы.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА уатАвансовыйОтчетРасходы.Ссылка.ВалютаДокумента
	|		ИНАЧЕ уатАвансовыйОтчетРасходы.Валюта
	|	КОНЕЦ КАК Валюта,
	|	уатАвансовыйОтчетРасходы.НомерСтроки КАК НомерСтроки,
	|	уатАвансовыйОтчетРасходы.СтатьяРасходов.Счет КАК СчетДт,
	|	уатАвансовыйОтчетРасходы.Сумма + ВЫБОР
	|		КОГДА уатАвансовыйОтчетРасходы.УчитыватьНДС
	|				И НЕ уатАвансовыйОтчетРасходы.СуммаВключаетНДС
	|			ТОГДА уатАвансовыйОтчетРасходы.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА НЕ уатАвансовыйОтчетРасходы.Ссылка.Мультивалютный
	|			ТОГДА ВЫБОР
	|					КОГДА уатАвансовыйОтчетРасходы.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						ТОГДА ""71.01""
	|					ИНАЧЕ ""71.21""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СчетКт
	|ИЗ
	|	Документ.уатАвансовыйОтчет.Расходы КАК уатАвансовыйОтчетРасходы
	|ГДЕ
	|	уатАвансовыйОтчетРасходы.Ссылка В(&МассивДокументов)";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка                 = МассивРезультатов[1].Выбрать();
	ВыборкаОборотнаяСторона = МассивРезультатов[2].Выбрать();
	Проводки = МассивРезультатов[2].Выгрузить();
	
	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		ПечатьВИностраннойВалюте = (Выборка.Валюта <> ВалютаРегламентированногоУчета Или Выборка.Мультивалютный);
		Если ПечатьВИностраннойВалюте Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатАвансовыйОтчет.ПФ_MXL_АвансовыйОтчетВИностраннойВалюте");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатАвансовыйОтчет.ПФ_MXL_АвансовыйОтчетАО_1");
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗапросОстатки = Новый Запрос();
		ЗапросОстатки.УстановитьПараметр("Ссылка", Выборка.Ссылка);
		ЗапросОстатки.УстановитьПараметр("Организация", Выборка.Организация);
		ЗапросОстатки.УстановитьПараметр("ПодотчетноеЛицо", Выборка.ПодотчетноеЛицо);
		ЗапросОстатки.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатАвансовыйОтчетРасходы.Ссылка КАК Ссылка,
		|	МАКСИМУМ(уатАвансовыйОтчетРасходы.ДатаОтражения) КАК ДатаОтражения,
		|	уатАвансовыйОтчетРасходы.Ссылка.МоментВремени КАК МоментВремениДокументаТО
		|ПОМЕСТИТЬ МаксимальныйПериодТО
		|ИЗ
		|	Документ.уатАвансовыйОтчет.Расходы КАК уатАвансовыйОтчетРасходы
		|ГДЕ
		|	уатАвансовыйОтчетРасходы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	уатАвансовыйОтчетРасходы.Ссылка,
		|	уатАвансовыйОтчетРасходы.Ссылка.МоментВремени
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	уатОстаткиДСУПодотчетныхЛиц.Регистратор КАК ТекущийОтчет,
		|	уатОстаткиДСУПодотчетныхЛиц.МоментВремени КАК МоментВремениТекущийОтчет,
		|	уатОстаткиДСУПодотчетныхЛиц.Период КАК ПериодТекущийОтчет,
		|	уатОстаткиДСУПодотчетныхЛиц.НомерСтроки КАК НомерСтрокиТекущийОтчет,
		|	МаксимальныйПериодТО.МоментВремениДокументаТО КАК МоментВремениДокументаТО
		|ПОМЕСТИТЬ МоментВремениТО
		|ИЗ
		|	МаксимальныйПериодТО КАК МаксимальныйПериодТО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиДСУПодотчетныхЛиц КАК уатОстаткиДСУПодотчетныхЛиц
		|		ПО МаксимальныйПериодТО.Ссылка = уатОстаткиДСУПодотчетныхЛиц.Регистратор
		|			И НАЧАЛОПЕРИОДА(МаксимальныйПериодТО.ДатаОтражения, ДЕНЬ) = НАЧАЛОПЕРИОДА(уатОстаткиДСУПодотчетныхЛиц.Период, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	уатОстаткиДСУПодотчетныхЛиц.Период УБЫВ,
		|	уатОстаткиДСУПодотчетныхЛиц.НомерСтроки УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	МоментВремениТО.ТекущийОтчет КАК ТекущийОтчет,
		|	МоментВремениТО.МоментВремениТекущийОтчет КАК МоментВремениТекущийОтчет,
		|	МоментВремениТО.НомерСтрокиТекущийОтчет КАК НомерСтрокиТекущийОтчет,
		|	ЕСТЬNULL(уатОстаткиДСУПодотчетныхЛиц.Регистратор, ЗНАЧЕНИЕ(Документ.уатАвансовыйОтчет.ПустаяСсылка)) КАК ПредыдущийОтчет,
		|	уатОстаткиДСУПодотчетныхЛиц.МоментВремени КАК МоментВремениПредыдущийОтчет,
		|	уатОстаткиДСУПодотчетныхЛиц.НомерСтроки КАК НомерСтрокиПредыдущийОтчет
		|ПОМЕСТИТЬ ПредыдущийОтчетВТ
		|ИЗ
		|	МоментВремениТО КАК МоментВремениТО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.уатОстаткиДСУПодотчетныхЛиц КАК уатОстаткиДСУПодотчетныхЛиц
		|		ПО (ВЫБОР
		|				КОГДА МоментВремениТО.ПериодТекущийОтчет > уатОстаткиДСУПодотчетныхЛиц.Период
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА МоментВремениТО.ПериодТекущийОтчет = уатОстаткиДСУПодотчетныхЛиц.Период
		|							ТОГДА ВЫБОР
		|									КОГДА МоментВремениТО.ТекущийОтчет.Дата > уатОстаткиДСУПодотчетныхЛиц.Регистратор.Дата
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ)
		|			И (уатОстаткиДСУПодотчетныхЛиц.Организация = &Организация)
		|			И (уатОстаткиДСУПодотчетныхЛиц.ПодотчетноеЛицо = &ПодотчетноеЛицо)
		|			И (ТИПЗНАЧЕНИЯ(уатОстаткиДСУПодотчетныхЛиц.Регистратор) = ТИП(Документ.уатАвансовыйОтчет))
		|			И МоментВремениТО.ТекущийОтчет <> уатОстаткиДСУПодотчетныхЛиц.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	уатОстаткиДСУПодотчетныхЛиц.Период УБЫВ,
		|	уатОстаткиДСУПодотчетныхЛиц.Регистратор.Дата УБЫВ,
		|	уатОстаткиДСУПодотчетныхЛиц.НомерСтроки УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваПредыдущийОтчет.Период КАК Период,
		|	ДенежныеСредстваПредыдущийОтчет.Регистратор.Дата КАК РегистраторДата,
		|	ДенежныеСредстваПредыдущийОтчет.Регистратор КАК Регистратор,
		|	ДенежныеСредстваПредыдущийОтчет.Валюта КАК Валюта,
		|	ДенежныеСредстваПредыдущийОтчет.СуммаОборот КАК СуммаОборот,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваПредыдущийОтчет.Регистратор = ПредыдущийОтчетВТ.ПредыдущийОтчет
		|				И ДенежныеСредстваПредыдущийОтчет.НомерСтроки = ПредыдущийОтчетВТ.НомерСтрокиПредыдущийОтчет
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК флНачОстатка,
		|	ВЫБОР
		|		КОГДА ДенежныеСредстваПредыдущийОтчет.Регистратор = ПредыдущийОтчетВТ.ТекущийОтчет
		|				И ДенежныеСредстваПредыдущийОтчет.НомерСтроки = ПредыдущийОтчетВТ.НомерСтрокиТекущийОтчет
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК флКонОстатка,
		|	ПредыдущийОтчетВТ.ПредыдущийОтчет КАК ПредыдущийОтчет
		|ИЗ
		|	РегистрНакопления.уатОстаткиДСУПодотчетныхЛиц.ОстаткиИОбороты(
		|			,
		|			,
		|			Запись,
		|			,
		|			Организация = &Организация
		|				И ПодотчетноеЛицо = &ПодотчетноеЛицо) КАК ДенежныеСредстваПредыдущийОтчет,
		|	ПредыдущийОтчетВТ КАК ПредыдущийОтчетВТ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	РегистраторДата,
		|	ДенежныеСредстваПредыдущийОтчет.НомерСтроки";
		
		ВыборкаОстатки   = ЗапросОстатки.Выполнить().Выбрать();
		
		// Выводим титульный лист авансового отчета
		ОбластьТитул        = Макет.ПолучитьОбласть("Титул");
		ОбластьТитулПодвал  = Макет.ПолучитьОбласть("ТитулПодвал");
		
		ОбластьТитул.Параметры.Заполнить(Выборка);
		ОбластьТитулПодвал.Параметры.Заполнить(Выборка);
		
		ПечатьПрефиксовВключена = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Выборка.Организация, ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ВыводитьПрефиксПриПечати"));
		
		
		Если ПечатьПрефиксовВключена Тогда
			НомерДокумента = Выборка.Номер;
		Иначе
			НомерДокумента = уатОбщегоНазначенияКлиентСервер.НомерДокументаНаПечать(Выборка.Номер, Истина, Истина);
		КонецЕсли;
		ОбластьТитул.Параметры.НомерДокумента       = НомерДокумента;
		ОбластьТитулПодвал.Параметры.НомерДокумента = НомерДокумента;
		
		ДанныеПодотчетногоЛица = уатОбщегоНазначенияТиповыеСервер.ДанныеФизЛица(Выборка.Организация, Выборка.ПодотчетноеЛицо, Выборка.ДатаДокумента);
		ОбластьТитул.Параметры.ПредставлениеПодотчетногоЛица          = ДанныеПодотчетногоЛица.Представление;
		ОбластьТитулПодвал.Параметры.ПредставлениеПодотчетногоЛица    = ДанныеПодотчетногоЛица.Представление;
		ОбластьТитул.Параметры.ТабельныйНомер                         = ДанныеПодотчетногоЛица.ТабельныйНомер;
		ОбластьТитул.Параметры.ДолжностьПодотчетногоЛицаПредставление = ДанныеПодотчетногоЛица.Должность;
		
		Руководители = уатОбщегоНазначенияТиповые.уатОтветственныеЛицаОрганизаций(Выборка.Организация, Выборка.ДатаДокумента);
		ОбластьТитул.Параметры.РуководительПредставление = Руководители.Руководитель;
		ОбластьТитул.Параметры.ДолжностьРуководителяПредставление = Руководители.РуководительДолжность;
		ОбластьТитулПодвал.Параметры.ГлавныйБухгалтерПредставление = Руководители.ГлавныйБухгалтер;
		ОбластьТитулПодвал.Параметры.Кассир = Руководители.Кассир;
		
		СтруктураПоиска = Новый Структура("ТекущийОтчет", Выборка.Ссылка);
		
		Если Не ПечатьВИностраннойВалюте Тогда
				
			// Обороты
			Остаток                           = 0;
			Израсходовано                     = 0;
			ПолученоИзКассы                   = 0;
			ПолученоПоБанковскимКартам        = 0;
			ПолученоИзКассыВВалюте            = "";
			ПолученоПоБанковскимКартамВВалюте = "";

			флИзрасходовано = Ложь;
			Пока ВыборкаОстатки.Следующий() Цикл
				
				ОстатокВыборка = ПересчитатьИзВалютыВВалюту(ВалютаРегламентированногоУчета, ВыборкаОстатки.СуммаОборот, ВыборкаОстатки.РегистраторДата, ВыборкаОстатки.Валюта);
				Остаток    = Остаток + ОстатокВыборка;
				
				Если ВыборкаОстатки.флНачОстатка Тогда
					Если Остаток > 0 Тогда
						ОбластьТитул.Параметры.НачальныйОстаток = Остаток;
					Иначе
						ОбластьТитул.Параметры.НачальныйПерерасход = -Остаток;
					КонецЕсли;
					флИзрасходовано = Истина;
					Продолжить;
				КонецЕсли;
				
				Если ВыборкаОстатки.ПредыдущийОтчет = Документы.уатАвансовыйОтчет.ПустаяСсылка()
					ИЛИ флИзрасходовано Тогда
					Если ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатАвансовыйОтчет") Тогда
						Израсходовано = Израсходовано + ОстатокВыборка;
					ИначеЕсли ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатРасходныйКассовыйОрдер")
						ИЛИ ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатВводОстатков") Тогда
						ПересчитатьАвансы(ВалютаРегламентированногоУчета, ВыборкаОстатки, ПолученоИзКассы, ПолученоИзКассыВВалюте);
					ИначеЕсли ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатПлатежноеПоручениеИсходящее") Тогда
						ПересчитатьАвансы(ВалютаРегламентированногоУчета, ВыборкаОстатки, ПолученоПоБанковскимКартам, ПолученоПоБанковскимКартамВВалюте);
					КонецЕсли;
				КонецЕсли;
					
				Если ВыборкаОстатки.флКонОстатка Тогда
					Если Остаток > 0 Тогда
						ОбластьТитул.Параметры.КонечныйОстаток = Остаток;
					Иначе
						ОбластьТитул.Параметры.КонечныйПерерасход = -Остаток;
					КонецЕсли;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбластьТитул.Параметры.ПолученоИзКассы                   = ПолученоИзКассы;
			ОбластьТитул.Параметры.ПолученоПоБанковскимКартам        = ПолученоПоБанковскимКартам;
			ОбластьТитул.Параметры.ИтогоПолучено                     = ПолученоИзКассы + ПолученоПоБанковскимКартам;
			ОбластьТитул.Параметры.ПолученоИзКассыВВалюте            = ПолученоИзКассыВВалюте;
			ОбластьТитул.Параметры.ПолученоПоБанковскимКартамВВалюте = ПолученоПоБанковскимКартамВВалюте;
			ОбластьТитул.Параметры.Израсходовано                     = -Израсходовано;
			
			ИспСумма = Окр(Выборка.Сумма, 2, 1);
			ЦелСумма = Цел(Выборка.Сумма);
			КопСумма = 100 * (Окр(ИспСумма - ЦелСумма, 2, 1));
			
			ОбластьТитул.Параметры.ИзрасходованоРуб = ЦелСумма;
			ОбластьТитул.Параметры.ИзрасходованоКоп = Формат(КопСумма,"ЧН=00");
			ОбластьТитулПодвал.Параметры.СуммаОтчетаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
					Выборка.Сумма,
					ВалютаРегламентированногоУчета,
					Ложь);
					
			Счетчик = 0;
			Проводки.Свернуть("Ссылка, Валюта, СчетКт, СчетДт", "Сумма");
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
			НайденныеПроводки = Проводки.НайтиСтроки(СтруктураПоиска);
			Для каждого Проводка из НайденныеПроводки Цикл
				Счетчик = Счетчик + 1;
				Если ВалютаРегламентированногоУчета <> Проводка.Валюта Тогда
					СуммаРегл = ПересчитатьИзВалютыВВалюту(ВалютаРегламентированногоУчета, Проводка.Сумма, Выборка.ДатаДокумента, Проводка.Валюта);
				Иначе
					СуммаРегл = Проводка.Сумма;
				КонецЕсли;
				
				Если Счетчик < 9 Тогда
					ОбластьТитул.Параметры["СубСчетДебет"  + Счетчик] = Проводка.СчетДт;
					ОбластьТитул.Параметры["СуммаДебет"    + Счетчик] = СуммаРегл;
					ОбластьТитул.Параметры["СубСчетКредит" + Счетчик] = Проводка.СчетКт;
					ОбластьТитул.Параметры["СуммаКредит"   + Счетчик] = СуммаРегл;
				Иначе
					Если Счетчик = 9 Тогда
						ТабличныйДокумент.Вывести(ОбластьТитул);
					КонецЕсли;
					ОбластьПроводок = Макет.ПолучитьОбласть("СтрокаПроводок");
					ОбластьПроводок.Параметры["СубСчетДебет" ] = Проводка.СчетДт;
					ОбластьПроводок.Параметры["СуммаДебет"   ] = СуммаРегл;
					ОбластьПроводок.Параметры["СубСчетКредит"] = Проводка.СчетКт;
					ОбластьПроводок.Параметры["СуммаКредит"  ] = СуммаРегл;
					ТабличныйДокумент.Вывести(ОбластьПроводок);
				КонецЕсли;
			КонецЦикла;
			
			Если Счетчик < 9 Тогда
				ТабличныйДокумент.Вывести(ОбластьТитул);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьТитулПодвал);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Оборотная сторона
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			ИтогоПоОтчету = 0;
			ИтогоПоОтчетуВВалюте = 0;
			ИтогоПоУчету = 0;
			ИтогоПоУчетуВВалюте = 0;
			ИтогоПоОтчетуВВалютеРегл = 0;
			Сумма = 0;
			
			НомерСтроки = 0;
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
			
			ОбработанныеНомераСтрок = Новый Массив;
			
			Пока ВыборкаОборотнаяСторона.НайтиСледующий(СтруктураПоиска) Цикл
				
				Если ОбработанныеНомераСтрок.Найти(ВыборкаОборотнаяСторона.НомерСтроки) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОбработанныеНомераСтрок.Добавить(ВыборкаОборотнаяСторона.НомерСтроки);
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаОборотнаяСторона);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				Если ВалютаРегламентированногоУчета <> ВыборкаОборотнаяСторона.Валюта Тогда
					СуммаРегл = ПересчитатьИзВалютыВВалюту(ВалютаРегламентированногоУчета, ВыборкаОборотнаяСторона.Сумма, ВыборкаОборотнаяСторона.Дата, ВыборкаОборотнаяСторона.Валюта);
					ИтогоПоОтчетуВВалютеРегл = ВыборкаОборотнаяСторона.Сумма;
					ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + ИтогоПоОтчетуВВалютеРегл;
				Иначе
					СуммаРегл = ВыборкаОборотнаяСторона.Сумма;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НаименованиеРасхода) Тогда
					Если ЗначениеЗаполнено(ВыборкаОборотнаяСторона.АналитикаРасходов) Тогда
						ОбластьМакета.Параметры.НаименованиеРасхода = ВыборкаОборотнаяСторона.АналитикаРасходов;
						ОбластьМакета.Параметры.ДокументНомер       = ВыборкаОборотнаяСторона.АналитикаРасходов.Номер;
						ОбластьМакета.Параметры.ДокументДата        = ВыборкаОборотнаяСторона.АналитикаРасходов.Дата;
					КонецЕсли;
				КонецЕсли;
				
				ОбластьМакета.Параметры.ПоОтчету                 = СуммаРегл;
				ОбластьМакета.Параметры.ПоОтчетувВалюте          = ИтогоПоОтчетуВВалютеРегл;
				ОбластьМакета.Параметры.ПоУчету                  = СуммаРегл;
				ОбластьМакета.Параметры.ПоУчетувВалюте           = ИтогоПоОтчетуВВалютеРегл;
				ОбластьМакета.Параметры.ДебетСубСчета            = ВыборкаОборотнаяСторона.СчетДт;
				
				Сумма = Сумма + СуммаРегл;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;

			// Подвал авансового отчета
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.ИтогоПоОтчету                 = Сумма;
			ОбластьМакета.Параметры.ИтогоПоОтчетувВалюте          = ИтогоПоОтчетуВВалюте;
			ОбластьМакета.Параметры.ИтогоПоУчету                  = Сумма;
			ОбластьМакета.Параметры.ИтогоПоУчетувВалюте           = ИтогоПоУчетуВВалюте;
			ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = ДанныеПодотчетногоЛица.Представление;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаОборотнаяСторона.Сбросить();
			
		Иначе // Валютный отчет
			
			ТабличныйДокумент.Вывести(ОбластьТитул);
				
			Остаток                           = 0;
			Израсходовано                     = 0;
			ПолученоИзКассы                   = 0;
			ПолученоПоБанковскимКартам        = 0;
			ПолученоИзКассыВВалюте            = "";
			ПолученоПоБанковскимКартамВВалюте = "";
			флНачОстатка = Истина;
			тВыборкаОстатки = Новый ТаблицаЗначений();
			тВыборкаОстатки.Колонки.Добавить("Валюта");
			тВыборкаОстатки.Колонки.Добавить("СуммаНОстаток",        Новый ОписаниеТипов("Число"));
			тВыборкаОстатки.Колонки.Добавить("Израсходовано",        Новый ОписаниеТипов("Число"));
			тВыборкаОстатки.Колонки.Добавить("СуммаКОстаток",        Новый ОписаниеТипов("Число"));
			тВыборкаОстатки.Колонки.Добавить("СуммаВыданоНаличными", Новый ОписаниеТипов("Число"));
			тВыборкаОстатки.Колонки.Добавить("СуммаВыданоКартой",    Новый ОписаниеТипов("Число"));
			Пока ВыборкаОстатки.Следующий() Цикл
				
				Если ВыборкаОстатки.ПредыдущийОтчет = Документы.уатАвансовыйОтчет.ПустаяСсылка() Тогда
					флНачОстатка = Ложь;
				КонецЕсли;
				
				Если флНачОстатка Тогда
					нСтроки = тВыборкаОстатки.НайтиСтроки(Новый Структура("Валюта", ВыборкаОстатки.Валюта));
					Если нСтроки.Количество() <> 0 Тогда
						нСтроки[0].СуммаНОстаток = нСтроки[0].СуммаНОстаток + ВыборкаОстатки.СуммаОборот;
						нСтроки[0].СуммаКОстаток = нСтроки[0].СуммаКОстаток + ВыборкаОстатки.СуммаОборот;
					Иначе
						тСтрока = тВыборкаОстатки.Добавить();
						тСтрока.Валюта        = ВыборкаОстатки.Валюта;
						тСтрока.СуммаНОстаток = ВыборкаОстатки.СуммаОборот;
						тСтрока.СуммаКОстаток = ВыборкаОстатки.СуммаОборот;
					КонецЕсли;
					Если ВыборкаОстатки.флНачОстатка Тогда
						флНачОстатка = Ложь;
						Продолжить;
					КонецЕсли;
				Иначе
					нСтроки = тВыборкаОстатки.НайтиСтроки(Новый Структура("Валюта", ВыборкаОстатки.Валюта));
					Если нСтроки.Количество() <> 0 Тогда
						нСтрока = нСтроки[0];
						нСтрока.СуммаКОстаток = нСтрока.СуммаКОстаток + ВыборкаОстатки.СуммаОборот;
					Иначе
						нСтрока = тВыборкаОстатки.Добавить();
						нСтрока.Валюта        = ВыборкаОстатки.Валюта;
						нСтрока.СуммаКОстаток = ВыборкаОстатки.СуммаОборот;
					КонецЕсли;
					
					Если ВыборкаОстатки.СуммаОборот < 0 Тогда
						Если ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатАвансовыйОтчет") Тогда
							нСтрока.Израсходовано        = нСтрока.Израсходовано + ВыборкаОстатки.СуммаОборот;
						КонецЕсли;
					ИначеЕсли ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатРасходныйКассовыйОрдер")
						ИЛИ ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатВводОстатков") Тогда
						нСтрока.СуммаВыданоНаличными = нСтрока.СуммаВыданоНаличными + ВыборкаОстатки.СуммаОборот;
					ИначеЕсли ТипЗнч(ВыборкаОстатки.Регистратор) = Тип("ДокументСсылка.уатПлатежноеПоручениеИсходящее") Тогда
						нСтрока.СуммаВыданоКартой    = нСтрока.СуммаВыданоКартой + ВыборкаОстатки.СуммаОборот;
					КонецЕсли;
					
					Если ВыборкаОстатки.флКонОстатка Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;

			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул1|Показатели", тВыборкаОстатки, "СуммаНОстаток",        1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул2|Показатели", тВыборкаОстатки, "СуммаНОстаток",       -1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул3|Показатели", тВыборкаОстатки, "СуммаВыданоНаличными", 1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул4|Показатели", тВыборкаОстатки, "СуммаВыданоКартой",    1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул5|Показатели", тВыборкаОстатки, "Израсходовано",       -1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул6|Показатели", тВыборкаОстатки, "СуммаКОстаток",        1);
			ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, "Титул7|Показатели", тВыборкаОстатки, "СуммаКОстаток",       -1);
			
			ТабличныйДокумент.Вывести(ОбластьТитулПодвал);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Оборотная сторона
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			НомерСтроки = 0;
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
			
			ОбработанныеНомераСтрок = Новый Массив;
			
			
			Пока ВыборкаОборотнаяСторона.НайтиСледующий(СтруктураПоиска) Цикл
				
				Если ОбработанныеНомераСтрок.Найти(ВыборкаОборотнаяСторона.НомерСтроки) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОбработанныеНомераСтрок.Добавить(ВыборкаОборотнаяСторона.НомерСтроки);
					
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НаименованиеРасхода) Тогда
					Если ЗначениеЗаполнено(ВыборкаОборотнаяСторона.АналитикаРасходов) Тогда
						ОбластьМакета.Параметры.НаименованиеРасхода = ВыборкаОборотнаяСторона.АналитикаРасходов;
						ОбластьМакета.Параметры.ДокументНомер       = ВыборкаОборотнаяСторона.АналитикаРасходов.Номер;
						ОбластьМакета.Параметры.ДокументДата        = ВыборкаОборотнаяСторона.АналитикаРасходов.Дата;
					КонецЕсли;
				КонецЕсли;
				
				ОбластьМакета.Параметры.ПоОтчетувВалюте          = ВыборкаОборотнаяСторона.Сумма;
				ОбластьМакета.Параметры.ПоУчетувВалюте           = ВыборкаОборотнаяСторона.Сумма;
				ОбластьМакета.Параметры.Валюта                   = ВыборкаОборотнаяСторона.Валюта;

				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			// Подвал авансового отчета
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаОборотнаяСторона.Сбросить();
			
		КонецЕсли;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

Функция ПересчитатьИзВалютыВВалюту(ВалютаРегламентированногоУчета,Сумма, РегистраторДата, Валюта) 
	Если ВалютаРегламентированногоУчета = Валюта Тогда
		Возврат Сумма;
	Иначе
		Если ЗначениеЗаполнено(Сумма) Тогда
			СтруктураКурсаРегл = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаРегламентированногоУчета, РегистраторДата);
			СтруктураКурса     = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(Валюта, РегистраторДата);
			пСумма = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(Сумма, Валюта,
			ВалютаРегламентированногоУчета,
			СтруктураКурса.Курс, 
			СтруктураКурсаРегл.Курс,
			СтруктураКурса.Кратность, 
			СтруктураКурсаРегл.Кратность);
			Возврат пСумма;
		Иначе
			Возврат Сумма;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Процедура ПересчитатьАвансы(ВалютаРеглУчета, ВыборкаОстатки, Получено, ПолученоВВалюте)
	Если ВыборкаОстатки.СуммаОборот > 0 Тогда
		Если ВыборкаОстатки.Валюта <> ВалютаРеглУчета Тогда
			флВалюта = СтрНайти(ПолученоВВалюте, Строка(ВыборкаОстатки.Валюта));
			Если флВалюта тогда
				Строка = Лев(ПолученоВВалюте, флВалюта);
				СтрокаОстатки = Лев(Строка, СтрНайти(Строка, " ",НаправлениеПоиска.СКонца)-1);
				СтрокаОстатки = Число(Сред(СтрокаОстатки, СтрНайти(СтрокаОстатки, " ",НаправлениеПоиска.СКонца)+1,СтрДлина(СтрокаОстатки)));
				Остатки = ВыборкаОстатки.СуммаОборот + СтрокаОстатки;
				ПолученоВВалюте = СтрЗаменить(ПолученоВВалюте, Строка, " " + Остатки + " " + Строка(ВыборкаОстатки.Валюта));
			Иначе
				ПолученоВВалюте = ПолученоВВалюте
				+ " " + Строка(ВыборкаОстатки.СуммаОборот)
				+ " " + Строка(ВыборкаОстатки.Валюта) + " ";
			КонецЕсли;
		КонецЕсли;
		Получено = Получено + ПересчитатьИзВалютыВВалюту(ВалютаРеглУчета, ВыборкаОстатки.СуммаОборот, ВыборкаОстатки.РегистраторДата, ВыборкаОстатки.Валюта);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьОстаткиВалюногоМакета(Макет, ТабличныйДокумент, НаименованиеОбласти, тОстатки, Параметр, Знак = 1)
	
	Область = Макет.ПолучитьОбласть(НаименованиеОбласти);
	ТабличныйДокумент.Вывести(Область);
		
	Для Каждого ТекСтрока Из тОстатки Цикл
		Если Знак > 0 Тогда
			Если ТекСтрока[Параметр] > 0 Тогда
				Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
				Область.Параметры.Валюта = ТекСтрока.Валюта;
				Область.Параметры.Сумма  = ТекСтрока[Параметр];
				ТабличныйДокумент.Вывести(Область);
			КонецЕсли;
		ИначеЕсли Знак < 0 Тогда
			Если ТекСтрока[Параметр] < 0 Тогда
				Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
				Область.Параметры.Валюта = ТекСтрока.Валюта;
				Область.Параметры.Сумма  = -ТекСтрока[Параметр];
				ТабличныйДокумент.Вывести(Область);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли