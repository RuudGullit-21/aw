#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	Документы.уатАвансовыйОтчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение_проф.ОтразитьОстаткиДСУПодотчетныхЛиц(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение.ОтразитьРасходы(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатАвансовыйОтчет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	уатУчетОригиналовПервичныхДокументов.СформироватьДвиженияРеестрДокументов(Ссылка);
	
КонецПроцедуры // ОбработкаПроведения

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.уатАвансовыйОтчет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаДокумента = мВалютаРегламентированногоУчета;
	уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, ПользователиКлиентСервер.АвторизованныйПользователь());
	ТекДата = ТекущаяДата();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРасходныйКассовыйОрдер")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПлатежноеПоручениеИсходящее") Тогда
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ПодотчетноеЛицо = ДанныеЗаполнения.ПодотчетноеЛицо;
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
				
		тблРасходы = ДанныеЗаполнения.РасшифровкаПлатежа.Выгрузить();
		тблРасходы.Свернуть("СтавкаНДС", "СуммаПлатежа, СуммаНДС");
		Для Каждого ТекСтрока Из тблРасходы Цикл
			НоваяСтрока = Расходы.Добавить();
			НоваяСтрока.ДатаОтражения = ТекДата;
			НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
			НоваяСтрока.СтатьяРасходов = Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов;
			НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.СуммаПлатежа;
			НоваяСтрока.Сумма = ТекСтрока.СуммаПлатежа;
			
			НоваяСтрока.УчитыватьНДС = Истина;
			НоваяСтрока.СуммаВключаетНДС = Истина;
			НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатКомандировкиОрганизаций") Тогда
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		
		Если ДанныеЗаполнения.РаботникиОрганизации.Количество() > 0 Тогда
			ПодотчетноеЛицо = ДанныеЗаполнения.РаботникиОрганизации[0].Сотрудник.ФизическоеЛицо;
			
			тблРасходы = ДанныеЗаполнения.РаботникиОрганизации.Выгрузить();
			Сч = тблРасходы.Количество()-1;
			Пока Сч >= 0 Цикл
				Если тблРасходы[Сч].Сотрудник.ФизическоеЛицо <> ПодотчетноеЛицо Тогда
					тблРасходы.Удалить(Сч);
				КонецЕсли;
				
				Сч = Сч - 1;
			КонецЦикла;
						
			ТекСуммаПлатежа = тблРасходы.Итог("Сумма");
			Если ТекСуммаПлатежа > 0 Тогда
				НоваяСтрока = Расходы.Добавить();
				НоваяСтрока.ДатаОтражения = ТекДата;
				НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
				НоваяСтрока.СтатьяРасходов = Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов;
				НоваяСтрока.СуммаВДокументеРасхода = ТекСуммаПлатежа;
				НоваяСтрока.Сумма = ТекСуммаПлатежа;
				
				НоваяСтрока.УчитыватьНДС = Истина;
				НоваяСтрока.СуммаВключаетНДС = Истина;
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
		КонецЕсли;
								
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПрочиеДоходыРасходы") Тогда
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		
		тблРасходы = ДанныеЗаполнения.Расходы.Выгрузить();
		тблРасходы.Свернуть("СтатьяРасходов, ТС, СтавкаНДС", "Сумма, СуммаНДС");
		Для Каждого ТекСтрока Из тблРасходы Цикл
			НоваяСтрока = Расходы.Добавить();
			НоваяСтрока.ДатаОтражения = ТекДата;
			НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
			НоваяСтрока.СтатьяРасходов = ТекСтрока.СтатьяРасходов;
			НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.Сумма;
			НоваяСтрока.Сумма = ТекСтрока.Сумма;
			НоваяСтрока.ТС = ТекСтрока.ТС;
			
			НоваяСтрока.УчитыватьНДС = ДанныеЗаполнения.УчитыватьНДС;
			НоваяСтрока.СуммаВключаетНДС = ДанныеЗаполнения.СуммаВключаетНДС;
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
		КонецЦикла;
						
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
		
		тблЗаправкиГСМ = уатОбщегоНазначения.уатПолучитьЗаправкиДляПЛ(ДанныеЗаполнения);
		СтатьяРасходовГСМ = уатОбщегоНазначения.НайтиСтатьюЗатрат(ДанныеЗаполнения.ПланЗатрат, Перечисления.уатВидыЗатрат.ГСМ);
		Если НЕ ЗначениеЗаполнено(СтатьяРасходовГСМ) Тогда
			СтатьяРасходовГСМ = Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов;
		КонецЕсли;
		
		Если тблЗаправкиГСМ.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(тблЗаправкиГСМ[0].Водитель) Тогда
				ПодотчетноеЛицо = тблЗаправкиГСМ[0].Водитель.ФизическоеЛицо
			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.ПрочиеРасходы.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Водитель1) Тогда
				ПодотчетноеЛицо = ДанныеЗаполнения.Водитель1.ФизическоеЛицо;
			КонецЕсли;
		КонецЕсли;
		
		тблРасходы = ДанныеЗаполнения.ПрочиеРасходы.Выгрузить(); // Прочие расходы
		Для Каждого ТекСтрока Из тблЗаправкиГСМ Цикл // Проведенные заправки за наличные
			Если ТекСтрока.ВидДвиженияГСМ = Перечисления.уатВидыДвиженияГСМ.ЗаправкаНаличные И ТекСтрока.Картинка = 1 Тогда
				НоваяСтрока = тблРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СтатьяРасходов = СтатьяРасходовГСМ;
			КонецЕсли;
		КонецЦикла;
		тблРасходы.Свернуть("СтатьяРасходов, Валюта, СтавкаНДС, УчитыватьНДС, СуммаВключаетНДС", "Сумма, СуммаНДС");
				
		тблВалюты = тблРасходы.Скопировать();
		тблВалюты.Свернуть("Валюта");
		Если тблВалюты.Количество() = 1 Тогда //одновалютный
			Если тблЗаправкиГСМ.Количество() > 0 Тогда
				ВалютаДокумента = тблЗаправкиГСМ[0].Валюта;
			ИначеЕсли ДанныеЗаполнения.ПрочиеРасходы.Количество() > 0 Тогда
				ВалютаДокумента = ДанныеЗаполнения.ПрочиеРасходы[0].Валюта;
			КонецЕсли;
			
			//Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
			//	ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
			//КонецЕсли;
			
		Иначе //мультивалютный
			ВалютаДокумента = Неопределено;
			Мультивалютный = Истина;
			
		КонецЕсли;
		
		Для Каждого ТекСтрока Из тблРасходы Цикл
			НоваяСтрока = Расходы.Добавить();
			НоваяСтрока.ДатаОтражения = ТекДата;
			НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
			НоваяСтрока.СтатьяРасходов = 
				?(ЗначениеЗаполнено(ТекСтрока.СтатьяРасходов), ТекСтрока.СтатьяРасходов, Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов);
			
			Если Мультивалютный Тогда
				НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.Сумма;
				НоваяСтрока.Валюта = ТекСтрока.Валюта;
			Иначе
				НоваяСтрока.СуммаВДокументеРасхода = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
					ТекСтрока.Валюта, ВалютаДокумента, НоваяСтрока.ДатаОтражения, НоваяСтрока.ДатаОтражения);
			КонецЕсли;
				
			НоваяСтрока.Сумма = НоваяСтрока.СуммаВДокументеРасхода;
			НоваяСтрока.ТС = ДанныеЗаполнения.ТранспортноеСредство;
			НоваяСтрока.Контрагент = ДанныеЗаполнения.Контрагент;
			
			НоваяСтрока.УчитыватьНДС = ТекСтрока.УчитыватьНДС;
			НоваяСтрока.СуммаВключаетНДС = ТекСтрока.СуммаВключаетНДС;
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
		КонецЦикла;
								
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРемонтныйЛист") Тогда
		Если ДанныеЗаполнения.СпособРемонта = Перечисления.уатСпособыРемонта.Автосервис
			И ДанныеЗаполнения.ОплатаПодотчетнымЛицом Тогда
			
			Основание = ДанныеЗаполнения;
			Организация = ДанныеЗаполнения.Организация;
			Подразделение = ДанныеЗаполнения.Подразделение;
			ПодотчетноеЛицо = ДанныеЗаполнения.ПодотчетноеЛицо;
			ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
			
			тблРасходы = ДанныеЗаполнения.Работы.Выгрузить();
			Для Каждого ТекСтрока Из ДанныеЗаполнения.Материалы Цикл
				НоваяСтрока = тблРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЦикла;
			тблРасходы.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			Для Каждого ТекСтрока Из тблРасходы Цикл
				НоваяСтрока = Расходы.Добавить();
				НоваяСтрока.ДатаОтражения = ТекДата;
				НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
				НоваяСтрока.СтатьяРасходов = Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов;
				НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.Сумма;
				НоваяСтрока.Сумма = НоваяСтрока.СуммаВДокументеРасхода;
				НоваяСтрока.ТС = ДанныеЗаполнения.ТС;
				НоваяСтрока.Контрагент = ДанныеЗаполнения.Контрагент;
				
				НоваяСтрока.УчитыватьНДС = ДанныеЗаполнения.УчитыватьНДС;
				НоваяСтрока.СуммаВключаетНДС = ДанныеЗаполнения.СуммаВключаетНДС;
				НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
				НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
			КонецЦикла;
		Иначе
			Основание = ДанныеЗаполнения;
			Организация     = ДанныеЗаполнения.Организация;
			Подразделение   = ДанныеЗаполнения.Подразделение;
			ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг")
		И ДанныеЗаполнения.ОплатаПодотчетнымЛицом Тогда
		
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ПодотчетноеЛицо = ДанныеЗаполнения.ПодотчетноеЛицо;
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		
		тблРасходы = ДанныеЗаполнения.Товары.Выгрузить();
		Для Каждого ТекСтрока Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = тблРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЦикла;
		тблРасходы.Свернуть("СтатьяРасходов, СтавкаНДС", "Сумма, СуммаНДС");
		
		Для Каждого ТекСтрока Из тблРасходы Цикл
			НоваяСтрока = Расходы.Добавить();
			НоваяСтрока.ДатаОтражения = ТекДата;
			НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
			НоваяСтрока.СтатьяРасходов = ТекСтрока.СтатьяРасходов;
			НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.Сумма;
			НоваяСтрока.Сумма = ТекСтрока.Сумма;
			НоваяСтрока.Контрагент = ДанныеЗаполнения.Контрагент;
			
			НоваяСтрока.УчитыватьНДС = ДанныеЗаполнения.УчитыватьНДС;
			НоваяСтрока.СуммаВключаетНДС = ДанныеЗаполнения.СуммаВключаетНДС;
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
		КонецЦикла;
						
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаправкаГСМ")
		И ДанныеЗаполнения.ВидДвиженияГСМ = Перечисления.уатВидыДвиженияГСМ.ЗаправкаНаличные Тогда
		
		Основание = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.ПодразделениеОрганизации;
		
		тблРасходы = ДанныеЗаполнения.Заправки.Выгрузить();
		тблРасходы.Свернуть("ТС, Водитель, Валюта, СтавкаНДС", "Сумма, СуммаНДС");
		
		тблВалюты = тблРасходы.Скопировать();
		тблВалюты.Свернуть("Валюта");
		Если тблВалюты.Количество() = 1 Тогда //одновалютный
			ВалютаДокумента = тблВалюты[0].Валюта;
			
			//Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
			//	ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
			//КонецЕсли;
			
		Иначе //мультивалютный
			ВалютаДокумента = Неопределено;
			Мультивалютный = Истина;
			
		КонецЕсли;
		
		Для Каждого ТекСтрока Из тблРасходы Цикл
			Если Не ЗначениеЗаполнено(ВалютаДокумента) Тогда
				ВалютаДокумента = ТекСтрока.Валюта;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ПодотчетноеЛицо) Тогда
				ПодотчетноеЛицо = ТекСтрока.Водитель.ФизическоеЛицо;
			КонецЕсли;
			НоваяСтрока = Расходы.Добавить();
			НоваяСтрока.ДатаОтражения = ТекДата;
			НоваяСтрока.ДокументРасхода = ДанныеЗаполнения;
			НоваяСтрока.СтатьяРасходов = Справочники.уатСтатьиРасходов.ОсновнаяСтатьяРасходов;
			
			Если Мультивалютный Тогда
				НоваяСтрока.СуммаВДокументеРасхода = ТекСтрока.Сумма;
				НоваяСтрока.Валюта = ТекСтрока.Валюта;
			Иначе
				НоваяСтрока.СуммаВДокументеРасхода = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
					ТекСтрока.Валюта, ВалютаДокумента, НоваяСтрока.ДатаОтражения, НоваяСтрока.ДатаОтражения);
			КонецЕсли;
				
			НоваяСтрока.Сумма = НоваяСтрока.СуммаВДокументеРасхода;
			НоваяСтрока.ТС = ТекСтрока.ТС;
			НоваяСтрока.Контрагент = ДанныеЗаполнения.АЗС.Контрагент_Склад;
			
			НоваяСтрока.УчитыватьНДС = ДанныеЗаполнения.УчитыватьНДС;
			НоваяСтрока.СуммаВключаетНДС = ДанныеЗаполнения.СуммаВключаетНДС;
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрока.СуммаНДС;
		КонецЦикла;
						
	КонецЕсли;
	
	// курс и кратность
	Если Мультивалютный Тогда
		Для Каждого ТекСтрока Из Расходы Цикл
			СтруктураКурс = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ТекСтрока.Валюта, ТекДата);
			ТекСтрока.Курс = СтруктураКурс.Курс;
			ТекСтрока.Кратность = СтруктураКурс.Кратность;
		КонецЦикла;
	Иначе
		СтруктураКурс = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекДата);
		Курс = СтруктураКурс.Курс;
		Кратность = СтруктураКурс.Кратность;
	КонецЕсли;
	
	// расчет суммы документа
	РасчитатьСуммуДокумента();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// пересчет суммы документа
	РасчитатьСуммуДокумента();
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И (Курс=0 ИЛИ Кратность=0) Тогда
		КурсКратностьДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
		Курс = КурсКратностьДокумента.Курс;
		Кратность = КурсКратностьДокумента.Кратность;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	Если Мультивалютный Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ВалютаДокумента"));
	Иначе
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Расходы.Валюта"));
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Расходы Цикл
		Если СтрокаТаблицы.УчитыватьНДС И Не ЗначениеЗаполнено(СтрокаТаблицы.СтавкаНДС) Тогда 
			ТекстНСТР = НСтр("en='At line №%1 of tabular section ""Expenses"" is not indicated VAT rate!';ru='В строке №%1 табличной части ""Расходы"" не указана ставка НДС!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, СтрокаТаблицы.НомерСтроки);
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РасчитатьСуммуДокумента()
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	СуммаДокумента = 0;
	Для Каждого ТекСтрока Из Расходы Цикл
		ТекСумма = ТекСтрока.Сумма;
		Если ТекСтрока.УчитыватьНДС И НЕ ТекСтрока.СуммаВключаетНДС Тогда
			ТекСумма = ТекСумма + ТекСтрока.СуммаНДС;
		КонецЕсли;
		Если Мультивалютный Тогда
			ВалютаРеглКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(мВалютаРегламентированногоУчета, ТекСтрока.ДатаОтражения);
			
			ТекСумма = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСумма,
				ТекСтрока.Валюта,    мВалютаРегламентированногоУчета,
				ТекСтрока.Курс,      ВалютаРеглКурсКратность.Курс,
				ТекСтрока.Кратность, ВалютаРеглКурсКратность.Кратность);
		КонецЕсли;
		
		СуммаДокумента = СуммаДокумента + ТекСумма;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли