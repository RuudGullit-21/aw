
#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
	    МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	    МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли; 
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОграничитьВыборЦистерныПоТопливозаправщику();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры


&НаСервере
Процедура ТопливозаправщикПриИзмененииНаСервере()
	
	ОбновитьДанныеПоЦистерне();
	
КонецПроцедуры

&НаКлиенте
Процедура ТопливозаправщикПриИзменении(Элемент)
	ТопливозаправщикПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаправкиНомерRFIDПриИзменении(Элемент)
	
	НомерКарты = Элементы.Заправки.ТекущиеДанные.НомерRFID;
	Если Не ПустаяСтрока(НомерКарты) Тогда
		Элементы.Заправки.ТекущиеДанные.RFIDКарта = ПолучитьКартуПоНомеру(НомерКарты);
	Иначе
		Элементы.Заправки.ТекущиеДанные.RFIDКарта = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ЗаполнитьВыдачиТопливаНаСервере()
	
	Док = РеквизитФормыВЗначение("Объект");
	Док.ЗаполнитьЗаправки();
	ЗначениеВРеквизитФормы(Док, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыдачиТоплива(Команда)
	
	Если ЗначениеЗаполнено(Объект.Цистерна) Тогда
		ЗаполнитьВыдачиТопливаНаСервере();
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Для топливозаправщика не задана цистерна(в регистре сведений ""терминалы выдачи топлива"")'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
    МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ОбновитьДанныеПоЦистерне()
	
	Объект.Цистерна = Неопределено;
	ОграничитьВыборЦистерныПоТопливозаправщику();
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьВыборЦистерныПоТопливозаправщику()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ItobЦистерныТопливозаправщиковСрезПоследних.Цистерна КАК Цистерна
	|ИЗ
	|	РегистрСведений.ItobЦистерныТопливозаправщиков.СрезПоследних(&НаДату, Топливозаправщик = &Топливозаправщик) КАК ItobЦистерныТопливозаправщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату", Объект.Дата);
	Запрос.УстановитьПараметр("Топливозаправщик", Объект.Топливозаправщик);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Цистерны = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Цистерна");
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", Цистерны);
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(НовыйПараметр);
	
	Элементы.Цистерна.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ОбновитьДанныеПоЦистерне();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКартуПоНомеру(НомерКарты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ItobRFIDКарты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ItobRFIDКарты КАК ItobRFIDКарты
	|ГДЕ
	|	ItobRFIDКарты.Номер = &НомерКарты";
	
	Запрос.УстановитьПараметр("НомерКарты", НомерКарты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
	
КонецФункции

#КонецОбласти
