#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет табличную часть заправки.
//
Процедура ЗаполнитьЗаправки() Экспорт
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана дата документа!");
		Возврат;
	КонецЕсли;	
	
	НачПериода = НачалоДня(Дата);
	КонПериода = КонецДня(Дата);
	
	СрезНаНачало = РегистрыСведений.ItobПривязкиТрекеров.ПолучитьПоследнее(НачалоДня(НачПериода)-1, Новый Структура("Объект", Цистерна));
	Если НЕ ЗначениеЗаполнено(СрезНаНачало.Терминал) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Объект не привязан к терминалу!'"));
		Возврат;
	КонецЕсли;	
	
	Терминал = СрезНаНачало.Терминал;
	МаксимальнаяСкоростьВыдачиТоплива = ?(Терминал.МаксимальнаяСкоростьВыдачиТоплива = 0, 100, Терминал.МаксимальнаяСкоростьВыдачиТоплива);
	
	МассивДатчиков = Новый Массив;
	Соответствие = Новый Соответствие;
	КалибровочныйГрафик = Неопределено;
	
	Для Каждого СтрокаДатчика Из Терминал.Датчики Цикл
		
		Если СтрокаДатчика.Назначение = Справочники.ItobНазначенияДатчиков.RFID Тогда
			МассивДатчиков.Добавить(СтрокаДатчика.Датчик);
			Соответствие.Вставить(Строка(СтрокаДатчика.Датчик.Код), "RFID"); 
		ИначеЕсли СтрокаДатчика.Назначение = Справочники.ItobНазначенияДатчиков.РасходТопливаИмпульсный Тогда
			МассивДатчиков.Добавить(СтрокаДатчика.Датчик);
			Соответствие.Вставить(Строка(СтрокаДатчика.Датчик.Код), "Счетчик");
			КалибровочныйГрафик = СтрокаДатчика.КалибровочныйГрафик;
		КонецЕсли;			
		
	КонецЦикла;
	
	Если КалибровочныйГрафик = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для счетчика топлива не задан калибровочный график!'"));
		Возврат;
	КонецЕсли;
	
	ТабДанных = ItobОперативныйМониторингКлиентСервер.ПолучитьДанныеДатчикаОбъекта(Цистерна, НачПериода, КонПериода, МассивДатчиков);
	
	Для Каждого Колонка Из ТабДанных.Колонки Цикл
		
		Если СтрНайти(Колонка.Имя, "Значение") > 0 Тогда
			КодДатчика = СтрЗаменить(Колонка.Имя, "Значение", "");
			
			Колонка.Имя = Соответствие.Получить(КодДатчика);
		КонецЕсли;
		
	КонецЦикла;
	
	ТабЗаправок = ПолучитьДанныеПоТопливозаправщику(ТабДанных, КалибровочныйГрафик, МаксимальнаяСкоростьВыдачиТоплива);
	
	Заправки.Загрузить(ТабЗаправок);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// регистр ItobВыдачиТоплива 
	Движения.ItobВыдачиТоплива.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ItobВедомостьПоВыдачамТопливаЗаправки.КомуВыдано КАК КомуВыдано,
	|	ItobВедомостьПоВыдачамТопливаЗаправки.Количество КАК Количество,
	|	ItobВедомостьПоВыдачамТопливаЗаправки.ОкончаниеЗаправки КАК Период,
	|	ItobВедомостьПоВыдачамТопливаЗаправки.НомерRFID КАК НомерRFID,
	|	ItobВедомостьПоВыдачамТопливаЗаправки.RFIDКарта КАК RFIDКарта
	|ИЗ
	|	Документ.ItobВедомостьПоВыдачамТоплива.Заправки КАК ItobВедомостьПоВыдачамТопливаЗаправки
	|ГДЕ
	|	ItobВедомостьПоВыдачамТопливаЗаправки.Ссылка = &Ссылка
	|	И ItobВедомостьПоВыдачамТопливаЗаправки.Количество > 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ItobВыдачиТоплива.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Топливозаправщик = Топливозаправщик;
		Движение.Цистерна = Цистерна;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает и заполняет таблицу значений данными по заправкам, осуществляемых бензовозом.
// Для корректной работы требуется заполнить форму элемента справочника "ItobТерминалы".
// Параметры:
// Терминал - ссылка на терминал, привязанный к бензовозу.
// Бензовоз - ссылка на бензовоз (справочник "ItobТранспортныеСредства").
// ДатаНачала - Дата - Дата, начиная с которой будут собраны данные.
// ДатаОкончания - Дата - Дата, по которую будут собраны данные.
// Возвращаемое значение - ТаблицаЗначений - Таблица, содержащая требуемые данные.
//
Функция ПолучитьДанныеПоТопливозаправщику(ТЗ, КалибровочныйГрафик, МаксимальнаяСкоростьВыдачиТоплива)
	
	ИнтервалОбъединенияЗаправок = 20;
	
	РадиусФиксацииПоУмолчанию = ItobВызовСервераПовтИсп.ПолучитьРадиусЗоныПриходаНаТочку(50);
	
	ТабДанных = Новый ТаблицаЗначений;
	ТабДанных.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	ТабДанных.Колонки.Добавить("Широта", 			Новый ОписаниеТипов("Число"));
	ТабДанных.Колонки.Добавить("Долгота", 			Новый ОписаниеТипов("Число"));
	ТабДанных.Колонки.Добавить("Счетчик", 			Новый ОписаниеТипов("Число"));
	ТабДанных.Колонки.Добавить("RFID", 				Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(20)));
	ТабДанных.Колонки.Добавить("НевалидныеДанные", 	Новый ОписаниеТипов("Булево"));
	
	Для Каждого Стр Из ТЗ Цикл
		СтрокаДанных = ТабДанных.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДанных, Стр);
		СтрокаДанных.RFID = Формат(Стр.RFID, "ЧГ=0");
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабДанных.Широта КАК Широта,
	|	ТабДанных.Долгота КАК Долгота,
	|	ТабДанных.Период КАК Период,
	|	ТабДанных.RFID КАК НомерRFID,
	|	ТабДанных.Счетчик КАК Счетчик
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&ТабДанных КАК ТабДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Широта КАК Широта,
	|	втДанные.Долгота КАК Долгота,
	|	втДанные.Период КАК Период,
	|	втДанные.НомерRFID КАК НомерRFID,
	|	втДанные.Счетчик КАК Счетчик,
	|	ItobПривязкиRFIDКартСрезПоследних.Объект КАК КомуВыдана,
	|	ItobRFIDКарты.Ссылка КАК RFIDКарта
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ItobRFIDКарты КАК ItobRFIDКарты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиRFIDКарт.СрезПоследних(&НаДату, ) КАК ItobПривязкиRFIDКартСрезПоследних
	|			ПО ItobRFIDКарты.Ссылка = ItobПривязкиRFIDКартСрезПоследних.Карта
	|		ПО втДанные.НомерRFID = ItobRFIDКарты.Номер
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втДанные";
	
	Запрос.УстановитьПараметр("ТабДанных", ТабДанных);
	Запрос.УстановитьПараметр("НаДату", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ИтоговаяТаблица = Новый ТаблицаЗначений;
	ИтоговаяТаблица.Колонки.Добавить("КомуВыдано");
	ИтоговаяТаблица.Колонки.Добавить("НомерRFID");
	ИтоговаяТаблица.Колонки.Добавить("RFIDКарта");
	ИтоговаяТаблица.Колонки.Добавить("НачалоЗаправки");
	ИтоговаяТаблица.Колонки.Добавить("ОкончаниеЗаправки");
	ИтоговаяТаблица.Колонки.Добавить("Количество");
	ИтоговаяТаблица.Колонки.Добавить("Местоположение");
	ИтоговаяТаблица.Колонки.Добавить("Широта");
	ИтоговаяТаблица.Колонки.Добавить("Долгота");
	
	предRFID = Неопределено;
	предПериод = '00010101';
	НачалоЗаправкиБезКарточки = Неопределено;
	ПоследняяЗаправкаБезКарточки = Неопределено;
	предСчетчик = Неопределено;
	Залито = 0;
	НоваяСтрокаИтоговойТаблицы = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		// Получаем количество заправленного топлива по счетчику.
		Разница = Разница(Выборка.Счетчик, ПредСчетчик, МаксимальнаяСкоростьВыдачиТоплива);
		
		Залито = Залито + Разница;
		
		Если Не Выборка.НомерRFID = предRFID Тогда
			Если Не Выборка.НомерRFID = "" Тогда
				
				ЕстьПредыдущиеЗаправкиБезКарточки = Не ПоследняяЗаправкаБезКарточки = Неопределено И
					(Выборка.Период - ПоследняяЗаправкаБезКарточки) <= ИнтервалОбъединенияЗаправок;
					
				Если предRFID = Неопределено Тогда
					Если Залито > 0 И Не ЕстьПредыдущиеЗаправкиБезКарточки И Не НачалоЗаправкиБезКарточки = Неопределено Тогда
						НоваяСтрокаИтоговойТаблицы = ИтоговаяТаблица.Добавить();
						НоваяСтрокаИтоговойТаблицы.КомуВыдано 			= "";
						НоваяСтрокаИтоговойТаблицы.НомерRFID 			= "";
						НоваяСтрокаИтоговойТаблицы.НачалоЗаправки		= НачалоЗаправкиБезКарточки;
						НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки	= ПоследняяЗаправкаБезКарточки;
						НоваяСтрокаИтоговойТаблицы.Количество			= Залито;
						ЗаполнитьДанныеОМестоположении(НоваяСтрокаИтоговойТаблицы, Выборка.Широта, Выборка.Долгота, РадиусФиксацииПоУмолчанию);
					КонецЕсли;
				Иначе
					НоваяСтрокаИтоговойТаблицы.Количество = Залито;
					НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки = Выборка.Период;
					Залито = 0;
				КонецЕсли;
				
				НоваяСтрокаИтоговойТаблицы = ИтоговаяТаблица.Добавить();
				НоваяСтрокаИтоговойТаблицы.КомуВыдано 			= Выборка.КомуВыдана;
				НоваяСтрокаИтоговойТаблицы.НомерRFID 			= Выборка.НомерRFID;
				НоваяСтрокаИтоговойТаблицы.RFIDКарта 			= Выборка.RFIDКарта;
				
				НоваяСтрокаИтоговойТаблицы.НачалоЗаправки 		= ?(НачалоЗаправкиБезКарточки = Неопределено или 
					Не ЕстьПредыдущиеЗаправкиБезКарточки, Выборка.Период, НачалоЗаправкиБезКарточки);
					
				НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки 	= Выборка.Период;
				Если Не ЕстьПредыдущиеЗаправкиБезКарточки И предRFID = Неопределено Тогда
					Залито = Разница;
				КонецЕсли;
				НоваяСтрокаИтоговойТаблицы.Количество 			= Залито;
				ЗаполнитьДанныеОМестоположении(НоваяСтрокаИтоговойТаблицы, Выборка.Широта, Выборка.Долгота, РадиусФиксацииПоУмолчанию);
				предRFID = Выборка.НомерRFID;
				НачалоЗаправкиБезКарточки = Неопределено;
				ПоследняяЗаправкаБезКарточки = Неопределено;
			Иначе
				Если Разница > 0 Тогда
					НачалоЗаправкиБезКарточки = ?(НачалоЗаправкиБезКарточки = Неопределено, Выборка.Период, НачалоЗаправкиБезКарточки);
					ПоследняяЗаправкаБезКарточки = Выборка.Период;
					Если Не предRFID = Неопределено Тогда
						Если НачалоЗаправкиБезКарточки - НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки <= ИнтервалОбъединенияЗаправок Тогда
							НоваяСтрокаИтоговойТаблицы.Количество = Залито;
							НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки = ПоследняяЗаправкаБезКарточки;
							НачалоЗаправкиБезКарточки = Неопределено;
							ПоследняяЗаправкаБезКарточки = Неопределено;
						Иначе
							предRFID = Неопределено;
							Залито = Разница;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если Не предRFID = Неопределено Тогда
						Если Выборка.Период - НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки > ИнтервалОбъединенияЗаправок Тогда
							предRFID = Неопределено;
							Залито = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Выборка.НомерRFID = предRFID Тогда
			НоваяСтрокаИтоговойТаблицы.Количество = Залито;
			НоваяСтрокаИтоговойТаблицы.ОкончаниеЗаправки = Выборка.Период;
			ЗаполнитьДанныеОМестоположении(НоваяСтрокаИтоговойТаблицы, Выборка.Широта, Выборка.Долгота, РадиусФиксацииПоУмолчанию);
			НачалоЗаправкиБезКарточки = Неопределено;
			ПоследняяЗаправкаБезКарточки = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаИтоговойТаблицы Из ИтоговаяТаблица Цикл
		
		СтрокаИтоговойТаблицы.Количество = 
			ItobКалькуляцияПараметровВыработки.ПреобразоватьЗначениеПоКалибровочномуГрафику(СтрокаИтоговойТаблицы.Количество, КалибровочныйГрафик);
		
	КонецЦикла;
	                              
	Возврат ИтоговаяТаблица;
	
КонецФункции

Процедура ЗаполнитьДанныеОМестоположении(СтрокаИтоговойТаблицы, Широта, Долгота, РадиусФиксацииПоУмолчанию)
	
	Если ЗначениеЗаполнено(СтрокаИтоговойТаблицы.Широта) 
		И ЗначениеЗаполнено(СтрокаИтоговойТаблицы.Долгота)
		И ЗначениеЗаполнено(СтрокаИтоговойТаблицы.Местоположение) Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Широта) И ЗначениеЗаполнено(Долгота) Тогда
		СтрокаИтоговойТаблицы.Местоположение = ItobРаботаСКартой.ОпределитьБлижайшийОбъектНаКарте(Широта, Долгота, РадиусФиксацииПоУмолчанию);
		СтрокаИтоговойТаблицы.Широта = Широта;
		СтрокаИтоговойТаблицы.Долгота = Долгота;
	КонецЕсли;
	
КонецПроцедуры

// МаксимальноеЗначениеСчетчика 	= 65535;
//
Функция Разница(Счетчик, ПредСчетчик, МаксимальнаяСкоростьВыдачиТоплива)
	
	Если ПредСчетчик = Неопределено Тогда
		ПредСчетчик = Счетчик;
		Возврат 0;
	КонецЕсли;
	
	Если ПредСчетчик > Счетчик Тогда //Счетчик обнулился или сбой счетчика
		Разница = 65535 - ПредСчетчик + Счетчик; //Обнуление
	Иначе
		Разница = Счетчик - ПредСчетчик;
	КонецЕсли;
	
	//Если Разница > МаксимальнаяСкоростьВыдачиТоплива Тогда //Сбой счетчика
	//	Возврат 0;//Предыдущий счетчик оставляем прежним, т.к. текущий показывает некорректное значение
	//КонецЕсли;
	
	ПредСчетчик = Счетчик;
	
	Возврат Разница;
	
КонецФункции

#КонецОбласти

#КонецЕсли