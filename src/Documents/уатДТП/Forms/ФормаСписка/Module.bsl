
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
    ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Документы.уатДТП) Тогда 
		Элементы.ФормаИзменитьВыделенные.Видимость = Ложь;
		Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаСпискаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	
	СписокЭлемент    = Элементы.Список;
	ВыделенныеСтроки = СписокЭлемент.ВыделенныеСтроки;
	
	МассивДокументов = Новый Массив();
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		ТекущаяСтрока = СписокЭлемент.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока <> Неопределено Тогда
			Если ТекущаяСтрока.ПометкаУдаления Тогда
				ТекстНСТР = СтрШаблон(НСтр("ru='Помеченный на удаление документ %1 не может быть обновлен!'"), ТекущаяСтрока.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
				Продолжить;
			КонецЕсли;

			МассивДокументов.Добавить(ТекущаяСтрока.Ссылка);
		КонецЕсли;
	КонецЦикла;
	МассивТС = ПолучитьМассивТС(МассивДокументов);
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодтверждениеКапчи", ЭтотОбъект,
		Новый Структура("МассивТС, МассивДокументов", МассивТС, МассивДокументов));
	ПараметрыОткрытия  = Новый Структура();	
	ОткрытьФорму("Документ.уатДТП.Форма.ФормаКапчи", ПараметрыОткрытия,ЭтотОбъект,,,,ОписаниеОповещения);

КонецПроцедуры

&НаСервере
Функция ОбновитьПоДаннымГИБДДДлительнаяОперацияСервер(МассивТС, Капча, МассивДокументов, ТекстОшибки)
	
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка данных из ГИБДД'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;

	Возврат ДлительныеОперации.ВыполнитьВФоне(
	"уатИнтеграции_проф.ГИБДД_ОбновитьСписокДТПДлительнаяОперация",
	Новый Структура("МассивТС, Капча, МассивДокументов", МассивТС, Капча, МассивДокументов),
	ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПоДаннымГИБДДЗавершениеДлительнаяОперацияЗавершение(Операция, ДополнительныеПараметры) Экспорт
	
	Если Операция = Неопределено Тогда
		
	Иначе
		Если Операция.Статус = "Выполнено" Тогда
			Если ЭтоАдресВременногоХранилища(Операция.АдресРезультата) Тогда
				Данные = ПолучитьИзВременногоХранилища(Операция.АдресРезультата);
				Если ТипЗнч(Данные) = Тип("Структура") Тогда
					Если Данные.Свойство("МассивТС") Тогда 
						Если ЗначениеЗаполнено(Данные.ТекстПредупреждения) Тогда
							ПоказатьПредупреждение(,Данные.ТекстПредупреждения);
						КонецЕсли;
						ОповеститьОбИзменении(Тип("ДокументСсылка.уатДТП"));
						
						ТекстОшибки = "";
						ДанныеКапчи = уатИнтеграции_проф.ГИБДД_Капча(ТекстОшибки);
						Если ЗначениеЗаполнено(ТекстОшибки) 
							ИЛИ ДанныеКапчи.Получить("base64jpg") = Неопределено 
							ИЛИ ДанныеКапчи.Получить("token") = Неопределено Тогда
							Возврат;
						КонецЕсли;
						
						ОписаниеОповещения = Новый ОписаниеОповещения("ПодтверждениеКапчи", ЭтотОбъект,
						Новый Структура("МассивТС, МассивДокументов", Данные.МассивТС, Данные.МассивДокументов));
						ПараметрыОткрытия  = Новый Структура();
						ПараметрыОткрытия.Вставить("КартинкаBase64", ДанныеКапчи.Получить("base64jpg"));
						ПараметрыОткрытия.Вставить("Токен",          ДанныеКапчи.Получить("token"));
						
						ОткрытьФорму("Документ.уатДТП.Форма.ФормаКапчи", ПараметрыОткрытия,ЭтотОбъект,,,,ОписаниеОповещения);
					ИначеЕсли Данные.Свойство("ТекстПредупреждения") Тогда
						Если ЗначениеЗаполнено(Данные.ТекстПредупреждения) Тогда
							ПоказатьПредупреждение(,Данные.ТекстПредупреждения);
						КонецЕсли;
						ОповеститьОбИзменении(Тип("ДокументСсылка.уатДТП"));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ВызватьИсключение Операция.КраткоеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервереБезКонтекста
Функция ПолучитьМассивТС(МассивДокументов)
	
	МассивТС = Новый Массив();
	Для Каждого ТекСтрока Из МассивДокументов Цикл
		VIN = ТекСтрока.ТС.VIN;
		Если НЕ ЗначениеЗаполнено(VIN)
			И ЗначениеЗаполнено(ТекСтрока.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		Если МассивТС.Найти(ТекСтрока.ТС) = Неопределено Тогда
			МассивТС.Добавить(ТекСтрока.ТС);
		КонецЕсли;
	КонецЦикла;

	Возврат МассивТС;
КонецФункции

&НаКлиенте
Процедура ПодтверждениеКапчи(Результат, ДопПарметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	Капча       = Новый Структура();
	Капча.Вставить("captchaToken", Результат.captchaToken);
	Капча.Вставить("captchaWord",  Результат.captchaWord);
	
	ТекстОшибки = "";
	ДлительнаяОперация = ОбновитьПоДаннымГИБДДДлительнаяОперацияСервер(ДопПарметры.МассивТС, Капча, ДопПарметры.МассивДокументов, ТекстОшибки);
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания       = Истина;
	НастройкиОжидания.ВыводитьПрогрессВыполнения = Истина;
	
	Обработчик = Новый ОписаниеОповещения("ОбновитьПоДаннымГИБДДЗавершениеДлительнаяОперацияЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);

	
КонецПроцедуры

#КонецОбласти
