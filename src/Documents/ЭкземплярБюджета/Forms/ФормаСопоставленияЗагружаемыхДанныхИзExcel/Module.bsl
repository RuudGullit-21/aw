
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("АдресРезультата") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ПараметрыВыводаВидаБюджета") Тогда
		Возврат;
	КонецЕсли;
	
	АдресРезультата = Параметры.АдресРезультата;
	ИДТаблицы = Параметры.ИДТаблицы;
	
	ПараметрыЭкземпляраБюджета = ПолучитьИзВременногоХранилища(Параметры.ПараметрыВыводаВидаБюджета);
	КолонкиТаблиц = ПараметрыЭкземпляраБюджета.КолонкиТаблиц;
	
	// колонки текущей таблицы
	СтруктураКолонок = КолонкиТаблиц[Параметры.ИДТаблицы];
	КолонкиПоИзмерениям = Параметры.КолонкиПоИзмерениям;
	
	ДобавляемыеЭлементы = Новый Массив;
	ДобавляемыеКолонки = Новый Массив;
	Документы.ЭкземплярБюджета.РассчитатьЭлементыСпискаБюджетаКДобавлению(ДобавляемыеЭлементы, ДобавляемыеКолонки, КолонкиПоИзмерениям);
	
	// структура с ключами полей текущей колонки
	СтруктураАналогРасшифровки = Новый Структура;
	Документы.ЭкземплярБюджета.ДобавитьКолонкиСпискаБюджетаПоТаблице(ДобавляемыеЭлементы, ДобавляемыеКолонки, 
														КолонкиПоИзмерениям, СтруктураКолонок, СтруктураАналогРасшифровки);
		
	Документы.ЭкземплярБюджета.ОтразитьИзмененияКолонокСпискаБюджетаНаФорме(ЭтотОбъект, ДобавляемыеЭлементы, ДобавляемыеКолонки);
	
	РедактируемыеКолонкиСписка = СтрСоединить(КолонкиПоИзмерениям.Измерения);
	
	МассивЗначений = Параметры.Значения;
	ГлубинаДерева = БюджетнаяОтчетностьСервер.ГлубинаДерева(СтруктураКолонок.Строки) + 1;
	
	СоответствиеИндексовЗначений = Новый Соответствие;
	
	Для Строка = ГлубинаДерева по МассивЗначений[0].ВГраница() Цикл
		
		Колонка = 0;
		НоваяСтрока = СписокРедактированияБюджета.Добавить();
		
		СтруктураСопоставления = Новый Структура;
		
		Для Каждого Измерение из КолонкиПоИзмерениям.Измерения Цикл
			Если Колонка > МассивЗначений.ВГраница() Тогда
				Значение = Неопределено;
			Иначе
				Значение = МассивЗначений[Колонка][Строка];
			КонецЕсли;
			
			СтруктураСопоставления.Вставить(Измерение, Значение);
			
			Колонка = Колонка + 1;
		КонецЦикла;
		
		НоваяСтрока.ИндексСтроки = СписокРедактированияБюджета.Индекс(НоваяСтрока);
		СоответствиеИндексовЗначений.Вставить(НоваяСтрока.ИндексСтроки, СтруктураСопоставления);
		
		Для Каждого КлючИЗначение из СтруктураАналогРасшифровки Цикл
			Если Колонка > МассивЗначений.ВГраница() Тогда
				НоваяСтрока[КлючИЗначение.Ключ] = Неопределено;
			КонецЕсли;
			
			Значение = МассивЗначений[Колонка][Строка];
			НоваяСтрока[КлючИЗначение.Ключ] = Значение;
			
			Колонка = Колонка + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	СопоставитьДанныеЗагрузкиСДаннымиИБ(КолонкиПоИзмерениям, СоответствиеИндексовЗначений);
	
	ЭлементыЗагрузки = Новый Массив;
	АдресаЭлементов = Новый Структура;
	Для Сч = 0 по КолонкиПоИзмерениям.Измерения.ВГраница() Цикл
		
		ИмяИзмерения = КолонкиПоИзмерениям.Измерения[Сч];
		Элемент = Новый РеквизитФормы("ЗначениеЗагрузки_" + ИмяИзмерения, 
							Новый ОписаниеТипов("Строка"), , КолонкиПоИзмерениям.НастройкиКолонок[ИмяИзмерения].Заголовок);
		ЭлементыЗагрузки.Добавить(Элемент);
		АдресаЭлементов.Вставить("ЗначениеЗагрузки_" + ИмяИзмерения, "Группа" + (Сч % 3))
		
	КонецЦикла;
	
	ЭтотОбъект.ИзменитьРеквизиты(ЭлементыЗагрузки);
	Для Каждого Элемент из ЭлементыЗагрузки Цикл
		Адрес = АдресаЭлементов[Элемент.Имя];
		ЭлементФормы = Элементы.Добавить(Элемент.Имя, Тип("ПолеФормы"), Элементы[Адрес]);
		ЭлементФормы.ПутьКДанным = Элемент.Имя;
		ЭлементФормы.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
	КонецЦикла;
	
	АдресСоответствияЗагрузки = ПоместитьВоВременноеХранилище(СоответствиеИндексовЗначений, УникальныйИдентификатор);
	
	//СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтображенияСтрокПриИзменении(Элемент)
	
	Элементы.СписокРедактированияБюджета.ОтборСтрок = Неопределено;
	
	Если ВариантОтображенияСтрок = 1 Тогда
		Элементы.СписокРедактированияБюджета.ОтборСтрок = Новый ФиксированнаяСтруктура("Загружать", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРедактированияБюджетаЗагружатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокРедактированияБюджета.ТекущиеДанные;
	
	Если ТекущиеДанные.Загружать Тогда
		Колонки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РедактируемыеКолонкиСписка);
		Для Каждого Измерение из Колонки Цикл
			СписокВыбора = Элементы[Измерение].СписокВыбора;
			Если Не СписокВыбора.Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			Если СписокВыбора.НайтиПоЗначению(ТекущиеДанные[Измерение]) = Неопределено Тогда
				ТекущиеДанные.Загружать = Ложь;
				ТекстПредупреждения = НСтр("en='В колонке ""%1"" выбрано неверное значение';ru='В колонке ""%1"" выбрано неверное значение'");
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, Элементы[Измерение].Заголовок);
				ПоказатьПредупреждение(, ТекстПредупреждения);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	НастроитьВариантыОтображенияСтрок();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРедактированияБюджета

&НаКлиенте
Процедура СписокРедактированияБюджетаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтруктураПолей = ПолучитьИзВременногоХранилища(АдресСоответствияЗагрузки)[ТекущиеДанные.ИндексСтроки];
	
	Для Каждого КлючИЗначение из СтруктураПолей Цикл
		ЭтотОбъект["ЗначениеЗагрузки_" + КлючИЗначение.Ключ] = КлючИЗначение.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРедактированияБюджетаПослеУдаления(Элемент)
	
	НастроитьВариантыОтображенияСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРедактированияБюджетаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФормы(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Отбор = Новый Структура("Загружать", Ложь);
	СтрокиСНесопоставленнымиДанными = СписокРедактированияБюджета.НайтиСтроки(Отбор);
	
	Отказ = (СтрокиСНесопоставленнымиДанными.Количество() > 0);
	
	Если Отказ Тогда
		ШаблонСообщения = НСтр("en='Не все строки сопоставлены';ru='Не все строки сопоставлены'");
		ПоказатьПредупреждение(, ШаблонСообщения);
		Возврат;
	КонецЕсли;
	
	Закрыть();
	ПоместитьДанныеВоВременноеХранилищеНаСервере();
	ОповеститьОВыборе(АдресРезультата);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	//СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	Заглушка = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СопоставитьДанныеЗагрузкиСДаннымиИБ(КолонкиПоИзмерениям, СоответствиеИндексовЗначений)
	
	Измерения = КолонкиПоИзмерениям.Измерения;
	НастройкиКолонок = КолонкиПоИзмерениям.НастройкиКолонок;
	
	Для каждого СтрокаЗагрузки Из СписокРедактированияБюджета Цикл
		
		СтрокаЗагрузки.Загружать = Истина;
		
		СтруктураСопоставления = СоответствиеИндексовЗначений[СтрокаЗагрузки.ИндексСтроки];
		Для Каждого Измерение из Измерения Цикл
			
			ЗагружаемаяАналитика = СтруктураСопоставления[Измерение];
			
			Если Не ЗначениеЗаполнено(ЗагружаемаяАналитика) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Элементы[Измерение].СписокВыбора.Количество() Тогда
				СписокВыбора = Элементы[Измерение].СписокВыбора;
				НайденныйЭлемент = Неопределено;
				Для Каждого ЭлементСписка из СписокВыбора Цикл
					Если СокрЛП(ЭлементСписка.Представление) = СокрЛП(ЗагружаемаяАналитика) Тогда
						НайденныйЭлемент = ЭлементСписка.Значение;
					КонецЕсли;
				КонецЦикла;
				Если НайденныйЭлемент <> Неопределено Тогда
					СтрокаЗагрузки[Измерение] = НайденныйЭлемент;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ПараметрыПоискаПоСтроке = Новый Структура;
			ПараметрыПоискаПоСтроке.Вставить("СтрокаПоиска", ЗагружаемаяАналитика);
			
			ПараметрыПоискаПоНаименованию = Новый Структура;
			ПараметрыПоискаПоНаименованию.Вставить("Отбор", Новый Структура("Наименование", ЗагружаемаяАналитика));
			ПараметрыПоискаПоНаименованию.Вставить("СтрокаПоиска", "");
			
			СписокВыбораПоСтрокеПоиска = Новый СписокЗначений;
			СписокВыбораПоНаименованию = Новый СписокЗначений;
			
			Для каждого Тип Из НастройкиКолонок[Измерение].ТипЗначения.Типы() Цикл
				Если Тип = Тип("Дата") Тогда
					Продолжить;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(
					ПолучитьДанныеВыбора(Тип, ПараметрыПоискаПоСтроке), 
					СписокВыбораПоСтрокеПоиска);
				ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(
					ПолучитьДанныеВыбора(Тип, ПараметрыПоискаПоНаименованию), 
					СписокВыбораПоНаименованию);
			КонецЦикла;
			
			Если СписокВыбораПоНаименованию.Количество() = 1 Тогда
				СтрокаЗагрузки[Измерение] = СписокВыбораПоНаименованию[0].Значение;
				Продолжить;
			ИначеЕсли СписокВыбораПоСтрокеПоиска.Количество() = 1 Тогда
				СтрокаЗагрузки[Измерение] = СписокВыбораПоСтрокеПоиска[0].Значение;
				Продолжить;
			ИначеЕсли БюджетнаяОтчетностьКлиентСервер.ЛеваяЧастьИмениСовпадает(Измерение, "Период") Тогда
				СтрокаЗагрузки[Измерение] = ЗагружаемаяАналитика;
				Продолжить;
			КонецЕсли;
			
			СтрокаЗагрузки.Загружать = Ложь;
			
		КонецЦикла;
		
	КонецЦикла;
	
	НастроитьВариантыОтображенияСтрок();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВариантыОтображенияСтрок()
	
	СписокВыбора = Элементы.ВариантОтображенияСтрок.СписокВыбора;
	СписокВыбора.Очистить();
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("en='All (%1)';ru='Все (%1)'"), 
		СписокРедактированияБюджета.Количество());
		
	СписокВыбора.Добавить(0, Представление); 
	
	СтрокиЕстьНесопоставленныеДанные = СписокРедактированияБюджета.НайтиСтроки(Новый Структура("Загружать", Ложь));
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("en='Unmapped (%1)';ru='Несопоставленные (%1)'"), 
		СтрокиЕстьНесопоставленныеДанные.Количество());
		
	СписокВыбора.Добавить(1, Представление);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для Каждого СтрокаЗагрузки из СписокРедактированияБюджета Цикл
		СтрокаЗагрузки.Загружать = Истина;
	КонецЦикла;
	
	НастроитьВариантыОтображенияСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаЗагрузки из СписокРедактированияБюджета Цикл
		СтрокаЗагрузки.Загружать = Ложь;
	КонецЦикла;
	
	НастроитьВариантыОтображенияСтрок();
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьДанныеВоВременноеХранилищеНаСервере()
	
	Таблица = СписокРедактированияБюджета.Выгрузить();
	СтрокаСвертки = "";
	СтрокаСуммирования = "";
	Для Каждого Колонка из Таблица.Колонки Цикл
		Если Найти(Колонка.Имя, "Примечание") Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(РедактируемыеКолонкиСписка, Колонка.Имя) Тогда
			СтрокаСвертки = СтрокаСвертки + ?(ПустаяСтрока(СтрокаСвертки), "", ",") + Колонка.Имя;
		Иначе
			СтрокаСуммирования = СтрокаСуммирования + ?(ПустаяСтрока(СтрокаСуммирования), "", ",") + Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	
	Таблица.Свернуть(СтрокаСвертки, СтрокаСуммирования);
	
	Результат = Новый Структура("СписокРедактированияБюджета,
								|ИДТаблицы",
								Таблица,
								ИДТаблицы);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти
