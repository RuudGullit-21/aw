
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Заказчик)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// необходима для подключения внешних ПФ
	Заглушка = Истина;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	// управляемая блокировка
	БлокировкаРегистров = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаРегистров.Добавить("РегистрНакопления.уатЗаказыГрузоотправителей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДокументСсылка.Заказы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЗаказГрузоотправителя", "ЗаказГрузоотправителя");
	
	ЭлементБлокировки = БлокировкаРегистров.Добавить("РегистрНакопления.уатГрузыКПеревозке_уэ");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДокументСсылка.Заказы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЗаказГрузоотправителя", "ЗаказГрузоотправителя");
	
	БлокировкаРегистров.Заблокировать();
	
	ЗаполнитьДанныеТаблицЗакрытия(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДанныеТаблицЗакрытия(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	мЗапрос = Новый Запрос();
	
	мЗапрос.УстановитьПараметр("МоментВремени",  ДокументСсылка.МоментВремени());
	мЗапрос.УстановитьПараметр("Ссылка",         ДокументСсылка);
	мЗапрос.УстановитьПараметр("ПериодДвижения", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	
	мЗапрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатОтклонениеГрузаЗаказы.ПричинаОтклонения КАК ПричинаОтклонения,
	|	ВЫБОР
	|		КОГДА уатОтклонениеГрузаЗаказы.ПричинаОтклонения.ЗакрытУспешно
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Закрыт)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Отклонен)
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВРТ_Документ
	|ИЗ
	|	Документ.уатОтклонениеГруза.Заказы КАК уатОтклонениеГрузаЗаказы
	|ГДЕ
	|	уатОтклонениеГрузаЗаказы.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказыГрузоотправителейОстатки.Контрагент КАК Контрагент,
	|	уатЗаказыГрузоотправителейОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатЗаказыГрузоотправителейОстатки.ГрузовоеМесто КАК ГрузовоеМесто,
	|	уатЗаказыГрузоотправителейОстатки.Номенклатура КАК Номенклатура,
	|	уатЗаказыГрузоотправителейОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток КАК Количество,
	|	&Ссылка КАК Регистратор,
	|	&ПериодДвижения КАК Период
	|ПОМЕСТИТЬ ВРТ_ЗаказыГрузоотправителей
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(
	|			&МоментВремени,
	|			ЗаказГрузоотправителя В
	|				(ВЫБРАТЬ
	|					Документ.ЗаказГрузоотправителя
	|				ИЗ
	|					ВРТ_Документ КАК Документ)) КАК уатЗаказыГрузоотправителейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВРТ_ЗаказыГрузоотправителей.Контрагент КАК Контрагент,
	|	ВРТ_ЗаказыГрузоотправителей.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВРТ_ЗаказыГрузоотправителей.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	ВРТ_ЗаказыГрузоотправителей.ГрузовоеМесто КАК ГрузовоеМесто,
	|	ВРТ_ЗаказыГрузоотправителей.Номенклатура КАК Номенклатура,
	|	ВРТ_ЗаказыГрузоотправителей.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВРТ_ЗаказыГрузоотправителей.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВРТ_ЗаказыГрузоотправителей.Регистратор КАК Регистратор,
	|	ВРТ_ЗаказыГрузоотправителей.Период КАК Период
	|ИЗ
	|	ВРТ_ЗаказыГрузоотправителей КАК ВРТ_ЗаказыГрузоотправителей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатГрузыКПеревозке_уэОстатки.Контрагент КАК Контрагент,
	|	уатГрузыКПеревозке_уэОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	уатГрузыКПеревозке_уэОстатки.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатГрузыКПеревозке_уэОстатки.ГрузовоеМесто КАК ГрузовоеМесто,
	|	уатГрузыКПеревозке_уэОстатки.Номенклатура КАК Номенклатура,
	|	уатГрузыКПеревозке_уэОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	уатГрузыКПеревозке_уэОстатки.КоличествоОстаток КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Ссылка КАК Регистратор,
	|	&ПериодДвижения КАК Период
	|ИЗ
	|	РегистрНакопления.уатГрузыКПеревозке_уэ.Остатки(
	|			&МоментВремени,
	|			ЗаказГрузоотправителя В
	|				(ВЫБРАТЬ
	|					Документ.ЗаказГрузоотправителя
	|				ИЗ
	|					ВРТ_Документ КАК Документ)) КАК уатГрузыКПеревозке_уэОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВРТ_ЗаказыГрузоотправителей.ЗаказГрузоотправителя КАК Заказ,
	|	ВРТ_ЗаказыГрузоотправителей.Номенклатура КАК Номенклатура,
	|	ВРТ_ЗаказыГрузоотправителей.ГрузовоеМесто КАК ГрузовоеМесто,
	|	СУММА(ВРТ_ЗаказыГрузоотправителей.Количество) КАК Количество,
	|	ВРТ_Документ.ПричинаОтклонения КАК ПричинаОтклонения,
	|	ВРТ_ЗаказыГрузоотправителей.Регистратор КАК Регистратор
	|ИЗ
	|	ВРТ_ЗаказыГрузоотправителей КАК ВРТ_ЗаказыГрузоотправителей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВРТ_Документ КАК ВРТ_Документ
	|		ПО ВРТ_ЗаказыГрузоотправителей.ЗаказГрузоотправителя = ВРТ_Документ.ЗаказГрузоотправителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ВРТ_ЗаказыГрузоотправителей.ЗаказГрузоотправителя,
	|	ВРТ_ЗаказыГрузоотправителей.Номенклатура,
	|	ВРТ_ЗаказыГрузоотправителей.ГрузовоеМесто,
	|	ВРТ_Документ.ПричинаОтклонения,
	|	ВРТ_ЗаказыГрузоотправителей.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВРТ_Документ.ЗаказГрузоотправителя КАК Заказ,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяГрузовойСостав.ГрузовоеМесто, ЗНАЧЕНИЕ(Справочник.уатГрузовыеМеста_уэ.ПустаяСсылка)) КАК ГрузовоеМесто,
	|	МАКСИМУМ(ВРТ_Документ.Статус) КАК Статус,
	|	МАКСИМУМ(&Ссылка) КАК Регистратор,
	|	МАКСИМУМ(&ПериодДвижения) КАК Период
	|ИЗ
	|	ВРТ_Документ КАК ВРТ_Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатЗаказГрузоотправителя.ГрузовойСостав КАК уатЗаказГрузоотправителяГрузовойСостав
	|		ПО ВРТ_Документ.ЗаказГрузоотправителя = уатЗаказГрузоотправителяГрузовойСостав.Ссылка
	|			И (ВРТ_Документ.ЗаказГрузоотправителя.ДетализацияЗакрытия = ЗНАЧЕНИЕ(Перечисление.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВРТ_Документ.ЗаказГрузоотправителя,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяГрузовойСостав.ГрузовоеМесто, ЗНАЧЕНИЕ(Справочник.уатГрузовыеМеста_уэ.ПустаяСсылка))";
	
	мПакетРезультатов = мЗапрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаказовГрузоотправителя", мПакетРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаГрузовКПеревозке",        мПакетРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПричинЗакрытия",          мПакетРезультатов[4].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСтатусыГрузов",           мПакетРезультатов[5].Выгрузить());
	
КонецПроцедуры

#КонецОбласти
