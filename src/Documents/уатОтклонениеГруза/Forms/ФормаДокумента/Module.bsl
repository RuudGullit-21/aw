
#Область Переменные_формы

&НаКлиенте
Перем ПредЗначениеКонтрагента;

// Хранит дерево кнопок подменю заполнение ТЧ
&НаКлиенте
Перем мКнопкиЗаполненияТЧ;

// Хранит элемент управления подменю печати
&НаКлиенте
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
&НаКлиенте
Перем мПечатьПоУмолчанию;

// Хранит дерево макетов печатных форм
&НаКлиенте
Перем мДеревоМакетов;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Заказчик, "Объект.Организация",
		Метаданные.Документы.уатОтклонениеГруза.Реквизиты.Заказчик.Тип); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	
	ПредЗначениеКонтрагента = Объект.Заказчик;
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		ЗаполнитьТабЧастьПоЗаказу(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Изменено закрытие заказов на ТС", Объект.Ссылка, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Заказчик) Тогда
		Если ПредЗначениеКонтрагента <> Объект.Заказчик
			И Объект.Заказы.Количество() Тогда
			
			ТекстВопроса = НСтр("en='Tabular section of the closing orders will be cleared. Continue?';ru='Табличная часть закрываемых заказов будет очищена. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ЗаказчикПриИзмененииОтветНаВопросОчиститьТЧ", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ПредЗначениеКонтрагента = Объект.Заказчик;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Заказы

&НаКлиенте
Процедура ЗаказыЗаказГрузоотправителяПриИзменении(Элемент)
	
	Если Объект.Заказчик = Неопределено Или НЕ ЗначениеЗаполнено(Объект.Заказчик) Тогда 
		ТекДанные = Элементы.Заказы.ТекущиеДанные;
		Объект.Заказчик = ПолучитьКонтрагентаИзЗаказаНаСервере(ТекДанные.ЗаказГрузоотправителя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыЗаказГрузоотправителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не Объект.Заказчик = Неопределено И ЗначениеЗаполнено(Объект.Заказчик) Тогда
		Форма = ПолучитьФорму("Документ.уатЗаказГрузоотправителя.ФормаВыбора",,Элемент);
		ЭлементОтбора                  = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Контрагент");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение   = Объект.Заказчик;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.Использование    = Истина;
		
		СтандартнаяОбработка = Ложь;
		
		Форма.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзмененииОтветНаВопросОчиститьТЧ(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Заказы.Очистить();
	Иначе
		Объект.Заказчик = ПредЗначениеКонтрагента;
	КонецЕсли;
	ПредЗначениеКонтрагента = Объект.Заказчик;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамОтветНаВопросОчититьТЧ(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Заказы.Очистить();
	КонецЕсли;
	
	Если Не ЗаполнитьТабЧастьЗаказовПоОстаткамНаСервере() Тогда
		ТекстНСТР = НСтр("en='Orders for autodialer not found';ru='Заказы для автоподбора не найдены'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабЧастьПоЗаказумОтветНаВопросОчититьТЧ(РезультатВопроса, ЗначениеВыбора) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Заказы.Очистить();
	КонецЕсли;
	
	НоваяСтрока = Объект.Заказы.Добавить();
	НоваяСтрока.ЗаказГрузоотправителя = ЗначениеВыбора;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Если Команда.Действие = "ЗаполнитьПоОстаткам" Тогда
		Если НЕ Объект.Заказы.Количество() = 0 Тогда
			ТекстВопроса = НСтр("en='Tabular section ""Orders"" is not empty. Clear?';ru='Табличная часть ""Заказы"" не пустая. Очистить?'");
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоОстаткамОтветНаВопросОчититьТЧ", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
		Иначе
			Если Не ЗаполнитьТабЧастьЗаказовПоОстаткамНаСервере() Тогда 
				ТекстНСТР = НСтр("en='Orders for autodialer not found';ru='Заказы для автоподбора не найдены'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			КонецЕсли;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоОстаткам()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьКонтрагентаИзЗаказаНаСервере(Заказ)

	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") 
		И НЕ Заказ = Документы.уатЗаказГрузоотправителя.ПустаяСсылка() Тогда
			Возврат Заказ.Контрагент;
	Иначе 
		Возврат Документы.уатЗаказГрузоотправителя.ПустаяСсылка();
	КонецЕсли;

КонецФункции // ПолучитьКонтрагентаИзЗаказаНаСервере()

&НаСервере
Функция ЗаполнитьТабЧастьЗаказовПоОстаткамНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя,
	|	&ПричинаЗакрытия КАК ПричинаОтклонения
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(&Дата, Контрагент = &Заказчик) 
	|		КАК уатЗаказыГрузоотправителейОстатки");
	
	Запрос.УстановитьПараметр("Дата",            Объект.Дата);
	Запрос.УстановитьПараметр("Заказчик",        Объект.Заказчик);
	Запрос.УстановитьПараметр("ПричинаЗакрытия", Справочники.уатПричиныЗакрытияЗаказов.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Ложь;
	Иначе 
		Объект.Заказы.Загрузить(Результат.Выгрузить());
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТабЧастьПоЗаказу(ЗначениеВыбора)
	
	Если НЕ Объект.Заказы.Количество() = 0 Тогда
		ТекстВопроса = НСтр("en='Tabular section ""Orders"" is not empty. Clear?';ru='Табличная часть ""Заказы"" не пустая. Очистить?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьТабЧастьПоЗаказумОтветНаВопросОчититьТЧ", ЭтотОбъект, ЗначениеВыбора);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
	Иначе
		НоваяСтрока = Объект.Заказы.Добавить();
		НоваяСтрока.ЗаказГрузоотправителя = ЗначениеВыбора;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабЧастьПоЗаказу()

#КонецОбласти
