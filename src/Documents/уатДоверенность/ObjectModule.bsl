#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОписаниеПеременных

Перем ЕдиницаИзмеренияШтука; // Хранит ссылку на единицу по классификатору "Штука" для вставки при подборе

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
	
		// Заполнение шапки
		ВидОперации					= Перечисления.уатВидыОперацийДоверенность.Груз;
		ЗаказГрузоотправителя   	= ДанныеЗаполнения;
		Основание 					= ДанныеЗаполнения;
		ПоДокументу					= Документы.уатДоверенность.ПолучитьПредставлениеОснования(Основание);
		ДоговорКонтрагента 			= ДанныеЗаполнения.ДоговорКонтрагента;
		Контрагент 					= ДанныеЗаполнения.Контрагент;
		НаПолучениеОт				= Документы.уатДоверенность.ПолучитьПолноеНаименованиеКонтрагента(Контрагент);
		Организация 				= ДанныеЗаполнения.Организация;
		БанковскийСчетОрганизации 	= Организация.ОсновнойБанковскийСчет;
		Ответственный 				= уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
						  			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
									
		Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
			ДатаДействия = Дата + 10 * (24 * 60 * 60);
		КонецЕсли;
									
		// восстановим документ-основание Маршрутный лист
		ОснованиеМаршрутныйЛист = Неопределено;
		ДополнительныеСвойства.Свойство("ОснованиеМаршрутныйЛист",ОснованиеМаршрутныйЛист);
		Если ЗначениеЗаполнено(ОснованиеМаршрутныйЛист) Тогда
			Основание = ОснованиеМаршрутныйЛист;
			ДоверенноеЛицо	   = Основание.Водитель1;
			ТипДоверенногоЛица = ?(ТипЗнч(ДоверенноеЛицо) = Тип("СправочникСсылка.Сотрудники"),0,1);
		КонецЕсли;
		
		// Заполнение табличной части
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.НаименованиеТовара = ДанныеЗаполнения.ВидГрузаДляДоверенности;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.ЕдиницаКлассификатор = ЕдиницаИзмеренияШтука; 
		
		// Поиск доверенного лица в связанных маршрутных листах, если создается не из Маршрутного листа
		Если НЕ ЗначениеЗаполнено(ДоверенноеЛицо) Тогда
			ЗапросМЛ = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	уатМаршрутныйЛист.Ссылка КАК Ссылка,
			|	уатМаршрутныйЛист.Водитель1 КАК Водитель1
			|ИЗ
			|	Документ.уатМаршрутныйЛист КАК уатМаршрутныйЛист
			|ГДЕ
			|	уатМаршрутныйЛист.Заказы.ЗаказГрузоотправителя = &ЗаказГрузоотправителя
			|	И уатМаршрутныйЛист.Проведен
			|	И НЕ уатМаршрутныйЛист.ПометкаУдаления
			|	И уатМаршрутныйЛист.ПринадлежностьПеревозки <> ЗНАЧЕНИЕ(Перечисление.уатПринадлежностьТС.Виртуальное)
			|
			|УПОРЯДОЧИТЬ ПО
			|	уатМаршрутныйЛист.Дата");
			ЗапросМЛ.УстановитьПараметр("ЗаказГрузоотправителя", Основание);
			ВыборкаМЛ = ЗапросМЛ.Выполнить().Выбрать();
			Если ВыборкаМЛ.Следующий() Тогда
				ДоверенноеЛицо	   = ВыборкаМЛ.Водитель1;
				ТипДоверенногоЛица = ?(ТипЗнч(ДоверенноеЛицо) = Тип("СправочникСсылка.Сотрудники"),0,1);
			КонецЕсли; 
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	// проверка на ведение складского учета средствами УАТ
	Если НЕ уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация,
		ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) Тогда
		
		ТекстНСТР = НСтр("en='For company ""%1"" the possibility of inventory management with FMS documents is disabled!';ru='Для организации ""%1"" отключена возможность ведения складского учета документами УАТ!'");
		ТекстНСТР = СтрШаблон(ТекстНСТР, Организация);
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ,, СтатусСообщения.Внимание);
		
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	уатУчетОригиналовПервичныхДокументов.СформироватьДвиженияРеестрДокументов(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#Область Инициализация

ЕдиницаИзмеренияШтука = Документы.уатДоверенность.НайтиЕдиницуШтука();

#КонецОбласти

#КонецЕсли