
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Проверка уже введенных документов
	Если УжеЕстьВводВЭксплуатацию(Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатВводВЭксплуатациюТСиОборудования.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение_проф.ОтразитьМестонахождениеТС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатВводВЭксплуатациюТСиОборудования.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Запись даты ввода в карточках ТС и оборудования
	ЗаписатьРеквизитыТСиОборудования(Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// проверка на дубли строк
	Если НЕ Отказ Тогда
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		
		тблТС = ТС.Выгрузить().Скопировать();
		тблТС.Свернуть("ТС");
		Если тблТС.Количество() <> ТС.Количество() Тогда
			ТекстНСТР = НСтр("en='In the tabular section ""Vehicle"" there are duplicate lines (duplicate vehicle)!';ru='В табличной части ""ТС"" присутствуют повторяющиеся строки (дублирование ТС)!'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
		КонецЕсли;
		
		уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьТСиОборудованиеДоВвода(Отказ);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТС = Новый Массив();
	Для Каждого ТекСтрока Из ТС Цикл 
		Если МассивТС.Найти(ТекСтрока.ТС) = Неопределено Тогда 
			МассивТС.Добавить(ТекСтрока.ТС);
		КонецЕсли;
	КонецЦикла;
	
	СписокТС = "";
	Для Каждого ТекТС Из МассивТС Цикл 
		СписокТС = СписокТС + ?(СписокТС = "", "", ", ") + ТекТС.Наименование;
	КонецЦикла;
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовСервер.ПередЗаписью(ЭтотОбъект, РежимЗаписи, Отказ);
	// Конец уатСогласованиеДокументов
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьРеквизитыТСиОборудования(Отказ)
	Для каждого СтрТС Из ТС Цикл
		МестонахождениеТС = уатОбщегоНазначения.МестонахождениеТС(СтрТС.ТС, СтрТС.ДатаВвода);
		мсвДокументов = уатОбщегоНазначения.ПолучитьРегистрационныеДокументы(СтрТС.ТС);
		
		Если СтрТС.ТС.Организация <> МестонахождениеТС.Организация
			ИЛИ СтрТС.ТС.Подразделение <> МестонахождениеТС.Подразделение
			ИЛИ СтрТС.ТС.Колонна <> МестонахождениеТС.Колонна
			ИЛИ СтрТС.ТС.ДатаВводаВЭксплуатацию <> СтрТС.ДатаВвода
			ИЛИ СтрТС.ТС.ДатаВыбытия <> '00010101' Тогда
			
			ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
			ТСОбъект.ДатаВводаВЭксплуатацию = СтрТС.ДатаВвода;
			ТСОбъект.ДатаВыбытия            = '00010101';
			ТСОбъект.Организация            = МестонахождениеТС.Организация;
			ТСОбъект.Подразделение          = МестонахождениеТС.Подразделение;
			ТСОбъект.Колонна                = МестонахождениеТС.Колонна;
			
			Попытка 
				ТСОбъект.Записать();
			Исключение
				ТекстНСТР = НСтр("en='Failed to record vehicle/equipment ""%1""!';ru='Не удалось записать ТС/оборудование ""%1""!'");
				ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ТСОбъект));
				уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
				Прервать;
			КонецПопытки;
		КонецЕсли;
		
		Для Каждого ТекДокумент Из мсвДокументов Цикл
			Если ТекДокумент.Организация <> МестонахождениеТС.Организация
				ИЛИ ТекДокумент.Подразделение <> МестонахождениеТС.Подразделение Тогда
				
				ДокументОбъект = ТекДокумент.ПолучитьОбъект();
				ДокументОбъект.Организация   = МестонахождениеТС.Организация;
				ДокументОбъект.Подразделение = МестонахождениеТС.Подразделение;
			
				Попытка 
					ДокументОбъект.Записать();
				Исключение
					ТекстНСТР = НСтр("en='Failed to record document ""%1""';ru='Не удалось записать документ ""%1""'");
					ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ДокументОбъект));
					уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
					Прервать;
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ВосстановитьТСиОборудованиеДоВвода(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		ТСОбъект.ДатаВводаВЭксплуатацию = '00010101';
		
		ТСОбъект.Организация = Неопределено;
		ТСОбъект.Подразделение = Неопределено;
		ТСОбъект.Колонна = Неопределено;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to record the vehicle/equipment ""%1""';ru='Не удалось записать ТС/оборудование ""%1""'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(СтрТС.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция УжеЕстьВводВЭксплуатацию(Отказ)
	Рез = Ложь;
	
	// по ТС
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка КАК Ссылка,
	|	уатВводВЭксплуатациюТСиОборудования_ТС.ТС КАК ТС,
	|	уатВводВЭксплуатациюТСиОборудования_ТС.ТС.ДатаВыбытия
	|ПОМЕСТИТЬ ВРТ
	|ИЗ
	|	Документ.уатВводВЭксплуатациюТСиОборудования.ТС КАК уатВводВЭксплуатациюТСиОборудования_ТС
	|ГДЕ
	|	уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка <> &ДокументСсылка
	|	И уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка.Проведен
	|	И уатВводВЭксплуатациюТСиОборудования_ТС.ТС В(&СписокТС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВРТ.Ссылка,
	|	ВРТ.ТС
	|ИЗ
	|	ВРТ КАК ВРТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.уатВводВЭксплуатациюТСиОборудования.ТС КАК уатВводВЭксплуатациюТСиОборудованияТС
	|		ПО ВРТ.ТС = уатВводВЭксплуатациюТСиОборудованияТС.ТС
	|			И (ВРТ.ТСДатаВыбытия > уатВводВЭксплуатациюТСиОборудованияТС.ДатаВвода
	|				ИЛИ ВРТ.ТСДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|ГДЕ
	|	уатВводВЭксплуатациюТСиОборудованияТС.Ссылка = &ДокументСсылка");
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("СписокТС", тс.ВыгрузитьКолонку("ТС"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстНСТР = НСтр("en='Vehicle/equipment ""%1"" already in operation: ""%2""';ru='ТС/оборудование ""%1"" уже введено в эксплуатацию: ""%2""'");
		ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(Выборка.ТС), Выборка.Ссылка);
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
		Рез = Истина;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

#КонецОбласти


#КонецЕсли