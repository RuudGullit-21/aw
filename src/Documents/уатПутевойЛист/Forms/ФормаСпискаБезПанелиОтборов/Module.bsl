
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
    ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	СгруппироватьКомандыПечати();
	УстановитьОтборПоВодителюДляПодписи();
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Документы.уатПутевойЛист) Тогда 
		Элементы.ФормаИзменитьВыделенные.Видимость = Ложь;
		Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = Ложь;
	КонецЕсли;
	
	флЭЦП = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	флЖТД = ПолучитьФункциональнуюОпцию("уатИспользоватьЖурналыТранспортныхДокументов");
	флМедикИлиКонтролер = уатЖурналыТранспортныхДокументов.ТекущийПользовательКонтролерТС()
		ИЛИ уатЖурналыТранспортныхДокументов.ТекущийПользовательМедработник();
	Элементы.ГруппаПодписи.Видимость                  = флЖТД;
	Элементы.ФормаПодписать.Видимость                 = флЖТД И флЭЦП И НЕ флМедикИлиКонтролер
		И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.уатСостоянияПодписиПутевыхЛистов);
	Элементы.СписокКонтекстноеМенюПодписать.Видимость = Элементы.ФормаПодписать.Видимость;
	
	Если флМедикИлиКонтролер ИЛИ уатЖурналыТранспортныхДокументов.ТекущийПользовательВодитель() Тогда
		Элементы.ПроверитьДокументы.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатДокументФормаСпискаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПриПолученииПодписи" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументы(Команда)
	ТекДок = Элементы.Список.ТекущиеДанные;
	Если ТекДок <> Неопределено Тогда
		уатОбщегоНазначенияКлиент.ОткрытьОтчетПоДокументамТСиВодителей(ТекДок.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)

	Если НЕ уатЗащищенныеФункцииКлиент.ИТСОтраслевой_ПроверкаДоступностиСервисов() Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры = Новый Структура("ОповеститьОЗавершении", Истина);
	уатЖурналыТранспортныхДокументовКлиент.ПодписатьИзСписка(Элементы.Список, УникальныйИдентификатор, ДопПараметры);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура СгруппироватьКомандыПечати()
	
	РазмещенныеКомандыПечати = Новый Массив();
	Для Каждого ТекКоманда Из Элементы.ПодменюПечатьОбычное.ПодчиненныеЭлементы Цикл 
		РазмещенныеКомандыПечати.Добавить(ТекКоманда);
	КонецЦикла;
	
	ГруппаПечатьПриВыезде = Элементы.Добавить(
		"ПодменюПечатьОбычное_уатГруппаВыезд", 
		Тип("ГруппаФормы"), 
		Элементы.ПодменюПечатьОбычное
	);
	ГруппаПечатьПриВыезде.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	ГруппаПечатьПриВозврате = Элементы.Добавить(
		"ПодменюПечатьОбычное_уатГруппаВозврат", 
		Тип("ГруппаФормы"), 
		Элементы.ПодменюПечатьОбычное
	);
	ГруппаПечатьПриВозврате.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	ГруппаПечатьПрочее = Элементы.Добавить(
		"ПодменюПечатьОбычное_уатГруппаПрочее", 
		Тип("ГруппаФормы"), 
		Элементы.ПодменюПечатьОбычное
	);
	ГруппаПечатьПрочее.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	Для Каждого ТекКоманда Из РазмещенныеКомандыПечати Цикл 
		Если ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечататьЛицСторону"
				Или ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечататьОбрСторону"
				Или ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечатьВесьДокумент" Тогда 
			Элементы.Переместить(ТекКоманда, ГруппаПечатьПриВыезде);
			
		ИначеЕсли ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечатьВесьДокументПолная"
				Или ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечататьОбрСторонуПолная"
				Или ТекКоманда.ИмяКоманды = "ПодменюПечатьОбычное_ПечататьЛицСторонуПолная" Тогда
			Элементы.Переместить(ТекКоманда, ГруппаПечатьПриВозврате);
			
		Иначе 
			Элементы.Переместить(ТекКоманда, ГруппаПечатьПрочее);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВодителюДляПодписи()
	Если НЕ уатЖурналыТранспортныхДокументов.ТекущийПользовательВодитель() Тогда
		Возврат;
	КонецЕсли;
	
	ТекПользователь = Пользователи.АвторизованныйПользователь();
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо
	|	И НЕ Сотрудники.ПометкаУдаления
	|	И НЕ Сотрудники.ЭтоГруппа");
	Запрос.УстановитьПараметр("ФизическоеЛицо", ТекПользователь.ФизическоеЛицо);
	мсвВодители = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	списВодители = Новый СписокЗначений;
	списВодители.ЗагрузитьЗначения(мсвВодители);
	
	ГруппаОтбор = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбор.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ОтборВодитель1 = ГруппаОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборВодитель1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Водитель1");
	ОтборВодитель1.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборВодитель1.ПравоеЗначение = списВодители;
	ОтборВодитель1.Использование = Истина;
	ОтборВодитель2 = ГруппаОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборВодитель2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Водитель2");
	ОтборВодитель2.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборВодитель2.ПравоеЗначение = списВодители;
	ОтборВодитель2.Использование = Истина;
КонецПроцедуры

#КонецОбласти
