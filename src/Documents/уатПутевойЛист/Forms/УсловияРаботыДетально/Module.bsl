
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("УсловияРаботы") Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Параметры.УсловияРаботы Цикл
		НоваяСтрока = УсловияРаботыДетально.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	КонецЦикла;
	
	Если УсловияРаботыДетально.Количество() = 0 Тогда
		НоваяСтрока = УсловияРаботыДетально.Добавить();
		НоваяСтрока.УсловиеРаботы        = Параметры.УсловиеРаботы;
		НоваяСтрока.КоличествоКмГруз     = Параметры.ПробегСГрузом;
		НоваяСтрока.КоличествоКмПорожний = Параметры.ПробегПорожний;
	КонецЕсли;
	
	ВсегоПробегСГрузом = Параметры.ПробегСГрузом;
	ВсегоПробегПорожний = Параметры.ПробегПорожний;
	
	ОбновитьИтоги();
	
	Если Параметры.ТолькоПросмотр Тогда
		ТолькоПросмотр = Истина;
		Элементы.УсловияРаботыДетально.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	Если Не ДанныеУказаныВерно() Тогда 
		Возврат;
	КонецЕсли;
	
	мсвСтрокиУсловия = Новый Массив;
	Для Каждого ТекСтрока Из УсловияРаботыДетально Цикл
		СтруктураСтроки = Новый Структура("УсловиеРаботы, КоличествоКмГруз, КоличествоКмПорожний");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекСтрока);
		мсвСтрокиУсловия.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Закрыть(мсвСтрокиУсловия);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УсловияРаботыДетальноПриИзменении(Элемент)
	ОбновитьИтоги();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИтоги()
	РаспределеноПробегСГрузом    = УсловияРаботыДетально.Итог("КоличествоКмГруз");
	РаспределеноПробегПорожний   = УсловияРаботыДетально.Итог("КоличествоКмПорожний");
	НераспределеноПробегСГрузом  = ВсегоПробегСГрузом  - РаспределеноПробегСГрузом;
	НераспределеноПробегПорожний = ВсегоПробегПорожний - РаспределеноПробегПорожний;
	
	ПодвалПробегСГрузом =
		СтрШаблон("%1
		|%2
		|%3",
		Формат(РаспределеноПробегСГрузом, "ЧЦ=11; ЧДЦ=3; ЧН=0"),
		Формат(НераспределеноПробегСГрузом, "ЧЦ=11; ЧДЦ=3; ЧН=0"),
		Формат(ВсегоПробегСГрузом, "ЧЦ=11; ЧДЦ=3; ЧН=0"));
		
	ПодвалПробегПорожний =
		СтрШаблон("%1
		|%2
		|%3",
		Формат(РаспределеноПробегПорожний, "ЧЦ=11; ЧДЦ=3; ЧН=0"),
		Формат(НераспределеноПробегПорожний, "ЧЦ=11; ЧДЦ=3; ЧН=0"),
		Формат(ВсегоПробегПорожний, "ЧЦ=11; ЧДЦ=3; ЧН=0"));
КонецПроцедуры

&НаСервере
Функция ДанныеУказаныВерно()
	
	Отказ = Ложь;
	
	Если ВсегоПробегСГрузом <> НераспределеноПробегСГрузом + РаспределеноПробегСГрузом Тогда
		ТекстСообщ = СтрШаблон("Пробег с грузом распределен не полностью или перераспределен!");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщ,,,, Отказ);
	КонецЕсли;
	
	Если ВсегоПробегПорожний <> НераспределеноПробегПорожний + РаспределеноПробегПорожний Тогда
		ТекстСообщ = СтрШаблон("Пробег порожний распределен не полностью или перераспределен!");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщ,,,, Отказ);
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти
