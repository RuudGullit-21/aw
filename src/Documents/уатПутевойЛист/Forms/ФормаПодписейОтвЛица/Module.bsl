
#Область ПеременныеФормы

&НаКлиенте
Перем СостоянияПодписейПЛ;

&НаКлиенте
Перем СоответвиеПЛЭД;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		АвтоТест = Истина;
	КонецЕсли;

	Если Параметры.Свойство("мсвДокументы") Тогда
		СписокПЛ.ЗагрузитьЗначения(Параметры.мсвДокументы);
	КонецЕсли;
	
	Если Параметры.Свойство("Подпись") Тогда
		НоваяСтрока = СписокПодписей.Добавить();
		НоваяСтрока.Пометка       = Истина;
		НоваяСтрока.Представление = ?(Параметры.Свойство("Представление"), Параметры.Представление, Параметры.Подпись);
		НоваяСтрока.Подпись       = Параметры.Подпись;
	Иначе
		ПолныеПрава = РольДоступна(Метаданные.Роли.ПолныеПрава);
		Если ПолныеПрава
			ИЛИ ПравоДоступа("Редактирование", Метаданные.Документы.уатПутевойЛист) Тогда
			НоваяСтрока = СписокПодписей.Добавить();
			НоваяСтрока.Пометка       = Истина;
			НоваяСтрока.Представление = "Диспетчер";
			НоваяСтрока.Подпись       = "Диспетчер"; 
		КонецЕсли;
		
		Если ПолныеПрава
			ИЛИ уатЖурналыТранспортныхДокументов.ТекущийПользовательМедработник() Тогда
			НоваяСтрока = СписокПодписей.Добавить();
			НоваяСтрока.Пометка       = Истина;
			НоваяСтрока.Представление = "Медработник";
			НоваяСтрока.Подпись       = "Медработник";
		КонецЕсли;
		
		Если ПолныеПрава
			ИЛИ уатЖурналыТранспортныхДокументов.ТекущийПользовательКонтролерТС() Тогда
			НоваяСтрока = СписокПодписей.Добавить();
			НоваяСтрока.Пометка       = Истина;
			НоваяСтрока.Представление = "Ответственный за состояние ТС";
			НоваяСтрока.Подпись       = "Контролер";
		КонецЕсли; 
		
		Если ПолныеПрава
			ИЛИ уатЖурналыТранспортныхДокументов.ТекущийПользовательУполномоченныйНаПроставлениеОдометра() Тогда
			НоваяСтрока = СписокПодписей.Добавить();
			НоваяСтрока.Пометка       = Истина;
			НоваяСтрока.Представление = "Уполномоченный на проставление одометра";
			НоваяСтрока.Подпись       = "УполномоченныйНаПроставлениеОдометра";
		КонецЕсли; 
	КонецЕсли;

	флЖТД = ПолучитьФункциональнуюОпцию("уатИспользоватьЖурналыТранспортныхДокументов");
	флЭД  = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД"); 
	
	ЭтотОбъект.Высота = 40; 

	Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
	ЗаголовокОперации = Нстр("ru = 'Ожидается отправка данных в сервисы 1С-ЭДО. Пожалуйста, подождите.'");
	Если СписокПодписей.Количество() = 1 Тогда
		Элементы.ГруппаКоманднаяПанель.Видимость      = Ложь;
		Элементы.СписокПодписей.Видимость             = Ложь;
		Элементы.ДекорацияДлительнаяОперация.Картинка = БиблиотекаКартинок.ДлительнаяОперация32БЭД;
		ЭтотОбъект.Высота = 4;
	КонецЕсли;
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("Документ.уатПутевойЛист.Форма.ФормаПодписейОтвЛица", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьСостоянияПЛ(СписокПЛ.ВыгрузитьЗначения(), СостоянияПодписейПЛ, СоответвиеПЛЭД);
	Если СписокПодписей.Количество() = 1 Тогда
		Подписать(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого ТекПодпись Из СписокПодписей Цикл
		ТекПодпись.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого ТекПодпись Из СписокПодписей Цикл
		ТекПодпись.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)

	ТребуетсяПодписание = СписокПодписей.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество() <> 0;
	Если НЕ ТребуетсяПодписание Тогда
		Закрыть();
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СписокПодписей Цикл
		ТекСтрока.Выполнено = Ложь;
	КонецЦикла;
	
	Если флЭД Тогда 
		ВыполнитьПодписаниеТитула();
	КонецЕсли;  
	Оповестить("Запись_ДокументыЭПД");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьОшибкиЗакрытьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗакрытьОшибки" Тогда
		СтандартнаяОбработка = Ложь;
		Элементы.ГруппаОшибки.Видимость = Ложь;
		Если НЕ Элементы.ГруппаКоманднаяПанель.Видимость Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиЗаполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ОшибкиЗаполнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Если ТекущиеДанные.Узел = "ОформительНеПодключен" Тогда 
		ПараметрыСоздания = СинхронизацияЭДОКлиент.НовыеПараметрыСозданияУчетнойЗаписи();
		ПараметрыСоздания.Организация   = ТекущиеДанные.ОбъектПерехода; 
		ПараметрыСоздания.ВладелецФормы = ЭтотОбъект;
		СинхронизацияЭДОКлиент.СоздатьУчетнуюЗапись(ПараметрыСоздания);
	Иначе
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ОбъектПерехода);
	Конецесли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьСостоянияПЛ(мсвПутевыеЛисты, СостоянияПодписейПЛ, СоответвиеПЛЭД) 
	уатОбменСГИСЭПД.ЗаполнитьСостоянияПЛ(мсвПутевыеЛисты, СостоянияПодписейПЛ, СоответвиеПЛЭД);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
	
		Если Результат.Свойство("КонтекстДиагностики")
			И ОбработкаНеисправностейБЭДКлиентСервер.ЕстьОшибки(Результат.КонтекстДиагностики) Тогда
			
			Элементы.ГруппаОжиданиеСинхронизации.Видимость  = Ложь;
			ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);
		ИначеЕсли Результат.Свойство("ОшибкиФормирования") И Результат.ОшибкиФормирования.Количество() Тогда
			
			Элементы.ГруппаОжиданиеСинхронизации.Видимость  = Ложь;
			ПараметрыОбработки = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыПроблемПриОбработкеДокументов();
			ПараметрыОбработки.АдресСведенийОбОшибках = ПоместитьВоВременноеХранилище(Результат.ОшибкиФормирования);
			Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
				И ДополнительныеПараметры.Свойство("ОбъектыУчета") Тогда
				ПараметрыОбработки.СписокДокументовКОтправке = ДополнительныеПараметры.ОбъектыУчета;
			КонецЕсли;
			Оповещение = Новый ОписаниеОповещения("ПослеЗавершенияРаботыПомощникаФормирования", ЭтотОбъект, ДополнительныеПараметры);
			ИнтерфейсДокументовЭДОКлиент.ПоказатьПроблемыПриОбработкеДокументов(Оповещение, ПараметрыОбработки);
		Иначе 
			Если Результат.Свойство("ВыполнитьПодписаниеСледующегоТитула") Тогда 
				ЗаполнитьСостоянияПЛ(СписокПЛ.ВыгрузитьЗначения(), СостоянияПодписейПЛ, СоответвиеПЛЭД);
				ВыполнитьПодписаниеТитула();
			ИначеЕсли Результат.Свойство("ОбработаноПоДействиям") 
				И ТипЗнч(Результат.ОбработаноПоДействиям) = Тип("Соответствие") Тогда 
				ОбработаноПоДействиям = Результат.ОбработаноПоДействиям;
				РезультатОтправки = ОбработаноПоДействиям.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить"));
				Если РезультатОтправки = 1 Тогда
					Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
						И ДополнительныеПараметры.Свойство("ТекущийТитул") Тогда
						ТекущийТитул = ДополнительныеПараметры.ТекущийТитул;  
						
						ТекстОповещения = НСтр("ru = 'Титул """ + ТекущийТитул + """ отправлен'");
						ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
						ДействиеПриНажатии = Неопределено;
						КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48; 
						#Если Не МобильноеПриложениеКлиент Тогда
							ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
							СтатусОповещенияПользователя.Важное);
						#КонецЕсли
					КонецЕсли; 
					ЗаполнитьСостоянияПЛ(СписокПЛ.ВыгрузитьЗначения(), СостоянияПодписейПЛ, СоответвиеПЛЭД);
					ИзменитьСостоянияПодписиПутевыхЛистов(ДополнительныеПараметры.ОбъектыУчета, ДополнительныеПараметры.ТитулЭПЛ);
					ВыполнитьПодписаниеТитула(); 
					
				Иначе
					РезультатФормирования = ОбработаноПоДействиям.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Сформировать"));
					Если РезультатФормирования = 1 Тогда
						Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
							И ДополнительныеПараметры.Свойство("ТекущийТитул") Тогда
							ТекущийТитул = ДополнительныеПараметры.ТекущийТитул;  
							
							ТекстОповещения = НСтр("ru = 'Пакет для отправки титула """ + ТекущийТитул + """ сформирован, требуется подписание'");
							ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
							ДействиеПриНажатии = Неопределено;
							КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48; 
							#Если Не МобильноеПриложениеКлиент Тогда
								ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
								СтатусОповещенияПользователя.Важное);
							#КонецЕсли
						КонецЕсли;
						Элементы.ГруппаОжиданиеСинхронизации.Видимость  = Ложь;
						Закрыть();
					Иначе
						Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
							И ДополнительныеПараметры.Свойство("ТекущийТитул") Тогда
							ТекущийТитул = ДополнительныеПараметры.ТекущийТитул;  
							
							ТекстОповещения = НСтр("ru = 'Пакет для отправки титула """ + ТекущийТитул + """ не сформирован, требуется повторное формирование'");
							ЗаголовокОповещения = НСтр("ru = 'Электронные документы'");	
							ДействиеПриНажатии = Неопределено;
							КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48; 
							#Если Не МобильноеПриложениеКлиент Тогда
								ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
								СтатусОповещенияПользователя.Важное);
							#КонецЕсли
						КонецЕсли; 
						Элементы.ГруппаОжиданиеСинхронизации.Видимость  = Ложь;
						Закрыть();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияРаботыПомощникаФормирования(Результат, ДополнительныеПараметры) Экспорт	
	
	Если Результат <> Неопределено Тогда
		ОповещениеЗавершения = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, ДополнительныеПараметры);
		ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(ОповещениеЗавершения, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСостоянияПодписиПутевыхЛистов(МассивДокументовЭД, ТитулЭПЛ)	
	
	Для Каждого ТекДокумент Из МассивДокументовЭД Цикл
		Если ТекДокумент.ДокументыОснования.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		Если ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "ДиспетчерПредрейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "МедработникПредрейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "КонтролерПредрейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "УполномоченныйНаПроставлениеОдометраПредрейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "УполномоченныйНаПроставлениеОдометраПослерейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.Подписан");
			ВидПодписи        = "МедработникПослерейсовый";
		ИначеЕсли ТитулЭПЛ = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_ОткМ") Тогда
			СостояниеПодписей = ПредопределенноеЗначение("Перечисление.уатСостоянияТранспортныхДокументов.НеПройден");
			ВидПодписи        = "МедработникПредрейсовый";
		Иначе
			Прервать;
		КонецЕсли;
		
		уатЗащищенныеФункцииСервер_проф.ОбновитьСостояниеПодписиЭДО(
			ТекДокумент.ДокументыОснования[0].ДокументОснование, ВидПодписи, СостояниеПодписей);
	
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьПодписаниеТитула()
	Элементы.ГруппаОжиданиеСинхронизации.Видимость = Истина;
	
	ПодписьДиспетчера      = СписокПодписей.НайтиСтроки(Новый Структура("Пометка,Выполнено,Подпись",              Истина, Ложь,   "Диспетчер"));
	ПодписьКонтролера      = СписокПодписей.НайтиСтроки(Новый Структура("Пометка,Выполнено,Подпись",              Истина, Ложь,   "Контролер"));
	ПодписьМедработника    = СписокПодписей.НайтиСтроки(Новый Структура("Пометка,Выполнено,Подпись,ПовторныйШаг", Истина, Ложь,   "Медработник", Ложь)); 
	ПодписьМедработника2   = СписокПодписей.НайтиСтроки(Новый Структура("Пометка,Выполнено,Подпись,ПовторныйШаг", Истина, Истина, "Медработник", Ложь));
	ПодписьУполномоченного = СписокПодписей.НайтиСтроки(Новый Структура("Пометка,Выполнено,Подпись",              Истина, Ложь,   "УполномоченныйНаПроставлениеОдометра"));
	
	ТребуетсяПодписьДиспетчера      = ПодписьДиспетчера.Количество() <> 0;
	ТребуетсяПодписьКонтролера      = ПодписьКонтролера.Количество() <> 0;
	ТребуетсяПодписьМедработника    = ПодписьМедработника.Количество() <> 0;
	ТребуетсяПодписьМедработника2   = ПодписьМедработника2.Количество() <> 0;
	ТребуетсяПодписьУполномоченного = ПодписьУполномоченного.Количество() <> 0;
	
	ЕстьОшибки = Ложь;
	мсвПутевыхЛистов = СписокПЛ.ВыгрузитьЗначения();
	Если ТребуетсяПодписьДиспетчера Тогда 
		ПодписьДиспетчера[0].Выполнено      = Истина;
		Элементы.ДекорацияНадпись.Заголовок = ЗаголовокОперации + Символы.ПС + НСтр("ru = 'Выполняется формирование титула ""Информация оформителя"".'"); 
		уатОбменСГИСЭПДКлиент.ПодписатьТитулЭПЛ(ЭтотОбъект, мсвПутевыхЛистов, "Диспетчер", "Информация оформителя",
		СостоянияПодписейПЛ, СоответвиеПЛЭД, ОшибкиЗаполнения, ЕстьОшибки);
		Если НЕ ЕстьОшибки Тогда 
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатПутевойЛист"));
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.уатСвязанныеДокументыЭПД")); 
			Оповестить("Запись_ДокументыЭПД");
		Иначе
			Элементы.ГруппаОжиданиеСинхронизации.Видимость  = Ложь;
			Элементы.ГруппаОшибки.Видимость                 = Истина;
			ЭтотОбъект.Высота = 40;
		КонецЕсли;
	ИначеЕсли ТребуетсяПодписьМедработника 
		ИЛИ ТребуетсяПодписьМедработника2 Тогда  
		ПовторныйШаг = Ложь;
		Если ТребуетсяПодписьМедработника2 Тогда
			ПодписьМедработника2[0].ПовторныйШаг = Истина; 
			ПовторныйШаг = Истина;
		Иначе
			ПодписьМедработника[0].Выполнено     = Истина;
		КонецЕсли;
		Элементы.ДекорацияНадпись.Заголовок = ЗаголовокОперации + Символы.ПС 
			+ НСтр("ru = 'Выполняется формирование титула ""Медосмотр""'") + " " + ?(ТребуетсяПодписьМедработника2, "Водитель 2.", "Водитель 1.");
		
		уатОбменСГИСЭПДКлиент.ПодписатьТитулЭПЛ(ЭтотОбъект, мсвПутевыхЛистов, "Медработник", "Медосмотр",
		СостоянияПодписейПЛ, СоответвиеПЛЭД, ОшибкиЗаполнения, ЕстьОшибки, ПовторныйШаг);
		Если НЕ ЕстьОшибки Тогда
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатПутевойЛист"));
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатЖурналМедицинскогоОсмотраВодителей"));
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.уатСвязанныеДокументыЭПД"));
			Оповестить("Запись_ДокументыЭПД");
		Иначе  
			Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
			Элементы.ГруппаОшибки.Видимость                = Истина;
			ЭтотОбъект.Высота = 40;
		КонецЕсли;
	ИначеЕсли ТребуетсяПодписьКонтролера Тогда 
		ПодписьКонтролера[0].Выполнено      = Истина;
		Элементы.ДекорацияНадпись.Заголовок = ЗаголовокОперации + Символы.ПС + НСтр("ru = 'Выполняется формирование титула ""Предрейсовый контроль"".'");
		
		уатОбменСГИСЭПДКлиент.ПодписатьТитулЭПЛ(ЭтотОбъект, мсвПутевыхЛистов, "Контролер", "Предрейсовый контроль",
		СостоянияПодписейПЛ, СоответвиеПЛЭД, ОшибкиЗаполнения, ЕстьОшибки); 
		Если НЕ ЕстьОшибки Тогда
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатПутевойЛист"));
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатЖурналПредрейсовогоИПослерейсовогоКонтроляТС"));
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.уатСвязанныеДокументыЭПД"));
			Оповестить("Запись_ДокументыЭПД");
		Иначе
			Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
			Элементы.ГруппаОшибки.Видимость                = Истина;
			ЭтотОбъект.Высота = 40;
		КонецЕсли;
	ИначеЕсли ТребуетсяПодписьУполномоченного Тогда
		ПодписьУполномоченного[0].Выполнено = Истина; 
		Элементы.ДекорацияНадпись.Заголовок = ЗаголовокОперации + Символы.ПС + НСтр("ru = 'Выполняется формирование титула ""Показания одометра"".'");
		
		уатОбменСГИСЭПДКлиент.ПодписатьТитулЭПЛ(ЭтотОбъект, мсвПутевыхЛистов, "УполномоченныйНаПроставлениеОдометра", "Показания одометра",
		СостоянияПодписейПЛ, СоответвиеПЛЭД, ОшибкиЗаполнения, ЕстьОшибки); 
		Если НЕ ЕстьОшибки Тогда
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатПутевойЛист"));
			ОповеститьОбИзменении(Тип("ДокументСсылка.уатЖурналУчетаПоказанийОдометра"));
			ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.уатСвязанныеДокументыЭПД"));
			Оповестить("Запись_ДокументыЭПД");
		Иначе
			Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
			Элементы.ГруппаОшибки.Видимость                = Истина;
			ЭтотОбъект.Высота = 40;
		КонецЕсли;
	Иначе 
		ОповеститьОбИзменении(Тип("ДокументСсылка.уатПутевойЛист"));
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.уатСвязанныеДокументыЭПД"));
		Оповестить("Запись_ДокументыЭПД");
		Элементы.ГруппаОжиданиеСинхронизации.Видимость = Ложь;
		Закрыть();
	Конецесли; 
Конецпроцедуры
 
#КонецОбласти