
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	АвторизованныйПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	Если ТипЗнч(АвторизованныйПользователь) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда 
		Если Параметры.Ключ.Пустая() Тогда 
			Объект.Ответственный = АвторизованныйПользователь;
			
			Если ТипЗнч(АвторизованныйПользователь.ОбъектАвторизации) = Тип("СправочникСсылка.КонтактныеЛица") 
					И ТипЗнч(АвторизованныйПользователь.ОбъектАвторизации.ОбъектВладелец) = Тип("СправочникСсылка.Контрагенты") Тогда 
				Объект.Контрагент = АвторизованныйПользователь.ОбъектАвторизации.ОбъектВладелец;
			ИначеЕсли ТипЗнч(АвторизованныйПользователь.ОбъектАвторизации) = Тип("СправочникСсылка.Контрагенты") Тогда 
				Объект.Контрагент = АвторизованныйПользователь.ОбъектАвторизации;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.Ответственный.Доступность	 = Ложь;
		Элементы.Контрагент.Доступность		 = Ложь;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатТС) Тогда
		Элементы.РасходыЗаполнитьНомерБортовогоУстройстваТС.Видимость = Ложь;
	КонецЕсли;
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	УстановитьСвязиПараметровВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииКлиентПереопределяемый.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПередИзменением = Контрагент;
	Контрагент = Объект.Контрагент;
	
	Если КонтрагентПередИзменением <> Объект.Контрагент Тогда
		ПриИзмененииКонтрагентаИлиОрганизации();
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ДоговорПередИзменением = Договор;
	Договор = Объект.ДоговорКонтрагента;
	
	Если ДоговорПередИзменением <> Объект.ДоговорКонтрагента Тогда
		
		ПриИзмененииДоговора();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если Объект.Организация = ОрганизацияПередИзменением Тогда
		Возврат;
	КонецЕсли;
	ОрганизацияПередИзменением = Объект.Организация;
	
	ПриИзмененииКонтрагентаИлиОрганизации();

КонецПроцедуры

&НаКлиенте
Процедура РасходыТСПриИзменении(Элемент)
	ТекСтрока = Элементы.Расходы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекСтрока.ТС)
		И ТипЗнч(ТекСтрока.ТС) = Тип("СправочникСсылка.уатТС")
		И уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекСтрока.ТС, "ПринадлежностьТС")
		= ПредопределенноеЗначение("Перечисление.уатПринадлежностьТС.Собственное") Тогда
		МестонахождениеТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаОперации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком");
	
	уатОбщегоНазначенияТиповыеКлиент.уатНачалоВыбораЗначенияДоговораКонтрагента(Объект, ЭтотОбъект, Элемент, Объект.Контрагент, 
		Объект.ДоговорКонтрагента, мВидДоговора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВидДоговораДоступныеЗначения = Новый Массив;
	
	мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком");
	ВидДоговораДоступныеЗначения.Добавить(мВидДоговора);
	
	ПараметрыФормы = Новый Структура();  
	ПараметрыФормы.Вставить("Владелец", Объект.Контрагент);
	ПараметрыФормы.Вставить("ВидДоговораДоступныеЗначения", ВидДоговораДоступныеЗначения);
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры  

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// уатУправлениеАвтотранспортом.МодификацияКонфигурации
&НаКлиенте
Процедура Подключаемый_уатВыполнитьКоманду(Команда)
	
	уатМодификацияКонфигурацииКлиентПереопределяемый.ВыполнитьПодключаемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры
// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации

&НаКлиенте
Процедура ОткрытьКарту(Команда)
	
	ТекДанные = Элементы.Расходы.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Или Модифицированность Тогда 
		ТекстВопроса = НСтр("en='Before opening form of map, you need to record changes.';ru='Перед открытием формы карты необходимо записать изменения.'") + Символы.ПС + НСтр("en='Save?';ru='Сохранить?'");
		Оповещение = Новый ОписаниеОповещения("ОткрытьКартуСохранитьИзменения", ЭтотОбъект, Новый Структура("ТекДанные", ТекДанные));
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ОткрытьФормуКарты(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомерБортовогоУстройстваТС(Команда)
	ЗаполнитьНомерБортовогоУстройстваТССервер(Объект.Расходы);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчеты(Команда)
	
	Если Объект.Расходы.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Clear refueling table before download?';ru='Очистить таблицу расходов перед загрузкой?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьОтчетыИзФайлаВопрос", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	КонецЕсли;
	
	ЗагрузитьОтчетыИзФайлаПродолжение();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТСПоНомеруУстройства(Команда)
	
	Для Каждого ТекСтрока Из Объект.Расходы Цикл
		
		ТекСтрока.ТС = НайтиТСПоНомеруУстройства(ТекСтрока.ДатаОперации, ТекСтрока.НомерБУМК);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗагрузитьОтчетыИзФайлаВопрос(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Расходы.Очистить();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗагрузитьОтчетыИзФайлаПродолжение(); 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчетыИзФайлаПродолжение()
	Попытка
		ПараметрыОткрытия = Новый Структура();
		ОткрытьФорму("Документ.уатОтчетСистемыПлатон.Форма.ФормаЗагрузки",ПараметрыОткрытия,ЭтотОбъект,,,, Новый ОписаниеОповещения("ЗагрузитьОтчетыИзФайлаЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Исключение
		ТекстНСТР = НСтр("ru = 'Ошибка при заполнении табличной части ""Расходы"": '; en = 'Error while filling tabular section ""Refueling"": '");
		ТекстНСТР = ТекстНСТР + ОписаниеОшибки();
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчетыИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ТипОперацииСоответствие = НайтиСоздатьОперациюПлатон(Результат);
		
		Для Каждого ТекСтрока Из Результат Цикл
			Если ТекСтрока.Свойство("ТипОперации") Тогда
				ТипОперации = ТипОперацииСоответствие.Получить(ТекСтрока.ТипОперации);
			КонецЕсли;
			Если ТекСтрока.Свойство("НомерБУМК") Тогда
				ТС = НайтиТСПоНомеруУстройства(ТекСтрока.ДатаОперации, ТекСтрока.НомерБУМК);
			КонецЕсли;
			НоваяЗаправка = Объект.Расходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗаправка, ТекСтрока);
			НоваяЗаправка.ТипОперации = ТипОперации;
			НоваяЗаправка.ТС          = ТС;
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартуСохранитьИзменения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Записать();
	ОткрытьФормуКарты(ДополнительныеПараметры.ТекДанные);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСоздатьОперациюПлатон(Результат)
	
	ТипОперацииСсылка = Справочники.уатТипыОперацийПлатон.ПустаяСсылка();
	ТипОперацииСоответствие = Новый Соответствие();
	ТипОперацииМассив       = Новый Массив();
	Для Каждого ТекСтрока Из Результат Цикл
		Если ТекСтрока.Свойство("ТипОперации") 
			И ЗначениеЗаполнено(ТекСтрока.ТипОперации) Тогда
			ТипОперацииСоответствие.Вставить(ТекСтрока.ТипОперации, ТипОперацииСсылка);
			ТипОперацииМассив.Добавить(ТекСтрока.ТипОперации);
		КонецЕсли;
	КонецЦикла;
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТипОперацииМассив", ТипОперацииМассив);
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатТипыОперацийПлатон.Ссылка КАК Ссылка,
	               |	уатТипыОперацийПлатон.Наименование
	               |ИЗ
	               |	Справочник.уатТипыОперацийПлатон КАК уатТипыОперацийПлатон
	               |ГДЕ
	               |	уатТипыОперацийПлатон.Наименование В(&ТипОперацииМассив)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТипОперацииСоответствие.Вставить(Выборка.Наименование, Выборка.Ссылка);
	КонецЦикла;
	Для Каждого ТекСтрока Из ТипОперацииСоответствие Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Значение) Тогда
			ТипОперацииСсылка = Справочники.уатТипыОперацийПлатон.СоздатьЭлемент();
			ТипОперацииСсылка.Наименование = ТекСтрока.Ключ;
			ТипОперацииСсылка.Записать();
			ТипОперацииСсылка = ТипОперацииСсылка.Ссылка;
			ТипОперацииСоответствие.Вставить(ТекСтрока.Ключ, ТипОперацииСсылка);
		КонецЕсли;
	КонецЦикла;
	Возврат ТипОперацииСоответствие;
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуКарты(ТекДанные)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("РежимОткрытия",       "РежимКарты_ОтчетСистемыПлатон");
	ПараметрыФормы.Вставить("Документ",            Объект.Ссылка);
	ПараметрыФормы.Вставить("ШиротаВъезда",        ТекДанные.ЛатВъездаНаТарифицируемыйУчасток);
	ПараметрыФормы.Вставить("ДолготаВъезда",       ТекДанные.ЛонВъездаНаТарифицируемыйУчасток);
	ПараметрыФормы.Вставить("ШиротаСъезда",        ТекДанные.ЛатСъездаСТарифицируемогоУчастка);
	ПараметрыФормы.Вставить("ДолготаСъезда",       ТекДанные.ЛонСъездаСТарифицируемогоУчастка);
	
	уатЭлектронныеКартыКлиент.ОткрытьКартуИУстановитьРежим(ПараметрыФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьНомерБортовогоУстройстваТССервер(Знач Расходы)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	тТС.ТС КАК ТС,
	               |	тТС.НомерБУМК КАК НомерБУМК,
	               |	тТС.ДатаОперации КАК ДатаОперации
	               |ПОМЕСТИТЬ втТС
	               |ИЗ
	               |	&тТС КАК тТС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	уатТС.Ссылка КАК Ссылка,
	               |	втТС.НомерБУМК КАК НомерБУМК,
	               |	втТС.ДатаОперации КАК ДатаОперации
	               |ИЗ
	               |	Справочник.уатТС КАК уатТС
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТС КАК втТС
	               |		ПО уатТС.Ссылка = втТС.ТС
	               |			И (уатТС.НомерБортовогоУстройстваПлатон = """")
	               |			И (втТС.НомерБУМК <> """")";
	
	Запрос.УстановитьПараметр("тТС", Расходы.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.НомерБортовогоУстройстваПлатон = Выборка.НомерБУМК;
		СправочникОбъект.ДополнительныеСвойства.Вставить("ДатаОперации", Выборка.ДатаОперации);
		СправочникОбъект.ДополнительныеСвойства.Вставить("ЗаписьНомераБортовогоУстройтваТС", Истина);
		Попытка
			СправочникОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКонтрагентаИлиОрганизации()
	
	ДанныеОбменаССервером = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	
	// Получим данные с сервера
	ДанныеОбменаССервером.ДоговорКонтрагента = Объект.ДоговорКонтрагента;
	ЗначенияДляЗаполнения = ИзменениеКонтрагентаСервер(ДанныеОбменаССервером);
	Объект.ДоговорКонтрагента = ЗначенияДляЗаполнения.ДоговорКонтрагента;
	
	ДоговорПередИзменением = Договор;
	Договор = Объект.ДоговорКонтрагента;
	
	УстановитьСвязиПараметровВыбора();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбора()
	
	НовыйМассив = Новый Массив();
	
	НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Организация", "Объект.Организация");
	НовыйМассив.Добавить(НоваяСвязь);
	
	НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Контрагент");
	НовыйМассив.Добавить(НоваяСвязь);
	
	Элементы.ДоговорКонтрагента.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);

КонецПроцедуры


&НаСервереБезКонтекста
Функция ИзменениеКонтрагентаСервер(ДанныеДляЗаполнения)
	СтруктураПараметровДляПолученияДоговора =
		уатЗаполнениеДокументов.ПолучитьСтруктуруПараметровДляПолученияДоговораПокупки();
	
	ЗначенияДляЗаполнения = уатОбщегоНазначенияСервер.ПриИзмененииЗначенияКонтрагента(ДанныеДляЗаполнения,
							СтруктураПараметровДляПолученияДоговора);
	Возврат ЗначенияДляЗаполнения;
КонецФункции

&НаКлиенте
Процедура ПриИзмененииДоговора()
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "Организация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Объект.Контрагент = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "Владелец");
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиТСПоНомеруУстройства(ДатаОперации, НомерУстройства)
	
	ТС = Справочники.уатТС.ПустаяСсылка();
	СтруктураОтбора = Новый Структура("ВнешняяСистема", Справочники.уатВнешниеСистемы.Платон);
	
	ЗаписьРегистра = РегистрыСведений.уатИсторияЗакрепленияБортовыхУстройств.СрезПоследних(ДатаОперации, СтруктураОтбора);
	
	Для Каждого ТекСтрока Из ЗаписьРегистра Цикл
		
		Если ТекСтрока.НомерБортовогоУстройства = НомерУстройства Тогда
			ТС = ТекСтрока.ТС;
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат ТС;
	
КонецФункции

#КонецОбласти
