
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// уатСогласованиеДокументов
	ИмяДокументаСогласование = "ВыбытиеИзЭксплуатации";
	уатСогласованиеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
			
	// Заполнение при вводе из карточки ТС	
	Если Объект.Ссылка.Пустая() Тогда
		Если Параметры.Свойство("ТС") Тогда
			НовоеТС = Объект.ТС.Добавить();
			НовоеТС.ТС = Параметры.ТС;
			НовоеТС.ДатаВыбытия = ТекущаяДата();
		КонецЕсли;
		Если Параметры.Свойство("Организация") Тогда
			Объект.Организация = Параметры.Организация;
		КонецЕсли;
		Если Параметры.Свойство("Подразделение") Тогда
			Объект.Подразделение = Параметры.Подразделение;
		КонецЕсли;
		Если Параметры.Свойство("Колонна") Тогда
			Объект.Колонна = Параметры.Колонна;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСтароеМестоположениеТСсервер();
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОбновитьСтатусСогласования(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьСтароеМестоположениеТСсервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьСтароеМестоположениеТСсервер();
	
		
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		// Изменить статус закрепленных за ТС документов
		ИзменитьСтатусЗакрепленныхЗаТСДокументов();
	КонецЕсли;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ПослеЗаписи(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	мсвТС = Новый Массив;
    Для Каждого ТекСтрока Из Объект.ТС Цикл
        мсвТС.Добавить(ТекСтрока.ТС);
    КонецЦикла;
	
	Оповестить("ОбновитьФорму_МестонахождениеТС", , мсвТС);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы
		И ЗначениеЗаполнено(СообщениеПользователю) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СообщениеПользователю;
		
		Попытка
			Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
				ИдентификаторНазначения = ВладелецФормы.УникальныйИдентификатор;
			Иначе
				ИдентификаторНазначения = ВладелецФормы.Родитель.УникальныйИдентификатор;
			Конецесли;
			Сообщение.ИдентификаторНазначения = ИдентификаторНазначения;
			Сообщение.Сообщить();
		Исключение
		КонецПопытки;
		СообщениеПользователю = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОрганизацияПодразделениеПриИзменении(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетСогласованияПриИзменении(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ТребуетСогласованияПриИзменении(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСогласованНажатие(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.НадписьСогласованНажатие(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ТСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока.ДатаВыбытия = Объект.Дата;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ОбработкаВыбораТСНаСервере(ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораТСНаСервере(ВыбранноеЗначение)
	
	Для Каждого ТекЭлем Из ВыбранноеЗначение Цикл
		НовСтрока = Объект.ТС.Добавить();
		НовСтрока.ТС = ТекЭлем.Значение;
	КонецЦикла;
	
	ОбновитьСтароеМестоположениеТСсервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТСТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	ОбновитьСтароеМестоположениеТС(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТСТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.ТС.ТекущиеДанные.ТС, ДанныеВыбора,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТСТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТСТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ТСДатаВыбытияПриИзменении(Элемент)
	ОбновитьСтароеМестоположениеТС(Элементы.ТС.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ИзменитьСтатусЗакрепленныхЗаТСДокументов()
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТС",     Объект.ТС.Выгрузить().ВыгрузитьКолонку("ТС"));
	Запрос.УстановитьПараметр("Статус", Перечисления.уатСтатусыДействия.Действует);
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатРегистрационныеДокументы.Ссылка КАК Ссылка,
	               |	уатРегистрационныеДокументы.Наименование КАК Наименование,
	               |	уатРегистрационныеДокументы.ВладелецДокументов КАК ВладелецДокументов
	               |ИЗ
	               |	Справочник.уатРегистрационныеДокументы КАК уатРегистрационныеДокументы
	               |ГДЕ
	               |	НЕ уатРегистрационныеДокументы.ПометкаУдаления
	               |	И уатРегистрационныеДокументы.ВладелецДокументов В ИЕРАРХИИ(&ТС)
	               |	И уатРегистрационныеДокументы.Статус = &Статус";
	Выборка = Запрос.Выполнить().Выбрать();
	
	СообщениеПользователю = "";
	Пока Выборка.Следующий() Цикл
		ДокОбъект        = Выборка.Ссылка.ПолучитьОбъект();
		ДокОбъект.Статус = Перечисления.уатСтатусыДействия.НеДействует;
		
		Попытка 
			ДокОбъект.Записать();
			ТекстНСТР = НСтр("ru='У ТС ""%1"" имеется действующий документ ""%2"", статус документа был изменен.'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Выборка.ВладелецДокументов, Выборка.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			
			СообщениеПользователю = ?(ЗначениеЗаполнено(СообщениеПользователю), СообщениеПользователю + Символы.ПС, "") + ТекстНСТР;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтароеМестоположениеТС(ТекСтрока)
	МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаВыбытия-1);
	ТекСтрока.Организация = МестоТС.Организация;
	ТекСтрока.Подразделение = МестоТС.Подразделение;
	ТекСтрока.Колонна = МестоТС.Колонна;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтароеМестоположениеТСсервер()
	Для Каждого ТекСтрокаТЧ Из Объект.ТС Цикл
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрокаТЧ.ТС, ТекСтрокаТЧ.ДатаВыбытия-1);
		ТекСтрокаТЧ.Организация = МестоТС.Организация;
		ТекСтрокаТЧ.Подразделение = МестоТС.Подразделение;
		ТекСтрокаТЧ.Колонна = МестоТС.Колонна;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция СтруктураОтборТС()
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураОтбор.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		СтруктураОтбор.Вставить("Колонна", Объект.Колонна);
	КонецЕсли;
	
	Возврат СтруктураОтбор;
КонецФункции

#КонецОбласти
