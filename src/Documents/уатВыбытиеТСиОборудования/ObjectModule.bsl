
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ОписаниеПеременных

Перем таблТССсылка; // Хранит таблицу ТС, которая заполняется при инициализации документа из таблицы ТС
// по ссылке. Если при редактировании таблицы ТС она будет изменена, то все старые ТС при перепроведении
// должны возвратиться в исходное (до даты документа) местонахождение

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатВыбытиеТСиОборудования.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение_проф.ОтразитьМестонахождениеТС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатВыбытиеТСиОборудования.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Запись даты ввода в карточках ТС и оборудования
	ЗаписатьРеквизитыТСиОборудования(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовСервер.ПередЗаписью(ЭтотОбъект, РежимЗаписи, Отказ);
	// Конец уатСогласованиеДокументов
	
	// Проверка на то, что все ТС и оборудование введены в эксплуатацию
	Если (НЕ Отказ) И РежимЗаписи = РежимЗаписиДокумента.Проведение И (НЕ ТСВведеныВЭксплуатацию(Отказ)) Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка на то, что местонахождение ТС и оборудования
	// соответствует реквизитам шапки документа (если они указаны)
	Если (НЕ Отказ) И РежимЗаписи = РежимЗаписиДокумента.Проведение И (НЕ  ТССоответствуютМестонахождению(Отказ)) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВосстановитьТСиОборудованиеПередЗаписью(Отказ);
	КонецЕсли;
	
	МассивТС = Новый Массив();
	Для Каждого ТекСтрока Из ТС Цикл 
		Если МассивТС.Найти(ТекСтрока.ТС) = Неопределено Тогда 
			МассивТС.Добавить(ТекСтрока.ТС);
		КонецЕсли;
	КонецЦикла;
	
	СписокТС = "";
	Для Каждого ТекТС Из МассивТС Цикл 
		СписокТС = СписокТС + ?(СписокТС = "", "", ", ") + ТекТС.Наименование;
	КонецЦикла;

КонецПроцедуры // ПередЗаписью

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		таблТССсылка = Ссылка.ТС.Выгрузить();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		
		СтруктураПолей = Новый Структура("Организация, Ответственный");
		уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураПолей, Отказ, Заголовок);
		СтруктураПолей = Новый Структура("ТС, ДатаВыбытия");
		уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ТС", СтруктураПолей, Отказ, Заголовок);
		
		// проверка на дубли строк
		тблТС = ТС.Выгрузить().Скопировать();
		тблТС.Свернуть("ТС");
		Если тблТС.Количество() < ТС.Количество() Тогда
			ТекстНСТР = НСтр("en='In the tabular section ""Vehicle"" there are duplicate lines (duplicate vehicle)!';ru='В табличной части ""ТС"" присутствуют повторяющиеся строки (дублирование ТС)!'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
		КонецЕсли;
		
		уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
		уатОбщегоНазначенияСервер.ПроверкаСоответствияМестонахожденияТС(ЭтотОбъект, Отказ, "ТС", Заголовок);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьТСиОборудованиеДоВыбытия(Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьРеквизитыТСиОборудования(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		ТСОбъект.ДатаВыбытия = СтрТС.ДатаВыбытия;
		
		ТСОбъект.Организация = Неопределено;
		ТСОбъект.Подразделение = Неопределено;
		ТСОбъект.Колонна = Неопределено;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to record vehicle/equipment ""%1""!';ru='Не удалось записать ТС/оборудование ""%1""!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(СтрТС.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
		КонецПопытки;
		
		мсвДокументов = уатОбщегоНазначения.ПолучитьРегистрационныеДокументы(СтрТС.ТС);
		Для Каждого ТекДокумент Из мсвДокументов Цикл
			ДокументОбъект = ТекДокумент.ПолучитьОбъект();
			ДокументОбъект.Организация   = Неопределено;
			ДокументОбъект.Подразделение = Неопределено;
			
			Попытка 
				ДокументОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ВосстановитьТСиОборудованиеДоВыбытия(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		ТСОбъект.ДатаВыбытия = '00010101';
		
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(СтрТС.ТС, СтрТС.ДатаВыбытия - 1);
		
		ТСОбъект.Организация = МестоТС.Организация;
		ТСОбъект.Подразделение = МестоТС.Подразделение;
		ТСОбъект.Колонна = МестоТС.Колонна;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to record vehicle/equipment ""%1""!';ru='Не удалось записать ТС/оборудование ""%1""!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(СтрТС.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ВосстановитьТСиОборудованиеПередЗаписью(Отказ)
	Для каждого ТекТС Из таблТССсылка Цикл
		ТСОбъект = ТекТС.ТС.ПолучитьОбъект();
		ТСОбъект.ДатаВыбытия = '00010101';
		
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекТС.ТС, ТекТС.ДатаВыбытия - 1);
		
		ТСОбъект.Организация = МестоТС.Организация;
		ТСОбъект.Подразделение = МестоТС.Подразделение;
		ТСОбъект.Колонна = МестоТС.Колонна;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to record vehicle/equipment ""%1""!';ru='Не удалось записать ТС/оборудование ""%1""!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ТекТС.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция ТСВведеныВЭксплуатацию(Отказ)
	Рез = Истина;
	
	Для Каждого ТекСтрока Из ТС Цикл
		Если ТекСтрока.ТС.ДатаВводаВЭксплуатацию = '00010101' ИЛИ ТекСтрока.ДатаВыбытия < ТекСтрока.ТС.ДатаВводаВЭксплуатацию Тогда
			ТекстНСТР = НСтр("en='Vehicle/equipment ""%1"" is not put into operation!';ru='ТС/оборудование ""%1"" не введено в эксплуатацию!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ТекСтрока.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
			
			Рез = Ложь;
		ИначеЕсли ТекСтрока.ТС.ДатаВыбытия <> '00010101' И ТекСтрока.ДатаВыбытия > ТекСтрока.ТС.ДатаВыбытия Тогда
			ТекстНСТР = НСтр("en='Currently registered of vehicle/equipment ""%1"" is decommissioning (decommissioning date: %2)!';ru='Местонахождение ТС/оборудования ""%1"" выбыло из эксплуатации (дата выбытия: %2)!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ТекСтрока.ТС), Формат(ТекСтрока.ТС.ДатаВыбытия, "ДФ = дд.ММ.гггг"));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
			
			Рез = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

Функция ТССоответствуютМестонахождению(Отказ)
	Рез = Истина;
	
	Для Каждого ТекСтрока Из ТС Цикл
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаВыбытия - 1);
		Если МестоТС.Организация <> Организация Тогда
			ТекстНСТР = НСтр("en='Currently registered vehicle/equipment ""%1"" corresponds to document!';ru='Местонахождение ТС/оборудования ""%1"" не соответствует местонахождению по документу!'");
			ТекстНСТР = СтрШаблон(ТекстНСТР, Строка(ТекСтрока.ТС));
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ);
			
			Рез = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

#КонецОбласти


#Область Инициализация

таблТССсылка = Ссылка.ТС.Выгрузить();

#КонецОбласти


#КонецЕсли