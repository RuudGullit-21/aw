
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Элементы.РасходыЗаполнитьПоПарковкам.Видимость = Константы.уатИспользоватьИнтеграциюПаркоматика.Получить();
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	СтруктураПоВалютеДок = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Объект.Дата,
		Новый Структура("Валюта", Объект.ВалютаДокумента));
	КурсВалютыДокумента = СтруктураПоВалютеДок.Курс;
	
	РассчитатьСуммуДокумента();
	ОбновитьВсегоВТЧСервер();
	РасчитатьСуммаНДССервер();
	ВывестиСуммовыеИтогиДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если флВопросЗакрытиеФормы Тогда
		Отказ = Истина;
		Оповещ = Новый ОписаниеОповещения("ПередЗакрытиемВопрос", ЭтотОбъект);
		ПоказатьВопрос(Оповещ, "При проверке корректности заполнения документа возникли предупреждения!
			|Продолжить закрытие формы?", РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПрочиеДоходыРасходы.Доходы") Тогда
		Объект.Расходы.Очистить();
	Иначе
		Объект.Доходы.Очистить();
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДоходы

&НаКлиенте
Процедура ДоходыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекСтрока = Элементы.Доходы.ТекущиеДанные;
		ТекСтрока.ДатаОтражения = Объект.Дата;
		Если Объект.УчитыватьНДС Тогда
			ТекСтрока.СтавкаНДС  = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСуммаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСтавкаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.Доходы.ТекущиеДанные.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура ДоходыЗаказПриИзменении(Элемент)
	ТекСтрока = Элементы.Доходы.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		ЗаказРеквизиты = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначенияРеквизитов(ТекСтрока.Заказ, "Контрагент, ОбъектСтроительства, Маршрут, ВидПеревозки, НаправлениеПеревозки");
		ЗаполнитьЗначенияСвойств(ТекСтрока, ЗаказРеквизиты);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыРасходы

&НаКлиенте
Процедура РасходыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока = Элементы.Расходы.ТекущиеДанные;
		ТекСтрока.ДатаОтражения  = Объект.Дата;
		ТекСтрока.СтатьяРасходов = ПредопределенноеЗначение("Справочник.уатСтатьиРасходов.ОсновнаяСтатьяРасходов");
		Если Объект.УчитыватьНДС Тогда
			ТекСтрока.СтавкаНДС  = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Расходы.ТекущиеДанные;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура РасходыСтавкаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Расходы.ТекущиеДанные;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.Расходы.ТекущиеДанные.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбораТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаказПриИзменении(Элемент)
	ТекСтрока = Элементы.Расходы.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		ЗаказРеквизиты = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначенияРеквизитов(ТекСтрока.Заказ, "Контрагент, ОбъектСтроительства, Маршрут, ВидПеревозки, НаправлениеПеревозки");
		ЗаполнитьЗначенияСвойств(ТекСтрока, ЗаказРеквизиты);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура РедактироватьЦеныИВалюту(Команда)
	
	ОбработатьИзмененияПоКнопкеЦеныИВалюты(Новый ОписаниеОповещения("РедактироватьЦеныИВалютуЗавершение", ЭтотОбъект), Объект.ВалютаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЦеныИВалютуЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ОбновитьВсегоВТЧСервер();
    РассчитатьСуммуДокумента();
	УстановитьВидимость();
    Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьТСВЭксплуатации(Команда)
	Если Объект.Расходы.Количество() = 0 Тогда
		ЗаполнитьТСВЭксплуатацииСервер("Расходы");
	Иначе
		ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьТСВЭксплуатацииОчистить", ЭтотОбъект, Новый Структура("ИмяТЧ", "Расходы"));
		ТекстНСТР = НСтр("en='Clear the tabular section before filling?';ru='Очистить табличную часть перед заполнением?'");
		ПоказатьВопрос(ОписОповещ, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьАмортизацию(Команда)
	Если Объект.Расходы.Количество() = 0 Тогда
		ЗаполнитьАмортизациюСервер();
	Иначе
		ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьАмортизациюОчистить", ЭтотОбъект);
		ТекстНСТР = НСтр("en='Clear the tabular section before filling?';ru='Очистить табличную часть перед заполнением?'");
		ПоказатьВопрос(ОписОповещ, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьТранспортныйНалог(Команда)
	Если Объект.Расходы.Количество() > 0 Тогда
		ОписОповещ = Новый ОписаниеОповещения("РасходыЗаполнитьТранспортныйНалогОчистить", ЭтотОбъект);
		ТекстНСТР = НСтр("en='Clear the tabular section before filling?';ru='Очистить табличную часть перед заполнением?'");
		ПоказатьВопрос(ОписОповещ, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	КонецЕсли;
	
	РасходыЗаполнитьТранспортныйНалогВводПериода();
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьТранспортныйНалогОчистить(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Расходы.Очистить();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	РасходыЗаполнитьТранспортныйНалогВводПериода();
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьТранспортныйНалогВводПериода()
	ДатаЗаполнения = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата());
	
	ПериодЗаполнения = Новый СтандартныйПериод;
	ПериодЗаполнения.ДатаНачала = НачалоГода(НачалоГода(ДатаЗаполнения) - 1); // начало прошлого года
	ПериодЗаполнения.ДатаОкончания = КонецГода(ПериодЗаполнения.ДатаНачала);  // конец прошлого года
	ПериодЗаполнения.Вариант = ВариантСтандартногоПериода.ПрошлыйГод;
	
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода;
	ДиалогПериода.Период = ПериодЗаполнения;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("РасходыЗаполнитьТранспортныйНалогВводПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьТранспортныйНалогВводПериодаЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТранспортныйНалогСервер(Результат);
	
	Для Каждого ТекСтрока Из Объект.Расходы Цикл
		РассчитатьСуммуНДС(ТекСтрока);
	КонецЦикла;
	РассчитатьСуммуДокумента();
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьДату(Команда)
	ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьДатуВводДаты", ЭтотОбъект, Новый Структура("ИмяТЧ", "Расходы"));
	ТекстНСТР = НСтр("en='Fill in date in all lines';ru='Заполнить дату во всех строках'");
	ПоказатьВводДаты(ОписОповещ, Объект.Дата, ТекстНСТР, ЧастиДаты.Дата);
КонецПроцедуры

&НаКлиенте
Процедура РасходыЗаполнитьСтатью(Команда)
	ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьСтатьюВыбор", ЭтотОбъект, Новый Структура("ИмяТЧ", "Расходы"));
	ОткрытьФорму("Справочник.уатСтатьиРасходов.ФормаВыбора",,,,,, ОписОповещ);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыЗаполнитьТСВЭксплуатации(Команда)
	Если Объект.Доходы.Количество() = 0 Тогда
		ЗаполнитьТСВЭксплуатацииСервер("Доходы");
	Иначе
		ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьТСВЭксплуатацииОчистить", ЭтотОбъект, Новый Структура("ИмяТЧ", "Доходы"));
		ТекстНСТР = НСтр("en='Clear the tabular section before filling?';ru='Очистить табличную часть перед заполнением?'");
		ПоказатьВопрос(ОписОповещ, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоходыЗаполнитьДату(Команда)
	ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьДатуВводДаты", ЭтотОбъект, Новый Структура("ИмяТЧ", "Доходы"));
	ТекстНСТР = НСтр("en='Fill in date in all lines';ru='Заполнить дату во всех строках'");
	ПоказатьВводДаты(ОписОповещ, Объект.Дата, ТекстНСТР, ЧастиДаты.Дата);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыЗаполнитьСтатью(Команда)
	ОписОповещ = Новый ОписаниеОповещения("ЗаполнитьСтатьюВыбор", ЭтотОбъект, Новый Структура("ИмяТЧ", "Доходы"));
	ОткрытьФорму("Справочник.уатСтатьиДоходов.ФормаВыбора",,,,,, ОписОповещ);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ОбновитьВсегоВТЧСервер()
	Для Каждого СтрокаТабличнойЧасти Из Объект.Доходы Цикл
		СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
			+ ?(Объект.УчитыватьНДС И НЕ Объект.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
	КонецЦикла;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Расходы Цикл
		СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
			+ ?(Объект.УчитыватьНДС И НЕ Объект.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПрочиеДоходыРасходы.Доходы") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДоходы;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРасходы;
	КонецЕсли;
	
	// Колонки налога показываем только тогда, когда его учитываем.
	Элементы.ДоходыСтавкаНДС.Видимость = Объект.УчитыватьНДС;
	Элементы.ДоходыСуммаНДС.Видимость = Объект.УчитыватьНДС;
	Элементы.ДоходыВсего.Видимость = Объект.УчитыватьНДС;
	Элементы.РасходыСтавкаНДС.Видимость = Объект.УчитыватьНДС;
	Элементы.РасходыСуммаНДС.Видимость = Объект.УчитыватьНДС;
	Элементы.РасходыВсего.Видимость = Объект.УчитыватьНДС;
	
	ВывестиСуммовыеИтогиДокумента();
КонецПроцедуры

// Процедура выполняет пересчет в табличной части документа после изменений 
// в форме "Цены и валюта".Выполняется пересчет колонок: цена, скидка, сумма,
// сумма НДС, всего.
//
&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалюты(Знач Оповещение, Знач ВалютаРасчетовПередИзменением, ПересчитатьЦены = Ложь)
	
	// 1. Формируем структуру параметров для заполнения формы "Цены и Валюта".
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаДокумента",		  Объект.ВалютаДокумента);
	//СтруктураПараметров.Вставить("Курс",				  Объект.КурсВзаиморасчетов);
	//СтруктураПараметров.Вставить("Кратность",			  Объект.КратностьВзаиморасчетов);
	//СтруктураПараметров.Вставить("Контрагент",			  Объект.Контрагент);
	//СтруктураПараметров.Вставить("Договор",				  Объект.ДоговорКонтрагента);
	СтруктураПараметров.Вставить("Организация",			  Объект.Организация);
	СтруктураПараметров.Вставить("ДатаДокумента",		  Объект.Дата);
	СтруктураПараметров.Вставить("ПерезаполнитьЦены",	  Ложь);
	СтруктураПараметров.Вставить("ПересчитатьЦены",		  ПересчитатьЦены);
	СтруктураПараметров.Вставить("БылиВнесеныИзменения",  Ложь);
	СтруктураПараметров.Вставить("СуммаВключаетНДС",      Объект.СуммаВключаетНДС);
	СтруктураПараметров.Вставить("НалогообложениеНДС",	  Объект.УчитыватьНДС);
	// Для объедининенного решения с БП 3
	СтруктураПараметров.Вставить("ДокументБезНДС",       НЕ Объект.УчитыватьНДС);
	СтруктураЦеныИВалюта = Неопределено;

	Если НЕ ПравоРедактированиеДокумента() Тогда
		СтруктураПараметров.Вставить("ТолькоПросмотр", Истина);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаЦеныИВалюта", СтруктураПараметров,,,,,
		Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение", ЭтотОбъект,
		Новый Структура("ВалютаРасчетовПередИзменением, Оповещение", ВалютаРасчетовПередИзменением, Оповещение)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена ИЛИ НЕ ПравоРедактированиеДокумента() Тогда
		Возврат;
	КонецЕсли;
	
    ВалютаРасчетовПередИзменением = ДополнительныеПараметры.ВалютаРасчетовПередИзменением;
    Оповещение = ДополнительныеПараметры.Оповещение;
        
    // Для объедининенного решения с БП 3
        
    // 2. Открываем форму "Цены и Валюта".
    СтруктураЦеныИВалюта = Результат;
    
    // 3. Перезаполняем табличную часть "Номенклатура", если были внесены изменения в форме "Цены и Валюта".
    Если ТипЗнч(СтруктураЦеныИВалюта) = Тип("Структура") Тогда
        
        // Для объедининенного решения с БП 3
        уатОбщегоНазначенияКлиент.ЗаполнитьСтруктуруЦеныИВалютыДляБП3(СтруктураЦеныИВалюта,Объект.ВалютаДокумента,ВалютаРасчетовПередИзменением,Объект.УчитыватьНДС,Объект.СуммаВключаетНДС);
        // Для объедининенного решения с БП 3
        Если СтруктураЦеныИВалюта.Свойство("ВалютаДокумента") И СтруктураЦеныИВалюта.Свойство("КурсРасчетов") И СтруктураЦеныИВалюта.Свойство("КратностьРасчетов")
            И СтруктураЦеныИВалюта.Свойство("СуммаВключаетНДС") И  СтруктураЦеныИВалюта.Свойство("НалогообложениеНДС") Тогда
            Объект.ВалютаДокумента		   = СтруктураЦеныИВалюта.ВалютаДокумента;
			КурсВалютыДокумента            = СтруктураЦеныИВалюта.Курс;
			//Объект.КратностьВзаиморасчетов = СтруктураЦеныИВалюта.КратностьРасчетов;
            Объект.СуммаВключаетНДС		   = СтруктураЦеныИВалюта.СуммаВключаетНДС;
            Объект.УчитыватьНДС			   = СтруктураЦеныИВалюта.НалогообложениеНДС;
        КонецЕсли;
        
        // Пересчитываем сумму если изменился признак Налогообложение НДС.
        Если СтруктураЦеныИВалюта.Свойство("НалогообложениеНДС") И СтруктураЦеныИВалюта.Свойство("ПредНалогообложениеНДС") Тогда
            Если СтруктураЦеныИВалюта.НалогообложениеНДС <> СтруктураЦеныИВалюта.ПредНалогообложениеНДС Тогда
                ЗаполнитьСтавкуНДСПоНалогообложениеНДС();
            КонецЕсли;
        КонецЕсли;
		
		 // Пересчитываем цены по валюте.
        Если СтруктураЦеныИВалюта.Свойство("ПересчитатьЦены") Тогда
            Если СтруктураЦеныИВалюта.ПересчитатьЦены Тогда	
                ПересчитатьЦеныТабличнойЧастиПоВалюте(ВалютаРасчетовПередИзменением, "Доходы");
				ПересчитатьЦеныТабличнойЧастиПоВалюте(ВалютаРасчетовПередИзменением, "Расходы");
            КонецЕсли;
		КонецЕсли;
		
        // Пересчитываем сумму если изменился признак "Сумма включает НДС".
        Если СтруктураЦеныИВалюта.Свойство("СуммаВключаетНДС") И СтруктураЦеныИВалюта.Свойство("ПредСуммаВключаетНДС") Тогда
            Если СтруктураЦеныИВалюта.СуммаВключаетНДС <> СтруктураЦеныИВалюта.ПредСуммаВключаетНДС Тогда
                ПересчитатьСуммуТабличнойЧастиПоФлагуСуммаВключаетНДС("Доходы");
				ПересчитатьСуммуТабличнойЧастиПоФлагуСуммаВключаетНДС("Расходы");
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	
	ОбновитьВсегоВТЧСервер();
    ВывестиСуммовыеИтогиДокумента();
	
	Если Не Оповещение = Неопределено Тогда 
		ВыполнитьОбработкуОповещения(Оповещение);
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры // ОбработатьИзмененияПоКнопкеЦеныИВалюты()

// Процедура заполняет Ставку НДС в табличной части по системе налогообложения.
// 
&НаСервере
Процедура ЗаполнитьСтавкуНДСПоНалогообложениеНДС()
	
	СтавкаНДСПоУмолчанию = Перечисления.СтавкиНДС.ПустаяСсылка();
		
	Для каждого СтрокаТабличнойЧасти Из Объект.Доходы Цикл
		Если Объект.УчитыватьНДС Тогда
			СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС, 
			СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
			СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС = СтавкаНДСПоУмолчанию;
			СтрокаТабличнойЧасти.СуммаНДС = 0;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из Объект.Расходы Цикл
		Если Объект.УчитыватьНДС Тогда
			СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС, 
			СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
			СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС = СтавкаНДСПоУмолчанию;
			СтрокаТабличнойЧасти.СуммаНДС = 0;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьСтавкуНДСПоНалогообложениеНДС()

&НаСервере
Процедура ВывестиСуммовыеИтогиДокумента()
	
	ВсегоНДС = Объект.Доходы.Итог("СуммаНДС") + Объект.Расходы.Итог("СуммаНДС");
	
	Если Объект.УчитыватьНДС Тогда 
		Если Объект.СуммаВключаетНДС Тогда 
			НадписьВсегоНДС = НСтр("en='VAT amount';ru='НДС в сумме'") + ":";
		Иначе 
			НадписьВсегоНДС = НСтр("en='VAT from above';ru='НДС сверху'") + ":";
		КонецЕсли;
		НадписьВсего = НСтр("en='Total including VAT';ru='Всего с НДС'");
		Элементы.СтраницыИтогов.ТекущаяСтраница = Элементы.ИтогоУчетНДС;
	Иначе 
		НадписьВсего = НСтр("en='Total';ru='Всего'");
		Элементы.СтраницыИтогов.ТекущаяСтраница = Элементы.ИтогоБезНДС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ВалютаДокумента) Или Объект.ВалютаДокумента = мВалютаРегламентированногоУчета Тогда 
		НадписьКурс = "(1.0000)";
		Элементы.НадписьКурс.Видимость = Ложь;
		Элементы.НадписьКурс2.Видимость = Ложь;
	Иначе
		НадписьКурс = "(" + Формат(КурсВалютыДокумента, "ЧДЦ=4; ЧРД=.; ЧН=0.0000; ЧГ=0") + ")";
		Элементы.НадписьКурс.Видимость = Истина;
		Элементы.НадписьКурс2.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПравоРедактированиеДокумента()
	Рез = ПравоДоступа("Редактирование", Метаданные.Документы.уатПрочиеДоходыРасходы);
	Возврат Рез;
КонецФункции

&НаСервере
Процедура РассчитатьСуммуДокумента()
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Объект.СуммаДокумента = уатОбщегоНазначенияТиповыеСервер.уатПолучитьСуммуДокументаСНДС(ДокОбъект, "Доходы") + уатОбщегоНазначенияТиповыеСервер.уатПолучитьСуммуДокументаСНДС(ДокОбъект, "Расходы");
КонецПроцедуры

// Рассчитывается сумма НДС в строке табличной части.
//
&НаКлиенте
Процедура РассчитатьСуммуНДС(СтрокаТабличнойЧасти)
	
	СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	
	СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС, 
	СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
	СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	
КонецПроцедуры // РассчитатьСуммуНДС()

&НаКлиенте
Процедура РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти)
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
		+ ?(Объект.УчитыватьНДС И НЕ Объект.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТСВЭксплуатацииОчистить(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект[ДопПараметры.ИмяТЧ].Очистить();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТСВЭксплуатацииСервер(ДопПараметры.ИмяТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАмортизациюОчистить(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Расходы.Очистить();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаполнитьАмортизациюСервер();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТСВЭксплуатацииСервер(ИмяТЧ)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатМестонахождениеТССрезПоследних.ТС КАК ТС
	|ИЗ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&Дата) КАК уатМестонахождениеТССрезПоследних");
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	ТекстУсловие = "";
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		Запрос.УстановитьПараметр("Колонна", Объект.Колонна);
	КонецЕсли;
	Если НЕ ПустаяСтрока(ТекстУсловие) Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	" + Сред(ТекстУсловие, 4);
	КонецЕсли;
	
	ВыборкаТС = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаТС.Следующий() Цикл
		НоваяСтрока = Объект[ИмяТЧ].Добавить();
		НоваяСтрока.ДатаОтражения = Объект.Дата;
		НоваяСтрока.ТС = ВыборкаТС.ТС;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАмортизациюСервер()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатМестонахождениеТССрезПоследних.ТС КАК ТС,
	|	уатТСАмортизация.Сумма КАК Сумма
	|ИЗ
	|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&Дата, ) КАК уатМестонахождениеТССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.уатТС.Амортизация КАК уатТСАмортизация
	|		ПО уатМестонахождениеТССрезПоследних.ТС = уатТСАмортизация.Ссылка
	|			И (уатТСАмортизация.Период = НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ))");
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	ТекстУсловие = "";
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		ТекстУсловие = ТекстУсловие + " И уатМестонахождениеТССрезПоследних.Колонна = &Колонна";
		Запрос.УстановитьПараметр("Колонна", Объект.Колонна);
	КонецЕсли;
	Если НЕ ПустаяСтрока(ТекстУсловие) Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	" + Сред(ТекстУсловие, 4);
	КонецЕсли;
	
	ВыборкаТС = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаТС.Следующий() Цикл
		НоваяСтрока = Объект.Расходы.Добавить();
		НоваяСтрока.ДатаОтражения = Объект.Дата;
		НоваяСтрока.ТС = ВыборкаТС.ТС;
		НоваяСтрока.Сумма = ВыборкаТС.Сумма;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатуВводДаты(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Объект[ДопПараметры.ИмяТЧ] Цикл
		ТекСтрока.ДатаОтражения = Результат;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатьюВыбор(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Объект[ДопПараметры.ИмяТЧ] Цикл
		Если ДопПараметры.ИмяТЧ = "Доходы" Тогда
			ТекСтрока.СтатьяДоходов = Результат;
		Иначе
			ТекСтрока.СтатьяРасходов = Результат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммуТабличнойЧастиПоФлагуСуммаВключаетНДС(ИмяТЧ)
	уатОбщегоНазначенияСервер.ПересчитатьСуммуТабличнойЧастиПоФлагуСуммаВключаетНДС(Объект[ИмяТЧ], Объект.СуммаВключаетНДС);
КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦеныТабличнойЧастиПоВалюте(ВалютаРасчетовПередИзменением, ИмяТЧ)
	уатОбщегоНазначенияСервер.ПересчитатьЦеныТабличнойЧастиПоВалюте(Объект, ВалютаРасчетовПередИзменением, ИмяТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопрос(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		флВопросЗакрытиеФормы = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТранспортныйНалогСервер(ПериодЗаполнения)
	ДопПараметры = Новый Структура("ПериодКвартал",
		ПериодЗаполнения.ДатаНачала = НачалоКвартала(ПериодЗаполнения.ДатаОкончания)
		И ПериодЗаполнения.ДатаОкончания = КонецКвартала(ПериодЗаполнения.ДатаНачала));
		
	тблТС = Отчеты.уатРасчетнаяВедомостьПоТранспортномуНалогу.ПолучитьДанныеПоТранспортномуНалогу(ПериодЗаполнения.ДатаНачала,
		Объект.Организация, Объект.Подразделение, Объект.Колонна, ДопПараметры);
		
	Если Объект.УчитыватьНДС Тогда
		СтавкаНДСпоУмолч = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
	Иначе
		СтавкаНДСпоУмолч = Неопределено;
	КонецЕсли;
		
	Для Каждого ТекСтрока Из тблТС Цикл
		Если ТекСтрока.СуммаПлатежаГод = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаРасходы = Объект.Расходы.Добавить();
		НоваяСтрокаРасходы.ДатаОтражения = Объект.Дата;
		НоваяСтрокаРасходы.СтатьяРасходов = Справочники.уатСтатьиРасходов.ТранспортныйНалог;
		НоваяСтрокаРасходы.ТС = ТекСтрока.ТС;
		НоваяСтрокаРасходы.Сумма = ТекСтрока.СуммаПлатежаГод;
		НоваяСтрокаРасходы.СтавкаНДС = СтавкаНДСпоУмолч;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПарковкам(Команда)
	Если Объект.Расходы.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Clear refueling table before download?';ru='Очистить таблицу разходов перед загрузкой?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоПарковкамВопрос", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоПарковкамПродолжение();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПарковкамПродолжение()
	Попытка
		ТекущийПериод = Новый СтандартныйПериод;
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьПоПарковкамЗавершение", ЭтотОбъект);
		Диалог = Новый ДиалогРедактированияСтандартногоПериода;
		Диалог.Период = ТекущийПериод;
		Диалог.Показать(Обработчик);
	Исключение
		ТекстНСТР = НСтр("en='Error while filling tabular section ""Refueling"": ';ru='Ошибка при заполнении табличной части ""Расходы"": '");
		ТекстНСТР = ТекстНСТР + ОписаниеОшибки();
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПарковкамЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачала    = НачалоДня(Результат.ДатаНачала);
	ДатаОкончания = КонецДня(Результат.ДатаОкончания);

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Запущена", ДатаНачала);
	Запрос.УстановитьПараметр("Завершена", ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатПарковка.ИтоговаяСтоимость КАК ИтоговаяСтоимость,
	               |	уатПарковка.ТС КАК ТС,
	               |	уатПарковка.Организация КАК Организация,
	               |	уатПарковка.Подразделение КАК Подразделение,
	               |	уатПарковка.Запущена КАК Запущена
	               |ИЗ
	               |	Документ.уатПарковка КАК уатПарковка
	               |ГДЕ
	               |	уатПарковка.Организация = &Организация
	               |	И уатПарковка.Подразделение = &Подразделение
	               |	И уатПарковка.Запущена >= &Запущена
	               |	И уатПарковка.Запущена <= &Завершена
	               |	И НЕ уатПарковка.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока =  Объект.Расходы.Добавить();
		НоваяСтрока.ДатаОтражения	 = Выборка.Запущена;
		НоваяСтрока.СтатьяРасходов   = Справочники.уатСтатьиРасходов.Парковки;
		НоваяСтрока.ТС               = Выборка.ТС;
		НоваяСтрока.Сумма            = Выборка.ИтоговаяСтоимость;
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	ОбновитьВсегоВТЧСервер();
	ВывестиСуммовыеИтогиДокумента();
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПарковкамВопрос(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Расходы.Очистить();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоПарковкамПродолжение();
КонецПроцедуры

&НаСервере
Процедура РасчитатьСуммаНДССервер()
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Расходы Цикл
		СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС, 
		СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Доходы Цикл
		СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС, 
		СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураОтбораТС()
	
	СтруктураОтбора = Новый Структура();
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СтруктураОтбора.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураОтбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		СтруктураОтбора.Вставить("Колонна", Объект.Колонна);
	КонецЕсли;
	
	Возврат СтруктураОтбора;
	
КонецФункции

#КонецОбласти
