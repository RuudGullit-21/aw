#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// необходима для подключения внешних ПФ
	Заглушка = Истина;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	мЗапрос = Новый Запрос;
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийПрочиеДоходыРасходы.Доходы Тогда
		мЗапрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатПрочиеДоходыРасходы.ДатаОтражения КАК Период,
		|	уатПрочиеДоходыРасходы.Ссылка КАК Регистратор,
		|	уатПрочиеДоходыРасходы.Ссылка.Организация КАК Организация,
		|	уатПрочиеДоходыРасходы.Ссылка.Подразделение КАК Подразделение,
		|	уатПрочиеДоходыРасходы.Ссылка.Колонна КАК Колонна,
		|	уатПрочиеДоходыРасходы.ТС КАК ТС,
		|	уатПрочиеДоходыРасходы.СтатьяДоходов КАК СтатьяДоходов,
		|	уатПрочиеДоходыРасходы.Сумма КАК Сумма,
		|	уатПрочиеДоходыРасходы.Сумма КАК СуммаРегл,
		|	уатПрочиеДоходыРасходы.Сумма КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА уатПрочиеДоходыРасходы.Ссылка.УчитыватьНДС
		|			ТОГДА уатПрочиеДоходыРасходы.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА уатПрочиеДоходыРасходы.Ссылка.УчитыватьНДС
		|			ТОГДА уатПрочиеДоходыРасходы.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСУпр,
		|	уатПрочиеДоходыРасходы.Заказ КАК Заказ,
		|	уатПрочиеДоходыРасходы.Заказ.Ответственный КАК Менеджер,
		|	уатПрочиеДоходыРасходы.Контрагент КАК Контрагент,
		|	уатПрочиеДоходыРасходы.ОбъектСтроительства КАК ОбъектСтроительства,
		|	уатПрочиеДоходыРасходы.Маршрут КАК Маршрут,
		|	уатПрочиеДоходыРасходы.ВидПеревозки КАК ВидПеревозки,
		|	уатПрочиеДоходыРасходы.НаправлениеПеревозки КАК НаправлениеПеревозки
		|ИЗ
		|	Документ.уатПрочиеДоходыРасходы.Доходы КАК уатПрочиеДоходыРасходы
		|ГДЕ
		|	уатПрочиеДоходыРасходы.Ссылка = &Ссылка";
	Иначе
		мЗапрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатПрочиеДоходыРасходы.ДатаОтражения КАК Период,
		|	уатПрочиеДоходыРасходы.Ссылка КАК Регистратор,
		|	уатПрочиеДоходыРасходы.Ссылка.Организация КАК Организация,
		|	уатПрочиеДоходыРасходы.Ссылка.Подразделение КАК Подразделение,
		|	уатПрочиеДоходыРасходы.Ссылка.Колонна КАК Колонна,
		|	уатПрочиеДоходыРасходы.ТС КАК ТС,
		|	уатПрочиеДоходыРасходы.СтатьяРасходов,
		|	уатПрочиеДоходыРасходы.Сумма КАК Сумма,
		|	уатПрочиеДоходыРасходы.Сумма КАК СуммаРегл,
		|	уатПрочиеДоходыРасходы.Сумма КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА уатПрочиеДоходыРасходы.Ссылка.УчитыватьНДС
		|			ТОГДА уатПрочиеДоходыРасходы.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА уатПрочиеДоходыРасходы.Ссылка.УчитыватьНДС
		|			ТОГДА уатПрочиеДоходыРасходы.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСУпр,
		|	уатПрочиеДоходыРасходы.Заказ,
		|	уатПрочиеДоходыРасходы.Заказ.Ответственный КАК Менеджер,
		|	уатПрочиеДоходыРасходы.Контрагент КАК Контрагент,
		|	уатПрочиеДоходыРасходы.ОбъектСтроительства КАК ОбъектСтроительства,
		|	уатПрочиеДоходыРасходы.Маршрут КАК Маршрут,
		|	уатПрочиеДоходыРасходы.ВидПеревозки КАК ВидПеревозки,
		|	уатПрочиеДоходыРасходы.НаправлениеПеревозки КАК НаправлениеПеревозки
		|ИЗ
		|	Документ.уатПрочиеДоходыРасходы.Расходы КАК уатПрочиеДоходыРасходы
		|ГДЕ
		|	уатПрочиеДоходыРасходы.Ссылка = &Ссылка";
	КонецЕсли;
	
	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ТаблицаДокумента = мЗапрос.Выполнить().Выгрузить();
	
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Если уатОбщегоНазначенияТиповые.уатЕстьКонстанта("ВалютаУправленческогоУчета") Тогда 
		ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	Иначе
		ВалютаУпр = ВалютаРегл;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаДокумента Цикл
		СуммаВсего = ТекСтрока.Сумма + ?(ДокументСсылка.УчитыватьНДС И НЕ ДокументСсылка.СуммаВключаетНДС, ТекСтрока.СуммаНДС, 0);		
		
		ТекСтрока.СуммаРегл   = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаВсего,
			ДокументСсылка.ВалютаДокумента, ВалютаРегл, ДокументСсылка.Дата, ДокументСсылка.Дата);
		ТекСтрока.СуммаУпр    = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаВсего,
			ДокументСсылка.ВалютаДокумента, ВалютаУпр, ДокументСсылка.Дата, ДокументСсылка.Дата);
		ТекСтрока.СуммаНДС    = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДС,
			ДокументСсылка.ВалютаДокумента, ВалютаРегл, ДокументСсылка.Дата, ДокументСсылка.Дата);
		ТекСтрока.СуммаНДСУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДСУпр,
			ДокументСсылка.ВалютаДокумента, ВалютаУпр, ДокументСсылка.Дата, ДокументСсылка.Дата);
	КонецЦикла;
	
	уатРасчетыПоТарифам_уэ.РаспределитьДоходыРасходыМеждуЗаказами(ТаблицаДокумента);
	
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийПрочиеДоходыРасходы.Доходы Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходы", ТаблицаДокумента);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасходы", ТаблицаДокумента);
	КонецЕсли;
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заглушка = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли