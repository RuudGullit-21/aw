
#Область Переменные_формы

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//флПодразделениеЗаполнено = ЗначениеЗаполнено(Объект.Подразделение);
	
	//// сбрасываем заполненное по умолчанию подразделение
	//Если НЕ флПодразделениеЗаполнено И Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Подразделение) Тогда
	//	Объект.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	//КонецЕсли;
	
	// Установка реквизитов формы.
	Если ЗначениеЗаполнено(Объект.КоличествоМесяцев) Тогда
		ВариантПериодаРаспределения = 1;
	КонецЕсли;
	
	Если Объект.НачалоПериода = '00010101' Тогда
		Объект.НачалоПериода = КонецМесяца(ТекущаяДата()) + 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПериодаРаспределенияПриИзменении(Элемент)
	Если ВариантПериодаРаспределения = 0 Тогда
		Объект.КоличествоМесяцев = 0;
	Иначе
		Объект.КонецПериода = '00010101';
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Если Объект.Расходы.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Before filling out the document table is cleared. Do you want to continue?';ru='Перед заполнением таблица документа будет очищена, а проведение документа отменено. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОстаткамЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоОстаткамСервер();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    Иначе
        Объект.Расходы.Очистить();
		Модифицированность = Истина;
    КонецЕсли; 	
    
    ЗаполнитьПоОстаткамСервер();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамСервер()
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатРасходыОстатки.Организация КАК Организация,
	|	уатРасходыОстатки.Контрагент КАК Контрагент,
	|	уатРасходыОстатки.ТС КАК ТС,
	|	уатРасходыОстатки.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатРасходыОстатки.Заказ КАК Заказ,
	|	уатРасходыОстатки.СтатьяРасходов КАК СтатьяРБП,
	|	уатРасходыОстатки.СтатьяРасходов.СтатьяРасходов КАК СтатьяРасходов,
	|	уатРасходыОстатки.Маршрут КАК Маршрут,
	|	уатРасходыОстатки.ВидПеревозки КАК ВидПеревозки,
	|	уатРасходыОстатки.НаправлениеПеревозки КАК НаправлениеПеревозки,
	|	уатРасходыОстатки.СуммаУпрОстаток КАК Сумма,
	|	уатРасходыОстатки.СуммаРеглОстаток КАК СуммаРегл,
	|	уатРасходыОстатки.СуммаНДСОстаток КАК СуммаНДС,
	|	уатРасходыОстатки.СуммаНДСУпрОстаток КАК СуммаНДСУпр,
	|	уатРасходыОстатки.Подразделение КАК Подразделение,
	|	уатРасходыОстатки.Колонна КАК Колонна
	|ИЗ
	|	РегистрНакопления.уатРасходы.Остатки(
	|			,
	|			СтатьяРасходов.РаспределятьНаРБП
	|				И Организация = &Организация
	|				И Колонна = &Колонна
	|				И Подразделение = &Подразделение) КАК уатРасходыОстатки
	|ГДЕ
	|	(уатРасходыОстатки.СуммаУпрОстаток > 0
	|			ИЛИ уатРасходыОстатки.СуммаРеглОстаток > 0)");
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Колонна", Объект.Колонна);
	
	тблРасходыРБП = Запрос.Выполнить().Выгрузить();
	
	Объект.Расходы.Загрузить(тблРасходыРБП);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Если Объект.Расходы.Количество() Тогда
		ТекстНСТР = НСтр("en='Tabular section is not empty! Continue?';ru='Табличная часть не пустая! Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьЗавершение", ЭтотОбъект), ТекстНСТР,
			РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, НСтр("en='Clear the table';ru='Очистка таблицы'"));
        Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Расходы.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала    = Объект.НачалоПериода;
	ДиалогПериода.Период.ДатаОкончания = Объект.КонецПериода;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	    
	Если Период <> Неопределено Тогда
		Объект.НачалоПериода = Период.ДатаНачала;
		Объект.КонецПериода  = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.КонецПериода.Видимость = (ВариантПериодаРаспределения = 0);
	Элементы.НастройкаПериода.Видимость = (ВариантПериодаРаспределения = 0);
	Элементы.КоличествоМесяцев.Видимость = (ВариантПериодаРаспределения = 1);
КонецПроцедуры

#КонецОбласти
