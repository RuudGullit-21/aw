
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	НациональнаяВалюта = мВалютаРегламентированногоУчета;
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("Валюта", НациональнаяВалюта));
	КурсНациональнаяВалюта = СтруктураПоВалюте.Курс;
	КратностьНациональнаяВалюта = СтруктураПоВалюте.Кратность;
	
	Если Параметры.Свойство("СтруктураРеквизитов") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.СтруктураРеквизитов);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияВеса = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияВеса();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияВеса) Тогда
		Элементы.ВесТары.Заголовок = НСтр("en='Tare weight';ru='Вес тары'") + ", " + ПредставлениеЕдиницыИзмеренияВеса;
		Элементы.ВесБрутто.Заголовок = НСтр("en='Weight';ru='Вес'") + ", " + ПредставлениеЕдиницыИзмеренияВеса;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияОбъема = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияОбъема();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияОбъема) Тогда
		Элементы.Объем.Заголовок = НСтр("en='Volume';ru='Объем'") + ", " + ПредставлениеЕдиницыИзмеренияОбъема;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъемНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РассчитатьОбъем();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесТарыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбновитьВесТарыСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьЦеныИВалюту(Команда)
	ОбработатьИзмененияПоКнопкеЦеныИВалюты(Новый ОписаниеОповещения("РедактироватьЦеныИВалютуЗавершение", ЭтотОбъект), Валюта);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЦеныИВалютуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события нажатия кнопки ОК.
//
Процедура КомандаОК(Команда)
	
	СтруктураРеквизитов = Новый Структура;
	
	СтруктураРеквизитов.Вставить("Валюта", Валюта);
	СтруктураРеквизитов.Вставить("ВесБрутто", ВесБрутто);
	СтруктураРеквизитов.Вставить("ВесТары", ВесТары);
	СтруктураРеквизитов.Вставить("ВидУпаковки", ВидУпаковки);
	СтруктураРеквизитов.Вставить("Высота", ВысотаГруза);
	СтруктураРеквизитов.Вставить("Длина", ДлинаГруза);
	СтруктураРеквизитов.Вставить("КоличествоМест", КоличествоМест);
	СтруктураРеквизитов.Вставить("Комментарий", Комментарий);
	СтруктураРеквизитов.Вставить("Наименование", Наименование);
	СтруктураРеквизитов.Вставить("Объем", Объем);
	СтруктураРеквизитов.Вставить("ОписаниеГруза", ОписаниеГруза);
	СтруктураРеквизитов.Вставить("Родитель", Родитель);
	СтруктураРеквизитов.Вставить("Стоимость", Стоимость);
	СтруктураРеквизитов.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	СтруктураРеквизитов.Вставить("УчитыватьНДС", УчитыватьНДС);
	СтруктураРеквизитов.Вставить("Ширина", ШиринаГруза);
	
	Закрыть(СтруктураРеквизитов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	// Сформируем надпись цены и валюты.
	СтруктураНадписи = Новый Структура(
		"ВалютаДокумента, Курс, СуммаВключаетНДС, УчитыватьНДС",
		Валюта, 
		ПолучитьКурсКратностьВалюты(Валюта).Курс,
		СуммаВключаетНДС, 
		УчитыватьНДС
	);
	
	ЦеныИВалюта = СформироватьНадписьЦеныИВалюта(СтруктураНадписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКурсКратностьВалюты(Валюта)
	ВалютаРасчетовКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("Валюта", Валюта));
	Если ВалютаРасчетовКурсКратность.Курс = NULL ИЛИ НЕ ЗначениеЗаполнено(ВалютаРасчетовКурсКратность.Курс) Тогда
		ВалютаРасчетовКурсКратность.Курс = 1;
	КонецЕсли;
	Если ВалютаРасчетовКурсКратность.Кратность = NULL ИЛИ НЕ ЗначениеЗаполнено(ВалютаРасчетовКурсКратность.Кратность) Тогда
		ВалютаРасчетовКурсКратность.Кратность = 1;
	КонецЕсли;
		
	Возврат ВалютаРасчетовКурсКратность;
КонецФункции

// Процедура выполняет пересчет в табличной части документа после изменений 
// в форме "Цены и валюта".Выполняется пересчет колонок: цена, скидка, сумма,
// сумма НДС, всего.
//
&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалюты(Знач Оповещение, Знач ВалютаРасчетовПередИзменением, ПересчитатьЦены = Ложь)
	
	// 1. Формируем структуру параметров для заполнения формы "Цены и Валюта".
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаДокумента",		  Валюта);
	СтруктураПараметров.Вставить("ДоступностьВалютыДокумента", Истина);
	//СтруктураПараметров.Вставить("ИзменениеВалюты",		  Истина);
	//СтруктураПараметров.Вставить("Контрагент",			  Объект.Контрагент);
	//СтруктураПараметров.Вставить("Организация",			  Объект.Организация);
	//СтруктураПараметров.Вставить("Договор",				  Новый Структура("ВалютаВзаиморасчетов", Объект.Валюта));
	СтруктураКурсы = уатОбщегоНазначенияСервер.ПолучитьКурсыВалют(Валюта, Валюта, ТекущаяДата());
	СтруктураПараметров.Вставить("Курс",				  СтруктураКурсы.Курс);
	СтруктураПараметров.Вставить("Кратность",			  СтруктураКурсы.Кратность);
	СтруктураПараметров.Вставить("ДатаДокумента",		  ТекущаяДата());
	СтруктураПараметров.Вставить("ПерезаполнитьЦены",	  Ложь);
	СтруктураПараметров.Вставить("ПересчитатьЦены",		  ПересчитатьЦены);
	СтруктураПараметров.Вставить("БылиВнесеныИзменения",  Ложь);
	СтруктураПараметров.Вставить("СуммаВключаетНДС",      СуммаВключаетНДС);
	СтруктураПараметров.Вставить("НалогообложениеНДС",	  УчитыватьНДС);
	// Для объедининенного решения с БП 3
	СтруктураПараметров.Вставить("ДокументБезНДС",        НЕ УчитыватьНДС);
	// Для объедининенного решения с БП 3

	// 2. Открываем форму "Цены и Валюта".
	//ОткрытьФорму("ОбщаяФорма.ФормаЦеныИВалюта", СтруктураПараметров,,,,,
	//	Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение", ЭтотОбъект,
	//	Новый Структура("ВалютаРасчетовПередИзменением, Оповещение", ВалютаРасчетовПередИзменением, Оповещение)),
	//	РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	ФормаЦеныВалюта = ПолучитьФорму("ОбщаяФорма.ФормаЦеныИВалюта", СтруктураПараметров);
	ФормаЦеныВалюта.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение",
		ЭтотОбъект, Новый Структура("ВалютаРасчетовПередИзменением, Оповещение", ВалютаРасчетовПередИзменением, Оповещение));
	ФормаЦеныВалюта.Открыть();
	
	ФормаЦеныВалюта.Элементы.Валюта.Заголовок = НСтр("en='Payment currency';ru='Валюта расчетов'");
	
	ФормаЦеныВалюта.Элементы.ВалютаДокумента.Видимость = Истина;
	ФормаЦеныВалюта.Элементы.Валюта.ТолькоПросмотр = Ложь;
	ФормаЦеныВалюта.Элементы.ВалютаКурсКратностьРасчетов.Видимость = Ложь;	
	
КонецПроцедуры // ОбработатьИзмененияПоКнопкеЦеныИВалюты()

&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРасчетовПередИзменением = ДополнительныеПараметры.ВалютаРасчетовПередИзменением;
	Оповещение = ДополнительныеПараметры.Оповещение;
	
	СтруктураЦеныИВалюта = Результат;
	
	Валюта		   = СтруктураЦеныИВалюта.ВалютаДокумента;
	СуммаВключаетНДС		   = СтруктураЦеныИВалюта.СуммаВключаетНДС;
	УчитыватьНДС			   = СтруктураЦеныИВалюта.НалогообложениеНДС;
	
	// Сформируем надпись цены и валюты.
	СтруктураНадписи = Новый Структура("ВалютаДокумента, Курс, СуммаВключаетНДС, УчитыватьНДС",
									Валюта, ПолучитьКурсКратностьВалюты(Валюта),
									СуммаВключаетНДС, УчитыватьНДС);
	ЦеныИВалюта = СформироватьНадписьЦеныИВалюта(СтруктураНадписи);
	
	УстановитьВидимость();
	
	Если Оповещение <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(Оповещение);
	КонецЕсли;
	
КонецПроцедуры // ОбработатьИзмененияПоКнопкеЦеныИВалюты()

// Функция возвращает текст надписи "Цены и валюта".
//
&НаКлиентеНаСервереБезКонтекста
Функция СформироватьНадписьЦеныИВалюта(СтруктураНадписи)
	ТекстНадписи = "";
	
	// Валюта.
	Если ЗначениеЗаполнено(СтруктураНадписи.ВалютаДокумента) Тогда
		ТекстНадписи = НСтр("en='Currency: %Валюта% rate: %Курс%';ru='Валюта: %Валюта%, курс: %Курс%'");
		ТекстНадписи = СтрЗаменить(ТекстНадписи, "%Валюта%", СокрЛП(Строка(СтруктураНадписи.ВалютаДокумента)));
		ТекстНадписи = СтрЗаменить(ТекстНадписи, "%Курс%", СокрЛП(Строка(СтруктураНадписи.Курс)));
	Иначе
		ТекстНадписи = НСтр("en='Currency: <none>';ru='Валюта: <нет>'");
	КонецЕсли;
	
	// Налогообложение НДС.
	Если ПустаяСтрока(ТекстНадписи) Тогда
		ТекстНадписи = ТекстНадписи + НСтр("en='%НалогообложениеНДС%';ru='%НалогообложениеНДС%'");
	Иначе
		ТекстНадписи = ТекстНадписи + НСтр("en='; %НалогообложениеНДС%';ru='; %НалогообложениеНДС%'");
	КонецЕсли;
	ТекстНадписи = СтрЗаменить(ТекстНадписи, "%НалогообложениеНДС%", ?(СтруктураНадписи.УчитыватьНДС, НСтр("en='Include VAT';ru='Учитывать НДС'"),
																	НСтр("en='Not include VAT';ru='Не учитывать НДС'")));
	
	// Флаг сумма включает НДС.
	Если СтруктураНадписи.УчитыватьНДС Тогда
		Если ПустаяСтрока(ТекстНадписи) Тогда
			ТекстНадписи = ТекстНадписи + НСтр("en='%СуммаВключаетНДС%';ru='%СуммаВключаетНДС%'");
		Иначе
			ТекстНадписи = ТекстНадписи + НСтр("en='; %СуммаВключаетНДС%';ru='; %СуммаВключаетНДС%'");
		КонецЕсли;
		ТекстНадписи = СтрЗаменить(ТекстНадписи, "%СуммаВключаетНДС%", ?(СтруктураНадписи.СуммаВключаетНДС,
																		НСтр("en='Amount incl. VAT';ru='Сумма вкл. НДС'"), НСтр("en='Amount not incl. VAT';ru='Сумма не вкл. НДС'")));
	КонецЕсли;
	
	Возврат ТекстНадписи;
КонецФункции // СформироватьНадписьЦеныИВалюта()

&НаСервере
Процедура РассчитатьОбъем()
	
	ОбъемМетрКуб = ДлинаГруза * ШиринаГруза * ВысотаГруза;
	
	Если Константы.уатЕдиницаИзмеренияОбъема.Получить() = Перечисления.уатЕдиницыИзмеренияОбъема.Литр Тогда 
		Объем = ОбъемМетрКуб * 1000;
	Иначе 
		Объем = ОбъемМетрКуб;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВесТарыСервер()
	
	ВесТары = ВидУпаковки.ВесТары * КоличествоМест;
		
КонецПроцедуры

#КонецОбласти
