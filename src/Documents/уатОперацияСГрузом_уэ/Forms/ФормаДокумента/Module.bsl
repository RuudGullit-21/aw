
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.НастроитьПолеЕдиницыИзмерения(ЭтотОбъект, "Грузы", "ГрузовоеМесто");
	УстановитьОтборЗаказы();
	ОтобразитьНовыеЗаказы();
		
	Если ТипЗнч(Параметры.Основание) = Тип("Структура") И Параметры.Основание.Свойство("ГрузыДляПереноса") Тогда
		Для Каждого ЭлементСписка Из Параметры.Основание.ГрузыДляПереноса Цикл
			Если ЭлементСписка.Значение.ЗаказГрузоотправителя <> ЭлементСписка.Значение.Этап Тогда 
				НоваяСтрока = Объект.ГрузыДоОперации.Добавить();
				НоваяСтрока.ГрузовоеМесто = ЭлементСписка.Значение.ГрузовоеМесто;
				НоваяСтрока.ЕдиницаИзмерения = ЭлементСписка.Значение.ЕдиницаИзмерения;
				НоваяСтрока.Количество = ЭлементСписка.Значение.Количество;
				НоваяСтрока.Заказ = ЭлементСписка.Значение.Этап;
				НоваяСтрока.ЗаказНовый = ЭлементСписка.Значение.ЗаказГрузоотправителя;
			КонецЕсли;
		КонецЦикла;
		ОбновитьДетализациюЗаказовСервер();
		ОбновитьВесоОбъемныеПоказателиСервер();
	Иначе
		ОбновитьДетализациюЗаказовСервер();
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияВеса = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияВеса();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияВеса) Тогда
		Элементы.ГрузыВесБрутто.Заголовок = НСтр("en='Weight';ru='Вес'") + ", " + ПредставлениеЕдиницыИзмеренияВеса;
		Элементы.ГрузыПослеОперацииВесБрутто.Заголовок = НСтр("en='Weight';ru='Вес'") + ", " + ПредставлениеЕдиницыИзмеренияВеса;
	КонецЕсли;
	
	ПредставлениеЕдиницыИзмеренияОбъема = уатОбщегоНазначенияПовтИсп.ПолучитьПредставлениеОсновнойЕдиницыИзмеренияОбъема();
	Если ЗначениеЗаполнено(ПредставлениеЕдиницыИзмеренияОбъема) Тогда
		Элементы.ГрузыОбъем.Заголовок = НСтр("en='Volume';ru='Объем'") + ", " + ПредставлениеЕдиницыИзмеренияОбъема;
		Элементы.ГрузыПослеОперацииОбъем.Заголовок = НСтр("en='Volume';ru='Объем'") + ", " + ПредставлениеЕдиницыИзмеренияОбъема;
	КонецЕсли;
	
	ПредставлениеКоличествоМест = Справочники.уатВидыУпаковки_уэ.ПолучитьОсновнойВидУпаковки().КраткоеНаименование;
	Если ЗначениеЗаполнено(ПредставлениеКоличествоМест) Тогда
		Элементы.ГрузыКоличествоМест.Заголовок = ПредставлениеКоличествоМест;
		Элементы.ГрузыПослеОперацииКоличествоМест.Заголовок = ПредставлениеКоличествоМест;
	КонецЕсли;
	ИспользоватьРасчетТары = ПолучитьФункциональнуюОпцию("уатИспользоватьРасчетТары_уэ");
	УстановитьУсловноеОформлениеПолейСтатусов();
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) тогда
		флЗаказОтКонтрагента = 1;
		Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Элементы.Контрагент.ПодсказкаВвода = НСтр("ru = 'Введите ИНН или наименование'; en = 'Enter TIN or name'");
	ИначеЕсли ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") тогда
		флЗаказОтКонтрагента = 1;
		Элементы.Контрагент.ПодсказкаВвода = НСтр("ru = 'Введите ИНН или наименование'; en = 'Enter TIN or name'");
	Иначе
		флЗаказОтКонтрагента = 0;
		Элементы.Контрагент.ПодсказкаВвода = "";
	КонецЕсли;
	
	КоличествоКонтейнеров = 1;
	
	Элементы.ФормаВыполнитьОперацию.Доступность = Не ТолькоПросмотр;
	
	ВидОперацииПредыдущееЗначение = Объект.ВидОперации;
	ГрузыПослеОперацииМодифицированыПользователем = (Объект.ГрузыПослеОперации.Количество() > 0);
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	// ПодключаемоеОборудование
	уатОбщегоНазначения_проф.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииКлиентПереопределяемый.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ПодключаемоеОборудование
	уатОбщегоНазначенияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	УстановитьОтображениеТабличныхЧастей();
	
	УстановитьОграничениеТипаКонтрагент(Ложь);
	УстановитьОформлениеОдногоГрузаПослеОперации();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	уатОбщегоНазначенияКлиент.ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		//И ВводДоступен()
		Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкод(Параметр);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Элементы.ФормаВыполнитьОперацию.Доступность = Не ТолькоПросмотр;
	
	ОбновитьДетализациюЗаказовСервер();
	ОтобразитьНовыеЗаказы();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьДетализациюЗаказовСервер();
	ОтобразитьНовыеЗаказы();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Изменен статус заказа", Объект.Ссылка, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте"))
		И ТребуетсяОбновитьСоставКонтейнера() Тогда
		
		ВопросОбновитьГМ = Истина;
		Режим     = РежимДиалогаВопрос.ДаНет;
		ТекстНСТР = НСтр("ru='Обновить грузовой состав контейнеров?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект), ТекстНСТР, Режим);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗаписатьНовыеЗаказы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не флПодтвердитьПерегрузкуКонтейнеровПоЭтапам
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера")
		И ЗначениеЗаполнено(Объект.ЗаказНаКонтейнер) И ЗначениеЗаполнено(Объект.ЗаказНаКонтейнерНовый)
		И Объект.ЗаказНаКонтейнер.Мультимодальный И Объект.ЗаказНаКонтейнер.ЭтоЭтап
		И Объект.ЗаказНаКонтейнерНовый.Мультимодальный И Объект.ЗаказНаКонтейнерНовый.ЭтоЭтап
		И Объект.ЗаказНаКонтейнер.РодительскийЗаказ = Объект.ЗаказНаКонтейнер.РодительскийЗаказ Тогда
		
		флПодтвердитьПерегрузкуКонтейнеровПоЭтапам = Истина;
		ТекстНСТР = НСтр("ru='Операцию перегрузки контейнеров для этапов одного мультимодального Заказа на ТС выполнять не требуется.
			|Рекомендуется пометить документ на удаление.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстНСТР);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ВопросОбновитьГМ Тогда
		СтандартнаяОбработка			 = Ложь;
		ЗавершениеРаботы				 = Ложь;
		Отказ							 = Истина;
		ВопросОбновитьГМ				 = Ложь;
		ЗакрыватьПриОбновлении			 = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура СтатусДокументаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ДействуетНаОперацииСГрузами", Истина));
	Оповещение = Новый ОписаниеОповещения("СтатусВыполненияПослеВыбораСтатуса", ЭтотОбъект);
	ОткрытьФорму("Справочник.уатСтатусы_уэ.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияВыполненаПриИзменении(Элемент)
	Если Объект.ОперацияВыполнена = Ложь 
		И ЗначениеЗаполнено(Объект.ОкончаниеОперации) Тогда
		ТекстНСТР = НСтр("en='Operation finish time will be cleared. Continue?';ru='Дата окончания операции будет очищена. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ОперацияВыполненаЗавершение", ЭтотОбъект),
			ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена, ,КодВозвратаДиалога.Да);
	Иначе
		УстановитьВидимость();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура флЗаказОтКонтрагентаПриИзменении(Элемент)
	УстановитьОграничениеТипаКонтрагент();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыГрузы

&НаКлиенте
Процедура ГрузыПриИзменении(Элемент)
	
	ОбновитьДетализациюЗаказовСервер();
	Если Не ГрузыПослеОперацииМодифицированыПользователем 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация") Тогда
		Объект.ГрузыПослеОперации[0].ВесБрутто = Объект.ГрузыДоОперации.Итог("ВесБрутто");
		Объект.ГрузыПослеОперации[0].Объем = Объект.ГрузыДоОперации.Итог("Объем");
		Объект.ГрузыПослеОперации[0].КоличествоМест = Объект.ГрузыДоОперации.Итог("КоличествоМест");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыЗаказПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Грузы.ТекущиеДанные;
	Если ТекСтрока = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.ГрузовоеМесто = Неопределено;
	ТекСтрока.Количество = 1;
	ТекСтрока.ЕдиницаИзмерения = Неопределено;
	
	ОбновитьВесоОбъемныеПоказателиСтрокиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор());
	ОбновитьДетализациюЗаказовСервер();
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация") Тогда
		УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыГрузовоеМесто1, ТекСтрока.Заказ);
	Иначе
		УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыГрузовоеМесто, ТекСтрока.Заказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыКоличествоПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Грузы.ТекущиеДанные;
	Если ТекСтрока = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьВесоОбъемныеПоказателиСтрокиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыГрузовоеМестоПриИзменении(Элемент)
	ТекДанные = Элементы.Грузы.ТекущиеДанные;
	Если ТекДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекДанные.Заказ) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекДанные.ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура") И ЗначениеЗаполнено(ТекДанные.ГрузовоеМесто) тогда
		Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ЕдиницаХраненияОстатков", "Номенклатура") тогда
			ТекДанные.ЕдиницаИзмерения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекДанные.ГрузовоеМесто, "ЕдиницаХраненияОстатков");
		Иначе
			ТекДанные.ЕдиницаИзмерения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекДанные.ГрузовоеМесто, "ЕдиницаИзмерения");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ТекДанные.ГрузовоеМесто) = Тип("СправочникСсылка.уатГрузовыеМеста_уэ")
		И ЗначениеЗаполнено(ТекДанные.ГрузовоеМесто) Тогда
		РеквизитыГрузовогоМеста = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ТекДанные.ГрузовоеМесто, "ВидУпаковки, ТипКонтейнера, Контейнер");
		Если РеквизитыГрузовогоМеста.Контейнер Тогда
			ТекДанные.ЕдиницаИзмерения = РеквизитыГрузовогоМеста.ТипКонтейнера;
		Иначе
			ТекДанные.ЕдиницаИзмерения = РеквизитыГрузовогоМеста.ВидУпаковки;
		КонецЕсли;
	Иначе
		ТекДанные.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	ОбновитьВесоОбъемныеПоказателиСервер();
КонецПроцедуры

&НаКлиенте
Процедура ГрузыГрузовоеМестоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Грузы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") И ЗначениеЗаполнено(ВыбранноеЗначение) тогда
		Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ЕдиницаХраненияОстатков", "Номенклатура") тогда
			ТекущиеДанные.ЕдиницаИзмерения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ВыбранноеЗначение, "ЕдиницаХраненияОстатков");
		Иначе
			ТекущиеДанные.ЕдиницаИзмерения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ВыбранноеЗначение, "ЕдиницаИзмерения");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.уатГрузовыеМеста_уэ") И ЗначениеЗаполнено(ВыбранноеЗначение) тогда
		РеквизитыГрузовогоМеста = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ВыбранноеЗначение, "ВидУпаковки, ТипКонтейнера, Контейнер");
		Если РеквизитыГрузовогоМеста.Контейнер Тогда
			ТекущиеДанные.ЕдиницаИзмерения = РеквизитыГрузовогоМеста.ТипКонтейнера;
		Иначе
			ТекущиеДанные.ЕдиницаИзмерения = РеквизитыГрузовогоМеста.ВидУпаковки;
		КонецЕсли;
	Иначе
		ТекущиеДанные.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	ТекущиеДанные.ГрузовоеМесто = ВыбранноеЗначение;
	ТекущиеДанные.Количество = ПолучитьКоличествоГрузаПоЗаказу(ТекущиеДанные.Заказ, ВыбранноеЗначение, ТекущиеДанные.ЕдиницаИзмерения);
	
	ГрузыГрузовоеМестоПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПриАктивизацииСтроки(Элемент)
	Элементы.ГрузыГрузовоеМесто.СписокВыбора.Очистить();
	
	ТекСтрока = Элементы.Грузы.ТекущиеДанные;
	Если ТекСтрока = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыГрузовоеМесто, ТекСтрока.Заказ);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПараметрыГрузаПриИзменении(Элемент)
	
	Если Не ГрузыПослеОперацииМодифицированыПользователем 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация") Тогда
		Объект.ГрузыПослеОперации[0].ВесБрутто = Объект.ГрузыДоОперации.Итог("ВесБрутто");
		Объект.ГрузыПослеОперации[0].Объем = Объект.ГрузыДоОперации.Итог("Объем");
		Объект.ГрузыПослеОперации[0].КоличествоМест = Объект.ГрузыДоОперации.Итог("КоличествоМест");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказНаКонтейнерПриИзменении(Элемент)
	Объект.Контейнер = Неопределено;
	УстановитьСписокВыбораГрузовыхМест(Элементы.Контейнер, Объект.ЗаказНаКонтейнер);
КонецПроцедуры

&НаКлиенте
Процедура ЗаказНаКонтейнер1ПриИзменении(Элемент)
	Объект.Контейнер = Неопределено;
	УстановитьСписокВыбораГрузовыхМест(Элементы.Контейнер1, Объект.ЗаказНаКонтейнер);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрузыПослеОперации

&НаКлиенте
Процедура ГрузыПослеОперацииПриИзменении(Элемент)
	ГрузыПослеОперацииМодифицированыПользователем = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииПриАктивизацииСтроки(Элемент)
	Элементы.ГрузыПослеОперацииГрузовоеМесто.СписокВыбора.Очистить();
	
	ТекСтрока = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	Если ТекСтрока = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекСтрока.Заказ) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыПослеОперацииГрузовоеМесто, ТекСтрока.Заказ);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииПараметрыГрузаПриИзменении(Элемент)
	ГрузыПослеОперацииМодифицированыПользователем = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	ОткрытьФормуГрузовогоМеста(Элементы.ГрузыПослеОперации.ТекущиеДанные, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ГрузыПослеОперацииНаименованиеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.уатГрузовыеМеста_уэ.ФормаВыбора", , ЭтотОбъект,,,, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииНаименованиеПриИзменении(Элемент)
	Стр = Объект.ГрузыПослеОперации.НайтиПоИдентификатору(Элементы.ГрузыПослеОперации.ТекущаяСтрока);
	Если ЗначениеЗаполнено(Стр.ГрузовоеМесто) Тогда
		ДанныеГрузовогоМеста = ПолучитьДанныеГрузовогоМеста(Стр.ГрузовоеМесто);
	Иначе
		ДанныеГрузовогоМеста = Неопределено;
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеГрузовогоМеста) И Стр.Наименование <> ДанныеГрузовогоМеста.Наименование Тогда
		Стр.ГрузовоеМесто = Неопределено;
		Стр.ОписаниеГруза = "";
		Стр.ВидУпаковки = ПолучитьОсновнойВидУпаковки();
		Стр.ВесБрутто = Макс(0, Объект.ГрузыДоОперации.Итог("ВесБрутто") - Объект.ГрузыПослеОперации.Итог("ВесБрутто") + Стр.ВесБрутто);
		Стр.КоличествоМест = Макс(0, Объект.ГрузыДоОперации.Итог("КоличествоМест") - Объект.ГрузыПослеОперации.Итог("КоличествоМест") + Стр.КоличествоМест); 
		Стр.Объем = Макс(0, Объект.ГрузыДоОперации.Итог("Объем") - Объект.ГрузыПослеОперации.Итог("Объем") + Стр.Объем); 
		Стр.Длина = 0;
		Стр.Ширина = 0;
		Стр.Высота = 0;
		Стр.Комментарий = "";
		Стр.ВесТары = 0;
		Стр.Стоимость = 0;
		Стр.Родитель = ПредопределенноеЗначение("Справочник.уатГрузовыеМеста_уэ.ПустаяСсылка");
	КонецЕсли;
	УстановитьОформлениеОдногоГрузаПослеОперации();
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииКоличествоМестПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ГрузовоеМесто) Тогда 
		Возврат;
	КонецЕсли;
	
	ХарактеристикиГрузовогоМеста = ПолучитьДанныеГрузовогоМеста(ТекущиеДанные.ГрузовоеМесто, ТекущиеДанные.ВидУпаковки, ТекущиеДанные.Заказ);
	
	КоэфПересчета = ?(ХарактеристикиГрузовогоМеста.КоличествоМест = 0, 0, ТекущиеДанные.КоличествоМест / ХарактеристикиГрузовогоМеста.КоличествоМест);
	ТекущиеДанные.ВесБрутто = ХарактеристикиГрузовогоМеста.ВесБрутто * КоэфПересчета;
	ТекущиеДанные.Объем     = ХарактеристикиГрузовогоМеста.Объем * КоэфПересчета;
	
	ГрузыПослеОперацииМодифицированыПользователем = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииВидДоставкиПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ВидДоставки) Тогда
		ТекущиеДанные.Грузополучатель = Неопределено;
	ИначеЕсли ТекущиеДанные.ВидДоставки = ПредопределенноеЗначение("Перечисление.уатВидыДоставки_уэ.СкладДверь") Тогда
		ТекущиеДанные.Грузополучатель = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	Иначе
		ТекущиеДанные.Грузополучатель = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииЗаказ1ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Заказ) Тогда
		ДанныеЗаказа = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ТекущиеДанные.Заказ,
			"АдресНазначения, ВидДоставки, Грузополучатель, ДоставкаС, ДоставкаПо");
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеЗаказа);
		ТекущиеДанные.ПрибытиеС = ДанныеЗаказа.ДоставкаС;
		ТекущиеДанные.ПрибытиеПо = ДанныеЗаказа.ДоставкаПо;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииГрузовоеМестоПриИзменении(Элемент)
	
	// Эта колонка редактируется только при операции "Извлечение груза из контейнера"
	
	ТекущиеДанные = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ГрузовоеМесто) Тогда
		ДанныеГрузовогоМеста = ПолучитьДанныеГрузовогоМеста(ТекущиеДанные.ГрузовоеМесто, ТекущиеДанные.ВидУпаковки, ТекущиеДанные.Заказ);
	Иначе
		ДанныеГрузовогоМеста = Неопределено;
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеГрузовогоМеста) И ТекущиеДанные.Наименование <> ДанныеГрузовогоМеста.Наименование Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеГрузовогоМеста);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииЗаказПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрузыПослеОперации.ТекущиеДанные;
	ЗаполнитьДанныеЗаказаВСтроке(Объект.ГрузыПослеОперации[ТекущиеДанные.НомерСтроки - 1]);
	
	УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыПослеОперацииГрузовоеМесто, ТекущиеДанные.Заказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ВыполнитьОперацию(Команда)
	Если Объект.ОперацияВыполнена Тогда
		Возврат;
	КонецЕсли;
	Если Модифицированность Тогда
		ТекстНСТР = НСтр("en='To perform this operation it is necessary to record the document. Continue?';ru='Для выполнения данной операции необходимо записать документ. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьОперациюЗавершение", ЭтотОбъект),
			ТекстНСТР, РежимДиалогаВопрос.ОКОтмена, ,КодВозвратаДиалога.ОК);
		Возврат;
	Иначе
		ВыполнитьОперациюЗавершение(КодВозвратаДиалога.ОК);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборГрузов(Команда)
	
	Если Объект.ГрузыДоОперации.Количество() 
		И Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация")
		И Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		И Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте") Тогда
		ТекстНСТР = НСтр("en='Clear the list of cargoes before the selection?';ru='Очистить список грузов перед подбором?'");
		Оповещение = Новый ОписаниеОповещения("ПодборГрузовОчисткаТЧ", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе 
		ПодборГрузовОткрытьФормуПодбора();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияИзвлечениеГрузаИзКонтейнера(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияИзвлечениеГрузаИзКонтейнераВПункте(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияКомплектация(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПерегрузкаКонтейнера(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПереносОстатков(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПереносОстатков"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияРазмещениеГрузаВКонтейнере(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияРазмещениеГрузаВКонтейнереВПункте(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияРазукомплектация(Команда)
	УстановитьВидОперации(ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация"));
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОстаткиГрузовВКонтейнере(Команда)
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчетОстаткиГрузовВКонтейнере(Объект.Ссылка);
	ОткрытьФорму("Отчет.уатОстаткиГрузовВКонтейнерах_уэ.Форма", ПараметрыОткрытия, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСоставуКонтейнера(Команда)
	
	Если ЗначениеЗаполнено(Объект.Контейнер) Тогда
		Если Объект.ГрузыПослеОперации.Количество() > 0 Тогда
			ТекстНСтр = НСтр("en='Clear the table ""New cargos"" before filling?';ru='Очистить таблицу ""Новый груз"" перед заполнением?'");
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоСоставуКонтейнераОтвет", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ЗаполнитьПоСоставуКонтейнераНаСервере();
		КонецЕсли;
	Иначе
		ТекстНСтр = НСтр("ru = 'Необходимо заполнить контейнер'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстНСтр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамГрузовВКонтейнерах(Команда)
	
	Если ЗначениеЗаполнено(Объект.Контейнер) Тогда
		Если Объект.ГрузыПослеОперации.Количество() > 0 Тогда
			ТекстНСтр = НСтр("en='Clear the table ""New cargos"" before filling?';ru='Очистить таблицу ""Новый груз"" перед заполнением?'");
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоОстаткамГрузовВКонтейнерахОтвет", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ЗаполнитьПоОстаткамГрузовВКонтейнерахНаСервере();
		КонецЕсли;
	Иначе
		ТекстНСтр = НСтр("ru = 'Необходимо заполнить контейнер'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстНСтр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьВидимость()
	
	флКомплектация                       = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация");
	флРазмещениеГрузаВКонтейнере         = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере");
	флРазмещениеГрузаВКонтейнереВПункте  = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте");
	флРазукомплектация                   = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация");
	флИзвлечениеГрузаИзКонтейнера        = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера");
	флИзвлечениеГрузаИзКонтейнераВПункте = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте");
	флПереносОстатков                    = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПереносОстатков");
	флПерегрузкаКонтейнера               = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера");
	
	Элементы.ФормаОперацияКомплектация.Пометка                       = флКомплектация;
	Элементы.ФормаОперацияРазмещениеГрузаВКонтейнере.Пометка         = флРазмещениеГрузаВКонтейнере;
	Элементы.ФормаОперацияРазмещениеГрузаВКонтейнереВПункте.Пометка  = флРазмещениеГрузаВКонтейнереВПункте;
	Элементы.ФормаОперацияРазукомплектация.Пометка                   = флРазукомплектация;
	Элементы.ФормаОперацияИзвлечениеГрузаИзКонтейнера.Пометка        = флИзвлечениеГрузаИзКонтейнера;
	Элементы.ФормаОперацияИзвлечениеГрузаИзКонтейнераВПункте.Пометка = флИзвлечениеГрузаИзКонтейнераВПункте;
	Элементы.ФормаОперацияПереносОстатков.Пометка                    = флПереносОстатков;
	Элементы.ФормаОперацияПерегрузкаКонтейнера.Пометка               = флПерегрузкаКонтейнера;
	Если флРазмещениеГрузаВКонтейнере Или флРазмещениеГрузаВКонтейнереВПункте Тогда
		Элементы.ГрузыПослеОперацииНаименование1.Заголовок = НСтр("ru = 'Контейнер'");
		Элементы.ГрузыПослеОперацииВидУпаковки1.Заголовок = НСтр("ru = 'Тип контейнера'");
	Иначе
		Элементы.ГрузыПослеОперацииНаименование1.Заголовок = НСтр("ru = 'Грузовое место'");
		Элементы.ГрузыПослеОперацииВидУпаковки1.Заголовок = НСтр("ru = 'Вид упаковки'");
	КонецЕсли;
	Если флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте Тогда
		Элементы.ГрузыГрузовоеМесто1.Заголовок = НСтр("ru = 'Контейнер'");
	Иначе
		Элементы.ГрузыГрузовоеМесто1.Заголовок = НСтр("ru = 'Грузовое место'");
	КонецЕсли;
	
	// Видимость табличных частей с грузами
	Если флРазукомплектация Тогда
		Элементы.ИсходныйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.ИсходныйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаОдинИсходныйГруз;
	ИначеЕсли флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте Или флПерегрузкаКонтейнера Тогда
		Элементы.ИсходныйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.ИсходныйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаИсходныйКонтейнер;
	Иначе
		Элементы.ИсходныйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.ИсходныйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаГрузыДоОперации;
	КонецЕсли;
	Если флКомплектация Тогда
		Элементы.НовыйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.НовыйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаОдинГрузПослеОперации;
	ИначеЕсли флРазмещениеГрузаВКонтейнере Или флРазмещениеГрузаВКонтейнереВПункте Тогда
		Элементы.НовыйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.НовыйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаКонтейнерПослеОперации;
	ИначеЕсли флРазукомплектация Или флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте Тогда
		Элементы.НовыйГрузОсновнаяГруппа.ТекущаяСтраница = Элементы.НовыйГрузОсновнаяГруппа.ПодчиненныеЭлементы.СтраницаГрузыПослеОперации;
	КонецЕсли;
	Если флПереносОстатков Тогда
		Элементы.СтраницаИсходныйГруз.Заголовок = "Груз";
	Иначе
		Элементы.СтраницаИсходныйГруз.Заголовок = "Исходный груз";
	КонецЕсли;
	
	// Видимость элементов шапки
	Элементы.Контрагент.Видимость = флКомплектация;
	Элементы.флЗаказОтКонтрагента.Видимость = флКомплектация;
	Элементы.СтраницаНовыйГруз.Видимость = Не флПереносОстатков И Не флПерегрузкаКонтейнера;
	Если флРазмещениеГрузаВКонтейнереВПункте Или флИзвлечениеГрузаИзКонтейнераВПункте Тогда
		Элементы.Склад.Видимость = Ложь;
		Элементы.Пункт.Видимость = Истина;
	Иначе
		Элементы.Склад.Видимость = Истина;
		Элементы.Пункт.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ФормаВыполнитьОперацию.Видимость = Не Объект.ОперацияВыполнена;
	Элементы.ФормаВыполнитьОперацию.КнопкаПоУмолчанию = Не Объект.ОперацияВыполнена;
	Элементы.ФормаПровестиИЗакрыть.КнопкаПоУмолчанию = Объект.ОперацияВыполнена;
	Элементы.ОперацияВыполнена.Доступность = Объект.ОперацияВыполнена;
	Если Объект.ОперацияВыполнена Тогда
		Элементы.ФормаВыполнитьОперацию.Заголовок = "Операция выполнена";
	Иначе
		Элементы.ФормаВыполнитьОперацию.Заголовок = "Выполнить операцию";
	КонецЕсли;
	
	// Видимость элементов ТЧ "Исходный груз"
	Элементы.ГрузыЗаказНовый.Видимость = флПереносОстатков Или флПерегрузкаКонтейнера;
	Элементы.ГрузыЗаказНовый1.Видимость = флПереносОстатков Или флПерегрузкаКонтейнера;
	Элементы.ЗаказНаКонтейнерНовый.Видимость = флПерегрузкаКонтейнера;
	
	// Видимость элементов ТЧ "Новый груз"
	Элементы.ГрузыПослеОперацииГрузовоеМесто.Видимость = флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте;
	Элементы.ГрузыПослеОперацииНаименование.Видимость = Не флИзвлечениеГрузаИзКонтейнера И Не флИзвлечениеГрузаИзКонтейнераВПункте;
	Если флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте Тогда
		Элементы.ГрузыПослеОперацииЗаказ.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.ГрузыПослеОперацииЗаказ.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	Элементы.ГрузыПослеОперацииЗаполнитьПоСоставуКонтейнера.Видимость = флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте;
	Элементы.ГрузыПослеОперацииЗаполнитьПоОстаткамГрузовВКонтейнерах.Видимость = флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте;
	
	Элементы.ФормаОтчетОстаткиГрузовВКонтейнере.Видимость = флИзвлечениеГрузаИзКонтейнера Или флИзвлечениеГрузаИзКонтейнераВПункте
		Или флРазмещениеГрузаВКонтейнере Или флРазмещениеГрузаВКонтейнереВПункте
		Или флПерегрузкаКонтейнера;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеПолейСтатусов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатСтатусы_уэ.Ссылка КАК Ссылка,
	|	уатСтатусы_уэ.Наименование КАК Наименование,
	|	уатСтатусы_уэ.ЦветФонаПоУмолчанию КАК ЦветФонаПоУмолчанию,
	|	уатСтатусы_уэ.ЦветТекстаПоУмолчанию КАК ЦветТекстаПоУмолчанию
	|ИЗ
	|	Справочник.уатСтатусы_уэ КАК уатСтатусы_уэ
	|ГДЕ
	|	уатСтатусы_уэ.Ссылка = &Статус";
	Запрос.УстановитьПараметр("Статус", Объект.СтатусВыполнения);
	
	ВыборкаЦвета = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЦвета.Следующий() Тогда 
		ЦветФона   = Неопределено;
		ЦветТекста = Неопределено;
		
		ХранилищеЦветФона = ВыборкаЦвета.ЦветФонаПоУмолчанию;
		Если Не ХранилищеЦветФона = Неопределено Тогда 
			ДанныеЦветФона = ХранилищеЦветФона.Получить();
			Если Не ДанныеЦветФона = Неопределено И ТипЗнч(ДанныеЦветФона) = Тип("Цвет") Тогда
				Элементы.СтатусВыполнения.ЦветФона = ДанныеЦветФона;
			Иначе
				Элементы.СтатусВыполнения.ЦветФона = Новый Цвет(255, 255, 255);
			КонецЕсли;
		КонецЕсли;
		
		ХранилищеЦветТекста = ВыборкаЦвета.ЦветТекстаПоУмолчанию;
		Если Не ХранилищеЦветТекста = Неопределено Тогда 
			ДанныеЦветТекста = ХранилищеЦветТекста.Получить();
			Если Не ДанныеЦветТекста = Неопределено И ТипЗнч(ДанныеЦветТекста) = Тип("Цвет") Тогда
				Элементы.СтатусВыполнения.ЦветТекста  = ДанныеЦветТекста;
			Иначе
				Элементы.СтатусВыполнения.ЦветТекста = Новый Цвет(0, 0, 0);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусВыполненияПослеВыбораСтатуса(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.СтатусВыполнения = РезультатЗакрытия;
	Модифицированность = Истина;
	УстановитьУсловноеОформлениеПолейСтатусов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВесоОбъемныеПоказателиСервер()
	Для Каждого ТекСтрока Из Объект.ГрузыДоОперации Цикл
		ОбновитьВесоОбъемныеПоказателиСтрокиСервер(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьВесоОбъемныеПоказателиСтрокиПоИдентификатору(ИдентификаторСтроки)
	ТекСтрока = Объект.ГрузыДоОперации.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОбновитьВесоОбъемныеПоказателиСтрокиСервер(ТекСтрока);
КонецПроцедуры

&НаСервере
Процедура ОбновитьВесоОбъемныеПоказателиСтрокиСервер(ТекСтрока)
	
	Если ТекСтрока.Заказ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам Тогда
		СтрокаГруза = ТекСтрока.Заказ.ГрузовойСостав.Найти(ТекСтрока.ГрузовоеМесто, "ГрузовоеМесто");
		Если Не СтрокаГруза = Неопределено Тогда 
			ТекСтрока.ВесБрутто      = СтрокаГруза.ВесБрутто * (ТекСтрока.Количество / СтрокаГруза.КоличествоМест);
			ТекСтрока.Объем          = СтрокаГруза.Объем * (ТекСтрока.Количество / СтрокаГруза.КоличествоМест);
			Если ТипЗнч(СтрокаГруза.ВидУпаковки) = Тип("СправочникСсылка.уатВидыУпаковки_уэ") ТОгда
				Коэффициент = СтрокаГруза.ВидУпаковки.Коэффициент;
			Иначе
				Коэффициент = 0;
			КонецЕсли;
			ТекСтрока.КоличествоМест = ?(Коэффициент = 0, 1, ТекСтрока.Количество / Коэффициент);
		КонецЕсли;
		
	ИначеЕсли ТекСтрока.Заказ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоТоварам Тогда
		СтрокиТовара = ТекСтрока.Заказ.Товары.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", ТекСтрока.ГрузовоеМесто, ТекСтрока.ЕдиницаИзмерения));
		Если СтрокиТовара.Количество() Тогда 
			ТекСтрока.ВесБрутто      = СтрокиТовара[0].ВесБрутто * (ТекСтрока.Количество / СтрокиТовара[0].Количество);
			ТекСтрока.Объем          = СтрокиТовара[0].Объем * (ТекСтрока.Количество / СтрокиТовара[0].Количество);
			ТекСтрока.КоличествоМест = СтрокиТовара[0].КоличествоМест * (ТекСтрока.Количество / СтрокиТовара[0].Количество);
		КонецЕсли;
		
	ИначеЕсли ТекСтрока.Заказ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоЗаказам Тогда 
		ТекСтрока.ВесБрутто = ТекСтрока.Заказ.ВесБрутто;
		ТекСтрока.Объем = ТекСтрока.Заказ.Объем;
		ТекСтрока.КоличествоМест = ТекСтрока.Заказ.КоличествоМест;
		
	Иначе
		ТекСтрока.ВесБрутто = 0;
		ТекСтрока.Объем = 0;
		ТекСтрока.КоличествоМест = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДетализациюЗаказовСервер()
	Для Каждого ТекСтрока Из Объект.ГрузыДоОперации Цикл
		ТекСтрока.ДетализацияЗаказа = ТекСтрока.Заказ.ДетализацияЗакрытия;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСписокВыбораГрузовыхМест(Элемент, Заказ)
	
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте"))
		И (Элемент = Элементы.ГрузыГрузовоеМесто1 Или Элемент = Элементы.ГрузыГрузовоеМесто) Тогда
		ТолькоУникальныеКонтейнеры = Истина;
	ИначеЕсли (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте"))
		И Элемент = Элементы.Контейнер1 Тогда
		ТолькоУникальныеКонтейнеры = Истина;
	Иначе
		ТолькоУникальныеКонтейнеры = Ложь;
	КонецЕсли;
	
	МассивВыбора = МассивГрузМестЗаказаСервер(Заказ, ТолькоУникальныеКонтейнеры);
	Элемент.СписокВыбора.ЗагрузитьЗначения(МассивВыбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивГрузМестЗаказаСервер(Заказ, ТолькоУникальныеКонтейнеры)
	
	Результат = Новый Массив;
	Если Заказ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам Тогда
		Для Каждого ТекСтрока Из Заказ.ГрузовойСостав Цикл
			Если Результат.Найти(ТекСтрока.ГрузовоеМесто) = Неопределено
				И (Не ТолькоУникальныеКонтейнеры Или ТекСтрока.ГрузовоеМесто.Контейнер И ТекСтрока.ГрузовоеМесто.УникальноеГрузовоеМесто) Тогда
				Результат.Добавить(ТекСтрока.ГрузовоеМесто);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Заказ.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоТоварам Тогда
		Для Каждого ТекСтрока Из Заказ.Товары Цикл
			Если Результат.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
				Результат.Добавить(ТекСтрока.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоГрузаПоЗаказу(ЗаказНаТС, Груз, ЕдиницаИзмерения)
	
	Если ТипЗнч(Груз) = Тип("СправочникСсылка.уатГрузовыеМеста_уэ") Тогда 
		СтрокаГруза = ЗаказНаТС.ГрузовойСостав.Найти(Груз, "ГрузовоеМесто");
		Если СтрокаГруза = Неопределено Тогда 
			Возврат 1;
		Иначе 
			Возврат СтрокаГруза.КоличествоМест;
		КонецЕсли;
		
	Иначе 
		СтрокиГруза = ЗаказНаТС.Товары.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", Груз, ЕдиницаИзмерения));
		Если СтрокиГруза.Количество() Тогда 
			Возврат СтрокиГруза[0].Количество;
		Иначе 
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции // ПолучитьКоличествоГрузаПоЗаказу()

&НаКлиенте
Процедура ПодборГрузовОчисткаТЧ(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Объект.ГрузыДоОперации.Очистить();
		
		ПодборГрузовОткрытьФормуПодбора();
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ПодборГрузовОткрытьФормуПодбора();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборГрузовОткрытьФормуПодбора()
	
	ПараметрыФормы = Новый Структура();
	
	ПараметрыФормы.Вставить("ДокументПодбора", "уатОперацияСГрузом_уэ");
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПереносОстатков")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера") Тогда
		ПараметрыФормы.Вставить("СкладДляОтбора", Объект.Склад);
	КонецЕсли;
	ПараметрыФормы.Вставить("ТекущаяОперацияСГрузом",  Объект.Ссылка);
	
	ПеренесенныеЗаказы = Новый Массив();
	Для Каждого ТекСтрока Из Объект.ГрузыДоОперации Цикл 
		ДанныеЗаказа = Новый Структура();
		ДанныеЗаказа.Вставить("Заказ",            ТекСтрока.Заказ);
		ДанныеЗаказа.Вставить("Груз",             ТекСтрока.ГрузовоеМесто);
		ДанныеЗаказа.Вставить("ЕдиницаИзмерения", ТекСтрока.ЕдиницаИзмерения);
		ДанныеЗаказа.Вставить("Количество",       ТекСтрока.Количество);
		
		ПеренесенныеЗаказы.Добавить(ДанныеЗаказа);
	КонецЦикла;
	ПараметрыФормы.Вставить("ПеренесенныеЗаказы", ПеренесенныеЗаказы);
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация")
		И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ПараметрыФормы.Вставить("Отбор_Контрагент", Объект.Контрагент);
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте") Тогда
		ПараметрыФормы.Вставить("Отбор_ДетализацияЗакрытия", ПредопределенноеЗначение("Перечисление.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам"));
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПодборГрузовПослеПодбора", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.уатПодборЗаказов", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборГрузовПослеПодбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация")
		И РезультатЗакрытия.ПодобранныеЗаказы.Количество() > 0 Тогда
		
		НоваяСтрока = Объект.ГрузыДоОперации[0];
		ТекСтрока = РезультатЗакрытия.ПодобранныеЗаказы[0];
		НоваяСтрока.Заказ            = ТекСтрока.Заказ;
		НоваяСтрока.ГрузовоеМесто    = ТекСтрока.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
		НоваяСтрока.Количество       = ТекСтрока.Количество;
	ИначеЕсли (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера"))
		И РезультатЗакрытия.ПодобранныеЗаказы.Количество() > 0 Тогда
		
		ТекСтрока = РезультатЗакрытия.ПодобранныеЗаказы[0];
		Объект.ЗаказНаКонтейнер = ТекСтрока.Заказ;
		Объект.Контейнер        = ТекСтрока.Номенклатура;
		Объект.ЗаказНаКонтейнерНовый = ПредопределенноеЗначение("Документ.уатЗаказГрузоотправителя.ПустаяСсылка");
		
	Иначе
		
		Для Каждого ТекСтрока Из РезультатЗакрытия.ПодобранныеЗаказы Цикл 
			НоваяСтрока = Объект.ГрузыДоОперации.Добавить();
			НоваяСтрока.Заказ            = ТекСтрока.Заказ;
			НоваяСтрока.ГрузовоеМесто    = ТекСтрока.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
			НоваяСтрока.Количество       = ТекСтрока.Количество;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновитьВесоОбъемныеПоказателиСервер();
	ГрузыПриИзменении(Неопределено);
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация") Тогда
		УстановитьСписокВыбораГрузовыхМест(Элементы.ГрузыГрузовоеМесто1, ТекСтрока.Заказ);
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера") Тогда
		УстановитьСписокВыбораГрузовыхМест(Элементы.Контейнер, Объект.ЗаказНаКонтейнер);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперациюЗавершение(Результат, ДопПараметры = Неопределено) Экспорт
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ВыполнитьОперациюНаСервере();
	УстановитьОформлениеОдногоГрузаПослеОперации();
	УстановитьВидимость();
	ОтобразитьНовыеЗаказы();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОперациюНаСервере()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.ВыполнитьОперацию();
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
	УстановитьУсловноеОформлениеПолейСтатусов();
	ОбновитьДетализациюЗаказовСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияГрузовогоМестаЗавершение(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Стр = Объект.ГрузыПослеОперации.НайтиПоИдентификатору(Элементы.ГрузыПослеОперации.ТекущаяСтрока);
	
	ГрузовоеМестоЗаполнено = ЗначениеЗаполнено(Стр.ГрузовоеМесто);
	
	Если ГрузовоеМестоЗаполнено Тогда
		ЗаполнитьЗначенияСвойств(Стр, ПолучитьДанныеГрузовогоМеста(Стр.ГрузовоеМесто, Стр.ВидУпаковки, Стр.Заказ));
	ИначеЕсли ЗначениеЗаполнено(Результат) Тогда
		ЗаполнитьЗначенияСвойств(Стр, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуГрузовогоМеста(ДанныеТекущейСтроки = Неопределено, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура();
	
	флЕстьДанныеТекущейСтроки = (ДанныеТекущейСтроки <> Неопределено);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьИзмененияГрузовогоМестаЗавершение",
		ЭтотОбъект, Новый Структура("ГрузовоеМестоЗаполнено", флЕстьДанныеТекущейСтроки И ЗначениеЗаполнено(ДанныеТекущейСтроки.ГрузовоеМесто)));
		
	Если Не флЕстьДанныеТекущейСтроки Тогда
		ОткрытьФорму("Документ.уатОперацияСГрузом_уэ.Форма.ФормаГрузовогоМеста", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещенияОЗакрытии);
	ИначеЕсли ЗначениеЗаполнено(ДанныеТекущейСтроки.ГрузовоеМесто) Тогда
		ПараметрыФормы.Вставить("Ключ", ДанныеТекущейСтроки.ГрузовоеМесто);
		
		ОткрытьФорму("Справочник.уатГрузовыеМеста_уэ.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещенияОЗакрытии);
		
	Иначе
		ПараметрыФормы.Вставить("Объект", Новый Структура(ДанныеТекущейСтроки));
		
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("Валюта", ДанныеТекущейСтроки.Валюта);
		СтруктураРеквизитов.Вставить("ВесБрутто", ДанныеТекущейСтроки.ВесБрутто);
		СтруктураРеквизитов.Вставить("ВесТары", ДанныеТекущейСтроки.ВесТары);
		СтруктураРеквизитов.Вставить("ВидУпаковки", ДанныеТекущейСтроки.ВидУпаковки);
		СтруктураРеквизитов.Вставить("ВысотаГруза", ДанныеТекущейСтроки.Высота);
		СтруктураРеквизитов.Вставить("ДлинаГруза", ДанныеТекущейСтроки.Длина);
		СтруктураРеквизитов.Вставить("КоличествоМест", ДанныеТекущейСтроки.КоличествоМест);
		СтруктураРеквизитов.Вставить("Комментарий", ДанныеТекущейСтроки.Комментарий);
		СтруктураРеквизитов.Вставить("Наименование", ДанныеТекущейСтроки.Наименование);
		СтруктураРеквизитов.Вставить("Объем", ДанныеТекущейСтроки.Объем);
		СтруктураРеквизитов.Вставить("ОписаниеГруза", ДанныеТекущейСтроки.ОписаниеГруза);
		СтруктураРеквизитов.Вставить("Родитель", ДанныеТекущейСтроки.Родитель);
		СтруктураРеквизитов.Вставить("Стоимость", ДанныеТекущейСтроки.Стоимость);
		СтруктураРеквизитов.Вставить("СуммаВключаетНДС", ДанныеТекущейСтроки.СуммаВключаетНДС);
		СтруктураРеквизитов.Вставить("УчитыватьНДС", ДанныеТекущейСтроки.УчитыватьНДС);
		СтруктураРеквизитов.Вставить("ШиринаГруза", ДанныеТекущейСтроки.Ширина);
		
		ПараметрыФормы.Вставить("СтруктураРеквизитов", СтруктураРеквизитов);
		ОткрытьФорму("Документ.уатОперацияСГрузом_уэ.Форма.ФормаГрузовогоМеста", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещенияОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаКонтрагент(Очищать=Истина)
	Если флЗаказОтКонтрагента Тогда
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		Если Очищать Тогда
			Объект.Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
			Элементы.Контрагент.Заголовок = "Контрагент";
			Элементы.Контрагент.ПодсказкаВвода = НСтр("ru = 'Введите ИНН или наименование'; en = 'Enter TIN or name'");
		КонецЕсли;
	Иначе
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Если Очищать Тогда
			Объект.Контрагент = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
			Элементы.Контрагент.Заголовок = "Подразделение";
			Элементы.Контрагент.ПодсказкаВвода = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображениеТабличныхЧастей()
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация") Тогда
		Если Объект.ГрузыПослеОперации.Количество() = 0 Тогда
			НоваяСтрока = Объект.ГрузыПослеОперации.Добавить();
			НоваяСтрока.ВидУпаковки = ПолучитьОсновнойВидУпаковки();
		КонецЕсли;
		Элементы.ГрузыПослеОперации.ТекущаяСтрока = Объект.ГрузыПослеОперации[0].ПолучитьИдентификатор();
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация") Тогда
		Если Объект.ГрузыДоОперации.Количество() = 0 Тогда
			НоваяСтрока = Объект.ГрузыДоОперации.Добавить();
		КонецЕсли;
		Элементы.Грузы.ТекущаяСтрока = Объект.ГрузыДоОперации[0].ПолучитьИдентификатор();
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте") Тогда
		УстановитьСписокВыбораГрузовыхМест(Элементы.Контейнер1, Объект.ЗаказНаКонтейнер);
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера") Тогда
		УстановитьСписокВыбораГрузовыхМест(Элементы.Контейнер, Объект.ЗаказНаКонтейнер);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеОдногоГрузаПослеОперации()
	Если Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Комплектация")
		Или Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте") Тогда
		Возврат;
	КонецЕсли;
	
	флГрузовоеМестоЗаполнено = ЗначениеЗаполнено(Элементы.ГрузыПослеОперации.ТекущиеДанные.ГрузовоеМесто);
	Элементы.ГрузыПослеОперацииВидУпаковки1.ТолькоПросмотр = флГрузовоеМестоЗаполнено;
	Элементы.ГрузыПослеОперацииНаименование1.Шрифт = Новый Шрифт(Элементы.ГрузыПослеОперацииНаименование1.Шрифт,,,,Не флГрузовоеМестоЗаполнено);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыПослеОперацииНаименованиеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Стр = Объект.ГрузыПослеОперации.НайтиПоИдентификатору(Элементы.ГрузыПослеОперации.ТекущаяСтрока);
	ЗаполнитьЗначенияСвойств(Стр, ПолучитьДанныеГрузовогоМеста(Результат));
	УстановитьОформлениеОдногоГрузаПослеОперации();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеГрузовогоМеста(ГрузовоеМесто, ЕдиницаИзмерения = Неопределено, ЗаказНаТС = Неопределено)
	
	Если ТипЗнч(ГрузовоеМесто) = Тип("СправочникСсылка.уатГрузовыеМеста_уэ") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	уатГрузовыеМеста_уэ.Ссылка КАК ГрузовоеМесто,
		                      |	уатГрузовыеМеста_уэ.Наименование КАК Наименование,
		                      |	уатГрузовыеМеста_уэ.ВидУпаковки КАК ВидУпаковки,
		                      |	уатГрузовыеМеста_уэ.ВесБрутто КАК ВесБрутто,
		                      |	уатГрузовыеМеста_уэ.КоличествоМест КАК КоличествоМест,
		                      |	уатГрузовыеМеста_уэ.Объем КАК Объем,
		                      |	уатГрузовыеМеста_уэ.Длина КАК Длина,
		                      |	уатГрузовыеМеста_уэ.Ширина КАК Ширина,
		                      |	уатГрузовыеМеста_уэ.Высота КАК Высота,
		                      |	уатГрузовыеМеста_уэ.Валюта КАК Валюта,
		                      |	уатГрузовыеМеста_уэ.ОписаниеГруза КАК ОписаниеГруза,
		                      |	уатГрузовыеМеста_уэ.Комментарий КАК Комментарий,
		                      |	уатГрузовыеМеста_уэ.СуммаВключаетНДС КАК СуммаВключаетНДС,
		                      |	уатГрузовыеМеста_уэ.УчитыватьНДС КАК УчитыватьНДС,
		                      |	ВЫБОР
		                      |		КОГДА &ИспользоватьРасчетТары
		                      |			ТОГДА уатГрузовыеМеста_уэ.ВесТары
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ВесТары,
		                      |	уатГрузовыеМеста_уэ.Стоимость КАК Стоимость,
		                      |	уатГрузовыеМеста_уэ.Родитель КАК Родитель
		                      |ИЗ
		                      |	Справочник.уатГрузовыеМеста_уэ КАК уатГрузовыеМеста_уэ
		                      |ГДЕ
		                      |	уатГрузовыеМеста_уэ.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("ИспользоватьРасчетТары", ПолучитьФункциональнуюОпцию("уатИспользоватьРасчетТары_уэ"));
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Номенклатура.Ссылка КАК ГрузовоеМесто,
		|	Номенклатура.Наименование КАК Наименование,
		|	Номенклатура.ЕдиницаХраненияОстатков КАК ВидУпаковки,
		|	0 КАК ВесБрутто,
		|	0 КАК Объем,
		|	0 КАК КоличествоМест
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ГрузовоеМесто);
	тблРезультат = Запрос.Выполнить().Выгрузить();
	Если тблРезультат.Количество() > 0 Тогда
		СтруктураРезультат = Новый Структура;
		Для Каждого Колонка Из тблРезультат.Колонки Цикл
			СтруктураРезультат.Вставить(Колонка.Имя);
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, тблРезультат[0]);
			
		Если ТипЗнч(ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура")
			И ЗначениеЗаполнено(ЗаказНаТС)
			И ЗаказНаТС.ДетализацияЗакрытия = Перечисления.уатДетализацияЗаказаГрузоотправителя_уэ.ПоТоварам Тогда
			СтрокиТовара = ЗаказНаТС.Товары.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", ГрузовоеМесто, ЕдиницаИзмерения));
			Если СтрокиТовара.Количество() Тогда
				СтруктураРезультат.Вставить("ВесБрутто", СтрокиТовара[0].ВесБрутто / СтрокиТовара[0].Количество);
				СтруктураРезультат.Вставить("Объем", СтрокиТовара[0].Объем / СтрокиТовара[0].Количество);
				СтруктураРезультат.Вставить("КоличествоМест", СтрокиТовара[0].КоличествоМест / СтрокиТовара[0].Количество);
				СтруктураРезультат.Вставить("ВидУпаковки", ЕдиницаИзмерения);
			КонецЕсли;
		КонецЕсли;
		
		Возврат СтруктураРезультат;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура УстановитьОтборЗаказы()
	мсвПараметрыВыбора = Новый Массив;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.Разукомплектация")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте") Тогда
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДетализацияЗакрытия", 1));
	КонецЕсли;
	Элементы.ГрузыЗаказ1.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
КонецПроцедуры

&НаСервере
Процедура ОтобразитьНовыеЗаказы()
	Если Объект.ВидОперации = Перечисления.уатВидыОперацийОперацияСГрузом_уэ.ПереносОстатков
		Или Объект.ВидОперации = Перечисления.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера Тогда
		Для Индекс = 0 По Объект.ГрузыПослеОперации.Количество()-1 Цикл
			Объект.ГрузыДоОперации[Индекс].ЗаказНовый = Объект.ГрузыПослеОперации[Индекс].Заказ;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовыеЗаказы()
	Если Объект.ВидОперации = Перечисления.уатВидыОперацийОперацияСГрузом_уэ.ПереносОстатков
		Или Объект.ВидОперации = Перечисления.уатВидыОперацийОперацияСГрузом_уэ.ПерегрузкаКонтейнера Тогда
		Объект.ГрузыПослеОперации.Очистить();
		
		Для Индекс = 0 По Объект.ГрузыДоОперации.Количество()-1 Цикл
			НоваяСтрока = Объект.ГрузыПослеОперации.Добавить();
			НоваяСтрока.Заказ = Объект.ГрузыДоОперации[Индекс].ЗаказНовый;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.ГрузыДоОперации[Индекс],, "Заказ, КоличествоМест");
			НоваяСтрока.КоличествоМест = Объект.ГрузыДоОперации[Индекс].Количество;
			НоваяСтрока.ВидУпаковки = Объект.ГрузыДоОперации[Индекс].ЕдиницаИзмерения;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойВидУпаковки()
	Возврат Справочники.уатВидыУпаковки_уэ.ПолучитьОсновнойВидУпаковки();
КонецФункции

&НаКлиенте
Процедура ОперацияВыполненаЗавершение(Результат, ДопПараметры = Неопределено) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ОкончаниеОперации = '00010101';
		УстановитьВидимость();
	Иначе
		Объект.ОперацияВыполнена = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(Параметр)
	
	ДанныеШтрихкодов = Новый Массив();
	Если Параметр[1] = Неопределено Тогда
		ДанныеШтрихкодов.Добавить(Новый Структура("Штрихкод, Количество", Параметр[0], 1));
	Иначе
		ДанныеШтрихкодов.Добавить(Новый Структура("Штрихкод, Количество", Параметр[1][1], 1));
	КонецЕсли;
	
	// Проверки и получение значения штрихкода
	ШтрихкодГМ = "";
	Если ТипЗнч(ДанныеШтрихкодов) = Тип("Массив") И ДанныеШтрихкодов.Количество() > 0 Тогда
		СтруктураШтрихкод = ДанныеШтрихкодов[0];
		Если ТипЗнч(СтруктураШтрихкод) = Тип("Структура") И СтруктураШтрихкод.Свойство("Штрихкод") Тогда
			ШтрихкодГМ = СтруктураШтрихкод.Штрихкод;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ШтрихкодГМ) Тогда
		ПодобранныеЗаказы = уатЗащищенныеФункцииСервер_проф.ПолучитьГМПоШтрихкоду(ШтрихкодГМ);
		РезультатЗакрытия = Новый Структура("ПодобранныеЗаказы", ПодобранныеЗаказы);
		ПодборГрузовПослеПодбора(РезультатЗакрытия, Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидОперации(НовыйВидОперации)
	
	Если Объект.ВидОперации <> НовыйВидОперации Тогда
		ВидОперацииПредыдущееЗначение = Объект.ВидОперации;
		Объект.ВидОперации = НовыйВидОперации;
		
		Объект.ГрузыДоОперации.Очистить();
		Объект.ГрузыПослеОперации.Очистить();
		
		УстановитьОтборЗаказы();
		ГрузыПослеОперацииМодифицированыПользователем = Ложь;
		УстановитьОтображениеТабличныхЧастей();
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОткрытияОтчетОстаткиГрузовВКонтейнере(Ссылка)
	Возврат Документы.уатОперацияСГрузом_уэ.ПолучитьПараметрыОткрытияОтчетОстаткиГрузовВКонтейнере(Ссылка);
КонецФункции

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПередЗаписьюЗавершениеСервер();
		
		ТекстНСТР = НСтр("ru='Грузовой состав контейнера обновлен'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
	КонецЕсли;
	ВопросОбновитьГМ = Ложь;
	Если ЗакрыватьПриОбновлении Тогда
		Закрыть();
		ЗакрыватьПриОбновлении = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюЗавершениеСервер() 
	
	ОбъектСсылка = Объект.Контейнер.ПолучитьОбъект();
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте") Тогда
		ОбъектСсылка.ГрузовойСостав.Очистить();
		ОбъектСсылка.ТоварныйСостав.Очистить();

		Для Каждого ТекСтрока Из Объект.ГрузыДоОперации Цикл
			Если ТипЗнч(ТекСтрока.ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура") Тогда
				НоваяСтрока = ОбъектСсылка.ТоварныйСостав.Добавить();
				НоваяСтрока.ЗаказГрузоотправителя = ТекСтрока.Заказ;
				НоваяСтрока.Номенклатура          = ТекСтрока.ГрузовоеМесто;
				НоваяСтрока.Количество            = ТекСтрока.Количество;
				НоваяСтрока.ЕдиницаИзмерения      = ТекСтрока.ЕдиницаИзмерения;
			Иначе
				НоваяСтрока = ОбъектСсылка.ГрузовойСостав.Добавить();
				НоваяСтрока.ЗаказГрузоотправителя = ТекСтрока.Заказ;
				НоваяСтрока.ГрузовоеМесто         = ТекСтрока.ГрузовоеМесто;
				НоваяСтрока.Количество            = ТекСтрока.Количество;
				НоваяСтрока.ЕдиницаИзмерения      = ТекСтрока.ЕдиницаИзмерения;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого ТекСтрока Из Объект.ГрузыПослеОперации Цикл
			Если ТипЗнч(ТекСтрока.ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура") Тогда
				Строки = ОбъектСсылка.ТоварныйСостав.НайтиСтроки(Новый Структура("ЗаказГрузоотправителя, Номенклатура",
				ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто));
				Для Каждого ТекСтрокГруз Из Строки Цикл
					ОбъектСсылка.ТоварныйСостав.Удалить(ТекСтрокГруз);
				КонецЦикла;

			Иначе
				Строки = ОбъектСсылка.ГрузовойСостав.НайтиСтроки(Новый Структура("ЗаказГрузоотправителя, ГрузовоеМесто",
				ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто));
				
				Для Каждого ТекСтрокГруз Из Строки Цикл
					ОбъектСсылка.ГрузовойСостав.Удалить(ТекСтрокГруз);
				КонецЦикла;

			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Справочники.уатГрузовыеМеста_уэ.РассчитатьХарактеристикиПоТоварномуСоставу(ОбъектСсылка);
	ОбъектСсылка.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСоставуКонтейнераОтвет(РезультатВопроса, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Объект.ГрузыПослеОперации.Очистить();
		ЗаполнитьПоСоставуКонтейнераНаСервере();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда 
		ЗаполнитьПоСоставуКонтейнераНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСоставуКонтейнераНаСервере()
	
	Для Каждого ТекСтрока Из Объект.Контейнер.ГрузовойСостав Цикл
		НоваяСтрока = Объект.ГрузыПослеОперации.Добавить();
		НоваяСтрока.Заказ = ТекСтрока.ЗаказГрузоотправителя;
		НоваяСтрока.ГрузовоеМесто = ТекСтрока.ГрузовоеМесто;
		НоваяСтрока.ВидУпаковки = ТекСтрока.ЕдиницаИзмерения;
		НоваяСтрока.КоличествоМест = ТекСтрока.Количество;
		ЗаполнитьДанныеЗаказаВСтроке(НоваяСтрока);
		ЗаполнитьВесОбъемВСтроке(НоваяСтрока);
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Объект.Контейнер.ТоварныйСостав Цикл
		НоваяСтрока = Объект.ГрузыПослеОперации.Добавить();
		НоваяСтрока.Заказ = ТекСтрока.ЗаказГрузоотправителя;
		НоваяСтрока.ГрузовоеМесто = ТекСтрока.Номенклатура;
		НоваяСтрока.ВидУпаковки = ТекСтрока.ЕдиницаИзмерения;
		НоваяСтрока.КоличествоМест = ТекСтрока.Количество;
		ЗаполнитьДанныеЗаказаВСтроке(НоваяСтрока);
		ЗаполнитьВесОбъемВСтроке(НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамГрузовВКонтейнерахОтвет(РезультатВопроса, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		Объект.ГрузыПослеОперации.Очистить();
		ЗаполнитьПоОстаткамГрузовВКонтейнерахНаСервере();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда 
		ЗаполнитьПоОстаткамГрузовВКонтейнерахНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамГрузовВКонтейнерахНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.Контейнер КАК Контейнер,
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.ЗаказНаКонтейнер КАК ЗаказНаКонтейнер,
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.ГрузовоеМесто КАК ГрузовоеМесто,
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.уатОстаткиГрузовВКонтейнерах_уэ.Остатки(
	|			,
	|			Контейнер = &Контейнер
	|				И ЗаказНаКонтейнер = &ЗаказНаКонтейнер) КАК уатОстаткиГрузовВКонтейнерах_уэОстатки
	|ГДЕ
	|	уатОстаткиГрузовВКонтейнерах_уэОстатки.КоличествоОстаток > 0");
	Запрос.УстановитьПараметр("Контейнер", Объект.Контейнер);
	Запрос.УстановитьПараметр("ЗаказНаКонтейнер", Объект.ЗаказНаКонтейнер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ГрузыПослеОперации.Добавить();
		НоваяСтрока.Заказ = Выборка.ЗаказГрузоотправителя;
		НоваяСтрока.ГрузовоеМесто = Выборка.ГрузовоеМесто;
		НоваяСтрока.ВидУпаковки = Выборка.ЕдиницаИзмерения;
		НоваяСтрока.КоличествоМест = Выборка.КоличествоОстаток;
		ЗаполнитьДанныеЗаказаВСтроке(НоваяСтрока);
		ЗаполнитьВесОбъемВСтроке(НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДанныеЗаказаВСтроке(ДанныеСтроки)
	
	Если ДанныеСтроки <> Неопределено И ЗначениеЗаполнено(ДанныеСтроки.Заказ) Тогда
		ДанныеЗаказа = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ДанныеСтроки.Заказ,
			"АдресНазначения, ВидДоставки, Грузополучатель, ДоставкаС, ДоставкаПо");
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, ДанныеЗаказа);
		ДанныеСтроки.ПрибытиеС = ДанныеЗаказа.ДоставкаС;
		ДанныеСтроки.ПрибытиеПо = ДанныеЗаказа.ДоставкаПо;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВесОбъемВСтроке(ДанныеСтроки)
	ХарактеристикиГрузовогоМеста = ПолучитьДанныеГрузовогоМеста(ДанныеСтроки.ГрузовоеМесто, ДанныеСтроки.ВидУпаковки, ДанныеСтроки.Заказ);
	
	Если ХарактеристикиГрузовогоМеста = Неопределено Тогда
		// Грузовое место не заполнено, то есть детализация по заказу в целом
		ДанныеСтроки.ВесБрутто = ДанныеСтроки.Заказ.ВесБрутто;
		ДанныеСтроки.ВесБрутто = ДанныеСтроки.Заказ.Объем;
	Иначе
		КоэфПересчета = ?(ХарактеристикиГрузовогоМеста.КоличествоМест = 0, 0, ДанныеСтроки.КоличествоМест / ХарактеристикиГрузовогоМеста.КоличествоМест);
		ДанныеСтроки.ВесБрутто = ХарактеристикиГрузовогоМеста.ВесБрутто * КоэфПересчета;
		ДанныеСтроки.Объем     = ХарактеристикиГрузовогоМеста.Объем * КоэфПересчета;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТребуетсяОбновитьСоставКонтейнера()
	
	ТребуетсяОбновление = Ложь;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнере")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.РазмещениеГрузаВКонтейнереВПункте") Тогда
		
		Для Каждого ТекСтрока Из Объект.ГрузыДоОперации Цикл
			Если ТипЗнч(ТекСтрока.ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура") Тогда
				СтруктураПоиска = Новый Структура("ЗаказГрузоотправителя, Номенклатура, Количество, ЕдиницаИзмерения",
					ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто, ТекСтрока.Количество, ТекСтрока.ЕдиницаИзмерения);
				СтрокиСоставаКонтейнера = Объект.Контейнер.ТоварныйСостав.НайтиСтроки(СтруктураПоиска);
			Иначе
				СтруктураПоиска = Новый Структура("ЗаказГрузоотправителя, ГрузовоеМесто, Количество, ЕдиницаИзмерения",
					ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто, ТекСтрока.Количество, ТекСтрока.ЕдиницаИзмерения);
				Если Не ЗначениеЗаполнено(СтруктураПоиска.ГрузовоеМесто) Тогда
					СтруктураПоиска.ГрузовоеМесто = Справочники.уатГрузовыеМеста_уэ.ПустаяСсылка();
				КонецЕсли;
				СтрокиСоставаКонтейнера = Объект.Контейнер.ГрузовойСостав.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			Если СтрокиСоставаКонтейнера.Количество() = 0 Тогда
				ТребуетсяОбновление = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнера")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийОперацияСГрузом_уэ.ИзвлечениеГрузаИзКонтейнераВПункте") Тогда
		Для Каждого ТекСтрока Из Объект.ГрузыПослеОперации Цикл
			Если ТипЗнч(ТекСтрока.ГрузовоеМесто) = Тип("СправочникСсылка.Номенклатура") Тогда
				СтруктураПоиска = Новый Структура("ЗаказГрузоотправителя, Номенклатура", ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто);
				СтрокиСоставаКонтейнера = Объект.Контейнер.ТоварныйСостав.НайтиСтроки(СтруктураПоиска);
			Иначе
				СтруктураПоиска = Новый Структура("ЗаказГрузоотправителя, ГрузовоеМесто", ТекСтрока.Заказ, ТекСтрока.ГрузовоеМесто);
				Если Не ЗначениеЗаполнено(СтруктураПоиска.ГрузовоеМесто) Тогда
					СтруктураПоиска.ГрузовоеМесто = Справочники.уатГрузовыеМеста_уэ.ПустаяСсылка();
				КонецЕсли;
				СтрокиСоставаКонтейнера = Объект.Контейнер.ГрузовойСостав.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			Если СтрокиСоставаКонтейнера.Количество() > 0 Тогда
				ТребуетсяОбновление = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТребуетсяОбновление;
	
КонецФункции

#КонецОбласти

