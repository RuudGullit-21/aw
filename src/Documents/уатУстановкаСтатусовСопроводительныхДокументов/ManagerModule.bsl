#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуСтатусыСД(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	Заглушка = Истина;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуСтатусыСД(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	уатУстановкаСтатусовСопроводительныхДокументов.Дата КАК Период,
	|	уатУстановкаСтатусовСопроводительныхДокументов.Ссылка КАК Регистратор,
	|	уатУстановкаСтатусовСопроводительныхДокументов.Организация КАК Организация,
	|	уатУстановкаСтатусовСопроводительныхДокументов.Ответственный КАК Ответственный,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Статус КАК Статус,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Местоположение КАК Местоположение,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.ПунктОтправления КАК ПунктОтправления,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.ПунктПрибытия КАК ПунктПрибытия,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Отправитель КАК Отправитель,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Получатель КАК Получатель,
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.КомментарийИзменения КАК КомментарийИзменения
	|ИЗ
	|	Документ.уатУстановкаСтатусовСопроводительныхДокументов.СопроводительныеДокументы КАК уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатУстановкаСтатусовСопроводительныхДокументов КАК уатУстановкаСтатусовСопроводительныхДокументов
	|		ПО уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Ссылка = уатУстановкаСтатусовСопроводительныхДокументов.Ссылка
	|ГДЕ
	|	уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.Ссылка = &ДокументСсылка
	|	И НЕ уатУстановкаСтатусовСопроводительныхДокументовСопроводительныеДокументы.СопроводительныйДокумент.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	ТаблицаСтатусыСД = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСтатусыСопроводительныхДокументов", ТаблицаСтатусыСД);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли