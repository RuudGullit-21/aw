#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Registry of documents ""Incoming payment order""';ru='Реестр документов ""Платежное поручение входящее""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Если НЕ ДокументСсылка.Оплачено Тогда
		Возврат;
	КонецЕсли;
		
	флПодотчетник = (ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийПлатежноеПоручениеВходящее.ВозвратОтПодотчетника);
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	ВидОперацииПрочее = (ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийПлатежноеПоручениеВходящее.ВозвратОтПодотчетника
		ИЛИ ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийПлатежноеПоручениеВходящее.ПриходДенежныхСредствПрочее);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Взаиморасчеты"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежаДок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Сделка,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КурсДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КурсВзаиморасчетов
	|	КОНЕЦ КАК КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КратностьДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КратностьВзаиморасчетов
	|	КОНЕЦ КАК КратностьВзаиморасчетов,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
	|		ИНАЧЕ РасшифровкаПлатежаДок.СуммаПлатежа
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтавкаНДС КАК СтавкаНДС,
	|	РасшифровкаПлатежаДок.СуммаНДС КАК СуммаНДС,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ДвижениеДС"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	РасшифровкаПлатежаДок.Ссылка.БанковскийСчет КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.уатФормыОплаты.Безналичные) КАК ВидДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо
	|		ИНАЧЕ РасшифровкаПлатежаДок.Ссылка.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &флПодотчетник
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РасшифровкаПлатежаДок.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|				ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Сделка,
	|	РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента КАК Валюта,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ОстаткиДС"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.БанковскийСчет КАК БанковскийСчетКасса,
	|	ЗНАЧЕНИЕ(Перечисление.уатФормыОплаты.Безналичные) КАК ВидДенежныхСредств,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ОстаткиДСуПодотчетныхЛиц"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка КАК ДокументДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	РасшифровкаПлатежаДок.Ссылка.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента КАК Валюта,
	|	РасшифровкаПлатежаДок.СуммаПлатежа КАК Сумма,
	|	0 КАК СуммаУпр,
	|	РасшифровкаПлатежаДок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.уатПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ПлатежныйКалендарь"" КАК ИмяРегистра,
	|	РасшифровкаПлатежаДок.Ссылка КАК Регистратор,
	|	РасшифровкаПлатежаДок.Ссылка.Дата КАК Период,
	|	РасшифровкаПлатежаДок.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент) КАК ПолучательУслуг,
	|	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежаДок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС)
	|			ТОГДА РасшифровкаПлатежаДок.Сделка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказНаТС,
	|	РасшифровкаПлатежаДок.Сделка КАК Сделка,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КурсДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КурсВзаиморасчетов
	|	КОНЕЦ КАК КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВидОперацииПрочее
	|				ИЛИ &флПодотчетник
	|				ИЛИ НЕ &МноговалютныйУчет
	|			ТОГДА &КратностьДокумента
	|		ИНАЧЕ РасшифровкаПлатежаДок.КратностьВзаиморасчетов
	|	КОНЕЦ КАК КратностьВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &МноговалютныйУчет
	|			ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
	|		ИНАЧЕ РасшифровкаПлатежаДок.СуммаПлатежа
	|	КОНЕЦ КАК СуммаРасход,
	|	0 КАК СуммаРасходУпр
	|ИЗ
	|	Документ.уатПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
	|ГДЕ
	|	РасшифровкаПлатежаДок.Ссылка = &Ссылка
	|	И (РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам)
	|	ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным)
	|	ИЛИ РасшифровкаПлатежаДок.ДоговорКонтрагента.ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС))");
		
	Запрос.УстановитьПараметр("Ссылка",             ДокументСсылка);
	Запрос.УстановитьПараметр("флПодотчетник",      флПодотчетник);
	Запрос.УстановитьПараметр("ВидОперацииПрочее",  ВидОперацииПрочее);
	Запрос.УстановитьПараметр("КурсДокумента",      СтруктураДополнительныеСвойства.КурсДокумента);
	Запрос.УстановитьПараметр("КратностьДокумента", СтруктураДополнительныеСвойства.КратностьДокумента);
	Запрос.УстановитьПараметр("МноговалютныйУчет",  флМноговалютныйУчет);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// взаиморасчеты
	ТаблицаВзаиморасчетов = МассивРезультатов[0].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаВзаиморасчетов Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаВзаиморасчетов,
			ТекСтрока.Валюта,                  СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			ТекСтрока.КурсВзаиморасчетов,      СтруктураДополнительныеСвойства.КурсУпр,
			ТекСтрока.КратностьВзаиморасчетов, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТабВзаиморасчетов.Свернуть("ВидДвижения, Период, Регистратор, ДоговорКонтрагента, Сделка, Организация, Контрагент, Валюта", "СуммаВзаиморасчетов, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВзаиморасчетов", ТаблицаВзаиморасчетов);
	
	// ДДС
	ТаблицаДвижениеДС = МассивРезультатов[1].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаДвижениеДС Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
			ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
			СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТаблицаДвижениеДС.Свернуть("ВидДвижения, Период, Регистратор, Валюта, БанковскийСчетКасса, ВидДенежныхСредств, ПриходРасход, СтатьяДвиженияДенежныхСредств, ДокументДвижения, Контрагент, ДоговорКонтрагента, Сделка, Организация","Сумма, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеДС", ТаблицаДвижениеДС);
	
	// Остатки ДС	
	ТаблицаОстаткиДС = МассивРезультатов[2].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаОстаткиДС Цикл
		ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
			ДокументСсылка.ВалютаДокумента,                      СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			СтруктураДополнительныеСвойства.КурсДокумента,       СтруктураДополнительныеСвойства.КурсУпр,
			СтруктураДополнительныеСвойства.КратностьДокумента,  СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	//ТаблицаОстаткиДС.Свернуть("ВидДвижения, Период, Регистратор, Организация, БанковскийСчетКасса, ВидДенежныхСредств, СтатьяДвиженияДенежныхСредств", "Сумма, СуммаУпр");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстаткиДС", ТаблицаОстаткиДС);
	
	// Остатки ДС у подотчетных лиц
	Если флПодотчетник Тогда
		ТаблицаОстаткиДСУПодотчетныхЛиц = МассивРезультатов[3].Выгрузить();
		Для Каждого ТекСтрока Из ТаблицаОстаткиДСУПодотчетныхЛиц Цикл
			ТекСтрока.СуммаУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Сумма,
				ДокументСсылка.ВалютаДокумента,                     СтруктураДополнительныеСвойства.ВалютаУпрУчета,
				СтруктураДополнительныеСвойства.КурсДокумента,      СтруктураДополнительныеСвойства.КурсУпр,
				СтруктураДополнительныеСвойства.КратностьДокумента, СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЦикла;
		//ТаблицаОстаткиДСУПодотчетныхЛиц.Свернуть("ВидДвижения, Период, Регистратор, Организация, ПодотчетноеЛицо, Валюта", "Сумма, СуммаУпр");
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОстаткиДСУПодотчетныхЛиц", ТаблицаОстаткиДСУПодотчетныхЛиц);
	КонецЕсли;
	
	// Платежный календарь
	ТаблицаПлатежныйКалендарь = МассивРезультатов[4].Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаПлатежныйКалендарь Цикл
		ТекСтрока.СуммаРасходУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаРасход,
			ТекСтрока.Валюта,                  СтруктураДополнительныеСвойства.ВалютаУпрУчета,
			ТекСтрока.КурсВзаиморасчетов,      СтруктураДополнительныеСвойства.КурсУпр,
			ТекСтрока.КратностьВзаиморасчетов, СтруктураДополнительныеСвойства.КратностьУпр);
	КонецЦикла;
	ТаблицаПлатежныйКалендарь.Свернуть("Период, Регистратор, Организация, Контрагент, ДоговорКонтрагента, Сделка, ЗаказНаТС, Валюта, ПолучательУслуг", "СуммаРасход, СуммаРасходУпр");
	уатПроведение_проф.РаспределитьПлатежныйКалендарьПоГрафикуОплаты(ТаблицаПлатежныйКалендарь, ДокументСсылка);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", ТаблицаПлатежныйКалендарь);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
КонецПроцедуры

// Получает дополнительные реквизиты для отображения в отчете "Реестр документов"
// 
// Возвращаемое значение:
//  Структура - доп. реквизитов
//
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли