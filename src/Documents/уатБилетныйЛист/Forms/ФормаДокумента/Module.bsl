
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// заполнение при вводе из путевого листа
	Если Параметры.Свойство("ДобавлениеБилетовИзПЛ") И Параметры.ДобавлениеБилетовИзПЛ = Истина Тогда
		ДобавлениеБилетовИзПЛ = Истина;
		Если НЕ Параметры.Свойство("БилетныйЛистКопирование") Тогда
			ДокОбъект = РеквизитФормыВЗначение("Объект");
			ДокОбъект.Заполнить(Параметры.ПутевойЛист);
			ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
		КонецЕсли;
	КонецЕсли;
	
	// заполнение при редактировании из путевого листа
	Если Параметры.Свойство("РедактированиеБилетовИзПЛ") И Параметры.РедактированиеБилетовИзПЛ = Истина Тогда
		РедактированиеБилетовИзПЛ = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ПредДата = Объект.Дата;
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Объект.СуммаПроданоБилетов = Объект.Билеты.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ДобавлениеБилетовИзПЛ Тогда
		Оповестить("ДобавлениеБилетовИзПЛ", Объект.Ссылка);
	КонецЕсли;
	Если РедактированиеБилетовИзПЛ Тогда
		Оповестить("РедактированиеБилетовИзПЛ", Объект.Ссылка);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// заполняем водителя
	Если ПредДата <> НачалоДня(Объект.Дата) Тогда
		уатОбщегоНазначения.ЗаполнитьЭкипажТС(Объект.ТС, Объект.Организация, Объект.Дата,
			Объект.Сотрудник,,,, Объект.Ссылка.Пустая());
	КонецЕсли;
		
	ПредДата = Объект.Дата;
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Объект.Сотрудник, Новый Структура("Организация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Объект.Сотрудник, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	УстановитьТС(Объект.ТС);
	УдалитьСтрокиСНесоответствующимиПутевымиЛистами();
КонецПроцедуры

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Объект.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПринятоВКассуПриИзменении(Элемент)
	ОбновитьПодвал();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Билеты

&НаКлиенте
Процедура БилетыВозвратПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
			
		Элемент.ТекущиеДанные.ПутевойЛист = мПутевойЛист;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БилетыВозвратПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если Не ОтменаРедактирования Тогда
		
		мПутевойЛист = Элемент.ТекущиеДанные.ПутевойЛист;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БилетыВыдачаНомерНачальныйПриИзменении(Элемент)
	ПересчетКоличества(Элементы.БилетыВыдача.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура БилетыНомерНачальныйПриИзменении(Элемент)
	ТекСтрока = Элементы.БилетыВозврат.ТекущиеДанные;
	Если ТекСтрока.НомерНачальный > ТекСтрока.НомерКонечный Тогда
		ТекСтрока.НомерКонечный = ТекСтрока.НомерНачальный;
	КонецЕсли;
	
	ПересчетКоличества(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура БилетыНомерКонечныйПриИзменении(Элемент)
	ТекСтрока = Элементы.БилетыВозврат.ТекущиеДанные;
	Если ТекСтрока.НомерНачальный > ТекСтрока.НомерКонечный Тогда
		ТекСтрока.НомерНачальный = ТекСтрока.НомерКонечный;
	КонецЕсли;
	
	ПересчетКоличества(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура БилетыВозвратСуммаПриИзменении(Элемент)
	ОбновитьПодвал();
КонецПроцедуры

&НаКлиенте
Процедура БилетыВозвратПутевойЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Документ.уатПутевойЛист.ФормаВыбора",, Элемент);
	ФормаВыбора.Список.Отбор.Элементы.Очистить();
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ФормаВыбора.Список, "ТранспортноеСредство", Объект.ТС);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура БилетыВозвратКоличествоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.БилетыВозврат.ТекущиеДанные;
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Билет, "Цена");
	СтрокаТабличнойЧасти.НомерКонечный = ?(СтрокаТабличнойЧасти.Количество = 0, 0, СтрокаТабличнойЧасти.НомерНачальный + СтрокаТабличнойЧасти.Количество - 1);
	ОбновитьПодвал();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура СотрудникПриИзмененииСервер()
	мДатаНачала = ДобавитьМесяц(Объект.Дата, -1);
	мТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛистыВодителя(Объект.Сотрудник, мДатаНачала, КонецДня(Объект.Дата),,,Ложь);
	
	Попытка
		мПутевойЛист = мТаблицаПЛ[0].Ссылка;
		Объект.ТС = мПутевойЛист.ТранспортноеСредство;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиСНесоответствующимиПутевымиЛистами()
	Сч = Объект.Билеты.Количество() - 1;
	Пока Сч >= 0 цикл
		Если ЗначениеЗаполнено(Объект.Билеты[Сч].ПутевойЛист) И Объект.Билеты[Сч].ПутевойЛист.ТранспортноеСредство <> Объект.ТС тогда
			Объект.Билеты.Удалить(Сч);
		КонецЕсли;
		Сч = Сч - 1;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТС(мТС)
	
	Модифицированность = Истина;

	Если НЕ ЗначениеЗаполнено(мТС) тогда
		Возврат;	
	КонецЕсли;
	
	// заполняем водителя
	уатОбщегоНазначения.ЗаполнитьЭкипажТС(Объект.ТС, Объект.Организация, Объект.Дата, Объект.Сотрудник);
	
	Для каждого ТекСтрока ИЗ Объект.Билеты цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.ПутевойЛист) тогда
			мДатаНачала = ДобавитьМесяц(Объект.Дата,-1);
			УстановитьТССервер(ТекСтрока.ПутевойЛист, мТС, мДатаНачала, Объект.Дата);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьТССервер(мПутевойЛист, мТС, мДатаНачала, мДата)
	ТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛисты(мТС, мДатаНачала, КонецДня(мДата),, Ложь);
	Если ТаблицаПЛ.Количество() > 0 Тогда
		мПутевойЛист = ТаблицаПЛ[0].Ссылка;
	КонецЕсли;	
КонецПроцедуры

// Процедура формирует текст в информационной надписи об итогах документа.
//
// Параметры:
//  Нет.
//
&НаСервере
Процедура ОбновитьПодвал()
	СуммаПроданоБилетов = Объект.Билеты.Итог("Сумма");
	Если Объект.СуммаПроданоБилетов <> СуммаПроданоБилетов Тогда
		Объект.СуммаПроданоБилетов = СуммаПроданоБилетов;
	КонецЕсли;
	Если СуммаПроданоБилетов > Объект.СуммаПринятоВКассу Тогда
		Элементы.СуммаНедостача.Видимость = Истина;
		СуммаНедостача = уатОбщегоНазначенияТиповые.уатФорматСумм(СуммаПроданоБилетов - Объект.СуммаПринятоВКассу);
	Иначе
		Элементы.СуммаНедостача.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры // ОбновитьПодвал()

&НаКлиенте
Процедура ПересчетКоличества(СтрокаТабличнойЧасти)
	
	СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.НомерКонечный - СтрокаТабличнойЧасти.НомерНачальный + 1;
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Билет, "Цена");
	ОбновитьПодвал();
	
КонецПроцедуры

#КонецОбласти
