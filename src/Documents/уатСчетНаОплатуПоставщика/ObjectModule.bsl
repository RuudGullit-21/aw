#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем мВалютаРегламентированногоУчета Экспорт; // Валюта регламентированного учета.

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Заполняет услуги по выбранной табличной части
//  используется в УЭ
//
// Параметры:
//  ТЧ					 - 	 - табличная часть для заполнения
//  СтруктураПараметров	 - 	 - структура отбора для заполнения
//
Процедура ЗаполнитьУслугиПоТЧ(ТЧ, СтруктураПараметров = Неопределено) Экспорт
	Если Услуги.Количество() > 0 И ТипЗнч(СтруктураПараметров) = Тип("Структура")
		И СтруктураПараметров.Свойство("ОчиститьТаблицу") И СтруктураПараметров.ОчиститьТаблицу Тогда
		
		Услуги.Очистить();
	КонецЕсли;
	
	флПоЗаказам = Ложь;
	
	курсВалютыДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента,Дата);
	Для Каждого СтрокаТЧ Из ТЧ Цикл
		НоваяСтрока = Услуги.Добавить();
		СтрокаСодержание = Строка(СтрокаТЧ.Услуга);
		НоваяСтрока.Номенклатура     = СтрокаТЧ.Услуга;
		НоваяСтрока.Содержание       = СтрокаСодержание;
		НоваяСтрока.Количество       = СтрокаТч.Количество;
		НоваяСтрока.СтавкаНДС        = СтрокаТЧ.СтавкаНДС;
		
		мСуммаРегл 					 = СтрокаТЧ.СуммаРегл - ?(СуммаВключаетНДС, 0, СтрокаТЧ.СуммаНДС);
		НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(мСуммаРегл,
		мВалютаРегламентированногоУчета,
		ВалютаДокумента,
		1,
		курсВалютыДокумента.Курс,
		1,
		курсВалютыДокумента.Кратность);
		
		НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаНДС,
		мВалютаРегламентированногоУчета,
		ВалютаДокумента,
		1,
		курсВалютыДокумента.Курс,
		1,
		курсВалютыДокумента.Кратность);
		
		Если НоваяСтрока.Количество = 0 тогда
			НоваяСтрока.Цена = 0;
		Иначе
			НоваяСтрока.Цена = НоваяСтрока.Сумма / НоваяСтрока.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Основание = ДанныеЗаполнения;
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
		Дата = ТекущаяДата();
		Организация         = Основание.Организация;
		Контрагент          = Основание.Контрагент;
		ДоговорКонтрагента  = Основание.ДоговорКонтрагента;
		СуммаДокумента      = Основание.СуммаДокумента;
		УчитыватьНДС        = Основание.УчитыватьНДС; 
		СуммаВключаетНДС    = Основание.СуммаВключаетНДС;
		Комментарий         = "Заполнен на основании " + Основание;
		ВалютаДокумента 		= Основание.ВалютаДокумента;
		КратностьВзаиморасчетов = Основание.КратностьВзаиморасчетов;
		КурсВзаиморасчетов 		= Основание.КурсВзаиморасчетов;
		ДокументОснование = Основание;
		
		Для Каждого ТекСтрока из Основание.Услуги Цикл
			НоваяСтрока						= Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.уатПоступлениеТоваровУслуг") Тогда
		
		Дата = ТекущаяДата();
		ДокументОснование   = Основание;
		Организация         = Основание.Организация;
		Контрагент          = Основание.Контрагент;
		ДоговорКонтрагента  = Основание.ДоговорКонтрагента;
		СуммаДокумента      = Основание.СуммаДокумента;
		УчитыватьНДС        = Основание.УчитыватьНДС; 
		СуммаВключаетНДС    = Основание.СуммаВключаетНДС;
		Комментарий         = "Заполнен на основании " + Основание;
		ВалютаДокумента 		= Основание.ВалютаДокумента;
		//КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
		//КурсВзаиморасчетов 		= ДанныеЗаполнения.КурсВзаиморасчетов;
		ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
		КурсВзаиморасчетов      = ВалютаДокументаКурсКратность.Курс;
		КратностьВзаиморасчетов = ВалютаДокументаКурсКратность.Кратность;
		
		Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ОсновнойБанковскийСчет", "Организации") Тогда
			СтруктурнаяЕдиница = Основание.Организация.ОсновнойБанковскийСчет;
		КонецЕсли;
		
		Для Каждого ТекСтрока из Основание.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
				НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТекСтрока из Основание.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЦикла;
		
		СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		уатОбщегоНазначения.ОбработкаЗаполненияФормаВыборКонтрагента(ДанныеЗаполнения, ДополнительныеСвойства);
		
	ИначеЕсли уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП()
		И (ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатСтраховойСертификат_уэ") ИЛИ 
			ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатСтраховойСертификат_уэ")) Тогда
		ВалютаДокумента         = ДанныеЗаполнения.ВалютаДокумента;
		ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
		КурсВзаиморасчетов      = ДанныеЗаполнения.КурсВзаиморасчетов;
		КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
		Организация             = ДанныеЗаполнения.Организация;
		Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
		УчитыватьНДС            = ДанныеЗаполнения.УчитыватьНДС;
		СуммаВключаетНДС        = ДанныеЗаполнения.СуммаВключаетНДС;
		СуммаДокумента          = ДанныеЗаполнения.СуммаДокумента;
		ДокументОснование       = ДанныеЗаполнения;
		Контрагент              = ДанныеЗаполнения.Контрагент;
		ДоговорКонтрагента      = ДанныеЗаполнения.ДоговорКонтрагента;

		флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
		КэшКурсов = Неопределено;

		Для Каждого ТекСтрока Из ДанныеЗаполнения.Расходы Цикл
			НоваяСтрока = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
				НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
			КонецЕсли;
			ВалютаСтроки = ?(ЗначениеЗаполнено(ТекСтрока.Валюта), ТекСтрока.Валюта, ДанныеЗаполнения.ВалютаДокумента);
	
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.Валюта           = ВалютаСтроки;
				НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
				НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
				НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
				НоваяСтрока.КроссКурс        = 1;
			КонецЕсли;
			Если ВалютаСтроки <> ВалютаДокумента Тогда
				СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
				
				НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
		СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
			
	ИначеЕсли уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП()
		И (ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатАктСверкиСтраховыхСертификатов_уэ") ИЛИ 
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатАктСверкиСтраховыхСертификатов_уэ")) Тогда
				
			ВалютаДокумента         = Константы.ВалютаРегламентированногоУчета.Получить();
			ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
			КурсВзаиморасчетов      = ВалютаДокументаКурсКратность.Курс;
			КратностьВзаиморасчетов = ВалютаДокументаКурсКратность.Кратность;
			Организация             = ДанныеЗаполнения.Организация;
			Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
			ДокументОснование       = ДанныеЗаполнения;
			Контрагент              = ДанныеЗаполнения.Контрагент;
			ДоговорКонтрагента      = ДанныеЗаполнения.ДоговорКонтрагента;

			флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
			КэшКурсов = Неопределено;

			Для Каждого ТекСтрокаСверка Из ДанныеЗаполнения.Сверка Цикл
				
				Для Каждого ТекСтрока Из ТекСтрокаСверка.СтраховойСертификат.Расходы Цикл
					НоваяСтрока = Услуги.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
						НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
					КонецЕсли;
					ВалютаСтроки = ?(ЗначениеЗаполнено(ТекСтрока.Валюта), ТекСтрока.Валюта, ДанныеЗаполнения.ВалютаДокумента);
					
					Если флМноговалютныйУчет Тогда
						НоваяСтрока.Валюта           = ВалютаСтроки;
						НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
						НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
						НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
						НоваяСтрока.КроссКурс        = 1;
					КонецЕсли;
					Если ВалютаСтроки <> ВалютаДокумента Тогда
						СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
						
						НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
						ВалютаСтроки,                     ВалютаДокумента,
						СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
						СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
						НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
						ВалютаСтроки,                     ВалютаДокумента,
						СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
						СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
						НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
						ВалютаСтроки,                     ВалютаДокумента,
						СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
						СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
						
						Если флМноговалютныйУчет Тогда
							НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
			
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.уатЗаявкаНаРемонт") Тогда  
			
		РемонтВАвтосервисе     = Основание.СпособРемонта = Перечисления.уатСпособыРемонта.Автосервис; 
		
		Организация = Основание.Организация;
		Комментарий = "Заполнен на основании " + Основание;
		ДокументОснование = Основание;
		
		Если РемонтВАвтосервисе Тогда
			Контрагент          = Основание.Контрагент;
			ДоговорКонтрагента  = Основание.ДоговорКонтрагента;   
			
			Для Каждого ТекСтрока из Основание.Работы Цикл
				НоваяСтрока                = Услуги.Добавить(); 
				НоваяСтрока.Номенклатура   = ТекСтрока.Работа.Номенклатура;
				НоваяСтрока.Содержание     = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(НоваяСтрока.Номенклатура, "НаименованиеПолное");
				НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЦикла; 
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = НСтр("en='Impossible to record document: ';ru='Невозможно записать документ: '") + СокрЛП(ЭтотОбъект);
	ПроверитьЗаполнениеТабличнойЧастиУслуги(Отказ,заголовок);
	ПроверитьЗаполнениеТабличнойЧастиТовары(Отказ,заголовок);
	
	Если УчитыватьНДС Тогда
		ПроверяемыеРеквизиты.Добавить("Услуги.СтавкаНДС");
		ПроверяемыеРеквизиты.Добавить("Товары.СтавкаНДС");
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	уатУчетОригиналовПервичныхДокументов.СформироватьДвиженияРеестрДокументов(Ссылка);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеТабличнойЧастиУслуги(Отказ, Заголовок)
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("Номенклатура, Содержание, Количество, Сумма");
	
	Если УчитыватьНДС Тогда
		СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	КонецЕсли;
	
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Услуги", СтруктураОбязательныхПолей,
		Отказ, Заголовок);
	
	// Здесь товаров быть не должно.
	уатОбщегоНазначенияТиповые.уатПроверитьЧтоНетТоваров(ЭтотОбъект, "Услуги", , Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиУслуги()

Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(Отказ, Заголовок)
	
	СтруктураОбязательныхРеквизитов = Новый Структура("Номенклатура, Количество, Цена, ЕдиницаИзмерения");
	
	Если УчитыватьНДС Тогда
		СтруктураОбязательныхРеквизитов.Вставить("СтавкаНДС");
	КонецЕсли;
	
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Товары", СтруктураОбязательныхРеквизитов,
		Отказ, Заголовок);
	
	уатОбщегоНазначенияТиповые.ПроверитьЧтоНетУслуг(ЭтотОбъект, "Товары", , Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияИзФормыВыбораКонтрагента(мДокументОснование, ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.уатЗаказГрузоотправителя")
		ИЛИ ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
		ОбработкаЗаполненияМЛЗГ(мДокументОснование, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.уатРеестрОплатыШтрафов") Тогда
		ОбработкаЗаполненияРеестрОплатыШтрафов(мДокументОснование, ДанныеЗаполнения);
	Иначе
		ОбработкаЗаполненияЗП(мДокументОснование, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЗП(мДокументОснование, ДанныеЗаполнения)
	
	// Заполнение шапки
	ВалютаДокумента         = мДокументОснование.ВалютаДокумента;
	ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
	КурсВзаиморасчетов      = ВалютаДокументаКурсКратность.Курс;
	КратностьВзаиморасчетов = ВалютаДокументаКурсКратность.Кратность;
	Комментарий             = мДокументОснование.Комментарий;
	Организация             = мДокументОснование.Организация;
	Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
	ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
	УчитыватьНДС            = мДокументОснование.СуммаВключаетНДС;
	СуммаВключаетНДС        = мДокументОснование.СуммаВключаетНДС;
	СуммаДокумента          = мДокументОснование.СуммаДокумента;
	ДокументОснование       = мДокументОснование.Ссылка;
	Контрагент              = мДокументОснование.Контрагент;
	ДоговорКонтрагента      = мДокументОснование.ДоговорКонтрагента;
	
	МассивСтрок = Новый Массив();
	Для Каждого ТекСтрока Из ДанныеЗаполнения Цикл
		МассивСтрок.Добавить(ТекСтрока.НомерСтроки);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент) КАК ПолучательУслуг,
	|	ЗНАЧЕНИЕ(Документ.уатМаршрутныйЛист.ПустаяСсылка) КАК ПутевойЛист,
	|	уатЗаказПеревозчику_уэРасходы.Ссылка.ТС КАК ТС,
	|	уатЗаказПеревозчику_уэРасходы.Ссылка.ТС.Модель КАК МодельТС,
	|	уатЗаказПеревозчику_уэРасходы.Ссылка.Водитель КАК Водитель,
	|	ЕСТЬNULL(уатЗаказПеревозчику_уэРасходы.Тариф.ПараметрВыработки, ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПустаяСсылка)) КАК ПараметрВыработки,
	|	уатЗаказПеревозчику_уэРасходы.Номенклатура КАК Услуга,
	|	уатЗаказПеревозчику_уэРасходы.Груз.Маршрут КАК Маршрут,
	|	ЗНАЧЕНИЕ(Справочник.уатОбъектыСтроительства.ПустаяСсылка) КАК ОбъектСтроительства,
	|	уатЗаказПеревозчику_уэРасходы.Количество КАК Количество,
	|	уатЗаказПеревозчику_уэРасходы.СтавкаНДС КАК СтавкаНДС,
	|	уатЗаказПеревозчику_уэРасходы.Сумма КАК Сумма,
	|	уатЗаказПеревозчику_уэРасходы.СуммаНДС КАК СуммаНДС,
	|	уатЗаказПеревозчику_уэРасходы.Цена КАК Цена,
	|	уатЗаказПеревозчику_уэРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	уатЗаказПеревозчику_уэРасходы.Груз.АдресОтправления КАК ПунктОтправления,
	|	уатЗаказПеревозчику_уэРасходы.Груз.АдресНазначения КАК ПунктПрибытия,
	|	уатЗаказПеревозчику_уэРасходы.Груз КАК ЗаказНаТС,
	|	уатЗаказПеревозчику_уэРасходы.Ссылка КАК ЗаказПеревозчику,
	|	уатЗаказПеревозчику_уэРасходы.Валюта КАК Валюта
	|ИЗ
	|	Документ.уатЗаказПеревозчику_уэ.Расходы КАК уатЗаказПеревозчику_уэРасходы
	|ГДЕ
	|	уатЗаказПеревозчику_уэРасходы.Ссылка = &Ссылка
	|	И уатЗаказПеревозчику_уэРасходы.НомерСтроки В(&МассивСтрок)";
	
	Запрос.УстановитьПараметр("Ссылка", мДокументОснование);
	Запрос.УстановитьПараметр("МассивСтрок", МассивСтрок);
	
	тблРезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	КэшКурсов = Неопределено;
	
	уатОбщегоНазначения.УстановитьДопПоляДетализации(тблРезультатЗапроса, ДоговорКонтрагента,
		Перечисления.уатПолучателиУслуг.НашаОрганизация,, мДокументОснование);
	
	Для Каждого ТекУслуга Из тблРезультатЗапроса Цикл
		НоваяСтрока = Услуги.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекУслуга,, "Валюта");
		
		НоваяСтрока.Заказ = ТекУслуга.ЗаказПеревозчику;
		НоваяСтрока.ЗаказНаТС = ТекУслуга.Заказ;
		НоваяСтрока.Номенклатура = ТекУслуга.Услуга;

		НоваяСтрока.Содержание = уатОбщегоНазначения.ПолучитьСодержание(ТекУслуга, ДоговорКонтрагента,
			Перечисления.уатПолучателиУслуг.НашаОрганизация);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Содержание) Тогда
			НоваяСтрока.Содержание = ТекУслуга.Услуга.НаименованиеПолное;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
			НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
		КонецЕсли;
		
		ВалютаСтроки = ?(ЗначениеЗаполнено(ТекУслуга.Валюта), ТекУслуга.Валюта, мДокументОснование.ВалютаДокумента);
		
		Если флМноговалютныйУчет Тогда
			НоваяСтрока.Валюта           = ВалютаСтроки;
			НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
			НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
			НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
			НоваяСтрока.КроссКурс        = 1;
		КонецЕсли;
		Если ВалютаСтроки <> ВалютаДокумента Тогда
			СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
			
			НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияМЛЗГ(мДокументОснование, ДанныеЗаполнения)
	ДокументОснование = мДокументОснование;
	ПризнакМаршрутногоЛиста = ?(ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатМаршрутныйЛист"), Истина, Ложь);
	Если ПризнакМаршрутногоЛиста Тогда
		Если ДанныеЗаполнения.Количество() > 0 Тогда
			Данные = ДанныеЗаполнения[0];
			Валюта = Данные.Валюта;
		КонецЕсли;
		КлючСодержания = "МЛ";
	Иначе
		Данные = ДокументОснование;
		Валюта = Данные.ВалютаДокумента;
		КлючСодержания = "ЗГ";
	КонецЕсли;
	
	Комментарий             = ДокументОснование.Комментарий;
	Организация             = ДокументОснование.Организация;
	Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		Пользователи.АвторизованныйПользователь(), "ОсновнойОтветственный");
		
	ВалютаДокумента         = мДокументОснование.ВалютаДокумента;
	ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
	КурсВзаиморасчетов      = ВалютаДокументаКурсКратность.Курс;
	КратностьВзаиморасчетов = ВалютаДокументаКурсКратность.Кратность;
	
	Если ДанныеЗаполнения.Количество() > 0 Тогда
		Контрагент          = ДанныеЗаполнения[0].Контрагент;
		ДоговорКонтрагента  = ДанныеЗаполнения[0].Договор;
		УчитыватьНДС        = Данные.УчитыватьНДС;
		СуммаВключаетНДС    = Данные.СуммаВключаетНДС;
	КонецЕсли;
	
	ОбработкаЗаполненияМЛЗГДобавитьСтрокиУслуг(ДанныеЗаполнения, ПризнакМаршрутногоЛиста);
	
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияРеестрОплатыШтрафов(мДокументОснование, ДанныеЗаполнения)
	
	// Заполнение шапки
	Комментарий             = мДокументОснование.Комментарий;
	Организация             = мДокументОснование.Организация;
	Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
	ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
	ДокументОснование       = мДокументОснование.Ссылка;
	
	МассивСтрок = Новый Массив();
	Для Каждого ТекСтрока Из ДанныеЗаполнения Цикл
		МассивСтрок.Добавить(ТекСтрока.НомерСтроки);
		Контрагент         = ТекСтрока.Штраф.ПолучательПлатежа;
		ДоговорКонтрагента = ТекСтрока.Штраф.ДоговорПолучателя;
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Сумма = ТекСтрока.Штраф.СуммаШтрафа;
	КонецЦикла;
	
	СуммаДокумента = мДокументОснование.ИтоговаяСтоимость;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияМЛЗГДобавитьСтрокиУслуг(СтрокиУслуг, ПризнакМаршрутногоЛиста = Ложь) Экспорт
	
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	КэшКурсов = Неопределено;
	
	уатОбщегоНазначения.УстановитьДопПоляДетализации(СтрокиУслуг, ДоговорКонтрагента,
		Перечисления.уатПолучателиУслуг.НашаОрганизация,, ДокументОснование);
	
	Для Каждого ТекУслуга Из СтрокиУслуг Цикл
		НоваяСтрока = Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекУслуга,, "Валюта");
		НоваяСтрока.Номенклатура = ТекУслуга.Услуга;
				
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
			НоваяСтрока.СтатьяРасходов = уатОбщегоНазначенияСервер.СтатьяРасходовНоменклатуры(НоваяСтрока.Номенклатура);
		КонецЕсли;
		
		ВалютаСтроки = ?(ЗначениеЗаполнено(ТекУслуга.Валюта), ТекУслуга.Валюта, ДокументОснование.ВалютаДокумента);
		
		НоваяСтрока.Содержание = уатОбщегоНазначения.ПолучитьСодержание(ТекУслуга, ДоговорКонтрагента,
			Перечисления.уатПолучателиУслуг.НашаОрганизация);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Содержание) Тогда
			НоваяСтрока.Содержание = ТекУслуга.Услуга.НаименованиеПолное;
		КонецЕсли;
		
		Если ПризнакМаршрутногоЛиста Тогда
			НоваяСтрока.Заказ     = ТекУслуга.ЗаказПеревозчику;
			НоваяСтрока.ЗаказНаТС = ТекУслуга.Заказ;
			
			Если Не ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
			
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.Валюта           = ВалютаСтроки;
				НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
				НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
				НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
				НоваяСтрока.КроссКурс        = 1;
			КонецЕсли;
			Если ВалютаСтроки <> ВалютаДокумента Тогда
				СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
				
				НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
				КонецЕсли;
			КонецЕсли;
			
			флИзменилсяУчетНДС = (ТекУслуга.УчитыватьНДС <> УчитыватьНДС ИЛИ ТекУслуга.СуммаВключаетНДС <> СуммаВключаетНДС);
			
			Если ТекУслуга.УчитыватьНДС <> УчитыватьНДС Тогда
				Если УчитыватьНДС Тогда
					НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				КонецЕсли;
			ИначеЕсли ТекУслуга.СуммаВключаетНДС <> СуммаВключаетНДС Тогда
				Если СуммаВключаетНДС Тогда
					НоваяСтрока.Сумма = НоваяСтрока.Сумма + НоваяСтрока.СуммаНДС;
					Если флМноговалютныйУчет Тогда
						НоваяСтрока.СуммаВалютная = НоваяСтрока.СуммаВалютная + НоваяСтрока.СуммаНДСВалютная;
					КонецЕсли;
				Иначе
					НоваяСтрока.Сумма = НоваяСтрока.Сумма - НоваяСтрока.СуммаНДС;
					Если флМноговалютныйУчет Тогда
						НоваяСтрока.СуммаВалютная = НоваяСтрока.СуммаВалютная - НоваяСтрока.СуммаНДСВалютная;
					КонецЕсли;
				КонецЕсли;
				НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.ЦенаВалютная = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.СуммаВалютная / НоваяСтрока.Количество);
				КонецЕсли;
			КонецЕсли;
			
			Если флИзменилсяУчетНДС Тогда
				мСтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);
				НоваяСтрока.СуммаНДС = ?(СуммаВключаетНДС, 
				НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((мСтавкаНДС + 100) / 100),
				НоваяСтрока.Сумма * мСтавкаНДС / 100);
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.СуммаНДСВалютная = ?(СуммаВключаетНДС, 
					НоваяСтрока.СуммаВалютная - (НоваяСтрока.СуммаВалютная) / ((мСтавкаНДС + 100) / 100),
					НоваяСтрока.СуммаВалютная * мСтавкаНДС / 100);
				КонецЕсли;
			КонецЕсли;
		Иначе
			НоваяСтрока.ЗаказНаТС = ДокументОснование;
			
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.Валюта           = ВалютаСтроки;
				НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
				НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
				НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
				НоваяСтрока.КроссКурс        = 1;
			КонецЕсли;
			Если ВалютаСтроки <> ВалютаДокумента Тогда
				СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
				
				НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
					ВалютаСтроки,                     ВалютаДокумента,
					СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
					СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		мСтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);
		НоваяСтрока.СуммаНДС = ?(СуммаВключаетНДС, 
			НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((мСтавкаНДС + 100) / 100),
			НоваяСтрока.Сумма * мСтавкаНДС / 100);
		КонецЦикла;
		
КонецПроцедуры

#КонецОбласти


#Область Инициализация

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецОбласти

#КонецЕсли