
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
    ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	//ПодключаемоеОборудование
	уатОбщегоНазначения_проф.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	//Конец ПодключаемоеОборудование
	
	УстановитьОтборПоМедработникуПриОткрытии();
	уатЖурналыТранспортныхДокументов.УстановитьУсловноеОформлениеПолейСтатусов(УсловноеОформление);
	
	флЭЦП               = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	ИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");
	флПравоПодписи      = ПравоДоступа("Изменение",
		Метаданные.Справочники.уатЖурналМедицинскогоОсмотраВодителейПрисоединенныеФайлы);
		
	Элементы.СостояниеПодписи.Видимость               = флЭЦП;
	Элементы.ФормаПодписать.Видимость                 = флЭЦП И флПравоПодписи;
	Элементы.СписокКонтекстноеМенюПодписать.Видимость = флЭЦП И флПравоПодписи;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаСпискаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьБыстрыйОтбор("ВидКонтроля");
	УстановитьБыстрыйОтбор("СостояниеПодписи");
	УстановитьБыстрыйОтбор("МедицинскийРаботник");
	
	//ПодключаемоеОборудование
	уатОбщегоНазначенияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ЭтотОбъект);
	//Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И ИмяСобытия = "ScanData" Тогда
		уатЖурналыТранспортныхДокументовКлиент.ОбработатьШтрихкод(Параметр, ЭтотОбъект,
			"уатЖурналМедицинскогоОсмотраВодителей");
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "ПриПолученииПодписи" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	// ПодключаемоеОборудование
	уатОбщегоНазначенияКлиент.ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.уатЖурналМедицинскогоОсмотраВодителей") Тогда
		ПоказатьЗначение(Неопределено, ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подписать(Команда)

	Если НЕ уатЗащищенныеФункцииКлиент.ИТСОтраслевой_ПроверкаДоступностиСервисов() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКлючевойОперации = "уатОперации.ПодписаниеЭПЛизЖурналаМедработника";
	ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(ИмяКлючевойОперации, 1);
	
	Если ИспользоватьОбменЭД Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		мсвДокументы = Новый Массив();
		мсвДокументы.Добавить(ТекущиеДанные.ПутевойЛист);
		
		Если НЕ уатЖурналыТранспортныхДокументов.ПроверитьЧтоПроведенПередПодписью(мсвДокументы) Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("мсвДокументы",  мсвДокументы);
		ПараметрыОткрытия.Вставить("Подпись",       "Медработник");
		ПараметрыОткрытия.Вставить("Представление", "Медработник");
		ОткрытьФорму("Документ.уатПутевойЛист.Форма.ФормаПодписейОтвЛица", ПараметрыОткрытия, ЭтотОбъект);
	Иначе
		ДопПараметры = Новый Структура("ОповеститьОЗавершении", Истина);
		уатЖурналыТранспортныхДокументовКлиент.ПодписатьИзСписка(Элементы.Список, УникальныйИдентификатор, ДопПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЖурнала(Команда)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
		
	ПараметрыФормы = Новый Структура;
	Если ТекСтрока <> Неопределено Тогда
		ПараметрыФормы.Вставить("Организация", ТекСтрока.Организация);
		ПараметрыФормы.Вставить("Журнал", ТекСтрока.Журнал);
		ПараметрыФормы.Вставить("ФормироватьПриОткрытии", Истина);
	КонецЕсли;
	ОткрытьФорму("Отчет.уатЖурналМедицинскогоОсмотраВодителей.Форма.ФормаОтчета", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ТестШтрихкода(Команда)
	Оповещ = Новый ОписаниеОповещения("ТестШтрихкодаЗавершение", ЭтотОбъект);
	ПоказатьВводЗначения(Оповещ, "", "Введите штрихкод ПЛ");
КонецПроцедуры

&НаКлиенте
Процедура ТестШтрихкодаЗавершение(Результат, ДопПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		ПараметрШтрихкод = Новый Массив;
		ПараметрШтрихкод.Добавить(Результат);
		ПараметрШтрихкод.Добавить(Неопределено);
		
		уатЖурналыТранспортныхДокументовКлиент.ОбработатьШтрихкод(ПараметрШтрихкод, ЭтотОбъект,
			"уатЖурналМедицинскогоОсмотраВодителей");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтчетРезультаты(Команда)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		уатЖурналыТранспортныхДокументовКлиент.ОткрытьОтчетРезультаты(ТекСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборВидКонтроляПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("ВидКонтроля");
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодписанПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("СостояниеПодписи");
КонецПроцедуры

&НаКлиенте
Процедура ОтборМедработникПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("МедицинскийРаботник");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ИмяПоля)
	Если ИмяПоля = "ВидКонтроля" Тогда
		Если ЗначениеЗаполнено(ОтборВидКонтроля) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВидКонтроля",
				ОтборВидКонтроля,,, Истина);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВидКонтроля",,,, Ложь);
		КонецЕсли;
	ИначеЕсли ИмяПоля = "СостояниеПодписи" Тогда
		Если ОтборПодписан Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СостояниеПодписи", -1,,, Истина);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СостояниеПодписи",,,, Ложь);
		КонецЕсли;
	ИначеЕсли ИмяПоля = "МедицинскийРаботник" Тогда
		Если ЗначениеЗаполнено(ОтборМедработник) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "МедицинскийРаботник",
				ОтборМедработник,,, Истина);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "МедицинскийРаботник",,,, Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоМедработникуПриОткрытии()
	Если НЕ уатЖурналыТранспортныхДокументов.ТекущийПользовательМедработник() Тогда
		Возврат;
	КонецЕсли;
	
	ТекПользователь = Пользователи.АвторизованныйПользователь();
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо
	|	И НЕ Сотрудники.ПометкаУдаления
	|	И НЕ Сотрудники.ЭтоГруппа");
	Запрос.УстановитьПараметр("ФизическоеЛицо", ТекПользователь.ФизическоеЛицо);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОтборМедработник = Выборка.Ссылка;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
