
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// заполнение при вводе из путевого листа
	Если Параметры.Свойство("ДобавлениеПосадочнойВедомостиИзПЛ") И Параметры.ДобавлениеПосадочнойВедомостиИзПЛ = Истина Тогда
		ДобавлениеПосадочнойВедомостиИзПЛ = Истина;
		Если НЕ Параметры.Свойство("ПосадочнаяВедомостьКопирование") Тогда
			ДокОбъект = РеквизитФормыВЗначение("Объект");
			ДокОбъект.Заполнить(Параметры.ПутевойЛист);
			ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
		КонецЕсли;
	КонецЕсли;
	
	// заполнение при редактировании из путевого листа
	Если Параметры.Свойство("РедактированиеПосадочнойВедомостиИзПЛ") И Параметры.РедактированиеПосадочнойВедомостиИзПЛ = Истина Тогда
		РедактированиеПосадочнойВедомостиИзПЛ = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ДобавлениеПосадочнойВедомостиИзПЛ Тогда
		Оповестить("ДобавлениеПосадочнойВедомостиИзПЛ", Объект.Ссылка);
	КонецЕсли;
	Если РедактированиеПосадочнойВедомостиИзПЛ Тогда
		Оповестить("РедактированиеПосадочнойВедомостиИзПЛ", Объект.Ссылка);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// заполняем водителя
	уатОбщегоНазначения.ЗаполнитьЭкипажТС(Объект.ТС, Объект.Организация, Объект.Дата, Объект.Сотрудник,,,,Ложь,,,Истина);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СотрудникПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Объект.Сотрудник, Новый Структура("Организация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Объект.Сотрудник, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	УстановитьТС(Объект.ТС);
КонецПроцедуры

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Объект.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)

	СтрокаТабличнойЧасти 		= Элементы.Билеты.ТекущиеДанные;
	СтрокаТабличнойЧасти.Сумма 	= СтрокаТабличнойЧасти.Количество * уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Билет, "Цена");
	ПересчетКомиссии(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Документ.уатПутевойЛист.ФормаВыбора",, Элемент);
	ФормаВыбора.Список.Отбор.Элементы.Очистить();
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ФормаВыбора.Список, "ТранспортноеСредство", Объект.ТС);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Билеты

&НаКлиенте
Процедура БилетыСуммаПриИзменении(Элемент)
	ПересчетКомиссии(Элементы.Билеты.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура БилетыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
			
		Элемент.ТекущиеДанные.ПутевойЛист = мПутевойЛист;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БилетыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если Не ОтменаРедактирования Тогда
		
		мПутевойЛист = Элемент.ТекущиеДанные.ПутевойЛист;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура КоманднаяПанель2ПересчетКомиссии(Команда)
	
	Для Каждого ТекСтрока Из Объект.Билеты Цикл
		ПересчетКомиссии(ТекСтрока);
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура СотрудникПриИзмененииСервер()
	мДатаНачала = ДобавитьМесяц(Объект.Дата, -1);
	мТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛистыВодителя(Объект.Сотрудник, мДатаНачала, КонецДня(Объект.Дата),,,Ложь);
	
	Попытка
		Объект.ПутевойЛист = мТаблицаПЛ[0].Ссылка;
		Объект.ТС = мПутевойЛист.ТранспортноеСредство;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПересчетКомиссии(СтрокаТабличнойЧасти)
	
	СтрокаТабличнойЧасти.КомиссияАвтостанции = СтрокаТабличнойЧасти.Сумма * уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.Автостанция, "Комиссия") / 100;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТС(мТС)
	
	Модифицированность = Истина;
	
	Если НЕ ЗначениеЗаполнено(мТС) тогда
		Возврат;	
	КонецЕсли;
	
	// заполняем водителя
	уатОбщегоНазначения.ЗаполнитьЭкипажТС(мТС, Объект.Организация, Объект.Дата, Объект.Сотрудник);

	ТекДанные = Элементы.Билеты.ТекущиеДанные;
	Если Не ТекДанные=Неопределено И Не ЗначениеЗаполнено(ТекДанные.ПутевойЛист) Тогда
		мДатаНачала = ДобавитьМесяц(Объект.Дата, -1);
		УстановитьТССервер(ТекДанные.ПутевойЛист, мТС, мДатаНачала, Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьТССервер(мПутевойЛист, мТС, мДатаНачала, мДата)
	ТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛисты(мТС, мДатаНачала, КонецДня(мДата),, Ложь);
	Если ТаблицаПЛ.Количество() > 0 Тогда
		мПутевойЛист = ТаблицаПЛ[0].Ссылка;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти
