#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатВзаимозачет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение_проф.ОтразитьВзаиморасчетыСКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
		
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатВзаимозачет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.уатВзаимозачет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	Если Мультивалютный Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ВалютаДокумента"));
	КонецЕсли;
		
	Для Каждого ТекСтрока Из Состав Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.СделкаДебитора) И (ТекСтрока.ДоговорДебитора.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным
			ИЛИ ТекСтрока.ДоговорДебитора.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам) Тогда
			СтрокаСообщения = "В строке " + ТекСтрока.НомерСтроки + " табличной части ""Состав"" не указано значение сделки дебитора!";
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекСтрока.СделкаКредитора) И (ТекСтрока.ДоговорКредитора.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным
			ИЛИ ТекСтрока.ДоговорКредитора.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам) Тогда
			СтрокаСообщения = "В строке " + ТекСтрока.НомерСтроки + " табличной части ""Состав"" не указано значение сделки кредитора!";
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И (Курс=0 ИЛИ Кратность=0) Тогда
		КурсКратностьДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
		Курс      = КурсКратностьДокумента.Курс;
		Кратность = КурсКратностьДокумента.Кратность;
	КонецЕсли;
	
	// пересчет суммы документа
	РасчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура РасчитатьСуммуДокумента()
	СуммаДокумента = 0;
	Для Каждого ТекСтрока Из Состав Цикл
		Если Мультивалютный Тогда
			ТекСумма = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаДебитора,
				ТекСтрока.ВалютаДебитора, ВалютаДокумента, ТекСтрока.КурсДебитора, Курс, ТекСтрока.КратностьДебитора, Кратность);
		Иначе
			ТекСумма = ТекСтрока.СуммаДебитора;
		КонецЕсли;
		СуммаДокумента = СуммаДокумента + ТекСумма;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#КонецЕсли