
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// уатСогласованиеДокументов
	ИмяДокументаСогласование = "ПеремещенияТСИОборудования";
	уатСогласованиеДокументовСервер.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
	// Заполнение при вводе из карточки ТС
	Если Объект.Ссылка.Пустая() И Параметры.Свойство("ТС") Тогда
		НовоеТС = Объект.ТС.Добавить();
		НовоеТС.ТС = Параметры.ТС;
		НовоеТС.ДатаВвода = ТекущаяДата();
	КонецЕсли;
	
	ОбновитьСтароеМестоположениеТСсервер();
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОбновитьСтатусСогласования(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьСтароеМестоположениеТСсервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьСтароеМестоположениеТСсервер();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ПослеЗаписи(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	мсвТС = Новый Массив;
    Для Каждого ТекСтрока Из Объект.ТС Цикл
        мсвТС.Добавить(ТекСтрока.ТС);
    КонецЦикла;
	
	Оповестить("ОбновитьФорму_МестонахождениеТС", , мсвТС);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ОрганизацияПодразделениеПриИзменении(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетСогласованияПриИзменении(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.ТребуетСогласованияПриИзменении(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСогласованНажатие(Элемент)
	
	// уатСогласованиеДокументов
	уатСогласованиеДокументовКлиент.НадписьСогласованНажатие(ЭтотОбъект);
	// Конец уатСогласованиеДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ТСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока.ДатаВвода = Объект.Дата;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ОбработкаВыбораТСНаСервере(ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораТСНаСервере(ВыбранноеЗначение)
	
	Для Каждого ТекЭлем Из ВыбранноеЗначение Цикл
		НовСтрока = Объект.ТС.Добавить();
		НовСтрока.ТС = ТекЭлем.Значение;
	КонецЦикла;
	
	ОбновитьСтароеМестоположениеТСсервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТСТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	ОбновитьСтароеМестоположениеТС(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТСТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.ТС.ТекущиеДанные.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ТСДатаВводаПриИзменении(Элемент)
	ОбновитьСтароеМестоположениеТС(Элементы.ТС.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОбновитьСтароеМестоположениеТС(ТекСтрока)
	МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаВвода-1);
	ТекСтрока.Организация = МестоТС.Организация;
	ТекСтрока.Подразделение = МестоТС.Подразделение;
	ТекСтрока.Колонна = МестоТС.Колонна;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтароеМестоположениеТСсервер()
	Для Каждого ТекСтрокаТЧ Из Объект.ТС Цикл
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрокаТЧ.ТС, ТекСтрокаТЧ.ДатаВвода-1);
		ТекСтрокаТЧ.Организация = МестоТС.Организация;
		ТекСтрокаТЧ.Подразделение = МестоТС.Подразделение;
		ТекСтрокаТЧ.Колонна = МестоТС.Колонна;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
