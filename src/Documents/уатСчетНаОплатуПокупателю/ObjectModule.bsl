#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем мВалютаРегламентированногоУчета Экспорт; // Переменная хранит значение валюты регламентированного учёта, полученное из константы.

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Заполняет услуги по выбранной табличной части
//  используется в УЭ
//
// Параметры:
//  ТЧ					 - 	 - табличная часть для заполнения
//  СтруктураПараметров	 - 	 - структура отбора для заполнения
//
Процедура ЗаполнитьУслугиПоТЧ(ТЧ, СтруктураПараметров) Экспорт
	Если Услуги.Количество() > 0 И СтруктураПараметров.Свойство("ОчиститьТаблицу") И СтруктураПараметров.ОчиститьТаблицу Тогда
		Услуги.Очистить();
	КонецЕсли;
	
	флПоЗаказам = Ложь;
	СтруктураПараметров.Свойство("ПоЗаказам",флПоЗаказам);
	курсВалютыДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента,Дата);
	Для Каждого СтрокаТЧ Из ТЧ Цикл
		НоваяСтрока = Услуги.Добавить();
		СтрокаСодержание = ?(уатОбщегоНазначения.уатЗначениеНеЗаполнено(СтрокаТЧ.Услуга), "", Строка(СтрокаТЧ.Услуга))
		+ ?(СтруктураПараметров.ПоЗаказам, " Заказ :" + Строка(СтрокаТЧ.Заказ), "" ) 
		+ ?(СтруктураПараметров.ПоОперациям, " Операция :" + Строка(СтрокаТЧ. Операция), "" );
		НоваяСтрока.Номенклатура     = СтрокаТЧ.Услуга;
		НоваяСтрока.Содержание       = СтрокаСодержание;
		НоваяСтрока.Количество       = СтрокаТЧ.Количество;
		НоваяСтрока.СтавкаНДС        = СтрокаТЧ.СтавкаНДС;
		
		мСуммаРегл 					 = СтрокаТЧ.СуммаРегл - ?(СуммаВключаетНДС, 0, СтрокаТЧ.СуммаНДС);
		НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(мСуммаРегл,
		мВалютаРегламентированногоУчета,
		ВалютаДокумента,
		1,
		курсВалютыДокумента.Курс,
		1,
		курсВалютыДокумента.Кратность);
		
		НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаНДС,
		мВалютаРегламентированногоУчета,
		ВалютаДокумента,
		1,
		курсВалютыДокумента.Курс,
		1,
		курсВалютыДокумента.Кратность);
		НоваяСтрока.Цена 			 = НоваяСтрока.Сумма/НоваяСтрока.Количество;
		
		Если флПоЗаказам тогда
			НоваяСтрока.Заказ		 = СтрокаТЧ.Заказ;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
		
		Дата = ТекущаяДата();
		ДокументОснование       = ДанныеЗаполнения;
		Организация             = ДанныеЗаполнения.Организация;
		Контрагент              = ДанныеЗаполнения.Контрагент;
		ДоговорКонтрагента      = ДанныеЗаполнения.ДоговорКонтрагента;
		УчитыватьНДС            = ДанныеЗаполнения.УчитыватьНДС; 
		СуммаВключаетНДС        = ДанныеЗаполнения.СуммаВключаетНДС;
		ОбъектСтроительства     = ДанныеЗаполнения.ОбъектСтроительства;
		Комментарий             = "Заполнен на основании "+ДанныеЗаполнения;
		ВалютаДокумента 		= ДанныеЗаполнения.ВалютаДокумента;
		//КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
		//КурсВзаиморасчетов 		= ДанныеЗаполнения.КурсВзаиморасчетов;
		ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
		КурсВзаиморасчетов        = ВалютаДокументаКурсКратность.Курс;
		КратностьВзаиморасчетов   = ВалютаДокументаКурсКратность.Кратность;
		
		Для Каждого ТекСтрока из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяДоходов) Тогда
				НоваяСтрока.СтатьяДоходов = уатОбщегоНазначенияСервер.СтатьяДоходовНоменклатуры(НоваяСтрока.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
		СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект, "Услуги");
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		уатОбщегоНазначения.ОбработкаЗаполненияФормаВыборКонтрагента(ДанныеЗаполнения, ДополнительныеСвойства);
		
	КонецЕсли;
		
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если УчитыватьНДС Тогда
		ПроверяемыеРеквизиты.Добавить("Услуги.СтавкаНДС");
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Если договор с комиссионером, то надо почистить закладку "Услуги".
	Если Услуги.Количество() > 0
		И ДоговорКонтрагента.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером") Тогда
		
		Услуги.Очистить();
	КонецЕсли;
	
	СтруктураШапкиДокумента = Новый Структура();
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеТабличнойЧастиУслуги(СтруктураШапкиДокумента,Отказ,заголовок);
	
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект, "Услуги");
	
КонецПроцедуры // ПередЗаписью

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	уатУчетОригиналовПервичныхДокументов.СформироватьДвиженияРеестрДокументов(Ссылка);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеТабличнойЧастиУслуги(СтруктураШапкиДокумента, 
	Отказ, Заголовок)
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("Номенклатура, Содержание, Количество, Сумма");
	
	Если УчитыватьНДС Тогда
		СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	КонецЕсли;
	
	уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Услуги", СтруктураОбязательныхПолей,
		Отказ, Заголовок);
	
	// Здесь товаров быть не должно.
	уатОбщегоНазначенияТиповые.уатПроверитьЧтоНетТоваров(ЭтотОбъект, "Услуги", , Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиУслуги()

Процедура ОбработкаЗаполненияИзФормыВыбораКонтрагента(мДокументОснование, ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.уатМаршрутныйЛист") Тогда
		ОбработкаЗаполненияМЛ(мДокументОснование, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		ОбработкаЗаполненияЗГ(мДокументОснование, ДанныеЗаполнения);
	Иначе
		ОбработкаЗаполненияТТД(мДокументОснование, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияТТД(мДокументОснование, ДанныеЗаполнения)
	
	Дата = ТекущаяДата();
	ДокументОснование       = мДокументОснование;
	Организация             = мДокументОснование.Организация;
	Контрагент              = мДокументОснование.Контрагент;
	ДоговорКонтрагента      = мДокументОснование.ДоговорКонтрагента;
	УчитыватьНДС            = мДокументОснование.УчитыватьНДС; 
	СуммаВключаетНДС        = мДокументОснование.СуммаВключаетНДС;
	СуммаДокумента 			= мДокументОснование.СуммаДокумента;
	Комментарий             = "Заполнен на основании " + мДокументОснование;
	ВалютаДокумента 		= мДокументОснование.ВалютаДокумента;
	//КратностьВзаиморасчетов = ДанныеЗаполнения.КратностьВзаиморасчетов;
	//КурсВзаиморасчетов 		= ДанныеЗаполнения.КурсВзаиморасчетов;
	ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
	КурсВзаиморасчетов        = ВалютаДокументаКурсКратность.Курс;
	КратностьВзаиморасчетов   = ВалютаДокументаКурсКратность.Кратность;
	
	МассивСтрок = Новый Массив();
	Для Каждого ТекСтрока Из ДанныеЗаполнения Цикл
		МассивСтрок.Добавить(ТекСтрока.НомерСтроки);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЭкипажТС.ТС КАК ТС,
	|	МАКСИМУМ(уатЭкипажТС.Сотрудник) КАК Сотрудник
	|ПОМЕСТИТЬ ВодителиТС
	|ИЗ
	|	РегистрСведений.уатЭкипажТС КАК уатЭкипажТС
	|ГДЕ
	|	уатЭкипажТС.ЧленЭкипажа = ЗНАЧЕНИЕ(Перечисление.уатЧленыЭкипажа.ОсновнойВодитель)
	|
	|СГРУППИРОВАТЬ ПО
	|	уатЭкипажТС.ТС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент) КАК ПолучательУслуг,
	|	уатТТДСтоимость.ПутЛист КАК ПутевойЛист,
	|	уатТТДСтоимость.ПутЛист.ТранспортноеСредство КАК ТС,
	|	уатТТДСтоимость.ПутЛист.ТранспортноеСредство.Модель КАК МодельТС,
	|	ВЫБОР
	|		КОГДА уатТТДСтоимость.ПутЛист.Водитель1 = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВодителиТС.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	|		ИНАЧЕ уатТТДСтоимость.ПутЛист.Водитель1
	|	КОНЕЦ КАК Водитель,
	|	уатТТДСтоимость.ПараметрВыработки КАК ПараметрВыработки,
	|	уатТТДСтоимость.НоменклатураУслуги КАК Услуга,
	|	уатТТДСтоимость.Маршрут КАК Маршрут,
	|	уатТТДСтоимость.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатТТДСтоимость.Количество КАК Количество,
	|	уатТТДСтоимость.СтавкаНДС КАК СтавкаНДС,
	|	уатТТДСтоимость.Сумма КАК Сумма,
	|	уатТТДСтоимость.СуммаНДС КАК СуммаНДС,
	|	уатТТДСтоимость.Цена КАК Цена,
	|	уатТТДСтоимость.СтатьяДоходов КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Справочник.уатПунктыНазначения.ПустаяСсылка) КАК ПунктОтправления,
	|	ЗНАЧЕНИЕ(Справочник.уатПунктыНазначения.ПустаяСсылка) КАК ПунктПрибытия,
	|	ЗНАЧЕНИЕ(Документ.уатЗаказГрузоотправителя.ПустаяСсылка) КАК Заказ,
	|	ЗНАЧЕНИЕ(Документ.уатЗаказПеревозчику_уэ.ПустаяСсылка) КАК ЗаказПеревозчику,
	|	уатТТДСтоимость.Содержание КАК Содержание,
	|	уатТТДСтоимость.НомерСтроки КАК НомерСтроки,
	|	уатТТДСтоимость.Ссылка.НомерТТНКонтрагента КАК НомерТТНКонтрагента
	|ИЗ
	|	Документ.уатТТД.Стоимость КАК уатТТДСтоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВодителиТС КАК ВодителиТС
	|		ПО уатТТДСтоимость.ПутЛист.ТранспортноеСредство = ВодителиТС.ТС
	|ГДЕ
	|	уатТТДСтоимость.Ссылка = &Ссылка
	|	И уатТТДСтоимость.НомерСтроки В(&МассивСтрок)";
	Запрос.УстановитьПараметр("Ссылка", мДокументОснование);
	Запрос.УстановитьПараметр("МассивСтрок", МассивСтрок);
	
	тблРезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	КэшКурсов = Неопределено;

	уатОбщегоНазначения.УстановитьДопПоляДетализации(тблРезультатЗапроса, ДоговорКонтрагента,
		Перечисления.уатПолучателиУслуг.Контрагент,, мДокументОснование);
	
	Для Каждого ТекУслуга Из тблРезультатЗапроса Цикл
		НоваяСтрока = Услуги.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекУслуга);
		
		НоваяСтрока.Номенклатура = ТекУслуга.Услуга;

		НоваяСтрока.Содержание = уатОбщегоНазначения.ПолучитьСодержание(ТекУслуга, ДоговорКонтрагента,
			Перечисления.уатПолучателиУслуг.Контрагент);
			
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Содержание) Тогда
			НоваяСтрока.Содержание = ТекУслуга.Услуга.НаименованиеПолное;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяДоходов) Тогда
			НоваяСтрока.СтатьяДоходов = уатОбщегоНазначенияСервер.СтатьяДоходовНоменклатуры(НоваяСтрока.Номенклатура);
		КонецЕсли;
		
		Если флМноговалютныйУчет Тогда
			НоваяСтрока.Валюта           = ВалютаДокумента;
			НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
			НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
			НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
			НоваяСтрока.КроссКурс        = 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияМЛ(мДокументОснование, ДанныеЗаполнения) Экспорт
	
	ДокументОснование       = мДокументОснование;
	Комментарий             = ДокументОснование.Комментарий;
	Организация             = ДокументОснование.Организация;
	Ответственный           = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		Пользователи.АвторизованныйПользователь(), "ОсновнойОтветственный");
	
	ОбъектСтроительства = ДокументОснование.ОбъектСтроительства;
	
	ВалютаДокумента         = мДокументОснование.ВалютаДокумента;
	ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
	КурсВзаиморасчетов      = ВалютаДокументаКурсКратность.Курс;
	КратностьВзаиморасчетов = ВалютаДокументаКурсКратность.Кратность;
	
	Если ДанныеЗаполнения.Количество() > 0 Тогда
		Контрагент          = ДанныеЗаполнения[0].ЗаказНаТС.Контрагент;
		ДоговорКонтрагента  = ДанныеЗаполнения[0].ЗаказНаТС.ДоговорКонтрагента;
		УчитыватьНДС        = ДанныеЗаполнения[0].УчитыватьНДС;
		СуммаВключаетНДС    = ДанныеЗаполнения[0].СуммаВключаетНДС;
	КонецЕсли;
	
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	КэшКурсов = Неопределено;
	
	уатОбщегоНазначения.УстановитьДопПоляДетализации(ДанныеЗаполнения, ДоговорКонтрагента,
		Перечисления.уатПолучателиУслуг.Контрагент,, мДокументОснование);
	
	Для Каждого ТекУслуга Из ДанныеЗаполнения Цикл
		НоваяСтрока = Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекУслуга,, "Валюта");
		
		НоваяСтрока.Номенклатура = ТекУслуга.Услуга;

		НоваяСтрока.Содержание = уатОбщегоНазначения.ПолучитьСодержание(ТекУслуга, ДоговорКонтрагента,
			Перечисления.уатПолучателиУслуг.Контрагент);
			
		Если Не ЗначениеЗаполнено(НоваяСтрока.Содержание) Тогда
			НоваяСтрока.Содержание = ТекУслуга.Услуга.НаименованиеПолное;
		КонецЕсли;
			
		Если Не ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяДоходов) Тогда
			НоваяСтрока.СтатьяДоходов = уатОбщегоНазначенияСервер.СтатьяДоходовНоменклатуры(НоваяСтрока.Номенклатура);
		КонецЕсли;
		
		ВалютаСтроки = ?(ЗначениеЗаполнено(ТекУслуга.Валюта), ТекУслуга.Валюта, мДокументОснование.ВалютаДокумента);
		
		Если флМноговалютныйУчет Тогда
			НоваяСтрока.Валюта           = ВалютаСтроки;
			НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
			НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
			НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
			НоваяСтрока.КроссКурс        = 1;
		КонецЕсли;
		Если ВалютаСтроки <> ВалютаДокумента Тогда
			СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
		
			НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
				
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
			КонецЕсли;
		КонецЕсли;
		
		флИзменилсяУчетНДС = (ТекУслуга.УчитыватьНДС <> УчитыватьНДС ИЛИ ТекУслуга.СуммаВключаетНДС <> СуммаВключаетНДС);
		
		Если ТекУслуга.УчитыватьНДС <> УчитыватьНДС Тогда
			Если УчитыватьНДС Тогда
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
		ИначеЕсли ТекУслуга.СуммаВключаетНДС <> СуммаВключаетНДС Тогда
			Если СуммаВключаетНДС Тогда
				НоваяСтрока.Сумма = НоваяСтрока.Сумма + НоваяСтрока.СуммаНДС;
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.СуммаВалютная = НоваяСтрока.СуммаВалютная + НоваяСтрока.СуммаНДСВалютная;
				КонецЕсли;
			Иначе
				НоваяСтрока.Сумма = НоваяСтрока.Сумма - НоваяСтрока.СуммаНДС;
				Если флМноговалютныйУчет Тогда
					НоваяСтрока.СуммаВалютная = НоваяСтрока.СуммаВалютная - НоваяСтрока.СуммаНДСВалютная;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.ЦенаВалютная = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.СуммаВалютная / НоваяСтрока.Количество);
			КонецЕсли;
		КонецЕсли;
		
		Если флИзменилсяУчетНДС Тогда
			мСтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);
			НоваяСтрока.СуммаНДС = ?(СуммаВключаетНДС, 
				НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((мСтавкаНДС + 100) / 100),
				НоваяСтрока.Сумма * мСтавкаНДС / 100);
			Если флМноговалютныйУчет Тогда
				НоваяСтрока.СуммаНДСВалютная = ?(СуммаВключаетНДС, 
					НоваяСтрока.СуммаВалютная - (НоваяСтрока.СуммаВалютная) / ((мСтавкаНДС + 100) / 100),
					НоваяСтрока.СуммаВалютная * мСтавкаНДС / 100);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект, "Услуги");
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЗГ(мДокументОснование, ДанныеЗаполнения)
	
	ДоговорКонтрагента           = мДокументОснование.ДоговорКонтрагента;
	Комментарий                  = мДокументОснование.Комментарий;
	Контрагент                   = мДокументОснование.Контрагент;
	ВалютаДокумента              = мДокументОснование.ВалютаДокумента;
	ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
	КурсВзаиморасчетов           = ВалютаДокументаКурсКратность.Курс;
	КратностьВзаиморасчетов      = ВалютаДокументаКурсКратность.Кратность;
	Организация                  = мДокументОснование.Организация;
	Ответственный                = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнойОтветственный");
	СуммаВключаетНДС             = мДокументОснование.СуммаВключаетНДС;
	УчитыватьНДС                 = мДокументОснование.УчитыватьНДС;
	ДокументОснование            = мДокументОснование.Ссылка;
	ОбъектСтроительства          = мДокументОснование.ОбъектСтроительства;
	
	ОбработкаЗаполненияЗГДобавитьСтрокиУслуг(ДанныеЗаполнения);
	
	СуммаДокумента = уатОбщегоНазначенияТиповые.уатПолучитьСуммуДокументаСНДС(ЭтотОбъект, "Услуги");
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЗГДобавитьСтрокиУслуг(СтрокиУслуг) Экспорт
	
	МассивСтрок = Новый Массив();
	Для Каждого ТекСтрока Из СтрокиУслуг Цикл
		МассивСтрок.Добавить(ТекСтрока.НомерСтроки);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.уатПолучателиУслуг.Контрагент) КАК ПолучательУслуг,
	|	ЗНАЧЕНИЕ(Документ.уатПутевойЛист.ПустаяСсылка) КАК ПутевойЛист,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяУслуги.Тариф.ПараметрВыработки, ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПустаяСсылка)) КАК ПараметрВыработки,
	|	уатЗаказГрузоотправителяУслуги.Номенклатура КАК Услуга,
	|	уатЗаказГрузоотправителяУслуги.Ссылка.Маршрут КАК Маршрут,
	|	уатЗаказГрузоотправителяУслуги.Ссылка.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатЗаказГрузоотправителяУслуги.Количество КАК Количество,
	|	уатЗаказГрузоотправителяУслуги.СтавкаНДС КАК СтавкаНДС,
	|	уатЗаказГрузоотправителяУслуги.Сумма КАК Сумма,
	|	уатЗаказГрузоотправителяУслуги.СуммаНДС КАК СуммаНДС,
	|	уатЗаказГрузоотправителяУслуги.СуммаСкидки КАК СуммаСкидки,
	|	уатЗаказГрузоотправителяУслуги.Цена КАК Цена,
	|	уатЗаказГрузоотправителяУслуги.Ссылка.АдресОтправления КАК ПунктОтправления,
	|	уатЗаказГрузоотправителяУслуги.Ссылка.АдресНазначения КАК ПунктПрибытия,
	|	уатЗаказГрузоотправителяУслуги.Ссылка КАК Заказ,
	|	ЗНАЧЕНИЕ(Документ.уатЗаказПеревозчику_уэ.ПустаяСсылка) КАК ЗаказПеревозчику,
	|	уатЗаказГрузоотправителяУслуги.Содержание КАК Содержание,
	|	уатЗаказГрузоотправителяУслуги.Валюта КАК Валюта,
	|	уатЗаказГрузоотправителяУслуги.СтатьяДоходов КАК СтатьяДоходов
	|ИЗ
	|	Документ.уатЗаказГрузоотправителя.Услуги КАК уатЗаказГрузоотправителяУслуги
	|ГДЕ
	|	уатЗаказГрузоотправителяУслуги.Ссылка = &Ссылка
	|	И уатЗаказГрузоотправителяУслуги.НомерСтроки В(&МассивСтрок)";
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("МассивСтрок", МассивСтрок);

	тблРезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	КэшКурсов = Неопределено;
	
	уатОбщегоНазначения.УстановитьДопПоляДетализации(тблРезультатЗапроса, ДоговорКонтрагента,
		Перечисления.уатПолучателиУслуг.Контрагент,, ДокументОснование);
		
	Для Каждого ТекУслуга Из тблРезультатЗапроса Цикл
		НоваяСтрока = Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекУслуга,, "Валюта");
		
		НоваяСтрока.Номенклатура = ТекУслуга.Услуга;

		НоваяСтрока.Содержание = уатОбщегоНазначения.ПолучитьСодержание(ТекУслуга, ДоговорКонтрагента,
			Перечисления.уатПолучателиУслуг.Контрагент);
			
		Если Не ЗначениеЗаполнено(НоваяСтрока.Содержание) Тогда
			НоваяСтрока.Содержание = ТекУслуга.Услуга.НаименованиеПолное;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяДоходов) Тогда
			НоваяСтрока.СтатьяДоходов = уатОбщегоНазначенияСервер.СтатьяДоходовНоменклатуры(НоваяСтрока.Номенклатура);
		КонецЕсли;
		
		Если ТекУслуга.СуммаСкидки <> 0 И НоваяСтрока.Количество <> 0 Тогда
			НоваяСтрока.Цена = НоваяСтрока.Сумма / НоваяСтрока.Количество;
		КонецЕсли;
		
		ВалютаСтроки = ?(ЗначениеЗаполнено(ТекУслуга.Валюта), ТекУслуга.Валюта, ДокументОснование.ВалютаДокумента);
			
		Если флМноговалютныйУчет Тогда
			НоваяСтрока.Валюта           = ВалютаСтроки;
			НоваяСтрока.ЦенаВалютная     = НоваяСтрока.Цена;
			НоваяСтрока.СуммаВалютная    = НоваяСтрока.Сумма;
			НоваяСтрока.СуммаНДСвалютная = НоваяСтрока.СуммаНДС;
			НоваяСтрока.КроссКурс        = 1;
		КонецЕсли;
		Если ВалютаСтроки <> ВалютаДокумента Тогда
			СтруктураКурсКратность       = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ТекущаяДата());
			
			НоваяСтрока.Цена             = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Цена,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.Сумма            = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
			НоваяСтрока.СуммаНДС         = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаНДС,
				ВалютаСтроки,                     ВалютаДокумента,
				СтруктураКурсКратность.Курс,      КурсВзаиморасчетов,
				СтруктураКурсКратность.Кратность, КратностьВзаиморасчетов);
		КонецЕсли;
			
		Если флМноговалютныйУчет Тогда
			НоваяСтрока.КроссКурс = уатОбщегоНазначенияСервер.ПолучитьКроссКурс(НоваяСтрока.Валюта, ВалютаДокумента, ТекущаяДата(), КэшКурсов);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область Инициализация

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецОбласти

#КонецЕсли