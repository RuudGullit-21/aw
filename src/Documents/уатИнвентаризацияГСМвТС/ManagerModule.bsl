#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатИнвентаризацияГСМвТС";
	КомандаПечати.Идентификатор = "ИнвентаризацияГСМвТС";
	КомандаПечати.Представление = НСтр("en='Inventory';ru='Инвентаризация'");
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияГСМвТС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИнвентаризацияГСМвТС",
			"Инвентаризация ГСМ в ТС", ПечатьИнвентаризацияГСМвТС(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеДляПечатиДокумента(ТекущийДокумент) Экспорт
	
	ВалютаПечати = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", ТекущийДокумент);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатИнвентаризацияГСМвТСГСМвТС.ГСМ КАК ГСМ,
	|	уатИнвентаризацияГСМвТСГСМвТС.ЕдиницаИзмерения,
	|	уатИнвентаризацияГСМвТСГСМвТС.Количество,
	|	уатИнвентаризацияГСМвТСГСМвТС.КоличествоУчет,
	|	уатИнвентаризацияГСМвТСГСМвТС.Сумма КАК Сумма,
	|	уатИнвентаризацияГСМвТСГСМвТС.СуммаУчет КАК СуммаУчет,
	|	уатИнвентаризацияГСМвТСГСМвТС.ТС КАК ТС,
	|	уатИнвентаризацияГСМвТСГСМвТС.Цена,
	|	уатИнвентаризацияГСМвТС.Номер КАК Номер,
	|	уатИнвентаризацияГСМвТС.Дата КАК Дата,
	|	уатИнвентаризацияГСМвТС.Организация КАК Организация,
	|	уатИнвентаризацияГСМвТС.Отпустил КАК Отпустил,
	|	уатИнвентаризацияГСМвТС.Получил КАК Получил,
	|	уатИнвентаризацияГСМвТСГСМвТС.Ссылка КАК Ссылка,
	|	уатИнвентаризацияГСМвТСГСМвТС.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.уатИнвентаризацияГСМвТС.ГСМвТС КАК уатИнвентаризацияГСМвТСГСМвТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатИнвентаризацияГСМвТС КАК уатИнвентаризацияГСМвТС
	|		ПО уатИнвентаризацияГСМвТСГСМвТС.Ссылка = уатИнвентаризацияГСМвТС.Ссылка
	|ГДЕ
	|	уатИнвентаризацияГСМвТСГСМвТС.Ссылка = &ДокументСсылка
	|
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаУчет),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Отпустил),
	|	МАКСИМУМ(Получил)
	|ПО
	|	Ссылка";
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаДокумент.Следующий() Тогда
		
		ПараметрыПечати = Новый Структура;
		
		// Выводим шапку
		ПараметрыПечати.Вставить("ТекстЗаголовка",           уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(
			ВыборкаДокумент.Ссылка, НСтр("en='Inventory of fuels in vehicle';ru='Инвентаризация ГСМ в ТС'")));
		ПараметрыПечати.Вставить("ОрганизацияПредставление", уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(
			уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ВыборкаДокумент.Организация, ВыборкаДокумент.Дата), "НаименованиеДляПечатныхФорм,"));
		ПараметрыПечати.Вставить("ВалютаНаименование",       СокрЛП(ВалютаПечати));
		ПараметрыПечати.Вставить("Валюта",                   ВалютаПечати);
		ПараметрыПечати.Вставить("Отпустил", уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ВыборкаДокумент.Отпустил));
		ПараметрыПечати.Вставить("Получил",  уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ВыборкаДокумент.Получил));
		
		// Вывод строк ТЧ ГСМвТС
		Строки         = Новый Массив;
		ВыборкаСтрокТЧ = ВыборкаДокумент.Выбрать();
		
		Пока ВыборкаСтрокТЧ.Следующий() Цикл 
			// Выводим строку таблицы
			ПараметрыСтроки = Новый Структура;
			
			ПараметрыСтроки.Вставить("НомерСтроки",      ВыборкаСтрокТЧ.НомерСтроки);
			ПараметрыСтроки.Вставить("ТС",               ВыборкаСтрокТЧ.ТС);
			ПараметрыСтроки.Вставить("ГСМ",              ВыборкаСтрокТЧ.ГСМ);
			ПараметрыСтроки.Вставить("Количество",       ВыборкаСтрокТЧ.Количество);
			ПараметрыСтроки.Вставить("КоличествоУчет",   ВыборкаСтрокТЧ.КоличествоУчет);
			ПараметрыСтроки.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТЧ.ЕдиницаИзмерения);
			ПараметрыСтроки.Вставить("Цена",             ВыборкаСтрокТЧ.Цена);
			ПараметрыСтроки.Вставить("Сумма",            ВыборкаСтрокТЧ.Сумма);
			ПараметрыСтроки.Вставить("СуммаУчет",        ВыборкаСтрокТЧ.СуммаУчет);
			
			Строки.Добавить(ПараметрыСтроки);
		КонецЦикла;
		
		ПараметрыПечати.Вставить("Строки", Строки);
		
		// Вывести Итого
		ПараметрыПечати.Вставить("Всего",        уатОбщегоНазначенияТиповые.уатФорматСумм(ВыборкаДокумент.Сумма));
		ПараметрыПечати.Вставить("ВсегоПоУчету", уатОбщегоНазначенияТиповые.уатФорматСумм(ВыборкаДокумент.СуммаУчет));
		
		Возврат ПараметрыПечати;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции //ПолучитьДанныеДляПечатиДокумента()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПечатьИнвентаризацияГСМвТС(МассивОбъектов, ОбъектыПечати) 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ИнвентаризацияГСМвТС";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекДокумент Из МассивОбъектов Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияГСМвТС_ИнвентаризацияГСМвТС";
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатИнвентаризацияГСМвТС.ПФ_MXL_ИнвентаризацияГСМвТС");
		
		ПараметрыПечати = ПолучитьДанныеДляПечатиДокумента(ТекДокумент);
		
		Если ПараметрыПечати = Неопределено Тогда 
			Возврат ТабличныйДокумент;
		КонецЕсли;
		
		// Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим строки ТЧ
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Для Каждого ПараметрыСтроки Из ПараметрыПечати.Строки Цикл
			ОбластьМакета.Параметры.Заполнить(ПараметрыСтроки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		// Выводим итоги таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

#КонецОбласти

#КонецЕсли