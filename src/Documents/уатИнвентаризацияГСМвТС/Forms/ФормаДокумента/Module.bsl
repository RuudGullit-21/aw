
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "Дополнительно");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Установка реквизитов формы.
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	уатОбщегоНазначенияСервер.НастроитьПолеЕдиницыИзмерения(ЭтотОбъект, "ГСМвТС", "ГСМ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	ПосчитатьОтклонение();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПосчитатьОтклонение();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГСМвТС

&НаКлиенте
Процедура ГСМвТСТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ГСМвТС.ТекущиеДанные;
	
	ПредГСМ = ТекСтрока.ГСМ;
	Если ТекСтрока.ГСМ <> ПредГСМ Тогда
		ГСМвТСГСМПриИзменении(Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.ГСМвТС.ТекущиеДанные.ТС, ДанныеВыбора, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = ПолучитьЕдиницуИзмеренияГСМ(СтрокаТабличнойЧасти.ГСМ);
	СтрокаТабличнойЧасти.Количество       = ПолучитьОстатокГСМнсТС(СтрокаТабличнойЧасти.ТС, СтрокаТабличнойЧасти.ГСМ, Объект.Дата);
	
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура("ЗначениеГСМДоИзменения", Элементы.ГСМвТС.ТекущиеДанные.ГСМ);
	ОписаниеОповещенияЗакр  = Новый ОписаниеОповещения("ОписаниеОповещенияВыбораГСМ", ЭтотОбъект, ДополнительныеПараметры);
	уатЗащищенныеФункцииКлиент.СписокГСМдляТС(Объект.Организация, Элементы.ГСМвТС.ТекущиеДанные.ТС,
		ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"),,,ОписаниеОповещенияЗакр);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ТекСтрока = Элементы.ГСМвТС.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	мсвГруппДляОтбора = Новый Массив;
	мсвГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"));
	ДопПараметры = Новый Структура("ТС, Организация", ТекСтрока.ТС, Объект.Организация);
	ДанныеВыбора = уатГСМ.ПолучитьСписокАвтоподбораПоляГСМ(Текст, мсвГруппДляОтбора, ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Параметры.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекГСМ = Элементы.ГСМвТС.ТекущиеДанные.ГСМ;
	Если ЗначениеЗаполнено(ТекГСМ) Тогда
		ОткрытьФорму("РегистрСведений.уатНоменклатураГСМ.ФормаЗаписи", Новый Структура("Ключ",
		ПолучитьКлючЗаписиГСМ(ТекГСМ)), Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСКоличествоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСЦенаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТССуммаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	Если Не СтрокаТабличнойЧасти.Количество = 0 Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатОбщегоНазначенияКлиент.ТЧТоварыЕдиницаИзмеренияНачалоВыбора(Элементы.ГСМвТС.ТекущиеДанные.ГСМ, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТС(Команда)
	
	Если Объект.ГСМвТС.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Before filling the datasheet portion will be cleared. Fill?';ru='Перед заполнением табличная часть будет очищена. Заполнить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ЗаполнитьПоОстаткамГСМвТСЗавершение", ЭтотОбъект),
		ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Возврат;
	КонецЕсли;
	
	ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_Очистить(Команда)
	
	Если Объект.ГСМвТС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстНСТР = НСтр("en='Clear the tabular section?';ru='Очистить табличную часть?'");
	ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ОчиститьЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет, ,
			КодВозвратаДиалога.Нет, НСтр("en='Clear the table';ru='Очистка таблицы'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммы(Команда)
	
	Если Объект.ГСМвТС.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Refill number and amount?';ru='Перезаполнить учетные количества и суммы?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыЗавершение", ЭтотОбъект,
			Новый Структура("ТекстВопроса", ТекстНСТР)), ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Возврат;
	КонецЕсли;
	
	// Документ должен быть записан, чтобы этот запрос сработал.
	ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыТекСтрока(Команда)
	
	ТекДанные = Элементы.ГСМвТС.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НомерСтроки = ТекДанные.ПолучитьИдентификатор();
	
	// Документ должен быть записан, чтобы этот запрос сработал.
	ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент(НомерСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Элементы.ГСМвТС.ТекущиеДанные.ГСМ = Результат;
		ГСМвТСГСМПриИзменении(Неопределено);
		Если ДопПараметры.ЗначениеГСМДоИзменения <> Результат Тогда 
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли; 
    
    Объект.ГСМвТС.Очистить();
    
    ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент()
	
	ЗаполнитьПоОстаткамГСМвТССервер(мВалютаРегламентированногоУчета);
	
	ПосчитатьОтклонение();
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.ГСМвТС.Очистить();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
    
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент(НомерТекущейстроки = Неопределено)
	
	Перем Ответ, ТекстВопроса, флЗаписать;
	
	флЗаписать = Ложь;
	Если Модифицированность Или Параметры.Ключ.Пустая() Тогда
		ТекстНСТР = НСтр("en='Before filling, be sure to record your document. Continue?';ru='Перед заполнением следует записать документ. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментЗавершение", ЭтотОбъект, НомерТекущейстроки),
		ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Возврат;
	КонецЕсли;
	
	ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(флЗаписать, НомерТекущейстроки);
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментЗавершение(РезультатВопроса, НомерТекущейстроки) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    флЗаписать = Истина;
    
    ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(флЗаписать, НомерТекущейстроки);

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(Знач флЗаписать, НомерТекущейстроки)
	
	ПерезаполнитьУчетныеКоличестваИСуммыСервер(мВалютаРегламентированногоУчета, флЗаписать, НомерТекущейстроки);
	
	ПосчитатьОтклонение();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамГСМвТССервер(ВалютаУчета)
	
	СтруктураКурса    = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаУчета, Объект.Дата);
	КурсУпрУчета      = СтруктураКурса.Курс;
	КратностьУпрУчета = СтруктураКурса.Кратность;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатОстаткиГСМнаТС.ТС КАК ТС,
	|	уатОстаткиГСМнаТС.ГСМ КАК ГСМ,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаХраненияОстатков.Коэффициент КАК КоэффициентЕдиницыИзмерения,
	|	СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) = 0
	|				ИЛИ СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(уатОстаткиГСМнаТС.СтоимостьОстаток) * СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) / СУММА(уатОстаткиГСМнаТС.КоличествоОстаток)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(
	|			&ДатаОстатков,
	|			&ОтображатьВыбывшиеТС
	|				ИЛИ ТС.ДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1)) КАК уатОстаткиГСМнаТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестонахождениеТС.СрезПоследних(&ДатаОстатков, Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК уатМестонахождениеТССрезПоследних
	|		ПО уатОстаткиГСМнаТС.ТС = уатМестонахождениеТССрезПоследних.ТС
	|ГДЕ
	|	(&Организация = НЕОПРЕДЕЛЕНО
	|			ИЛИ уатМестонахождениеТССрезПоследних.Организация = &Организация)
	|	И (&Колонна = НЕОПРЕДЕЛЕНО
	|			ИЛИ уатМестонахождениеТССрезПоследних.Колонна = &Колонна)
	|	И (&Подразделение = НЕОПРЕДЕЛЕНО
	|			ИЛИ уатМестонахождениеТССрезПоследних.Подразделение = &Подразделение)
	|
	|СГРУППИРОВАТЬ ПО
	|	уатОстаткиГСМнаТС.ТС,
	|	уатОстаткиГСМнаТС.ГСМ,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаХраненияОстатков,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаХраненияОстатков.Коэффициент
	|УПОРЯДОЧИТЬ ПО
	|	уатОстаткиГСМнаТС.ГСМ.Наименование");
	
	Запрос.УстановитьПараметр("ДатаОстатков", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
	
	Запрос.УстановитьПараметр("ОтображатьВыбывшиеТС", Объект.УчетВыбывших);
	Запрос.УстановитьПараметр("Организация", ?(Объект.Организация.Пустая(), Неопределено, Объект.Организация));
	Запрос.УстановитьПараметр("Колонна", ?(Объект.Колонна.Пустая(), Неопределено, Объект.Колонна));
	Запрос.УстановитьПараметр("Подразделение", ?(Объект.Подразделение.Пустая(), Неопределено, Объект.Подразделение));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = Объект.ГСМвТС.Добавить();
		
		СтрокаТабличнойЧасти.ТС               = Выборка.ТС;
		СтрокаТабличнойЧасти.ГСМ              = Выборка.ГСМ;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Цена             = Выборка.Сумма / Выборка.Количество;
		СтрокаТабличнойЧасти.Количество       = ?(Выборка.Количество<0, 0, Выборка.Количество);
		СтрокаТабличнойЧасти.КоличествоУчет   = Выборка.Количество;
		СтрокаТабличнойЧасти.Сумма            = ?(Выборка.Сумма<0, 0, Выборка.Сумма);
		СтрокаТабличнойЧасти.СуммаУчет        = Выборка.Сумма;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьУчетныеКоличестваИСуммыСервер(ВалютаУчета, флЗаписатьДокумент = Ложь, НомерТекущейстроки = Неопределено)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	
	Если флЗаписатьДокумент Тогда
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатОстаткиГСМнаТС.ТС КАК ТС,
	|	уатОстаткиГСМнаТС.ГСМ КАК ГСМ,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаХраненияОстатков.Коэффициент КАК КоэффициентЕдиницыИзмерения,
	|	СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) = 0) ИЛИ (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) ЕСТЬ NULL) ТОГДА
	|			0 
	|		ИНАЧЕ
	|			СУММА(уатОстаткиГСМнаТС.СтоимостьОстаток) * СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) / 
	|				СУММА(уатОстаткиГСМнаТС.КоличествоОстаток)
	|	КОНЕЦ КАК Сумма";
	
	Если НомерТекущейстроки = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&МоментДокумента, 
		|	                (ТС,ГСМ) В (ВЫБРАТЬ ТС,ГСМ ИЗ Документ.уатИнвентаризацияГСМвТС.ГСМвТС
		|	                                ГДЕ Документ.уатИнвентаризацияГСМвТС.ГСМвТС.Ссылка = &ДокументСсылка)) КАК уатОстаткиГСМнаТС
		|";
		Запрос.УстановитьПараметр("ДокументСсылка", Объект.Ссылка);
	Иначе
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&МоментДокумента, 
		|	                ТС = &ТС И ГСМ = &ГСМ) КАК уатОстаткиГСМнаТС
		|";
		СтрокаТабличнойЧасти = Объект.ГСМвТС.НайтиПоИдентификатору(НомерТекущейстроки);
		
		Запрос.УстановитьПараметр("ТС", СтрокаТабличнойЧасти.ТС);
		Запрос.УстановитьПараметр("ГСМ", СтрокаТабличнойЧасти.ГСМ);
		
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|{ГДЕ уатОстаткиГСМнаТС.ГСМ КАК ГСМ}
	|
	|СГРУППИРОВАТЬ ПО
	|	уатОстаткиГСМнаТС.ТС,
	|	уатОстаткиГСМнаТС.ГСМ";
	
	Если Параметры.Ключ.Пустая() Тогда
		Запрос.УстановитьПараметр("МоментДокумента", КонецДня(ДокОбъект.Дата));
	Иначе
		Запрос.УстановитьПараметр("МоментДокумента", ДокОбъект.МоментВремени());
	КонецЕсли;
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	СтрокаИндекса = "ТС, ГСМ";
	ТаблицаОстатков.Индексы.Добавить(СтрокаИндекса);
	
	Если НомерТекущейстроки <> Неопределено Тогда
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТС",  СтрокаТабличнойЧасти.ТС);
		СтруктураПоиска.Вставить("ГСМ", СтрокаТабличнойЧасти.ГСМ);
		
		МассивСтрок = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() = 0 Тогда
			СтрокаТабличнойЧасти.КоличествоУчет = 0;
			СтрокаТабличнойЧасти.СуммаУчет      = 0;
		Иначе
			Если уатОбщегоНазначенияСервер.СуществуетСправочникЕдиницыИзмерения() Тогда
				СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество * МассивСтрок[0].КоэффициентЕдиницыИзмерения / 
				СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
			Иначе
				СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество;
			КонецЕсли;
			
			СтрокаТабличнойЧасти.СуммаУчет = МассивСтрок[0].Сумма;
			СтрокаТабличнойЧасти.Цена      = ?(СтрокаТабличнойЧасти.КоличествоУчет = 0, 0,
			СтрокаТабличнойЧасти.СуммаУчет / СтрокаТабличнойЧасти.КоличествоУчет);
			
			СтрокаТабличнойЧасти.Сумма     = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
		КонецЕсли;
	Иначе
		Для Каждого СтрокаТабличнойЧасти Из Объект.ГСМвТС Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ТС",  СтрокаТабличнойЧасти.ТС);
			СтруктураПоиска.Вставить("ГСМ", СтрокаТабличнойЧасти.ГСМ);
			
			МассивСтрок = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрок.Количество() = 0 Тогда
				СтрокаТабличнойЧасти.КоличествоУчет = 0;
				СтрокаТабличнойЧасти.СуммаУчет      = 0;
				Продолжить;
			КонецЕсли;
			
			Если уатОбщегоНазначенияСервер.СуществуетСправочникЕдиницыИзмерения() Тогда
				СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество * МассивСтрок[0].КоэффициентЕдиницыИзмерения / 
				СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
			Иначе
				СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество;
			КонецЕсли;
			
			СтрокаТабличнойЧасти.СуммаУчет = МассивСтрок[0].Сумма;
			СтрокаТабличнойЧасти.Цена      = ?(СтрокаТабличнойЧасти.КоличествоУчет = 0, 0,
			СтрокаТабличнойЧасти.СуммаУчет / СтрокаТабличнойЧасти.КоличествоУчет);
			
			СтрокаТабличнойЧасти.Сумма     = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьОтклонение()
	
	Для Каждого ТекСтрока Из Объект.ГСМвТС Цикл
		ТекСтрока.Отклонение = ТекСтрока.Количество - ТекСтрока.КоличествоУчет;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Сумма      = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	СтрокаТабличнойЧасти.Отклонение = СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.КоличествоУчет;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиГСМ(ТекГСМ)
	
	Возврат РегистрыСведений.уатНоменклатураГСМ.СоздатьКлючЗаписи(Новый Структура("Номенклатура", ТекГСМ));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОстатокГСМнсТС(ТС, ГСМ, ТекДата)
	
	Возврат уатОбщегоНазначения.уатОстатокГСМнаТС(Новый Граница(ТекДата, ВидГраницы.Исключая), ТС, ГСМ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЕдиницуИзмеренияГСМ(ГСМ)
	
	Возврат ГСМ.ЕдиницаХраненияОстатков;
	
КонецФункции // ПолучитьЕдиницуИзмеренияГСМ()

&НаКлиенте
Функция СтруктураОтборТС()
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураОтбор.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда
		СтруктураОтбор.Вставить("Колонна", Объект.Колонна);
	КонецЕсли;
	
	Возврат СтруктураОтбор;
КонецФункции

#КонецОбласти
