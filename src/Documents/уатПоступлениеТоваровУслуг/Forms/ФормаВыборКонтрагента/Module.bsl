
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		АвтоТест = Истина;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ВидОперации") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДокументОснование	 = Параметры.ДокументОснование;
	ВидОперации			 = Параметры.ВидОперации;
	Услуги				 = Параметры.Услуги;
	
	Для Каждого ТекКонтрагент Из Параметры.Контрагенты Цикл
		НоваяСтрока = Контрагенты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекКонтрагент.Значение);
	КонецЦикла;

	Если Параметры.Свойство("Ссылка") Тогда
		ДокументИмя = Параметры.Ссылка.Метаданные().Имя;
	Иначе
		Если Параметры.Свойство("ДокументИмя") Тогда
			ДокументИмя = Параметры.ДокументИмя;
		Иначе
			ДокументИмя = "";
		КонецЕсли;
	КонецЕсли;
	
	Если ДокументИмя = "уатРекламация_уэ" Тогда
		Заголовок = "Выберите строки для ввода рекламаций";
		Элементы.КонтрагентыКонтрагент.Заголовок = "Заказчик";
	ИначеЕсли ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.уатРеестрОплатыШтрафов") Тогда
		Заголовок = "Выберите контрагентов и услуги";
	КонецЕсли;
			
	// Документ.уатПоступлениеТоваровУслуг, Документ.уатСчетНаОплатуПоставщика
	// Документ.уатСчетНаОплатуПокупателю, Документ.уатРеализацияУслуг, Документ.уатРекламация_уэ
	Если ВидОперации = 0 Тогда 
		НастройкиФормы = ВосстановитьНастройки();
		НастройкиФормы.Свойство("БольшеНеСпрашиватьДляОдногоКонтрагента", БольшеНеСпрашиватьДляОдногоКонтрагента);
	ИначеЕсли ВидОперации = 1 Тогда // ФормаВыборКонтрагента
		Если Параметры.Свойство("СохраненныеКонтрагенты") Тогда
			Для Каждого ТекСтрока Из Параметры.СохраненныеКонтрагенты Цикл
				СохраненныеКонтрагенты = Контрагенты.НайтиСтроки(Новый Структура("Заказ, Контрагент,
				|Договор, Услуга", текСтрока.Заказ, текСтрока.Контрагент, текСтрока.Договор, текСтрока.Услуга));
				
				Если СохраненныеКонтрагенты.Количество() > 0 Тогда
					СохраненныеКонтрагенты[0].ФлагВыбора     = Истина;
					СохраненныеКонтрагенты[0].НомерКомплекта = ТекСтрока.НомерКомплекта;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.КонтрагентыПеревозчик.Видимость = Ложь;
	Если Параметры.Свойство("СверятьПеревозчиков")
		И Параметры.СверятьПеревозчиков Тогда
		Элементы.КонтрагентыПеревозчик.Видимость = Истина;
		Перевозчики = ПолучитьПеревозчиков();
		Для Каждого ТекСтрока Из Контрагенты Цикл
			Если Перевозчики.Найти(ТекСтрока.Контрагент) = Неопределено Тогда
				ТекСтрока.Перевозчик = 0;
			Иначе
				ТекСтрока.Перевозчик = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Immediate opening for this object is prohibited!';ru='Непосредственное открытие для данного объекта запрещено!'"), 10);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УстановитьВидимость();
	УстановитьФлажки(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ВыбраныСтроки И ВладелецФормы <> Неопределено И НЕ ВладелецФормы.ИмяФормы = "ОбщаяФорма.уатФормаОформленияДокументов_уэ" Тогда
		ВладелецФормы.Закрыть();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БольшеНеСпрашиватьДляОдногоКонтрагентаПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормытзКонтрагенты

&НаКлиенте
Процедура КонтрагентыНомерКомплектаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекДанные.НомерКомплекта) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиКомплекта = Контрагенты.НайтиСтроки(Новый Структура("НомерКомплекта", ТекДанные.НомерКомплекта));
	
	Для Каждого ТекСтрока Из СтрокиКомплекта Цикл
		Если ТекСтрока.Контрагент <> ТекДанные.Контрагент
			ИЛИ ТекСтрока.Договор <> ТекДанные.Договор
			ИЛИ ТекСтрока.Заказ <> ТекДанные.Заказ Тогда
			ТекстНСТР = НСтр("en = 'It is forbidden to include services related to different contractors in the package.'; ru = 'Запрещается включать в комплект услуги, связанные с разными контрагентами.'");
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР);

			ТекДанные.НомерКомплекта = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого ТекКонтрагент из Контрагенты Цикл
		ТекКонтрагент.ФлагВыбора = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого ТекКонтрагент из Контрагенты Цикл
		ТекКонтрагент.ФлагВыбора = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = ОКСервер();
	
	Если ВидОперации = 0 Тогда
		Сч = 1;
		Для Каждого ТекСтрока Из Результат Цикл
			Если Сч = 1 Тогда
				//Оповестить("СозданиеДокументаИзФормыВыбораКонтрагента", текСтрока);
				Оповестить("СозданиеДокументаИзФормыВыбораКонтрагента_" + ДокументИмя, текСтрока);
			Иначе
				ОткрытьФорму("Документ." + ДокументИмя + ".ФормаОбъекта", текСтрока,,Новый УникальныйИдентификатор);
			КонецЕсли;
			Сч = Сч + 1;
		КонецЦикла;
		
		ВыбраныСтроки = (Результат.Количество() > 0);
		Закрыть();
	Иначе
		ВыбраныСтроки = (Результат.Контрагенты.Количество() > 0);
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	ЭтоРекламация = ДокументИмя = "уатРекламация_уэ";
	ЭтоРеестрОплатыШтрафов = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатРеестрОплатыШтрафов");

	Элементы.КонтрагентыНомерКомплекта.Видимость				 = НЕ ЭтоРекламация;
	Элементы.КонтрагентыУслуга.Видимость						 = НЕ ЭтоРекламация И НЕ ЭтоРеестрОплатыШтрафов;
	Элементы.БольшеНеСпрашиватьДляОдногоКонтрагента.Видимость	 = НЕ ЭтоРекламация И ВидОперации = 0;
	Элементы.КонтрагентыЗаказ.Видимость							 = ЭтоРекламация;
	
КонецПроцедуры

&НаСервере
Функция ОКСервер()

	
	тзКонтрагенты = Контрагенты.Выгрузить();
	тзКонтрагенты.Свернуть("ФлагВыбора, НомерКомплекта, Заказ, Контрагент, Договор");
	тзКонтрагенты.Сортировать("ФлагВыбора, НомерКомплекта");
	
	мсвКонтрагенты	 = Новый Массив();
	МассивПараметров = Новый Массив();
	
	Для Каждого текСтрока Из тзКонтрагенты Цикл
		Если НЕ текСтрока.ФлагВыбора Тогда
			Продолжить;
		КонецЕсли;
		
		Комплект   = Контрагенты.НайтиСтроки(Новый Структура("ФлагВыбора, НомерКомплекта, Заказ, Контрагент, Договор",
			Истина, текСтрока.НомерКомплекта, текСтрока.Заказ, текСтрока.Контрагент, текСтрока.Договор));
		Контрагент = текСтрока.Контрагент;
		Договор    = текСтрока.Договор;
		Заказ      = текСтрока.Заказ;
		мсвУслуги  = Новый Массив();
		Для Каждого текСтрокаКомплект Из Комплект Цикл
			
			Для Каждого Услуга Из Услуги Цикл
				ТекУслуга = Услуга.Значение;

				Если НЕ ДокументИмя = "уатРекламация_уэ"
					И НЕ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатРеестрОплатыШтрафов")
					И (НЕ ТекУслуга.Свойство("НоменклатураУслуги")
					И ТекУслуга.Номенклатура <> текСтрокаКомплект.Услуга) Тогда
					Продолжить;
				ИначеЕсли ТекУслуга.Свойство("НоменклатураУслуги")
						И ТекУслуга.НоменклатураУслуги <> текСтрокаКомплект.Услуга Тогда
					Продолжить;
				КонецЕсли;
				
				Если ДокументИмя = "уатСчетНаОплатуПокупателю" 
					ИЛИ ДокументИмя = "уатРеализацияУслуг" Тогда
					Если ТекУслуга.Свойство("ЗаказНаТС") Тогда
						СтруктураЗаказ = ПолучитьКонтрагентаиДоговор(ТекУслуга.ЗаказНаТС);
						мДоговор       = СтруктураЗаказ.ДоговорКонтрагента;
						мКонтрагент    = СтруктураЗаказ.Контрагент;
					Иначе
						мДоговор    = Договор;
						мКонтрагент = Контрагент;
					Конецесли;
				ИначеЕсли ДокументИмя = "уатРекламация_уэ" Тогда
					СтруктураЗаказ = ПолучитьКонтрагентаиДоговор(ТекУслуга.ЗаказГрузоотправителя);
					мДоговор       = СтруктураЗаказ.ДоговорКонтрагента;
					мКонтрагент    = СтруктураЗаказ.Контрагент;
					мЗаказ         = ТекУслуга.ЗаказГрузоотправителя;
				ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатРеестрОплатыШтрафов") Тогда
					мДоговор       = ТекУслуга.Штраф.ДоговорПолучателя;
					мКонтрагент    = ТекУслуга.Штраф.ПолучательПлатежа;
				Иначе
					Если ТекУслуга.Свойство("Договор") Тогда
						мДоговор = ТекУслуга.Договор;
					Иначе
						мДоговор = Договор;
					КонецЕсли;
					Если ТекУслуга.Свойство("Контрагент") Тогда
						мКонтрагент = ТекУслуга.Контрагент;
					Иначе
						мКонтрагент = Контрагент;
					КонецЕсли;
				КонецЕсли;
				Если мКонтрагент = Контрагент
					И мДоговор = Договор Тогда
					Если ДокументИмя = "уатРекламация_уэ" Тогда
						Если мЗаказ = Заказ Тогда
							мсвУслуги.Добавить(ТекУслуга);
						КонецЕсли;
					Иначе
						мсвУслуги.Добавить(ТекУслуга);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			мсвКонтрагенты.Добавить(Новый Структура("НомерКомплекта, Заказ, Контрагент, Договор, Услуга",
				текСтрокаКомплект.НомерКомплекта, текСтрокаКомплект.Заказ, текСтрокаКомплект.Контрагент, текСтрокаКомплект.Договор, текСтрокаКомплект.Услуга));
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура("ДокументОснование, Услуги, Контрагент, Договор, ЗаказГрузоотправителя",
		ДокументОснование, мсвУслуги, Контрагент, Договор, Заказ);
		МассивПараметров.Добавить(ПараметрыФормы);
	КонецЦикла;
	
	Если ВидОперации = 0 Тогда
		Возврат МассивПараметров;
	Иначе
		СтруктураПараметров = Новый Структура("Контрагенты, МассивПараметров",мсвКонтрагенты, МассивПараметров);
		Возврат СтруктураПараметров;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	СтруктураНастроек = уатОбщегоНазначения.ВосстановитьНастройки("ФормаВыборКонтрагента", "ОбщиеНастройки");
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("БольшеНеСпрашиватьДляОдногоКонтрагента", БольшеНеСпрашиватьДляОдногоКонтрагента);
	
	ХранилищеНастроекДанныхФорм.Сохранить("ФормаВыборКонтрагента", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагентаиДоговор(ЗаказНаТС)
	Если ЗаказНаТС = Документы.уатЗаказГрузоотправителя.ПустаяСсылка() 
		ИЛИ ЗаказНаТС = Неопределено Тогда
		мКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
		мДоговор    = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	Иначе
		мКонтрагент = ЗаказНаТС.Контрагент;
		мДоговор    = ЗаказНаТС.ДоговорКонтрагента;
	КонецЕсли;
	Возврат Новый Структура("Контрагент, ДоговорКонтрагента", мКонтрагент, мДоговор);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПеревозчиков()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСведенияОКонтрагентах_уэ.Контрагент КАК Контрагент,
	               |	уатСведенияОКонтрагентах_уэ.Перевозчик КАК Перевозчик
	               |ИЗ
	               |	РегистрСведений.уатСведенияОКонтрагентах_уэ КАК уатСведенияОКонтрагентах_уэ
	               |ГДЕ
	               |	уатСведенияОКонтрагентах_уэ.Перевозчик = ИСТИНА";
	Выборка = Запрос.Выполнить().Выгрузить();
	Перевозчики = Выборка.ВыгрузитьКолонку("Контрагент");
	Возврат Перевозчики;
	
КонецФункции

#КонецОбласти
