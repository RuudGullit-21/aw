#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатСливГСМ";
	КомандаПечати.Идентификатор = "Слив";
	КомандаПечати.Представление = НСтр("en='Fuel drain';ru='Слив ГСМ'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Registry of documents ""Fuel drain ""';ru='Реестр документов ""Слив ГСМ""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если НЕ уатОбщегоНазначенияСервер.РазрешениеПечатиНепроведенногоДокумента(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Слив") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Слив", "Слив ГСМ", ПечатьСлив(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства);
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаСклад Тогда 
		СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства);
	КонецЕсли;
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
		
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	КоличествоОстаток = уатОбщегоНазначения.уатОстатокГСМнаТС(ДополнительныеСвойства.ДляПроведения.МоментКонтроля, ДокументСсылка.ТС, ДокументСсылка.ГСМ);
	Если КоличествоОстаток < 0 Тогда
		ТекстНСТР = НСтр("en='Fond out fuels negative remain ""%1"" on vehicle ""%2"": %3';ru='Обнаружен отрицательный остаток ГСМ ""%1"" на ТС ""%2"": %3'");
		ТекстНСТР = СтрШаблон(ТекстНСТР, ДокументСсылка.ГСМ, Строка(ДокументСсылка.ТС), КоличествоОстаток);
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

// Получает дополнительные реквизиты для отображения в отчете "Реестр документов"
// 
// Возвращаемое значение:
//  Структура - доп. реквизитов
//
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "АЗС");
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем мТаблицаПоСписаниюГСМ;
	
	мЗапрос = новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатСливГСМ.ТС,
	|	уатСливГСМ.ГСМ
	|ИЗ
	|	Документ.уатСливГСМ КАК уатСливГСМ
	|ГДЕ
	|	уатСливГСМ.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатСливГСМ.АЗС,
	|	уатСливГСМ.ГСМ
	|ИЗ
	|	Документ.уатСливГСМ КАК уатСливГСМ
	|ГДЕ
	|	уатСливГСМ.АЗС ССЫЛКА Справочник.уатТС
	|	И уатСливГСМ.Ссылка = &Ссылка";
	
	мЗапрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиГСМнаТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = мЗапрос.Выполнить();
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС" , "ТС");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГСМ", "ГСМ");
	Блокировка.Заблокировать();
	
	ВсеОК = уатОбщегоНазначения_проф.уатПодготовитьТаблицуСписанияГСМ(ДокументСсылка, мТаблицаПоСписаниюГСМ, Истина);
	
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Регистратор");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Период");
	ПериодРегистра = ДокументСсылка.Дата;
	Если ЗначениеЗаполнено(ДокументСсылка.ПутевойЛист) Тогда
		Если ДокументСсылка.Дата < ДокументСсылка.ПутевойЛист.ДатаВыезда Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВыезда;
		ИначеЕсли ДокументСсылка.ПутевойЛист.ДатаВозвращения <> '00010101'
			И ДокументСсылка.ПутевойЛист.ДатаВозвращения > ДокументСсылка.ПутевойЛист.ДатаВыезда
			И ДокументСсылка.Дата > ДокументСсылка.ПутевойЛист.ДатаВозвращения Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВозвращения;
		КонецЕсли;
	КонецЕсли;
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ПериодРегистра, "Период");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("ВидДвижения");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	
	// Дополним таблицу движениями в случае слива на другое ТС
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаТС Тогда 
		врТаблЗаправкиТС = мТаблицаПоСписаниюГСМ.Скопировать(, "Дата, Регистратор, Период, ТС, ГСМ, Количество, Стоимость, СтоимостьУпр, СуммаНДС");
		врТаблЗаправкиТС.Свернуть("Дата, Регистратор, Период, ТС, ГСМ", "Количество, Стоимость, СтоимостьУпр, СуммаНДС");
		врТаблЗаправкиТС.Колонки.Добавить("ВидДвижения");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.АЗС, "ТС");
		врТаблЗаправкиТС.Колонки.Добавить("Партия");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.Ссылка, "Партия");
		
		врТаблЗаправкиТС.Колонки.Добавить("Колонна");
		врТаблЗаправкиТС.Колонки.Добавить("Организация");
		врТаблЗаправкиТС.Колонки.Добавить("Подразделение");
		МестонахождениеТС = уатОбщегоНазначения.МестонахождениеТС(ДокументСсылка.АЗС, ПериодРегистра, Ложь);
		врТаблЗаправкиТС.ЗаполнитьЗначения(МестонахождениеТС.Колонна, "Колонна");
		Если ЗначениеЗаполнено(ДокументСсылка.ПутевойЛистПриемник) Тогда
			врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.ПутевойЛистПриемник.Организация, "Организация");
			Если ЗначениеЗаполнено(ДокументСсылка.ПутевойЛистПриемник.Подразделение) Тогда
				врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.ПутевойЛистПриемник.Подразделение, "Подразделение");
			Иначе
				врТаблЗаправкиТС.ЗаполнитьЗначения(МестонахождениеТС.Подразделение, "Подразделение");
			КонецЕсли;
		Иначе
			врТаблЗаправкиТС.ЗаполнитьЗначения(МестонахождениеТС.Организация, "Организация");
			врТаблЗаправкиТС.ЗаполнитьЗначения(МестонахождениеТС.Подразделение, "Подразделение");
		КонецЕсли;
				
		Для Каждого СтрокаДополнения Из врТаблЗаправкиТС Цикл 
			НовСтрока = мТаблицаПоСписаниюГСМ.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаДополнения);
		КонецЦикла;
	КонецЕсли;;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаГСМ", мТаблицаПоСписаниюГСМ);
КонецПроцедуры // СформироватьТаблицаГСМ()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПартий(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем мТаблицаПартий;
	
	мТаблицаПартий = Новый ТаблицаЗначений;
	мТаблицаПартий.Колонки.Добавить("Период");
	мТаблицаПартий.Колонки.Добавить("Регистратор");
	мТаблицаПартий.Колонки.Добавить("ВидДвижения");
	мТаблицаПартий.Колонки.Добавить("Номенклатура");
	мТаблицаПартий.Колонки.Добавить("Склад");
	мТаблицаПартий.Колонки.Добавить("Партия");
	мТаблицаПартий.Колонки.Добавить("Количество");
	мТаблицаПартий.Колонки.Добавить("Стоимость");
	мТаблицаПартий.Колонки.Добавить("СтоимостьУпр");
	мТаблицаПартий.Колонки.Добавить("СуммаНДС");
	
	НоваяСтрока = мТаблицаПартий.Добавить();
	НоваяСтрока.Номенклатура = ДокументСсылка.ГСМ;
	НоваяСтрока.Склад = ДокументСсылка.АЗС.Контрагент_Склад;
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, "СпособОценкиМПЗ") <> Перечисления.СпособыОценки.ПоСредней Тогда
		НоваяСтрока.Партия = ДокументСсылка;
	КонецЕсли;
	
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаСклад И Не ДокументСсылка.Плотность = 0 Тогда 
		НоваяСтрока.Количество = ДокументСсылка.Количество * ДокументСсылка.Плотность;
	Иначе 
		НоваяСтрока.Количество = ДокументСсылка.Количество;
	КонецЕсли;
	
	НоваяСтрока.Стоимость    = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГСМ.Итог("Стоимость");
	НоваяСтрока.СтоимостьУпр = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГСМ.Итог("СтоимостьУпр");
	НоваяСтрока.СуммаНДС     = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаГСМ.Итог("СуммаНДС");
	
	мТаблицаПартий.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");
	ПериодРегистра = ДокументСсылка.Дата;
	Если ЗначениеЗаполнено(ДокументСсылка.ПутевойЛист) Тогда
		Если ДокументСсылка.Дата < ДокументСсылка.ПутевойЛист.ДатаВыезда Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВыезда;
		ИначеЕсли ДокументСсылка.ПутевойЛист.ДатаВозвращения <> '00010101'
			И ДокументСсылка.ПутевойЛист.ДатаВозвращения > ДокументСсылка.ПутевойЛист.ДатаВыезда
			И ДокументСсылка.Дата > ДокументСсылка.ПутевойЛист.ДатаВозвращения Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВозвращения;
		КонецЕсли;
	КонецЕсли;
	мТаблицаПартий.ЗаполнитьЗначения(ПериодРегистра, "Период");
	мТаблицаПартий.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПартии", мТаблицаПартий);
КонецПроцедуры // СформироватьТаблицаПартий()

Функция ПечатьСлив(МассивОбъектов, ОбъектыПечати) 
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СливГСМ_Слив";
	Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.уатСливГСМ.ПФ_MXL_Слив");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыбиратьРазрешенные = Истина;
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийДокумент.Ссылка,
			"Организация, Ответственный, Подразделение, ТС, ГСМ, АЗС, Количество, ПутевойЛист", ВыбиратьРазрешенные);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ТекущийДокумент, "Слив ГСМ");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаОрганизация");
		СписокТребуемыхПараметров           = "НаименованиеДляПечатныхФорм";
		СведенияОбОбъекте                   = уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(РеквизитыДокумента.Организация);
		ОбластьМакета.Параметры.Организация = уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(СведенияОбОбъекте, СписокТребуемыхПараметров);
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(РеквизитыДокумента.Подразделение) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПодразделение");
			ОбластьМакета.Параметры.Подразделение = РеквизитыДокумента.Подразделение;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПрочее");
		ОбластьМакета.Параметры.Заполнить(РеквизитыДокумента);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = РеквизитыДокумента.Ответственный;
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли