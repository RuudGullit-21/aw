
#Область ПеременныеФормы

&НаКлиенте
Перем СоответвиеПЛЭД;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	флЭЦП               = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	ИспользоватьОбменЭД = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД");
	флПравоПодписи      = ПравоДоступа("Изменение",
		Метаданные.Справочники.уатЖурналУчетаПоказанийОдометраПрисоединенныеФайлы);
	Элементы.ФормаПодписать.Видимость = флЭЦП И флПравоПодписи;
	
	// Ввод на основании ПЛ
	Если Объект.Ссылка.Пустая() Тогда
		СозданныеДокументы = уатЖурналыТранспортныхДокументов.СозданныеДокументыОсмотровОдометровПоПЛ(Объект.ПутевойЛист);
			
		Если СозданныеДокументы.Предрейсовый <> Неопределено И СозданныеДокументы.Послерейсовый <> Неопределено Тогда
			ТекстНСТР = "По путевому листу уже внесены показания одометра";
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР,,, СтатусСообщения.Внимание);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если СозданныеДокументы.Предрейсовый <> Неопределено И СозданныеДокументы.Послерейсовый = Неопределено Тогда
			Объект.ВидКонтроля = Перечисления.уатВидыКонтроляТранспортныхДокументов.Послерейсовый;
		КонецЕсли;
		ТекПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
		
		Если НЕ ЗначениеЗаполнено(Объект.Журнал) Тогда
			СтруктураНастройки = Новый Структура("Организация, Подразделение", Объект.Организация, Объект.Подразделение);
			Объект.Журнал = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(СтруктураНастройки,
				ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнойЖурналУчетаПоказанийОдометра);
		КонецЕсли;
		Объект.ТС                = Объект.ПутевойЛист.ТранспортноеСредство;
		Объект.ПоказаниеОдометра = ?(Объект.ВидКонтроля = Перечисления.уатВидыКонтроляТранспортныхДокументов.Предрейсовый,
			Объект.ПутевойЛист.СпидометрВыезда, Объект.ПутевойЛист.СпидометрВозвращения); 
		
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.ТС) Тогда 
		МодельТС = ПолучитьЗначениеРеквизита(Объект.ТС, "Модель");
		Если ЗначениеЗаполнено(МодельТС) Тогда
			Если ПолучитьЗначениеРеквизита(МодельТС, "НаличиеСпидометра") Тогда
				Элементы.ПоказаниеОдометра.Заголовок = НСтр("en='Odometer';ru='Показания одометра, км'");
			Иначе
				Элементы.ПоказаниеОдометра.Заголовок = НСтр("en='Counter m/h';ru='Показания счетчика м/ч'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ИспользоватьОбменЭД
		И Элементы.ФормаПодписать.Видимость Тогда
		Титул = ?(Объект.ВидКонтроля  = ПредопределенноеЗначение("Перечисление.уатВидыКонтроляТранспортныхДокументов.Предрейсовый"),
		ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4"),
		ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5"));
		Элементы.ФормаПодписать.Видимость = уатОбменСГИСЭПДКлиент.ЕстьВозможностьПодписанияЭПЛ(Объект.ПутевойЛист, Титул);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подписать(Команда)

	Если НЕ уатЗащищенныеФункцииКлиент.ИТСОтраслевой_ПроверкаДоступностиСервисов() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКлючевойОперации = "уатОперации.ПодписаниеЭПЛизЖурналаУполномоченного";
	ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(ИмяКлючевойОперации, 1);

	Если НЕ Объект.Ссылка.Пустая() Тогда
		мсвДокументы = Новый Массив;
		мсвДокументы.Добавить(Объект.Ссылка);
		флПодписан = уатЖурналыТранспортныхДокументов.ДокументыПодписаны(мсвДокументы);
		Если флПодписан Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Оповещ = Новый ОписаниеОповещения("ПодписатьЗаписатьДокумент", ЭтотОбъект);
		ТекстСообщ = "Перед подписанием документ будет проведен. Продолжить?";
		ПоказатьВопрос(Оповещ, ТекстСообщ, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ПодписатьЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗаписатьДокумент(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		флОК = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		Если флОК Тогда
			ПодписатьЗавершение();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение()
	
	Если ИспользоватьОбменЭД Тогда
		мсвДокументы = Новый Массив();
		мсвДокументы.Добавить(Объект.ПутевойЛист);
		
		ПараметрыОткрытия = Новый Структура("мсвДокументы", мсвДокументы);
		ПараметрыОткрытия.Вставить("Подпись",       "УполномоченныйНаПроставлениеОдометра");
		ПараметрыОткрытия.Вставить("Представление", "Уполномоченный на проставление одометра");
		ОткрытьФорму("Документ.уатПутевойЛист.Форма.ФормаПодписейОтвЛица", ПараметрыОткрытия, ЭтотОбъект);
	Иначе
		уатЖурналыТранспортныхДокументовКлиент.Подписать(Объект.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидКонтроляПриИзменении(Элемент)
	ВидКонтроляПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПутевойЛистПриИзменении(Элемент) 
	ВидКонтроляПриИзмененииСервер();
	Если ИспользоватьОбменЭД
		И Элементы.ФормаПодписать.Видимость Тогда
		Титул = ?(Объект.ВидКонтроля  = ПредопределенноеЗначение("Перечисление.уатВидыКонтроляТранспортныхДокументов.Предрейсовый"),
		ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4"),
		ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5"));
		Элементы.ФормаПодписать.Видимость = уатОбменСГИСЭПДКлиент.ЕстьВозможностьПодписанияЭПЛ(Объект.ПутевойЛист, Титул);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Объект, ИмяРеквизита)
	Возврат уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект, ИмяРеквизита);
КонецФункции

&НаСервере
Процедура ВидКонтроляПриИзмененииСервер() 
	Объект.ТС = Объект.ПутевойЛист.ТранспортноеСредство;
	Объект.ПоказаниеОдометра = ?(Объект.ВидКонтроля = ПредопределенноеЗначение("Перечисление.уатВидыКонтроляТранспортныхДокументов.Предрейсовый"),
			Объект.ПутевойЛист.СпидометрВыезда, Объект.ПутевойЛист.СпидометрВозвращения); 
	Объект.Контролер = ?(Объект.ВидКонтроля = ПредопределенноеЗначение("Перечисление.уатВидыКонтроляТранспортныхДокументов.Предрейсовый"),
			Объект.ПутевойЛист.УполномоченныйНаПроставлениеОдометраПриВыезде,
			Объект.ПутевойЛист.УполномоченныйНаПроставлениеОдометраПриВозврате);
	Объект.Организация   = Объект.ПутевойЛист.Организация;
	Объект.Подразделение = Объект.ПутевойЛист.Подразделение;
КонецПроцедуры

#КонецОбласти
