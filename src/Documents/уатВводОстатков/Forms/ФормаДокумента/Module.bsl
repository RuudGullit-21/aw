
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
	ОбновитьВсегоВТЧСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьВсегоВТЧСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьВсегоВТЧСервер();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если флВопросЗакрытиеФормы Тогда
		Отказ = Истина;
		Оповещ = Новый ОписаниеОповещения("ПередЗакрытиемВопрос", ЭтотОбъект);
		ПоказатьВопрос(Оповещ, "При проверке корректности заполнения документа возникли предупреждения!
			|Продолжить закрытие формы?", РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОперативныеДоходы") Тогда
		Объект.Расходы.Очистить();
		Объект.ОстаткиДСПодотчетныхЛиц.Очистить();
		Объект.ОстаткиДС.Очистить();
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОперативныеРасходы") Тогда
		Объект.Доходы.Очистить();
		Объект.ОстаткиДСПодотчетныхЛиц.Очистить();
		Объект.ОстаткиДС.Очистить();
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСПодотчетныхЛиц") Тогда
		Объект.Доходы.Очистить();
		Объект.Расходы.Очистить();
		Объект.ОстаткиДС.Очистить();
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСВКассах")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСНаСчетах") Тогда
		Объект.Доходы.Очистить();
		Объект.Расходы.Очистить();
		Объект.ОстаткиДСПодотчетныхЛиц.Очистить();
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПриИзменении(Элемент)
	ОбновитьВсегоВТЧСервер();
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока = Элементы.Доходы.ТекущиеДанные;
		ТекСтрока.ДатаОтражения = Объект.Дата;
		ТекСтрока.СтатьяДоходов = ПредопределенноеЗначение("Справочник.уатСтатьиДоходов.ОсновнаяСтатьяДоходов");
		ТекСтрока.УчитыватьНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "УчитыватьНДС");
		ТекСтрока.СуммаВключаетНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "СуммаВключаетНДС");
		Если ТекСтрока.УчитыватьНДС Тогда
			ТекСтрока.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСуммаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСтавкаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Доходы.ТекущиеДанные;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыУчитыватьНДСПриИзменении(Элемент)
	ТекСтрока = Элементы.Доходы.ТекущиеДанные;
	Если ТекСтрока.УчитыватьНДС Тогда
		ТекСтрока.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
	Иначе
		ТекСтрока.СтавкаНДС = Неопределено;
		ТекСтрока.СуммаВключаетНДС = Ложь;
	КонецЕсли;
	РассчитатьСуммуНДС(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСПриИзменении(Элемент)
	ТекСтрока = Элементы.Доходы.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Колонна) Тогда
		МестонахождениеТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаОтражения);
		ТекСтрока.Колонна = МестонахождениеТС.Колонна;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.Доходы.ТекущиеДанные.ТС, ДанныеВыбора,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура ДоходыТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыПриИзменении(Элемент)
	ОбновитьВсегоВТЧСервер();
КонецПроцедуры

&НаКлиенте
Процедура РасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока = Элементы.Расходы.ТекущиеДанные;
		ТекСтрока.ДатаОтражения = Объект.Дата;
		ТекСтрока.СтатьяРасходов = ПредопределенноеЗначение("Справочник.уатСтатьиРасходов.ОсновнаяСтатьяРасходов");
		ТекСтрока.УчитыватьНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "УчитыватьНДС");
		ТекСтрока.СуммаВключаетНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "СуммаВключаетНДС");
		Если ТекСтрока.УчитыватьНДС Тогда
			ТекСтрока.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Расходы.ТекущиеДанные;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура РасходыСтавкаНДСПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Расходы.ТекущиеДанные;
	
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура РасходыУчитыватьНДСПриИзменении(Элемент)
	ТекСтрока = Элементы.Расходы.ТекущиеДанные;
	Если ТекСтрока.УчитыватьНДС Тогда
		ТекСтрока.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
	Иначе
		ТекСтрока.СтавкаНДС = Неопределено;
		ТекСтрока.СуммаВключаетНДС = Ложь;
	КонецЕсли;
	РассчитатьСуммуНДС(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСПриИзменении(Элемент)
	ТекСтрока = Элементы.Расходы.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока.Колонна) Тогда
		МестонахождениеТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаОтражения);
		ТекСтрока.Колонна = МестонахождениеТС.Колонна;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(Элемент, Элементы.Расходы.ТекущиеДанные.ТС, ДанныеВыбора,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура РасходыТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.РеквизитТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
		СтандартнаяОбработка, СтруктураОтборТС());
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ОбновитьВсегоВТЧСервер()
	Для Каждого СтрокаТабличнойЧасти Из Объект.Доходы Цикл
		СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
			+ ?(СтрокаТабличнойЧасти.УчитыватьНДС И НЕ СтрокаТабличнойЧасти.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
	КонецЦикла;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Расходы Цикл
		СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
			+ ?(СтрокаТабличнойЧасти.УчитыватьНДС И НЕ СтрокаТабличнойЧасти.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОперативныеДоходы") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДоходы;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОперативныеРасходы") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРасходы;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСПодотчетныхЛиц") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницыОстаткиДСПодотчетныхЛиц;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСВКассах") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницыОстаткиДС;
		Элементы.ОстаткиДСБанковскийСчетКасса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Кассы");
		Элементы.ОстаткиДСБанковскийСчетКасса.Заголовок = "Касса";
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийВводОстатков.ОстаткиДСНаСчетах") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницыОстаткиДС;
		Элементы.ОстаткиДСБанковскийСчетКасса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета");
		Элементы.ОстаткиДСБанковскийСчетКасса.Заголовок = "Банковский счет";
	КонецЕсли;
КонецПроцедуры

// Рассчитывается сумма НДС в строке табличной части.
//
&НаКлиенте
Процедура РассчитатьСуммуНДС(СтрокаТабличнойЧасти)
	
	СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	
	СтрокаТабличнойЧасти.СуммаНДС = ?(СтрокаТабличнойЧасти.СуммаВключаетНДС, 
	СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
	СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	
КонецПроцедуры // РассчитатьСуммуНДС()

&НаКлиенте
Процедура РассчитатьСуммуВсегоВстрокеТЧ(СтрокаТабличнойЧасти)
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма
		+ ?(СтрокаТабличнойЧасти.УчитыватьНДС И НЕ СтрокаТабличнойЧасти.СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиДСПодотчетныхЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока = Элементы.ОстаткиДСПодотчетныхЛиц.ТекущиеДанные;
		ТекСтрока.ДатаОтражения = Объект.Дата;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиДСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекСтрока = Элементы.ОстаткиДС.ТекущиеДанные;
		ТекСтрока.ДатаОтражения = Объект.Дата;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопрос(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		флВопросЗакрытиеФормы = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция СтруктураОтборТС()
	СтруктураОтбор = Новый Структура("Организация", Объект.Организация);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураОтбор.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
	Возврат СтруктураОтбор;
КонецФункции

#КонецОбласти
