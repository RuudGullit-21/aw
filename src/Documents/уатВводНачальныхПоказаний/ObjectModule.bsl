#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатВводНачальныхПоказаний.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение.ОтразитьСчетчикиТС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение.ОтразитьПрохождениеТО(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатВводНачальныхПоказаний.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка на дубли строк в ТЧ "Спидометр".
	мсвТС = Новый Массив();
	Для Каждого ТекСтрока Из Спидометр Цикл 
		Если мсвТС.Найти(ТекСтрока.ТС) = Неопределено Тогда 
			мсвТС.Добавить(ТекСтрока.ТС);
		Иначе 
			ТекстОшибки = "ТС """ + " " + ТекСтрока.ТС + " "" уже добавлено в табличную часть ""Одометр"".";
			ПолеОшибки = "Спидометр["+Формат(ТекСтрока.НомерСтроки - 1, "ЧН=0; ЧГ=0")+"].ТС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ПолеОшибки,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	// Проверка на дубли строк в ТЧ "ИсторияПрохожденияТО".
	табПрохожденияТО = Новый ТаблицаЗначений();
	табПрохожденияТО.Колонки.Добавить("ТС",              Новый ОписаниеТипов("СправочникСсылка.уатТС"));
	табПрохожденияТО.Колонки.Добавить("ДатаТО",          Новый ОписаниеТипов("Дата"));
	табПрохожденияТО.Колонки.Добавить("ВидОбслуживания", Новый ОписаниеТипов("СправочникСсылка.уатВидыОбслуживанияТС"));
	Для Каждого ТекСтрока Из ИсторияПрохожденияТО Цикл 
		ОтборСтрок = Новый Структура();
		ОтборСтрок.Вставить("ТС",              ТекСтрока.ТС);
		ОтборСтрок.Вставить("ДатаТО",          ТекСтрока.ДатаТО);
		ОтборСтрок.Вставить("ВидОбслуживания", ТекСтрока.ВидОбслуживания);
		
		НайдСтроки = табПрохожденияТО.НайтиСтроки(ОтборСтрок);
		Если НайдСтроки.Количество() = 0 Тогда 
			НовСтрока = табПрохожденияТО.Добавить();
			НовСтрока.ТС              = ТекСтрока.ТС;
			НовСтрока.ДатаТО          = ТекСтрока.ДатаТО;
			НовСтрока.ВидОбслуживания = ТекСтрока.ВидОбслуживания;
		Иначе 
			ТекстОшибки = "В строке" + " " + ТекСтрока.НомерСтроки + " " + "табличной части ""История прохождения ТО"" указаны дублирующиеся значения.";
			ПолеОшибки = "ИсторияПрохожденияТО["+Формат(ТекСтрока.НомерСтроки - 1, "ЧН=0; ЧГ=0")+"].ТС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ПолеОшибки,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МассивТС = Новый Массив();
	Для Каждого ТекСтрока Из Спидометр Цикл 
		Если МассивТС.Найти(ТекСтрока.ТС) = Неопределено Тогда 
			МассивТС.Добавить(ТекСтрока.ТС);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ИсторияПрохожденияТО Цикл 
		Если МассивТС.Найти(ТекСтрока.ТС) = Неопределено Тогда 
			МассивТС.Добавить(ТекСтрока.ТС);
		КонецЕсли;
	КонецЦикла;
	
	СписокТС = "";
	Для Каждого ТекТС Из МассивТС Цикл 
		СписокТС = СписокТС + ?(СписокТС = "", "", ", ") + ТекТС.Наименование;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

#КонецОбласти

#КонецЕсли