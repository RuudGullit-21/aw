
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Заполнение при вводе из "уатРедактированиеРабочегоВремени".
	Если Параметры.Свойство("КорректировкаИзРедактированиеРабочегоВремени") И Параметры.КорректировкаИзРедактированиеРабочегоВремени Тогда
		КорректировкаИзРедактированиеРабочегоВремени = Истина;
		Объект.Сотрудник = Параметры.Сотрудник;
		Если Параметры.Свойство("План") Тогда
			Объект.ВидОперации = Перечисления.уатВидыОперацийКорректировкаРабочегоВремени.План;
		КонецЕсли;
		Для Каждого ТекДата Из Параметры.мДатаГрафика Цикл
			Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
				Объект.Дата = ТекущаяДата();
			КонецЕсли;
			
			НоваяСтрока = Объект.ТабличнаяЧасть.Добавить();
			НоваяСтрока.ВидИспользованияРабочегоВремени = Параметры.ВидИспользованияРабочегоВремени;
			НоваяСтрока.ДатаНачала = ТекДата.ДатаГрафика;
			НоваяСтрока.Дней       = 1;
			Если НоваяСтрока.ВидИспользованияРабочегоВремени.ИспользоватьКакЦелодневныйПростой Тогда
				НоваяСтрока.Время = '00010101';
			Иначе
				НоваяСтрока.Время      = ТекДата.Время;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьДинамическиеКолонкиТЧСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ОбновитьДинамическиеКолонкиТЧСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если КорректировкаИзРедактированиеРабочегоВремени Тогда
		Оповестить("КорректировкаРабочегоВремени", Объект.Ссылка);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьДинамическиеКолонкиТЧСервер();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Объект.Сотрудник, Новый Структура("Организация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Объект.Сотрудник, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВидИспользованияРабочегоВремениПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(
		ТекСтрока.ВидИспользованияРабочегоВремени, "ИспользоватьКакЦелодневныйПростой") Тогда
		ТекСтрока.Время = '00010101';
	КонецЕсли;
		
	ОбновитьДинамическиеКолонкиТЧСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСменаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	ТекСтрока.Время = '00010101' + уатОбщегоНазначения.ПродолжительностьСмены(ТекСтрока.Смена);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ТабличнаяЧастьСмена.Видимость =
		(Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийКорректировкаРабочегоВремени.План"));
КонецПроцедуры

&НаСервере
Процедура ОбновитьДинамическиеКолонкиТЧСервер()
	
	Для Каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		ТекСтрока.НерабочееВремя = ТекСтрока.ВидИспользованияРабочегоВремени.ИспользоватьКакЦелодневныйПростой;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
