
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ВыполнитьУстановкуСтатусаЗаявкиНаРемонт") Тогда
		ВыполнитьУстановкуСтатусаЗаявкиНаРемонт = ТекущийОбъект.ДополнительныеСвойства.ВыполнитьУстановкуСтатусаЗаявкиНаРемонт;
		ТекущийОбъект.ДополнительныеСвойства.ВыполнитьУстановкуСтатусаЗаявкиНаРемонт = Неопределено;
	КонецЕсли;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ВыполнитьУстановкуСтатусаЗаявкиНаРемонт) Тогда
		ОповеститьОбИзменении(ВыполнитьУстановкуСтатусаЗаявкиНаРемонт);
		ПараметрыФормы = Новый Структура("Ключ", ВыполнитьУстановкуСтатусаЗаявкиНаРемонт);
		ФормаЗаявкаНаРемонт = ПолучитьФорму("Документ.уатЗаявкаНаРемонт.Форма.ФормаДокумента", ПараметрыФормы);
		Если ФормаЗаявкаНаРемонт.Открыта() Тогда
			Если ФормаЗаявкаНаРемонт.Модифицированность Тогда
				СтатусВыполнения = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ВыполнитьУстановкуСтатусаЗаявкиНаРемонт, "СтатусВыполнения");
				ФормаЗаявкаНаРемонт.СтатусВыполненияПослеВыбораСтатуса(СтатусВыполнения, Неопределено);
				ФормаЗаявкаНаРемонт.ОбновитьОтображениеДанных();
			Иначе
				ФормаЗаявкаНаРемонт.Прочитать();
			КонецЕсли;
		КонецЕсли;
		ВыполнитьУстановкуСтатусаЗаявкиНаРемонт = Неопределено;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Если Объект.Заявки.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Table ""Request"" is not empty. Clear?';ru='Табличная часть ""Заявки"" не пустая. Очистить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОстаткамЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ЗаполнитьПоОстаткамФрагмент();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьЗаявки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатЗаявкиНаРемонтОстатки.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
	|	уатЗаявкиНаРемонтОстатки.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.уатЗаявкиНаРемонт.Остатки(&МоментДокумента, ) КАК уатЗаявкиНаРемонтОстатки
	|ГДЕ
	|	уатЗаявкиНаРемонтОстатки.КоличествоОстаток <> 0
	|ИТОГИ
	|	МАКСИМУМ(Номенклатура)
	|ПО
	|	ЗаявкаНаРемонт";
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Параметры.Ключ.Пустая() Тогда
		Запрос.УстановитьПараметр("МоментДокумента", КонецДня(ДокОбъект.Дата));
	Иначе
		Запрос.УстановитьПараметр("МоментДокумента", Новый Граница(ДокОбъект.МоментВремени(),ВидГраницы.Исключая));
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Рез = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Рез.Добавить(Выборка.ЗаявкаНаРемонт);
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоОстаткамЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.Заявки.Очистить();	
    КонецЕсли;
    
    ЗаполнитьПоОстаткамФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамФрагмент()
    
    Перем мсвЗаявки, НоваяЗаявка, ТекЗаявка;
    
    мсвЗаявки = ПолучитьЗаявки();
    Для Каждого ТекЗаявка Из мсвЗаявки Цикл
        НоваяЗаявка = Объект.Заявки.Добавить();
        НоваяЗаявка.ЗаявкаНаРемонт = ТекЗаявка;
    КонецЦикла;

КонецПроцедуры

#КонецОбласти
