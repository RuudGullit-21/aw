
#Область ПеременныеФормы

&НаКлиенте
Перем сЗагруженныеДанныеВыпискаОпераций;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		АвтоТест = Истина;
	КонецЕсли;

	ПрофильОбменаВыпискаОпераций = Справочники.уатПрофилиОбменаСВнешнимиСистемами.Автодор;

	ЗаполнитьСоответствияКолонокВыпискаОперацийСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Immediate opening for this object is prohibited!';ru='Непосредственное открытие для данного объекта запрещено!'"), 10);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	сЗагруженныеДанныеВыпискаОпераций = Новый Массив;
	ЗагрузитьНастройки();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаВыпискаОперацийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПоказатьДиалогВыбораФайла", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофильОбменаВыпискаОперацийПриИзменении(Элемент)
	ЗаполнитьСоответствияКолонокВыпискаОперацийСервер();
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	
	ПустаяСтрокаИмяФайлаВыпискаОпераций    = ПустаяСтрока(ИмяФайлаВыпискаОпераций);
	мсвЗагруженныеДанные = Новый Массив();

	Если ПустаяСтрокаИмяФайлаВыпискаОпераций Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не указано имя файла!'"));
		Возврат;
	КонецЕсли;
	
	СтрокаОшибки = "";
	Если НЕ ПустаяСтрокаИмяФайлаВыпискаОпераций Тогда
		Попытка
			ВыполнитьЗагрузкуДанных(ИмяФайлаВыпискаОпераций, СтрокаОшибки, мсвЗагруженныеДанные);
		Исключение
			СтрокаОшибки = Нстр("ru = 'Данные документа ""Выписка операций"" не были загружены. Проверьте настройки профиля обмена.'");
		КонецПопытки;
	КонецЕсли;
				
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек    = ХранилищеНастроекДанныхФорм.Загрузить("Документ.уатОтчетСистемыАвтодор.Форма.ФормаЗагрузки", "уатОтчетСистемыАвтодор_ОбщиеНастройки",,Пользователи.АвторизованныйПользователь());
	НастройкиНекорректны = (СтруктураНастроек = Неопределено Или ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
		
	Если НЕ НастройкиНекорректны
		И СтруктураНастроек.Свойство("ПрофильОбменаВыпискаОпераций") Тогда
		ПрофильОбменаВыпискаОпераций = СтруктураНастроек.ПрофильОбменаВыпискаОпераций;
	КонецЕсли;
	
	Если НЕ НастройкиНекорректны
		И СтруктураНастроек.Свойство("ИмяФайлаВыпискаОпераций") Тогда
		ИмяФайлаВыпискаОпераций = СтруктураНастроек.ИмяФайлаВыпискаОпераций;
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ПрофильОбменаВыпискаОпераций", ПрофильОбменаВыпискаОпераций);
	СтруктураНастроек.Вставить("ИмяФайлаВыпискаОпераций",      ИмяФайлаВыпискаОпераций);
		
	ХранилищеНастроекДанныхФорм.Сохранить("Документ.уатОтчетСистемыАвтодор.Форма.ФормаЗагрузки", "уатОтчетСистемыАвтодор_ОбщиеНастройки",
								СтруктураНастроек,,Пользователи.АвторизованныйПользователь());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоответствияКолонокВыпискаОперацийСервер()
	
	СоответствиеКолонокВыпискаОпераций.Очистить();
	Если ЗначениеЗаполнено(ПрофильОбменаВыпискаОпераций) Тогда
		СоответствиеКолонокВыпискаОпераций.Загрузить(ПрофильОбменаВыпискаОпераций.СоответствиеКолонок.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФайлПослеВыбораФайла(Результат, ДопПараметры) Экспорт
		
	Если Результат = Неопределено Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("en='You must select a file';ru='Необходимо выбрать файл'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ИмяФайлаВыпискаОпераций = Результат[0];
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанных(ИмяФайла, СтрокаОшибки = "", Массив)
	ТипФайлаExcel = (Прав(ИмяФайла,3) = "xls") Или (Прав(ИмяФайла, 4) = "xlsx");
	#Если МобильныйКлиент ИЛИ МобильноеПриложениеКлиент Тогда
		Файл = Новый Файл(ИмяФайла);
		ПредставлениеНаМобильномУстройстве = Файл.ПолучитьПредставлениеФайлаБиблиотекиМобильногоУстройства();
		ТипФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ПредставлениеНаМобильномУстройстве); 
		ТипФайлаExcel = (ТипФайла = "xls") Или (ТипФайла = "xlsx");
	#КонецЕсли
	
	Если ТипФайлаExcel Тогда	
		
		ДопПараметры = Новый Структура();
		ДопПараметры.Вставить("ИмяФайла", ИмяФайла);
		ДопПараметры.Вставить("СтрокаОшибки", СтрокаОшибки);
		ДопПараметры.Вставить("Массив", Массив);

		Обработчик = Новый ОписаниеОповещения("ПрочитатьДанныеИзФайлаПослеПодключения", ЭтотОбъект, ДопПараметры);
		НачатьПодключениеРасширенияРаботыСФайлами(Обработчик);

	Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст  = НСтр("en='You must select a MS Excel file';ru='Необходимо выбрать файл MS Excel'");
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанныхЗавершение(ДвоичныеДанные, ДопПараметры) Экспорт
	
	Если ДвоичныеДанные <> Неопределено Тогда
		Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ДопПараметры.ИмяФайла));
		ЗагружаемыйФайл = ВыполнитьЗагрузкуДанныхСервер(ДопПараметры.ИмяФайла, Адрес, РасширениеФайла, ДопПараметры.СтрокаОшибки);
		ВыполнитьЗагрузкуДанныхXLS(ДопПараметры.ИмяФайла, ДопПараметры.СтрокаОшибки, ЗагружаемыйФайл, ДопПараметры.Массив);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьЗагрузкуДанныхСервер(ИмяФайла, Адрес, Расширение, СтрокаОшибки = "")
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные = ПолучитьИЗВременногоХранилища(Адрес); // ДвоичныеДанные
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ЗагружаемыйФайл = Новый ТабличныйДокумент;
	Попытка
		ЗагружаемыйФайл.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		СтрокаОшибки = Нстр("ru = 'Ошибка совместного доступа к файлу'") + " " + ИмяФайла;
	КонецПопытки;
	
	Возврат ЗагружаемыйФайл;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанныхXLS(ИмяФайла, СтрокаОшибки, ЗагружаемыйФайл, Массив)
	
	СоответствиеКолонокВрем.Очистить();
	
	СоответствиеКолонок	 = СоответствиеКолонокВыпискаОпераций;
	ПрофильОбмена		 = ПрофильОбменаВыпискаОпераций;
	
	КоличествоСтрок    = ЗагружаемыйФайл.ВысотаТаблицы;
	КоличествоСтолбцов = ЗагружаемыйФайл.ШиринаТаблицы;
	
	Для Каждого ТекСтрока Из СоответствиеКолонок Цикл
		НоваяСтрока = СоответствиеКолонокВрем.Добавить();
		НоваяСтрока.КолонкаДокумента = ТекСтрока.КолонкаДокумента;
		НоваяСтрока.ИмяКолонкиФайла = ТекСтрока.ИмяКолонкиФайла;
		НоваяСтрока.КолонкаДокументаПредставление = ТекСтрока.КолонкаДокументаПредставление;
		НоваяСтрока.НомерКолонкиФайла	 = ТекСтрока.НомерКолонкиФайла;
		НоваяСтрока.Использование		 = ТекСтрока.Использование;
	КонецЦикла;
	
	СтруктураКолонок = Новый Структура;
	Для Каждого ТекСоотв Из СоответствиеКолонокВрем Цикл
		Если НЕ ТекСоотв.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураКолонок.Вставить(ТекСоотв.КолонкаДокумента, ТекСоотв.НомерКолонкиФайла);
	КонецЦикла;
	
	флИспользуетсяСовмещеннаяКолонкаДатаВремя = Истина;
	
	сЗагруженныеДанные = Новый Массив();
	Для НомерСтроки = 2 По КоличествоСтрок Цикл
				
		МассивЭлементов	 = ПолучитьМассивЭлементов(ЗагружаемыйФайл, НомерСтроки, КоличествоСтолбцов);
		
		Попытка
			СтрокаНезакрыта = СтрЧислоВхождений(МассивЭлементов[МассивЭлементов.Количество()-1], """") = 1;
			Если СтрокаНезакрыта Тогда
				НомерСтроки			 = НомерСтроки + 1;
				МассивЭлементовКон	 = ПолучитьМассивЭлементов(ЗагружаемыйФайл, НомерСтроки, КоличествоСтолбцов);	
				
				МассивЭлементов[МассивЭлементов.Количество() - 1] = МассивЭлементов[МассивЭлементов.Количество() - 1] + " " + МассивЭлементовКон[0];
				ПерваяСтрока = Истина;
				Для Каждого ТекСтрока Из МассивЭлементовКон Цикл
					Если ПерваяСтрока Тогда
						ПерваяСтрока = Ложь;
						Продолжить;
					КонецЕсли;
					МассивЭлементов.Добавить(ТекСтрока);
				КонецЦикла;
				
				СтрокаНезакрыта = СтрЧислоВхождений(МассивЭлементов[МассивЭлементов.Количество()-1], """") = 1;
				Если СтрокаНезакрыта Тогда
					НомерСтроки			 = НомерСтроки + 1;
					МассивЭлементовКон	 = ПолучитьМассивЭлементов(ЗагружаемыйФайл, НомерСтроки, КоличествоСтолбцов);	
					
					МассивЭлементов[МассивЭлементов.Количество() - 1] = МассивЭлементов[МассивЭлементов.Количество() - 1] + " " + МассивЭлементовКон[0];
					ПерваяСтрока = Истина;
					Для Каждого ТекСтрока Из МассивЭлементовКон Цикл
						Если ПерваяСтрока Тогда
							ПерваяСтрока = Ложь;
							Продолжить;
						КонецЕсли;
						МассивЭлементов.Добавить(ТекСтрока);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		СтруктураСтроки	 = Новый Структура;
		
		ДатаОперации = МассивЭлементов[СтруктураКолонок.ДатаОперации-1];
		ДатаЗаправкиСтрока	 = Лев(ДатаОперации, +10);
		ВремяЗаправкиСтрока	 = Сред(ДатаОперации,12,+8);
		
		Попытка
			Месяц_ = Число(Сред(ДатаЗаправкиСтрока, 4, 2));
			День_ = Число(Лев(ДатаЗаправкиСтрока, 2));
			Год_ = СтрЗаменить(Число(Сред(ДатаЗаправкиСтрока, 7, 4)), " ", "");
			
			Попытка
				Час_ = Число(Лев(ВремяЗаправкиСтрока, 2));
			Исключение
				Час_ = Число(Лев(ВремяЗаправкиСтрока, 1));
				ВремяЗаправкиСтрока = "0" + ВремяЗаправкиСтрока;
			КонецПопытки;
			Минута_ = Число(Сред(ВремяЗаправкиСтрока, 4, 2));
			Секунда_ = Число(Прав(ВремяЗаправкиСтрока, 2));
		Исключение
			Продолжить;
		КонецПопытки;
		
		Попытка
			ДатаОперации = Дата(Год_, Месяц_, День_, Час_, Минута_, Секунда_);
		Исключение
			Продолжить;
		КонецПопытки;
		
		СтруктураСтроки.Вставить("ДатаОперации", ДатаОперации);
		
		Попытка
			ЭлектронноеСредство = МассивЭлементов[СтруктураКолонок.ЭлектронноеСредство-1];
		Исключение
			ЭлектронноеСредство = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("ЭлектронноеСредство", ЭлектронноеСредство);
		
		Попытка
			ПунктОплаты = МассивЭлементов[СтруктураКолонок.ПунктОплаты-1];
		Исключение
			ПунктОплаты = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("ПунктОплаты", ПунктОплаты);
		
		Попытка
			Полоса = МассивЭлементов[СтруктураКолонок.Полоса-1];
		Исключение
			Полоса = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("Полоса", Полоса);
		
		Попытка
			Класс = МассивЭлементов[СтруктураКолонок.Класс-1];
		Исключение
			Класс = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("Класс", Класс);
		
		Попытка
			Сумма = МассивЭлементов[СтруктураКолонок.Сумма-1];
		Исключение
			Сумма = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("Сумма", Сумма);
		
		Попытка
			Примечание = МассивЭлементов[СтруктураКолонок.Примечание-1];
		Исключение
			Примечание = "";
		КонецПопытки;
		СтруктураСтроки.Вставить("Примечание", Примечание);
		
		сЗагруженныеДанные.Добавить(СтруктураСтроки);
		
		ПрогрессЗагрузки = Окр((НомерСтроки / КоличествоСтрок)*100, 0);
		Состояние(НСтр("en='Reading a file';ru='Чтение файла'") + " ...", ПрогрессЗагрузки);

	КонецЦикла;
	
	сЗагруженныеДанныеВыпискаОпераций = сЗагруженныеДанные;		
	ОбработкаЗагруженныхДанных(СтрокаОшибки, Массив);
			
КонецПроцедуры 

&НаКлиенте
Функция ПолучитьМассивЭлементов(ЗагружаемыйФайл, ТекНомерСтроки, КоличествоСтолбцов) 
	
	МассивЭлементов = Новый Массив();
	
	Для НомерСтолбца = 1 По КоличествоСтолбцов Цикл	
		ТекЗначение = ЗагружаемыйФайл.Область("R" + СтрЗаменить(ТекНомерСтроки,Символы.НПП,"") + "C" + СтрЗаменить(НомерСтолбца,Символы.НПП,"")).Текст;
		МассивЭлементов.Добавить(ТекЗначение);	
	КонецЦикла;
	
	Возврат МассивЭлементов;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаЗагруженныхДанных(СтрокаОшибки, мсвЗагруженныеДанные)
	
	ПустаяСтрокаИмяФайлаВыпискаОпераций = ПустаяСтрока(ИмяФайлаВыпискаОпераций);

	Если ЗначениеЗаполнено(СтрокаОшибки) Тогда
		ПоказатьПредупреждение(Неопределено, СтрокаОшибки);
		Возврат;
	КонецЕсли;
	
	мсвЗагруженныеДанные = Новый Массив();
	Для Каждого ТекСтрока Из сЗагруженныеДанныеВыпискаОпераций Цикл
		СтруктураСтроки		 = Новый Структура("ДатаОперации, ЭлектронноеСредство, ПунктОплаты, Полоса, Класс, Сумма, Примечание");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекСтрока);
		мсвЗагруженныеДанные.Добавить(СтруктураСтроки);
	КонецЦикла;
		
	Закрыть(мсвЗагруженныеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьУстановкуРасширенияРаботыСФайлами();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогВыбораФайла(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = НСтр("ru='Выберите файл с данными'");
	ДиалогВыбора.МножественныйВыбор = Ложь;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбора.Фильтр = "Файл MS Excel(*.xls,*.xlsx)|*.xls*";
	
	ВыборФайла = Новый ОписаниеОповещения("ИзменитьФайлПослеВыбораФайла", ЭтотОбъект);
	
	ДиалогВыбора.Показать(ВыборФайла);

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДанныеИзФайлаПослеПодключения(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	#Если МобильныйКлиент ИЛИ МобильноеПриложениеКлиент Тогда
		ДвоичныеДанные = Новый ДвоичныеДанные(ДополнительныеПараметры.ПутьКФайлу); 
		ВыполнитьЗагрузкуДанныхЗавершение(ДвоичныеДанные, ДополнительныеПараметры);
	#Иначе
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗагрузкуДанныхЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьСозданиеДвоичныхДанныхИзФайла(Оповещение, ДополнительныеПараметры.ИмяФайла);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

