#Область ОписаниеПеременных

Перем мВалютаРегламентированногоУчета Экспорт; // Переменная хранит значение валюты регламентированного учёта,
// полученное из константы.

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаявкаНаРемонт") Тогда
		Дата = ТекущаяДата();
		Организация       = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		
		Если НЕ уатОбщегоНазначенияПовтИсп.ВариантПоставкиСТД() Тогда
			Склад         = ДанныеЗаполнения.Контрагент;
		КонецЕсли;
		
		Для Каждого ТекСтрока из ДанныеЗаполнения.Материалы Цикл
			НоваяСтрока = Материалы.Добавить();
			Если НЕ уатОбщегоНазначенияПовтИсп.ВариантПоставкиСТД() Тогда
				НоваяСтрока.Водитель		 = ДанныеЗаполнения.Водитель;
			КонецЕсли;
			НоваяСтрока.ТС				 = ДанныеЗаполнения.ТС;
			НоваяСтрока.Номенклатура	 = ТекСтрока.Номенклатура;
			НоваяСтрока.Количество 		 = ТекСтрока.Количество;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	Документы.уатВыдачаРасходныхМатериалов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	Для каждого ТекСтрока ИЗ ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДокумента  Цикл
		Материалы[ТекСтрока.НомерСтроки - 1].Сумма = ТекСтрока.Стоимость;
		Материалы[ТекСтрока.НомерСтроки - 1].СуммаНДС = ТекСтрока.СуммаНДС;
	КонецЦикла;
	Записать(РежимЗаписиДокумента.Запись);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьНоменклатуруТС(ДополнительныеСвойства, Движения, Отказ);
	
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация,
		ПланыВидовХарактеристик.уатПраваИНастройки.ВестиСкладскойУчетУАТ) Тогда
		уатПроведение.ОтразитьПартииТоваровНаСкладах(ДополнительныеСвойства, Движения, Отказ);
		Если ПолучитьФункциональнуюОпцию("уатАдресноеХранение") = ИСТИНА И Склад.АдресноеХранение Тогда
			уатПроведение_проф.ОтразитьТоварыВЯчейках(ДополнительныеСвойства, Движения, Отказ);
		КонецЕсли;
		уатПроведение_проф.ОтразитьДатыДвиженияТоваровНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("уатИспользоватьУчетДоходовИРасходов") = ИСТИНА Тогда
		уатПроведение.ОтразитьРасходы(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
		
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ДокументОснование) 
		И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.уатЗаявкаНаРемонт") 
		И НЕ уатОбщегоНазначенияПовтИсп.ВариантПоставкиСТД() Тогда
		уатОбщегоНазначенияСервер.ВыполнитьУстановкуСтатусаЗаявкиНаРемонт(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;

	Документы.уатВыдачаРасходныхМатериалов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.уатВыдачаРасходныхМатериалов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	уатОбщегоНазначенияТиповые.ПроверитьЧтоНетУслуг(ЭтотОбъект,"Материалы",,Отказ,Заголовок);
	
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		уатЗащищенныеФункцииСервер_проф.ПолучитьСформироватьШтрихкодОбъекта(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область Инициализация

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецОбласти
