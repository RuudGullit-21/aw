#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// необходима для подключения внешних ПФ
	Заглушка = Истина;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьСтатусыГрузов(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	//Зарезервировано
	
КонецПроцедуры

// Функция подготавливает таблицу для проведения по регистру "уатСтатусГруза_уэ"
//
// Параметры:
//  ДокументСсылка					 - 	 - 
//  СтруктураДополнительныеСвойства	 - 	 - 
//
Процедура СформироватьСтатусыГрузов(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатУстановкаСтатусаГруза_уэ.Ссылка КАК Регистратор,
	|	уатУстановкаСтатусаГруза_уэ.ДатаВремяУстановкиСтатуса КАК Период,
	|	ВЫБОР
	|		КОГДА уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя = ЗНАЧЕНИЕ(Документ.уатЗаказГрузоотправителя.ПустаяСсылка)
	|			ТОГДА уатУстановкаСтатусаГруза_уэГрузы.ГрузовоеМесто
	|		ИНАЧЕ ВЫБОР
	|				КОГДА уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя.ДетализацияЗакрытия = ЗНАЧЕНИЕ(Перечисление.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам)
	|					ТОГДА уатУстановкаСтатусаГруза_уэГрузы.ГрузовоеМесто
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.уатГрузовыеМеста_уэ.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ГрузовоеМесто,
	|	уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя КАК Заказ,
	|	МАКСИМУМ(уатУстановкаСтатусаГруза_уэГрузы.НовыйСтатус) КАК Статус
	|ИЗ
	|	Документ.уатУстановкаСтатусаГруза_уэ.Грузы КАК уатУстановкаСтатусаГруза_уэГрузы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатУстановкаСтатусаГруза_уэ КАК уатУстановкаСтатусаГруза_уэ
	|		ПО уатУстановкаСтатусаГруза_уэГрузы.Ссылка = уатУстановкаСтатусаГруза_уэ.Ссылка
	|ГДЕ
	|	уатУстановкаСтатусаГруза_уэГрузы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	уатУстановкаСтатусаГруза_уэ.Ссылка,
	|	уатУстановкаСтатусаГруза_уэ.ДатаВремяУстановкиСтатуса,
	|	уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя,
	|	ВЫБОР
	|		КОГДА уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя = ЗНАЧЕНИЕ(Документ.уатЗаказГрузоотправителя.ПустаяСсылка)
	|			ТОГДА уатУстановкаСтатусаГруза_уэГрузы.ГрузовоеМесто
	|		ИНАЧЕ ВЫБОР
	|				КОГДА уатУстановкаСтатусаГруза_уэГрузы.ЗаказГрузоотправителя.ДетализацияЗакрытия = ЗНАЧЕНИЕ(Перечисление.уатДетализацияЗаказаГрузоотправителя_уэ.ПоГрузовымМестам)
	|					ТОГДА уатУстановкаСтатусаГруза_уэГрузы.ГрузовоеМесто
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.уатГрузовыеМеста_уэ.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ";
	
	ТаблицаСтатусыГрузов = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСтатусыГрузов", ТаблицаСтатусыГрузов);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли