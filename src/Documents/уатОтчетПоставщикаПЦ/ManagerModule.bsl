#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("en='Document register';ru='Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("en='Register of documents ""Report of the PC suppllier""';ru='Реестр документов ""Отчет поставщика ПЦ""'");
	КомандаПечати.Обработчик     = "уатОбщегоНазначенияТиповыеКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если НЕ уатОбщегоНазначенияСервер.РазрешениеПечатиНепроведенногоДокумента(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабЧастьДокумента.Ссылка КАК Регистратор,
	|	ТабЧастьДокумента.Ссылка.АЗС КАК АЗС,
	|	ТабЧастьДокумента.Ссылка.Организация КАК Организация,
	|	ТабЧастьДокумента.Ссылка.ВалютаДокумента КАК Валюта,
	|	ТабЧастьДокумента.Дата КАК Период,
	|	ТабЧастьДокумента.Проверено КАК Проверено,
	|	ТабЧастьДокумента.ПластиковаяКартаОтчета КАК ПластиковаяКартаОтчета,
	|	ТабЧастьДокумента.НоменклатураОтчета КАК НоменклатураОтчета,
	|	ТабЧастьДокумента.ТСОтчета КАК ТСОтчета,
	|	ТабЧастьДокумента.ПластиковаяКарта КАК ПластиковаяКарта,
	|	ТабЧастьДокумента.ТС КАК ТС,
	|	ТабЧастьДокумента.ГСМ КАК Номенклатура,
	|	ТабЧастьДокумента.Количество КАК Количество,
	|	ТабЧастьДокумента.Сумма + ВЫБОР
	|		КОГДА ТабЧастьДокумента.Ссылка.УчитыватьНДС
	|				И НЕ ТабЧастьДокумента.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТабЧастьДокумента.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ТабЧастьДокумента.Сумма + ВЫБОР
	|		КОГДА ТабЧастьДокумента.Ссылка.УчитыватьНДС
	|				И НЕ ТабЧастьДокумента.Ссылка.СуммаВключаетНДС
	|			ТОГДА ТабЧастьДокумента.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА ТабЧастьДокумента.Ссылка.УчитыватьНДС
	|			ТОГДА ТабЧастьДокумента.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТабЧастьДокумента.Ссылка.УчитыватьНДС
	|			ТОГДА ТабЧастьДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТабЧастьДокумента.Транзакция КАК Транзакция
	|ИЗ
	|	Документ.уатОтчетПоставщикаПЦ.Заправки КАК ТабЧастьДокумента
	|ГДЕ
	|	ТабЧастьДокумента.Ссылка = &Ссылка";
	мЗапрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ТаблицаОборотыПоОтчетамПоставщиковПЦ = мЗапрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрока ИЗ ТаблицаОборотыПоОтчетамПоставщиковПЦ Цикл
		мКурсВалютыСтруктура = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ДокументСсылка.ВалютаДокумента, ТекСтрока.Период);
		
		Если СтруктураДополнительныеСвойства.ВалютаРеглУчета <> ДокументСсылка.ВалютаДокумента тогда
			ТекСтрока.Стоимость = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Стоимость, ДокументСсылка.ВалютаДокумента, 
		   						СтруктураДополнительныеСвойства.ВалютаРеглУчета,
								мКурсВалютыСтруктура.Курс, 
								СтруктураДополнительныеСвойства.КурсРегл,
								мКурсВалютыСтруктура.Кратность,  
								СтруктураДополнительныеСвойства.КратностьРегл);
			ТекСтрока.СуммаНДС = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДС, ДокументСсылка.ВалютаДокумента, 
		   						СтруктураДополнительныеСвойства.ВалютаРеглУчета,
								мКурсВалютыСтруктура.Курс, 
								СтруктураДополнительныеСвойства.КурсРегл,
								мКурсВалютыСтруктура.Кратность,  
								СтруктураДополнительныеСвойства.КратностьРегл);
		КонецЕсли;
		
		Если СтруктураДополнительныеСвойства.Свойство("ВалютаУпрУчета") И СтруктураДополнительныеСвойства.ВалютаУпрУчета <> ДокументСсылка.ВалютаДокумента тогда
			ТекСтрока.СтоимостьУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СтоимостьУпр, ДокументСсылка.ВалютаДокумента,
								СтруктураДополнительныеСвойства.ВалютаУпрУчета, 
								мКурсВалютыСтруктура.Курс, 
								СтруктураДополнительныеСвойства.КурсУпр,
								мКурсВалютыСтруктура.Кратность,  
								СтруктураДополнительныеСвойства.КратностьУпр);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОборотыПоОтчетамПоставщиковПЦ", ТаблицаОборотыПоОтчетамПоставщиковПЦ);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	//зарезервировано
КонецПроцедуры // ВыполнитьКонтроль()

// Получает дополнительные реквизиты для отображения в отчете "Реестр документов"
// 
// Возвращаемое значение:
//  Структура - доп. реквизитов
//
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "АЗС");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли