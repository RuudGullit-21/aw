#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	МассивДоговоров = ЭтотОбъект.РасшифровкаПлатежа.ВыгрузитьКолонку("ДоговорКонтрагента");
	ТаблицаДоговоров = Новый таблицаЗначений;
	ТаблицаДоговоров.Колонки.Добавить("Договор");
	ТаблицаДоговоров.ЗагрузитьКолонку(МассивДоговоров,"Договор");
	ТаблицаДоговоров.Свернуть("Договор");
	
	Если ТаблицаДоговоров.Количество() = 1 Тогда
		ДоговорКонтрагента = ТаблицаДоговоров[0].Договор;
	Иначе
		ДоговорКонтрагента = Неопределено;
	КонецЕсли;
	
	уатПроведение_проф.ПолучитьСтарыеЗаказыПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НЕ Оплачено Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	Документы.уатПриходныйКассовыйОрдер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	уатПроведение_проф.ОтразитьОстаткиДС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение_проф.ОтразитьДвижениеДДС(ДополнительныеСвойства, Движения, Отказ);
	
	Если ВидОперации = Перечисления.уатВидыОперацийПКО.ОплатаПокупателя
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПоставщика
		ИЛИ ВидОперации = Перечисления.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами тогда
		
		уатПроведение_проф.ОтразитьВзаиморасчетыСКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
		
		Если ПолучитьФункциональнуюОпцию("уатИспользоватьПлатежныйКалендарь") Тогда
			уатПроведение_проф.ОтразитьПлатежныйКалендарь(ДополнительныеСвойства, Движения, Отказ);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПодотчетника Тогда
		уатПроведение_проф.ОтразитьОстаткиДСУПодотчетныхЛиц(ДополнительныеСвойства, Движения, Отказ);
		
	КонецЕсли;
		
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	уатПроведение_проф.ОбновитьТекущееСостояниеОплатыЗаказов(ЭтотОбъект);
	
	Документы.уатПриходныйКассовыйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры // ОбработкаПроведения

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	уатПроведение_проф.ОбновитьТекущееСостояниеОплатыЗаказов(ЭтотОбъект);
	
	// Контроль
	Документы.уатПриходныйКассовыйОрдер.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПодотчетника Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Контрагент"));
	Иначе
		Если ВидОперации = Перечисления.уатВидыОперацийПКО.ПриходДенежныхСредствПрочее Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Контрагент"));
		КонецЕсли;
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПодотчетноеЛицо"));
	КонецЕсли;
	
	Если НЕ РасшифровкаПлатежа.Итог("СуммаПлатежа")= СуммаДокумента Тогда
		ТекстНСТР = НСтр("en='Not the same amount of the document and its interpretation.';ru='Не совпадают сумма документа и ее расшифровка.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
	КонецЕсли;
	
	Для Каждого Платеж Из РасшифровкаПлатежа Цикл
		Если ВидОперации = Перечисления.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами Тогда
			Если Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам
				ИЛИ Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным
				ИЛИ Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='The use of contract in the way of settling the ""accounts"" or ""invoice"" is not valid for the type of operation ""other settlements with counterparties""!';ru='Использование договора со способом взаиморасчетов ""По счетам"", ""По накладным"", ""По заказам на ТС"" недопустимо для вида операции ""Прочие расчеты с контрагентами""!'");
				Иначе
					ТекстНСТР = СтрШаблон(НСтр("en='At line No. %1 using contracts with settlement method ""By the bill"" or ""By the invoice"" is not valid for operation type ""Other settlements with counterparties""!';ru='В строке №%1 использование договора со способом взаиморасчетов ""По счетам"", ""По накладным"", ""По заказам на ТС"" недопустимо для вида операции ""Прочие расчеты с контрагентами""!'"), Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
				
		Если ВидОперации = Перечисления.уатВидыОперацийПКО.ОплатаПокупателя
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПоставщика Тогда
			
			// Сделка должна быть заполнена, если учет взаиморасчетов ведется по счетам или накладным.
			Если Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = НСтр("en='Not completed requisite value ""Invoice""';ru='Не заполнено значение реквизита ""Счет на оплату""'");
					Иначе
						ТекстНСТР = СтрШаблон(НСтр("en='At line №%1 was not filled in attribute value ""Invoice""';ru='В строке №%1 не заполнено значение реквизита ""Счет на оплату""'"), Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			ИначеЕсли Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = НСтр("en='Not completed requisite value of ""Realization""';ru='Не заполнено значение реквизита ""Реализация""'");
					Иначе
						ТекстНСТР = СтрШаблон(НСтр("en='At line №%1 was not filled in attribute value of ""Sell""';ru='В строке №%1 не заполнено значение реквизита ""Реализация""'"), Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			ИначеЕсли Платеж.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС Тогда
				Если НЕ ЗначениеЗаполнено(Платеж.Сделка) Тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстНСТР = "Не заполнено значение реквизита ""Заказ на ТС""";
					Иначе
						ТекстНСТР = СтрШаблон("В строке №%1 не заполнено значение реквизита ""Заказ на ТС""", Платеж.НомерСтроки);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Организация) И Организация <> Платеж.ДоговорКонтрагента.Организация Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Selected the contract of a counterparty, not corresponding to company specified in the document!';ru='Выбран договор контрагента, не соответствующий организации, указанной в документе!'");
				Иначе
					ТекстНСТР = СтрШаблон(НСтр("en='At line №%1 selected counterparty contract that does not match to company specified in document!';ru='В строке №%1 выбран договор контрагента, не соответствующий организации, указанной в документе!'"), Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если ВидОперации = Перечисления.уатВидыОперацийПКО.ОплатаПокупателя
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПоставщика
			ИЛИ ВидОперации = Перечисления.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами Тогда
			
			Если Не ЗначениеЗаполнено(Платеж.ДоговорКонтрагента) Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Counterparty contract not filled!';ru='Не заполнен договор контрагента!'");
				Иначе
					ТекстНСТР = СтрШаблон(НСтр("en='At line №%1 is not fill counterparty contract!';ru='В строке №%1 не заполнен договор контрагента!'"), Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Платеж.СуммаПлатежа) Тогда
				Если РасшифровкаПлатежа.Количество() = 1 Тогда
					ТекстНСТР = НСтр("en='Sum is not filled!';ru='Не заполнена сумма!'");
				Иначе
					ТекстНСТР = СтрШаблон(НСтр("en='In line №%1 was not filled sum!';ru='В строке №%1 не заполнена сумма!'"), Платеж.НомерСтроки);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
			КонецЕсли;
		КонецЕсли;

		//Если ЗначениеЗаполнено(Платеж.ДоговорКонтрагента) И Платеж.ДоговорКонтрагента.ВалютаВзаиморасчетов <> ВалютаДокумента Тогда
		//	ТекстНСТР = СтрШаблон(НСтр("en='In line №%1, the counterparty contract currency differs from document currency!';ru='В строке №%1 валюта договора контрагента отличается от валюты документа!'"), Платеж.НомерСтроки);
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,,,,Отказ);
		//КонецЕсли;
	КонецЦикла;
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	уатОбщегоНазначения.ПроверкаЗаполненияПодразделения(Организация, Подразделение, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	уатОбщегоНазначенияСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, ПользователиКлиентСервер.АвторизованныйПользователь());
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРеализацияУслуг")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатСчетНаОплатуПокупателю") Тогда
		
		ВидОперации        = Перечисления.уатВидыОперацийПКО.ОплатаПокупателя;
		ДокументОснование  = ДанныеЗаполнения;
		Основание          = ДанныеЗаполнения;
		Контрагент         = ДанныеЗаполнения.Контрагент;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
		ВалютаДокумента    = ДанныеЗаполнения.ВалютаДокумента;
		Организация        = ДанныеЗаполнения.Организация;
		Комментарий        = ДанныеЗаполнения.Комментарий;
		
		флМноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
		
		Для Каждого ТекСтрока Из ДанныеЗаполнения.Услуги Цикл
			Если флМноговалютныйУчет Тогда
				ВалютаСтроки = ТекСтрока.Валюта;
				ВалютаСтрокиКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаСтроки, ДанныеЗаполнения.Дата);
				СуммаСтроки    = ТекСтрока.СуммаВалютная;
				СуммаНДССтроки = ТекСтрока.СуммаНДСВалютная;
			Иначе 
				ВалютаСтроки = ДанныеЗаполнения.ВалютаДокумента;
				ВалютаСтрокиКурсКратность = Новый Структура("Курс, Кратность",
					ДанныеЗаполнения.КурсВзаиморасчетов, ДанныеЗаполнения.КратностьВзаиморасчетов);
				СуммаСтроки    = ТекСтрока.Сумма;
				СуммаНДССтроки = ТекСтрока.СуммаНДС;
			КонецЕсли;
			
			Если ДанныеЗаполнения.УчитыватьНДС И НЕ ДанныеЗаполнения.СуммаВключаетНДС Тогда
				СуммаСтроки = СуммаСтроки + СуммаНДССтроки;
			КонецЕсли;
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ДоговорКонтрагента      = ДанныеЗаполнения.ДоговорКонтрагента;
			
			Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС Тогда
				НоваяСтрока.Сделка = ТекСтрока.Заказ;
			Иначе
				Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
					Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным Тогда
						НоваяСтрока.Сделка = ДанныеЗаполнения;
					Иначе
						НоваяСтрока.Сделка = ДанныеЗаполнения.Сделка;
					КонецЕсли;
				Иначе
					Если ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам Тогда
						НоваяСтрока.Сделка = ДанныеЗаполнения;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока.СтавкаНДС = ТекСтрока.СтавкаНДС;
			
			Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
				НоваяСтрока.ВалютаВзаиморасчетов = ДанныеЗаполнения.ВалютаВзаиморасчетов;
			Иначе
				Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.уатРеализацияУслуг") Тогда
					НоваяСтрока.ВалютаВзаиморасчетов = ДанныеЗаполнения.ДокументОснование.ВалютаВзаиморасчетов;
				Иначе
					НоваяСтрока.ВалютаВзаиморасчетов = ДоговорКонтрагента.ВалютаВзаиморасчетов;
				КонецЕсли;
			КонецЕсли;
			
			ВалютаВзаиморасчетовКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(НоваяСтрока.ВалютаВзаиморасчетов, ТекущаяДата());
			НоваяСтрока.КурсВзаиморасчетов      = ВалютаВзаиморасчетовКурсКратность.Курс;
			НоваяСтрока.КратностьВзаиморасчетов = ВалютаВзаиморасчетовКурсКратность.Кратность;
			
			Если НоваяСтрока.ВалютаВзаиморасчетов = ВалютаСтроки Тогда
				НоваяСтрока.СуммаВзаиморасчетов = СуммаСтроки;
			Иначе
				НоваяСтрока.СуммаВзаиморасчетов = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаСтроки,
					ВалютаСтроки,                        НоваяСтрока.ВалютаВзаиморасчетов,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаВзаиморасчетовКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаВзаиморасчетовКурсКратность.Кратность);
			КонецЕсли;
			
			// валюта документа = валюте платежа = валюте счета
			Если ВалютаДокумента = ВалютаСтроки Тогда
				НоваяСтрока.СуммаПлатежа = СуммаСтроки;
				НоваяСтрока.СуммаНДС     = СуммаНДССтроки;
			Иначе
				ВалютаДокументаКурсКратность = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
				
				НоваяСтрока.СуммаПлатежа = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаСтроки,
					ВалютаСтроки,                        ВалютаДокумента,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаДокументаКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаДокументаКурсКратность.Кратность);
				НоваяСтрока.СуммаНДС = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаНДССтроки,
					ВалютаСтроки,                        ВалютаДокумента,
					ВалютаСтрокиКурсКратность.Курс,      ВалютаДокументаКурсКратность.Курс,
					ВалютаСтрокиКурсКратность.Кратность, ВалютаДокументаКурсКратность.Кратность);
			КонецЕсли;
		КонецЦикла;
		
		РасшифровкаПлатежа.Свернуть("ДоговорКонтрагента, Сделка, СтавкаНДС, ВалютаВзаиморасчетов, КурсВзаиморасчетов, КратностьВзаиморасчетов, СтатьяДвиженияДенежныхСредств",
			"СуммаПлатежа, СуммаНДС, СуммаВзаиморасчетов");
		
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	ИначеЕсли уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП()
		И ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатРекламация_уэ") Тогда
		
		ВидОперации = Перечисления.уатВидыОперацийПКО.ВозвратОтПоставщика;
		ДокументОснование  = ДанныеЗаполнения;
		Основание          = ДанныеЗаполнения;
		Организация        = ДанныеЗаполнения.Организация;
		Подразделение      = ДанныеЗаполнения.Подразделение;
		ВалютаДокумента    = ДанныеЗаполнения.ВалютаДокумента;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	уатРекламация_уэРаспределение.Контрагент КАК Контрагент,
		|	уатРекламация_уэРаспределение.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	уатРекламация_уэРаспределение.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	уатРекламация_уэРаспределение.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
		|	уатРекламация_уэРаспределение.Сумма КАК СуммаПлатежа,
		|	уатРекламация_уэРаспределение.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	уатРекламация_уэРаспределение.СтавкаНДС КАК СтавкаНДС,
		|	уатРекламация_уэРаспределение.СуммаНДС КАК СуммаНДС,
		|	уатРекламация_уэРаспределение.Валюта КАК ВалютаВзаиморасчетов
		|ИЗ
		|	Документ.уатРекламация_уэ.Распределение КАК уатРекламация_уэРаспределение
		|ГДЕ
		|	уатРекламация_уэРаспределение.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			Если Не ЗначениеЗаполнено(Контрагент) Тогда
				Контрагент = Выборка.Контрагент;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
				ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			КонецЕсли;
		КонецЦикла;
		
		РасшифровкаПлатежа.Свернуть("ДоговорКонтрагента, Сделка, СтавкаНДС, ВалютаВзаиморасчетов, КурсВзаиморасчетов, КратностьВзаиморасчетов, СтатьяДвиженияДенежныхСредств",
			"СуммаПлатежа, СуммаНДС, СуммаВзаиморасчетов");
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
