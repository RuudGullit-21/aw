
#Область ПеременныеФормы

&НаКлиенте
Перем СтрокаПлатеж;
&НаКлиенте
Перем ОтветПередЗаписью;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПараметрыЗначениеКопирования = Параметры.ЗначениеКопирования;
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
	МноговалютныйУчет = ПолучитьФункциональнуюОпцию("уатМноговалютныйУчет");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
		НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
		НоваяСтрока.СтавкаНДС =  уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
	КонецЕсли;
	
	Элементы.РасшифровкаПлатежа.ТекущаяСтрока = Объект.РасшифровкаПлатежа[0].ПолучитьИдентификатор();
	
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	УстановитьКурсДокумента();
	
	Если Параметры.Ключ.Пустая() Тогда // проверить объект на то, что он еще не внесен в ИБ
		
		Если Объект.РасшифровкаПлатежа.Количество()=0 Тогда
			СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
		Иначе
			СтрокаПлатеж = Объект.РасшифровкаПлатежа[0];
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Касса) Тогда
			мКасса  = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяКасса");
			Если мКасса <> Неопределено Тогда
				ВалютаДСКассы = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(мКасса, "ВалютаДенежныхСредств");
			Иначе
				ВалютаДСКассы = Неопределено;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
				Объект.Касса = мКасса;
				Объект.ВалютаДокумента = ВалютаДСКассы;
			ИначеЕсли ВалютаДСКассы = Объект.ВалютаДокумента Тогда
				Объект.Касса = мКасса;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыЗначениеКопирования.Пустая() Тогда
			ЗаполнитьКонтрагента();
		Иначе
			УстановитьКурсДокумента();
		КонецЕсли;
		
	Иначе
		УстановитьКурсДокумента();
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя") Тогда
		Элементы.ФормаОперацияОплатаПокупателя.Пометка = Истина;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами") Тогда
		Элементы.ФормаОперацияПрочиеРасчетыСКонтрагентами.Пометка = Истина;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПриходДенежныхСредствПрочее") Тогда
		Элементы.ФормаОперацияПриходДенежныхСредствПрочее.Пометка = Истина;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПодотчетника") Тогда
		Элементы.ФормаОперацияВозвратОтПодотчетника.Пометка = Истина;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		Элементы.ФормаОперацияВозвратОтПоставщика.Пометка = Истина;
	КонецЕсли;
	
	// Установить видимость реквизитов и заголовков колонок.
	Если Объект.РасшифровкаПлатежа.Количество()>1 Тогда
		СпособРедактирования = 1;
	Иначе
		СпособРедактирования = 0;
	КонецЕсли;
	
	ВалютаВзаиморасчетовСтарая = СтрокаПлатеж.ВалютаВзаиморасчетов;
	
	УстановитьОграничениеТипаСделка();
	УстановитьВидимость();
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Если ВыбранноеЗначение = "АвтоПодбор" Тогда
			Если Объект.РасшифровкаПлатежа.Количество() > 1 Тогда
				СпособРедактирования = 1;
			ИначеЕсли Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
				СпособРедактирования = 0;
				СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		НДСПоУмолчанию = ?(Не ЗначениеЗаполнено(СтрокаПлатеж.СтавкаНДС), 
			уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС"),
			СтрокаПлатеж.СтавкаНДС);
		
		Если Не ВыбранноеЗначение.ЕстьПодбор Тогда
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ДоговорКонтрагента", ВыбранноеЗначение.ДоговорКонтрагента);
			
			ВедениеВзаиморасчетовПоДоговору = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(ВыбранноеЗначение.ДоговорКонтрагента, "ВедениеВзаиморасчетов");
			Если ВедениеВзаиморасчетовПоДоговору = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам")
				ИЛИ ВедениеВзаиморасчетовПоДоговору = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным")
				ИЛИ ВедениеВзаиморасчетовПоДоговору = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС") Тогда
				СтруктураОтбора.Вставить("Сделка", ВыбранноеЗначение.Сделка);
			КонецЕсли;
			
			МассивСтрок = Объект.РасшифровкаПлатежа.НайтиСтроки(СтруктураОтбора);
			
			Если Не МассивСтрок = Неопределено Тогда
				Для Каждого Строка Из МассивСтрок Цикл
					Объект.РасшифровкаПлатежа.Удалить(Строка);
				КонецЦикла;
			КонецЕсли;
			
			Если Объект.РасшифровкаПлатежа.Количество() > 0 И НЕ ЗначениеЗаполнено(Объект.РасшифровкаПлатежа[0].ДоговорКонтрагента) Тогда
				Объект.РасшифровкаПлатежа.Удалить(Объект.РасшифровкаПлатежа[0]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если СпособРедактирования = 1 ИЛИ Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
			СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
		КонецЕсли;
		
		СтрокаПлатеж.ДоговорКонтрагента = ВыбранноеЗначение.ДоговорКонтрагента;
		СтрокаПлатеж.Сделка             = ВыбранноеЗначение.Сделка;
		
		СтрокаПлатеж.СуммаПлатежа            = ВыбранноеЗначение.СуммаПлатежа;
		СтрокаПлатеж.СуммаВзаиморасчетов     = ВыбранноеЗначение.СуммаВзаиморасчетов;
		СтрокаПлатеж.ВалютаВзаиморасчетов    = ВыбранноеЗначение.ВалютаВзаиморасчетов;
		СтрокаПлатеж.КурсВзаиморасчетов      = ВыбранноеЗначение.КурсВзаиморасчетов;
		СтрокаПлатеж.КратностьВзаиморасчетов = ВыбранноеЗначение.КратностьВзаиморасчетов;
		
		Если СтрокаПлатеж.СтавкаНДС.Пустая() Тогда
			СтрокаПлатеж.СтавкаНДС = НДСПоУмолчанию;
		КонецЕсли;
		
		ПересчитатьСуммуНДС(СтрокаПлатеж);
		
	КонецЕсли;
	
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	РассчитатьИтоги();
	
	УстановитьФокус();
	УстановитьВидимость();
	УстановитьОграничениеТипаСделка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ОтветПередЗаписью
		И (ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись ИЛИ ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение)
		И Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа") <> Объект.СуммаДокумента Тогда
		
		Отказ = Истина;
		
		ТекстНСТР = НСтр("en='Do not match document amount (%1) and its interpretation (%2). Recalculate the amount of document?""';ru='Не совпадают сумма документа (%1) и ее расшифровка (%2). Пересчитать сумму документа?""'");
		ТекстНСТР = СтрШаблон(ТекстНСТР, Объект.СуммаДокумента, Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа"));
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи)),
			ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОтветПередЗаписью = Истина;
		Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Записать(ДополнительныеПараметры.ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если флВопросЗакрытиеФормы Тогда
		Отказ = Истина;
		Оповещ = Новый ОписаниеОповещения("ПередЗакрытиемВопрос", ЭтотОбъект);
		ПоказатьВопрос(Оповещ, "При проверке корректности заполнения документа возникли предупреждения!
			|Продолжить закрытие формы?", РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьКурсДокумента();
	
	Для Каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
		ПриИзмененииВалютыВзаиморасчетов(Ложь);
	КонецЦикла;
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьФокус();
	
КонецПроцедуры

&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	
	ВалютаДенежныхСредствКассы = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.Касса, "ВалютаДенежныхСредств");
	СтараяВалюта = Объект.ВалютаДокумента;
	уатОбщегоНазначенияТиповые_проф.ПриИзмененииЗначенияКассыБанковскогоСчета(Объект.ВалютаДокумента, 
		КурсДокумента, КратностьДокумента, Объект.Дата, Объект.СуммаДокумента, ВалютаДенежныхСредствКассы);
		
	Для Каждого Строка Из Объект.РасшифровкаПлатежа Цикл
		ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Строка.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		
		Если ЗначениеЗаполнено(Строка.ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = Строка.ВалютаВзаиморасчетов;
		Иначе
			ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = СтараяВалюта;
		КонецЕсли;
				
		Если Объект.ВалютаДокумента <> СтараяВалюта Тогда
			Строка.СуммаПлатежа = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(Строка.СуммаПлатежа,
				СтараяВалюта, Объект.ВалютаДокумента, Объект.Дата, Объект.Дата);
		КонецЕсли;
		
		ПересчитатьСуммуНДС(Строка);
	КонецЦикла;
	
	УстановитьФокус();
	УстановитьВидимость();
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.Касса, "Владелец");
	КонецЕсли;
	
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	Если ИнвертироватьСуммы Тогда
		РассчитатьСуммуПлатежа();
	Иначе
		Если Объект.РасшифровкаПлатежа.Количество()=1 Тогда
			СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
			РассчитатьСуммуВзаиморасчетовПоСуммеПлатежа(СтрокаПлатеж);
			ПересчитатьСуммуНДС(СтрокаПлатеж);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияПриИзменении(Элемент)
	
	Если СпособРедактирования = 0 И Объект.РасшифровкаПлатежа.Количество() > 1 Тогда
		ТекстНСТР = НСтр("en='All lines of payment decryption except the first will be deleted. "
			"Do you want to continue?';ru='Все строки расшифровки платежа, кроме первой, будут удалены. "
			"Продолжить?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СпособРедактированияПриИзмененииЗавершение", ЭтотОбъект),
			ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Возврат;
	Иначе
		Элементы.РасшифровкаПлатежа.ТекущаяСтрока = Объект.РасшифровкаПлатежа[0].ПолучитьИдентификатор();
		СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	КонецЕсли;
	
	СпособРедактированияПриИзмененииФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        СпособРедактирования = 1;
        Возврат;
    КонецЕсли;
    
    Пока Объект.РасшифровкаПлатежа.Количество() > 1 Цикл
        СтрокаУдаления = Объект.РасшифровкаПлатежа[1];
        Объект.РасшифровкаПлатежа.Удалить(СтрокаУдаления);
    КонецЦикла;
    
    Элементы.РасшифровкаПлатежа.ТекущаяСтрока = Объект.РасшифровкаПлатежа[0].ПолучитьИдентификатор();
    СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	//СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
    
    ПересчитатьСуммуНДС(СтрокаПлатеж);
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
        
    СпособРедактированияПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияПриИзмененииФрагмент()
    
	УстановитьОграничениеТипаСделка();
	УстановитьВидимость();
    РассчитатьИтоги();

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	// проставим основной договор контрагента
	ПриИзмененииКонтрагента();
	УстановитьФокус();
	ПриИзмененииДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаВзаиморасчетов1ПриИзменении(Элемент)
	РассчитатьСуммуПлатежаПоСуммеВзаиморасчетов(СтрокаПлатеж);
	Объект.СуммаДокумента = СтрокаПлатеж.СуммаПлатежа;
	ПересчитатьСуммуНДС(СтрокаПлатеж);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_РасшифровкаПлатежа

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговора();
	
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда 
		СтандартнаяОбработка = Ложь;
		
		Если СпособРедактирования = 0 Тогда 
			ПолеДанных = "Элементы.РасшифровкаПлатежа.ТекущиеДанные.ДоговорКонтрагента";
		Иначе 
			ТекСтрока = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
			Если Не ТекСтрока = Неопределено Тогда 
				ИндексСтроки = Объект.РасшифровкаПлатежа.НайтиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор()).НомерСтроки-1;
				ПолеДанных = "Объект.РасшифровкаПлатежа["+Формат(ИндексСтроки,"ЧГ=0")+"].ДоговорКонтрагента";
			Иначе 
				ПолеДанных = "Объект.РасшифровкаПлатежа";
			КонецЕсли;
		КонецЕсли;
				
		ТекстНСТР = НСтр("en='Select a counterparty.';ru='Необходимо выбрать контрагента.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,, ПолеДанных);
				
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком");
	КонецЕсли;
	
	уатОбщегоНазначенияТиповыеКлиент.уатНачалоВыбораЗначенияДоговораКонтрагента(Объект, ЭтотОбъект, Элемент, Объект.Контрагент, 
		Элементы.РасшифровкаПлатежа.ТекущиеДанные.ДоговорКонтрагента, мВидДоговора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВидДоговораДоступныеЗначения = Новый Массив;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		мВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком");
	КонецЕсли;
	ВидДоговораДоступныеЗначения.Добавить(мВидДоговора);
	
	ПараметрыФормы = Новый Структура();  
	ПараметрыФормы.Вставить("Владелец", Объект.Контрагент);
	ПараметрыФормы.Вставить("ВидДоговораДоступныеЗначения", ВидДоговораДоступныеЗначения);
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСделкаПриИзменении(Элемент)
	
	Если ТипЗнч(СтрокаПлатеж.Сделка) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") ИЛИ НЕ ЗначениеЗаполнено(СтрокаПлатеж.Сделка) Тогда
		Возврат;
	КонецЕсли;
	
	Если МноговалютныйУчет И ТипЗнч(СтрокаПлатеж.Сделка) = Тип("ДокументСсылка.уатРеализацияУслуг")
		И ЗначениеЗаполнено(уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.Сделка, "ВалютаВзаиморасчетов")) Тогда
		
		ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.Сделка, "ВалютаВзаиморасчетов");
		СуммаВзаиморасчетов  = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.Сделка, "СуммаВзаиморасчетов");
	Иначе
		ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.Сделка, "ВалютаДокумента");
		СуммаВзаиморасчетов  = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.Сделка, "СуммаДокумента");
	КонецЕсли;
		
	Если СтрокаПлатеж.ВалютаВзаиморасчетов <> ВалютаВзаиморасчетов Тогда
		СтрокаПлатеж.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
		ПриИзмененииВалютыВзаиморасчетов();
	КонецЕсли;
	
	СтрокаПлатеж.СуммаВзаиморасчетов = СуммаВзаиморасчетов;
	РассчитатьСуммуПлатежаПоСуммеВзаиморасчетов(СтрокаПлатеж);
	ПересчитатьСуммуНДС(СтрокаПлатеж);
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСделкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСделки(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтавкаНДСПриИзменении(Элемент)
	
	ПересчитатьСуммуНДС(СтрокаПлатеж);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаПлатежаПриИзменении(Элемент)
	
	РассчитатьСуммуВзаиморасчетовПоСуммеПлатежа(СтрокаПлатеж);
	ПересчитатьСуммуНДС(СтрокаПлатеж);
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриАктивизацииСтроки(Элемент)
	
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПередУдалением(Элемент, Отказ)
	
	Если Объект.РасшифровкаПлатежа.Количество()=1 Тогда
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриИзменении(Элемент)
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	РассчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(Элемент)
	
	РассчитатьСуммуПлатежаПоСуммеВзаиморасчетов(Элементы.РасшифровкаПлатежа.ТекущиеДанные);
	ПересчитатьСуммуНДС(СтрокаПлатеж);
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаВалютаВзаиморасчетовПриИзменении(Элемент)
	ПриИзмененииВалютыВзаиморасчетов();
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекСтрока = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	Если НоваяСтрока Тогда
		ТекСтрока.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
	КонецЕсли;
	
	УстановитьОграничениеТипаСделка();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОперацияОплатаПокупателя(Команда)
	ВидОперацииПриИзменении(ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПриходДенежныхСредствПрочее(Команда)
	ВидОперацииПриИзменении(ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПриходДенежныхСредствПрочее"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПрочиеРасчетыСКонтрагентами(Команда)
	ВидОперацииПриИзменении(ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияВозвратОтПоставщика(Команда)
	ВидОперацииПриИзменении(ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияВозвратОтПодотчетника(Команда)
	ВидОперацииПриИзменении(ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПодотчетника"));
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(ВидОперацииЗначение)
	Объект.ВидОперации = ВидОперацииЗначение;
	Объект.Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	
	Элементы.ФормаОперацияОплатаПокупателя.Пометка            = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя"));
	Элементы.ФормаОперацияПрочиеРасчетыСКонтрагентами.Пометка = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами"));
	Элементы.ФормаОперацияПриходДенежныхСредствПрочее.Пометка = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПриходДенежныхСредствПрочее"));
	Элементы.ФормаОперацияВозвратОтПоставщика.Пометка         = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика"));
	Элементы.ФормаОперацияВозвратОтПодотчетника.Пометка       = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПодотчетника"));
	
	Объект.РасшифровкаПлатежа.Очистить();
	СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
	СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		СтрокаПлатеж.СтавкаНДС =  уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		ПересчитатьСуммуНДС(СтрокаПлатеж);
	КонецЕсли;
	
	СпособРедактирования = 0;
	
	УстановитьФокус();
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлатежи(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстНСТР = НСтр("en='You must specify the company'; ru='Необходимо указать организацию'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,, "Объект.Организация");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекстНСТР = НСтр("en='You must specify the counterparty'; ru='Необходимо указать контрагента'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,, "Объект.Контрагент");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДокументСсылка",              Объект.Ссылка);
	СтруктураПараметров.Вставить("КурсДокумента",               КурсДокумента);
	СтруктураПараметров.Вставить("КратностьДокумента",          КратностьДокумента);
	СтруктураПараметров.Вставить("ТипЗадолженности",            ">0");
	СтруктураПараметров.Вставить("Контрагент",                  Объект.Контрагент);
	СтруктураПараметров.Вставить("БанковскийСчетКасса",         Объект.Касса);
	СтруктураПараметров.Вставить("Организация",                 Объект.Организация);
	СтруктураПараметров.Вставить("ВалютаДокумента",             Объект.ВалютаДокумента);
	СтруктураПараметров.Вставить("ДатаДок",                     Объект.Дата);
	СтруктураПараметров.Вставить("СуммаДляПодбора",             Объект.СуммаДокумента);
	СтруктураПараметров.Вставить("ПлатежПоСуммеВзаиморасчетов", Истина);
	СтруктураПараметров.Вставить("ЕстьПодбор",                  Ложь);
		
	мсвСтрокРасшифровка = Новый Массив;
	Для Каждого ТекСтрока Из Объект.РасшифровкаПлатежа Цикл
		НовСтрока = Новый Структура("ДоговорКонтрагента, КурсВзаиморасчетов, КратностьВзаиморасчетов, СуммаВзаиморасчетов, СуммаПлатежа, Сделка, СтавкаНДС, СуммаНДС");
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		НовСтрока.Вставить("Валюта", ТекСтрока.ВалютаВзаиморасчетов);
	КонецЦикла;
	СтруктураПараметров.Вставить("РасшифровкаПлатежа", мсвСтрокРасшифровка);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаСобытияЗаполнениеПлатежей", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.уатПодборПараметровРасшифровкиПлатежа.Форма.ПараметрыЗаполнения", СтруктураПараметров, ЭтотОбъект,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборВРасшифровку(Команда)
	ПодборПоЗадолженности(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПодборДоговор(Команда)
	ПодборПоЗадолженности(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоЗадолженности(флБезРазбиения)
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекстНСТР = НСтр("en='You must specify the counterparty'; ru='Необходимо указать контрагента'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,, "Объект.Контрагент");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДокументСсылка",              Объект.Ссылка);
	СтруктураПараметров.Вставить("КурсДокумента",               КурсДокумента);
	СтруктураПараметров.Вставить("КратностьДокумента",          КратностьДокумента);
	СтруктураПараметров.Вставить("ТипЗадолженности",            ">0");
	СтруктураПараметров.Вставить("Контрагент",                  Объект.Контрагент);
	СтруктураПараметров.Вставить("БанковскийСчетКасса",         Объект.Касса);
	СтруктураПараметров.Вставить("Организация",                 Объект.Организация);
	СтруктураПараметров.Вставить("ВалютаДокумента",             Объект.ВалютаДокумента);
	СтруктураПараметров.Вставить("ДатаДок",                     Объект.Дата);
	СтруктураПараметров.Вставить("СуммаДляПодбора",             Объект.СуммаДокумента);
	СтруктураПараметров.Вставить("ПлатежПоСуммеВзаиморасчетов", Истина);
	СтруктураПараметров.Вставить("ЕстьПодбор",                  Истина);
	СтруктураПараметров.Вставить("ЗакрыватьПриВыборе",          флБезРазбиения);
	
	мсвСтрокРасшифровка = Новый Массив;
	Для Каждого ТекСтрока Из Объект.РасшифровкаПлатежа Цикл
		НовСтрока = Новый Структура("ДоговорКонтрагента, КурсВзаиморасчетов, КратностьВзаиморасчетов, СуммаВзаиморасчетов, СуммаПлатежа, Сделка, СтавкаНДС, СуммаНДС");
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		НовСтрока.Вставить("Валюта", ТекСтрока.ВалютаВзаиморасчетов);
	КонецЦикла;
	СтруктураПараметров.Вставить("РасшифровкаПлатежа", мсвСтрокРасшифровка);
	
	ОткрытьФорму("Обработка.уатПодборПараметровРасшифровкиПлатежа.Форма.ФормаПодбораЗадолженностей", СтруктураПараметров, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// Рассчитывает новый курс документа при смене даты
//
&НаКлиенте
Процедура УстановитьКурсДокумента()
	
	СтруктураКурсаВалютаДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
	КурсДокумента        = СтруктураКурсаВалютаДокумента.Курс;
	КратностьДокумента   = СтруктураКурсаВалютаДокумента.Кратность;
	
КонецПроцедуры // УстановитьКурсДокумента()

// Проверяет установленные курсы валют документа перед пересчетом сумм
// Нулевые курсы устанавливаются в 1
//
&НаКлиенте
Процедура ПроверкаКурсовВалют(СтрокаПлатеж) 
	
	КурсДокумента      = ?(КурсДокумента=0,1, КурсДокумента);
	КратностьДокумента = ?(КратностьДокумента=0,1, КратностьДокумента);
	
	Если Не СтрокаПлатеж = Неопределено Тогда
		СтрокаПлатеж.КурсВзаиморасчетов      = ?(СтрокаПлатеж.КурсВзаиморасчетов=0,1,СтрокаПлатеж.КурсВзаиморасчетов);
		СтрокаПлатеж.КратностьВзаиморасчетов = ?(СтрокаПлатеж.КратностьВзаиморасчетов=0,1,СтрокаПлатеж.КратностьВзаиморасчетов);
	КонецЕсли;
	
КонецПроцедуры // ПроверкаКурсовВалют()

// Возвращает фокус на строку ТЧ "Расшифровка платежа" при его потере в режиме редактирования
// одиночного платежа.
&НаКлиенте
Процедура УстановитьФокус()
	
	Если Элементы.РасшифровкаПлатежа.ТекущаяСтрока = Неопределено Тогда
		Элементы.РасшифровкаПлатежа.ТекущаяСтрока = СтрокаПлатеж.ПолучитьИдентификатор();
	КонецЕсли;
	Если СпособРедактирования = 0 Тогда 
		Элементы.РасшифровкаПлатежа.ТекущаяСтрока = СтрокаПлатеж.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры // УстановитьФокус()

// Пересчитывает сумму НДС
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура ПересчитатьСуммуНДС(СтрокаПлатеж) 
	
	ЗначениеСтавкиНДС = уатОбщегоНазначенияТиповые.уатПолучитьСтавкуНДС(СтрокаПлатеж.СтавкаНДС);
	
	Если МноговалютныйУчет
		И (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами")) Тогда
		
		СтрокаПлатеж.СуммаНДС = СтрокаПлатеж.СуммаВзаиморасчетов * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС);
	Иначе
		СтрокаПлатеж.СуммаНДС = СтрокаПлатеж.СуммаПлатежа * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС);
	КонецЕсли;
	
КонецПроцедуры // ПересчитатьСуммуНДС()

// Процедура устанавливает видимость для тех колонок в табличной части 
// "Товары", видимость которых определяется реквизитами документа.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.РасшифровкаПлатежаСтавкаНДС1.Доступность = Истина;
	Элементы.СпособРедактирования.Видимость           = Ложь;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		
		Элементы.ГруппаВидыОпераций.ТекущаяСтраница = Элементы.ГруппаВидыОпераций.ПодчиненныеЭлементы.ГруппаПКО;
		Если Булево(СпособРедактирования) Тогда
			Элементы.ГруппаПлатежей.ТекущаяСтраница = Элементы.ГруппаПлатежей.ПодчиненныеЭлементы.ГруппаПоНесколькимСделкам;
		Иначе
			Элементы.ГруппаПлатежей.ТекущаяСтраница = Элементы.ГруппаПлатежей.ПодчиненныеЭлементы.ГруппаПоОднойСделке;
		КонецЕсли;
		
		Элементы.ГруппаРасшифровкаПлатежа.Заголовок = НСтр("en='Decoding of payment';ru='Расшифровка платежа'");
		Элементы.РасшифровкаПлатежаСделка.Видимость = Истина;
		Элементы.РасшифровкаПлатежаСделка1.Доступность = Истина;
		Элементы.РасшифровкаПлатежаСделка1.Видимость   = Истина;
		Элементы.ГруппаДоговор.Видимость = Истина;
		Элементы.РасшифровкаПлатежаДоговорКонтрагента.Видимость = Истина;
		Элементы.ГруппаСуммаВзаиморасчетов.Видимость = Истина;
		Элементы.РасшифровкаПлатежаГруппаСумма.Видимость = Истина;
		Элементы.ДекорацияСтавкаНДС1.Ширина = 10;
				
		Элементы.СпособРедактирования.Видимость = Истина;
		
		Элементы.РасшифровкаПлатежаСделка1.Доступность = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя"));
		Элементы.РасшифровкаПлатежаСделка.Доступность  = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя"));
		Элементы.Контрагент.Видимость = Истина;
		Элементы.ПодотчетноеЛицо.Видимость = Ложь;
		
		Элементы.РасшифровкаПлатежаПодборВРасшифровку.Видимость = Истина;
		Элементы.РасшифровкаПлатежаЗаполнитьПлатежи.Видимость = Истина;
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ВозвратОтПодотчетника") Тогда
		Элементы.ГруппаВидыОпераций.ТекущаяСтраница = Элементы.ГруппаВидыОпераций.ПодчиненныеЭлементы.ГруппаПКО;
		Если Булево(СпособРедактирования) Тогда
			Элементы.ГруппаПлатежей.ТекущаяСтраница = Элементы.ГруппаПлатежей.ПодчиненныеЭлементы.ГруппаПоНесколькимСделкам;
		Иначе
			Элементы.ГруппаПлатежей.ТекущаяСтраница = Элементы.ГруппаПлатежей.ПодчиненныеЭлементы.ГруппаПоОднойСделке;
		КонецЕсли;
		Элементы.ГруппаРасшифровкаПлатежа.Заголовок = НСтр("en='Decryption of return';ru='Расшифровка возврата'");
		Элементы.РасшифровкаПлатежаСделка.Видимость = Ложь;
		Элементы.РасшифровкаПлатежаСделка1.Видимость = Ложь;
		Элементы.ГруппаДоговор.Видимость = Ложь;
		Элементы.РасшифровкаПлатежаДоговорКонтрагента.Видимость = Ложь;
		Элементы.ГруппаСуммаВзаиморасчетов.Видимость = Ложь;
		Элементы.РасшифровкаПлатежаГруппаСумма.Видимость = Ложь;
		Элементы.ДекорацияСтавкаНДС1.Ширина = 0;
		
		Элементы.СпособРедактирования.Видимость = Истина;
		Элементы.Контрагент.Видимость = Ложь;
		Элементы.ПодотчетноеЛицо.Видимость = Истина;
		
		Элементы.РасшифровкаПлатежаПодборВРасшифровку.Видимость = Ложь;
		Элементы.РасшифровкаПлатежаЗаполнитьПлатежи.Видимость = Ложь;
		
	Иначе
		Элементы.ГруппаВидыОпераций.ТекущаяСтраница = Элементы.ГруппаВидыОпераций.ПодчиненныеЭлементы.ГруппаПрочее;
		Элементы.СпособРедактирования.Видимость = Ложь;
		Элементы.Контрагент.Видимость = Истина;
		Элементы.ПодотчетноеЛицо.Видимость = Ложь;
		
		Элементы.РасшифровкаПлатежаПодборВРасшифровку.Видимость = Истина;
		Элементы.РасшифровкаПлатежаЗаполнитьПлатежи.Видимость = Истина;
		
		Элементы.ГруппаСуммаВзаиморасчетов.Видимость = Ложь;
		Элементы.РасшифровкаПлатежаГруппаСумма.Видимость = Ложь;
		
	КонецЕсли;
	
	Если СпособРедактирования = 0 Тогда
		Платеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
		Если Платеж <> Неопределено Тогда
			ВедениеВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Платеж.ДоговорКонтрагента, "ВедениеВзаиморасчетов");
			Если (ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам")
				ИЛИ ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным")
				ИЛИ ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС")) Тогда
				
				Элементы.РасшифровкаПлатежаСделка1.АвтоОтметкаНезаполненного = Истина;
			Иначе
				Элементы.РасшифровкаПлатежаСделка1.ОтметкаНезаполненного = Ложь;
				Элементы.РасшифровкаПлатежаСделка1.АвтоОтметкаНезаполненного = Ложь;
			КонецЕсли;
		Иначе
			Элементы.РасшифровкаПлатежаСделка1.ОтметкаНезаполненного = Ложь;
			Элементы.РасшифровкаПлатежаСделка1.АвтоОтметкаНезаполненного = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//ВалютаДенежныхСредств = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.Касса, "ВалютаДенежныхСредств");
	ВалютаДенежныхСредств = Объект.ВалютаДокумента;
	Элементы.РасшифровкаПлатежаСуммаПлатежа.Заголовок = НСтр("en='Sum';ru='Сумма'") + " (" + ВалютаДенежныхСредств + ")";
	//Элементы.РасшифровкаПлатежаСуммаНДС.Заголовок = "Сумма НДС" + " (" + ВалютаДенежныхСредств + ")";
	//Элементы.РасшифровкаПлатежаСуммаНДС1.Заголовок = "Сумма НДС" + " (" + ВалютаДенежныхСредств + ")";
	
	ИнвертироватьСуммы = (СпособРедактирования = 0 И уатОбщегоНазначения_проф.ЕстьРасчетыСКонтрагентами(Объект.ВидОперации));
		
КонецПроцедуры // УстановитьВидимость()

// Процедура рассчитывает сумму платежа по сумме взаиморасчетов.
//
&НаКлиенте
Процедура РассчитатьСуммуПлатежа()
	
	ПроверкаКурсовВалют(СтрокаПлатеж);
	
	ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
	
	Если ВалютаВзаиморасчетов <> Объект.ВалютаДокумента Тогда
		СтрокаПлатеж.СуммаПлатежа = 0;
	КонецЕсли;
		
	Если Объект.РасшифровкаПлатежа.Количество()=1 Тогда
		СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
	КонецЕсли;
	
	РассчитатьСуммуВзаиморасчетовПоСуммеПлатежа(СтрокаПлатеж);
	ПересчитатьСуммуНДС(СтрокаПлатеж);
		
КонецПроцедуры // РассчитатьСуммуПлатежа()

&НаКлиенте
Процедура РассчитатьИтоги()
	Элементы.РасшифровкаПлатежаСуммаПлатежа.ТекстПодвала = Формат(Объект.СуммаДокумента,"ЧЦ=12; ЧДЦ=2") + " " + Строка(Объект.ВалютаДокумента);
	
	Если МноговалютныйУчет Тогда
		ИтогНДС = 0;
		СтруктураКурсаДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
		Для Каждого ТекСтрока Из Объект.РасшифровкаПлатежа Цикл
			Если ТекСтрока.ВалютаВзаиморасчетов = Объект.ВалютаДокумента Тогда
				ИтогНДС = ИтогНДС + ТекСтрока.СуммаНДС;
			Иначе
				ИтогНДС = ИтогНДС + уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаНДС,
					ТекСтрока.ВалютаВзаиморасчетов,    Объект.ВалютаДокумента,
					ТекСтрока.КурсВзаиморасчетов,      СтруктураКурсаДокумента.Курс,
					ТекСтрока.КратностьВзаиморасчетов, СтруктураКурсаДокумента.Кратность);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ИтогНДС = Объект.РасшифровкаПлатежа.Итог("СуммаНДС");
	КонецЕсли;
	Элементы.РасшифровкаПлатежаСуммаНДС.ТекстПодвала = Формат(ИтогНДС, "ЧЦ=12; ЧДЦ=2") + " " + Строка(Объект.ВалютаДокумента);
КонецПроцедуры

// Процедура выполняет необходимые действия при изменении договора взаиморасчетов
// с контрагентом.
//
&НаКлиенте
Процедура ПриИзмененииДоговора()
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "Организация");
	КонецЕсли;
	
	СтрокаПлатеж.Сделка = Неопределено;
	РасшифровкаПлатежаСделкаПриИзменении(Неопределено);
	
	Если уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВедениеВзаиморасчетов")
		= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом") Тогда
		
		СтрокаПлатеж.ВалютаВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		
	КонецЕсли;
	
	ПриИзмененииВалютыВзаиморасчетов();
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Объект.Контрагент = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "Владелец");
	КонецЕсли;
	
	УстановитьОграничениеТипаСделка();
	УстановитьВидимость();
		
КонецПроцедуры // ПриИзмененииДоговора()

&НаКлиенте
Процедура ПриИзмененииКонтрагента()
	
	ВосстанавливатьРеквизиты = (Объект.РасшифровкаПлатежа.Количество() = 1);
	СтараяСтавкаНДС = СтрокаПлатеж.СтавкаНДС;
	
	Объект.РасшифровкаПлатежа.Очистить();
	СтрокаПлатеж = Объект.РасшифровкаПлатежа.Добавить();
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		СтрокаПлатеж.ДоговорКонтрагента = Неопределено;
		
	Иначе
		
		СписокДоговоров = Новый СписокЗначений;
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами") Тогда
			СписокДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.уатВидыОперацийПКО.ОплатаПокупателя") Тогда
			СписокДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
		КонецЕсли;
		
		СтруктураПараметровДляПолученияДоговора = Новый Структура;
		СтруктураПараметровДляПолученияДоговора.Вставить("СписокДопустимыхВидовДоговоров", СписокДоговоров);
		СтруктураПараметровДляПолученияДоговора.Вставить("ВалютаВзаиморасчетовДоговора",Объект.ВалютаДокумента);

		СтрокаПлатеж.ДоговорКонтрагента = уатОбщегоНазначенияТиповыеСервер.уатПолучитьДоговорПоОрганизацииИКонтрагенту(Объект.Организация, 
			Объект.Контрагент, СтруктураПараметровДляПолученияДоговора);
		
	КонецЕсли;
	
	СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
	
	Если ВосстанавливатьРеквизиты Тогда
		СтрокаПлатеж.СтавкаНДС = СтараяСтавкаНДС;
		ПересчитатьСуммуНДС(СтрокаПлатеж);
	КонецЕсли;
	
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		КонтрагентНаименованиеПолное = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.Контрагент, "НаименованиеПолное");
		КонтрагентНаименование       = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(Объект.Контрагент, "Наименование");
		Объект.ПринятоОт = ?(ПустаяСтрока(КонтрагентНаименованиеПолное), КонтрагентНаименование, КонтрагентНаименованиеПолное);
		
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииКонтрагента

&НаКлиенте
Процедура ПриИзмененииВалютыВзаиморасчетов(флТолькоИзменение = Истина)
	Если флТолькоИзменение И СтрокаПлатеж.ВалютаВзаиморасчетов = ВалютаВзаиморасчетовСтарая Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКурсаВалютаСтарая   = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаВзаиморасчетовСтарая, Объект.Дата);
	СтруктураКурсаВзаиморасчетов = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(СтрокаПлатеж.ВалютаВзаиморасчетов, Объект.Дата);
	
	СтрокаПлатеж.КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	СтрокаПлатеж.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
	
	СтрокаПлатеж.СуммаВзаиморасчетов     = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СтрокаПлатеж.СуммаВзаиморасчетов,
		ВалютаВзаиморасчетовСтарая,           СтрокаПлатеж.ВалютаВзаиморасчетов,
		СтруктураКурсаВалютаСтарая.Курс,      СтрокаПлатеж.КурсВзаиморасчетов,
		СтруктураКурсаВалютаСтарая.Кратность, СтрокаПлатеж.КратностьВзаиморасчетов);
		
	РасшифровкаПлатежаСуммаВзаиморасчетов1ПриИзменении(Неопределено);
	
	ВалютаВзаиморасчетовСтарая = СтрокаПлатеж.ВалютаВзаиморасчетов;
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСделки(Элемент, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) Тогда 
		СтандартнаяОбработка = Ложь;
		
		Если СпособРедактирования = 0 Тогда 
			ПолеДанных = "Элементы.РасшифровкаПлатежа.ТекущиеДанные.Сделка";
		Иначе 
			ТекСтрока = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
			Если Не ТекСтрока = Неопределено Тогда 
				ИндексСтроки = Объект.РасшифровкаПлатежа.НайтиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор()).НомерСтроки-1;
				ПолеДанных = "Объект.РасшифровкаПлатежа["+Формат(ИндексСтроки,"ЧГ=0")+"].Сделка";
			Иначе 
				ПолеДанных = "Объект.РасшифровкаПлатежа";
			КонецЕсли;
		КонецЕсли;
		
		ТекстНСТР = НСтр("en='You must select the contract of counterparty.';ru='Необходимо выбрать договор контрагента.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР,, ПолеДанных);
		
		Возврат;
	КонецЕсли;
	
	// Тип выбираемого значения зависит от договора.
	ВидДоговораКонтрагента = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВидДоговора");
	Если ВидДоговораКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее") Тогда
		СтандартнаяОбработка = Ложь;
		ТекстНСТР = НСтр("en='Under contracts with  type ""other"", there are no payments on deals!';ru='По договорам с видом ""Прочее"" не ведутся взаиморасчеты по сделкам!'");
		ПоказатьПредупреждение(Неопределено, ТекстНСТР);
		Возврат;
	КонецЕсли;
	
	//СтандартнаяОбработка = Ложь;
	//
	//ФормаВыбора = ПолучитьФорму("Документ.уатСчетНаОплатуПокупателю.ФормаВыбора",, Элемент);
	//ЭлементОтбора                  = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ДоговорКонтрагента");
	//ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение   = СтрокаПлатеж.ДоговорКонтрагента;
	//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	//ЭлементОтбора.Использование    = Истина;
	//
	//ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаСделка()
	ВедениеВзаиморасчетов = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(СтрокаПлатеж.ДоговорКонтрагента, "ВедениеВзаиморасчетов");
	Если ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным") Тогда
		Элементы.РасшифровкаПлатежаСделка.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатРеализацияУслуг");
		Элементы.РасшифровкаПлатежаСделка1.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатРеализацияУслуг");
		
		мсвПараметрыВыбора = Новый Массив;
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДоговорКонтрагента", СтрокаПлатеж.ДоговорКонтрагента));
		Элементы.РасшифровкаПлатежаСделка.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		Элементы.РасшифровкаПлатежаСделка1.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		
	ИначеЕсли ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам") Тогда
		Элементы.РасшифровкаПлатежаСделка.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатСчетНаОплатуПокупателю");
		Элементы.РасшифровкаПлатежаСделка1.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатСчетНаОплатуПокупателю");
		
		мсвПараметрыВыбора = Новый Массив;
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДоговорКонтрагента", СтрокаПлатеж.ДоговорКонтрагента));
		Элементы.РасшифровкаПлатежаСделка.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		Элементы.РасшифровкаПлатежаСделка1.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		
	ИначеЕсли ВедениеВзаиморасчетов = ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС") Тогда
		Элементы.РасшифровкаПлатежаСделка.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатЗаказГрузоотправителя");
		Элементы.РасшифровкаПлатежаСделка1.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.уатЗаказГрузоотправителя");
		
		мсвЗаказыДляОтбора = уатОбщегоНазначения_проф.ПолучитьЗаказыПоДоговору(СтрокаПлатеж.ДоговорКонтрагента, Истина);
		
		мсвПараметрыВыбора = Новый Массив;
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", мсвЗаказыДляОтбора));
		Элементы.РасшифровкаПлатежаСделка.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		Элементы.РасшифровкаПлатежаСделка1.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		
	Иначе
		Элементы.РасшифровкаПлатежаСделка.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		Элементы.РасшифровкаПлатежаСделка1.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		
		мсвПараметрыВыбора = Новый Массив;
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДоговорКонтрагента", СтрокаПлатеж.ДоговорКонтрагента));
		Элементы.РасшифровкаПлатежаСделка.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		Элементы.РасшифровкаПлатежаСделка1.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
		
	КонецЕсли;
КонецПроцедуры

// Процедура выполняет заполнение реквизита Контрагент значением по умолчанию.
//
&НаКлиенте
Процедура ЗаполнитьКонтрагента()
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Возврат;
	КонецЕсли;
	СписокЗначений = Новый СписокЗначений;
	ВремКонтрагент = Неопределено;
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Объект.Контрагент = ВремКонтрагент;
		
		// проставим основной договор контрагента
		ПриИзмененииКонтрагента();
		ПриИзмененииДоговора();
		УстановитьФокус();
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьКонтрагента()

&НаКлиенте
Процедура ОбработкаСобытияЗаполнениеПлатежей(ТаблицаПлатежей, Параметр2) Экспорт 
	
	Объект.РасшифровкаПлатежа.Очистить();
	Если Не ТаблицаПлатежей = Неопределено Тогда 
		Для Каждого ТекСтрока Из ТаблицаПлатежей Цикл 
			НовСтрока = Объект.РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Если Объект.РасшифровкаПлатежа.Количество()=0 Тогда
		НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
	КонецЕсли;
	
	Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	РассчитатьИтоги();
	
	Элементы.РасшифровкаПлатежа.ТекущаяСтрока = Объект.РасшифровкаПлатежа[0].ПолучитьИдентификатор();
	СтрокаПлатеж = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопрос(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		флВопросЗакрытиеФормы = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуПлатежаПоСуммеВзаиморасчетов(ТекСтрока)
	Если ТекСтрока.ВалютаВзаиморасчетов = Объект.ВалютаДокумента Тогда
		ТекСтрока.СуммаПлатежа = ТекСтрока.СуммаВзаиморасчетов;
	Иначе
		СтруктураКурсаДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
		ТекСтрока.СуммаПлатежа = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаВзаиморасчетов,
			ТекСтрока.ВалютаВзаиморасчетов, Объект.ВалютаДокумента,
			ТекСтрока.КурсВзаиморасчетов, СтруктураКурсаДокумента.Курс,
			ТекСтрока.КратностьВзаиморасчетов, СтруктураКурсаДокумента.Кратность);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВзаиморасчетовПоСуммеПлатежа(ТекСтрока)
	Если ТекСтрока.ВалютаВзаиморасчетов = Объект.ВалютаДокумента Тогда
		 ТекСтрока.СуммаВзаиморасчетов = ТекСтрока.СуммаПлатежа;
	Иначе
		СтруктураКурсаДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
		ТекСтрока.СуммаВзаиморасчетов = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.СуммаПлатежа,
			Объект.ВалютаДокумента, ТекСтрока.ВалютаВзаиморасчетов,
			СтруктураКурсаДокумента.Курс, ТекСтрока.КурсВзаиморасчетов,
			СтруктураКурсаДокумента.Кратность, ТекСтрока.КратностьВзаиморасчетов);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ИсполняемаяЧастьМодуля

ОтветПередЗаписью = Ложь;

#КонецОбласти
