
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатДокументФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтборыОформлениеСписка();

	УстановитьЦветаСтатусов();
	
	уатОбщегоНазначенияСервер.ПереместитьКнопкуКонтакты(Элементы);
	
	Если ПолучитьФункциональнуюОпцию("уатИспользоватьДокументооборот") = Ложь Тогда
		Элементы.СтатусОбработкиСопроводительныхДокументов.Видимость = Ложь;
		Элементы.ОтборСтатусОбработкиСопроводительныхДокументов.Видимость = Ложь;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("уатРазделятьПланФактВСкладскихАктах_уэ") = Ложь Тогда
		Элементы.КартинкаЕстьРасхождения.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
	КонецЕсли;
	
	ОтборЭтоШаблонПеревозки = Неопределено;
	Если Параметры.Отбор.Свойство("ЭтоШаблонПеревозки") Тогда
		ОтборЭтоШаблонПеревозки = Параметры.Отбор.ЭтоШаблонПеревозки;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ЭтоШаблонПеревозки",
			ОтборЭтоШаблонПеревозки,,, Истина);
	КонецЕсли;
	Если ОтборЭтоШаблонПеревозки = Истина Тогда
		Элементы.НаименованиеШаблона.Видимость = Истина;
		Элементы.СтатусЗаказа.Видимость = Ложь;
	Иначе
		Элементы.НаименованиеШаблона.Видимость = Ложь;
		Элементы.СтатусЗаказа.Видимость = Истина;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборСтатус", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("МассивЗаказовДляСтатусов", Новый Массив);
	
	ЗапрещенныеВОтбореПоля = Новый Массив;
	ЗапрещенныеВОтбореПоля.Добавить("СтатусЗаказа");
	ЗапрещенныеВОтбореПоля.Добавить("СтатусОбработкиСопроводительныхДокументов");
	Список.УстановитьОграниченияИспользованияВОтборе(ЗапрещенныеВОтбореПоля);
	Список.УстановитьОграниченияИспользованияВПорядке(ЗапрещенныеВОтбореПоля);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатДокументФормаСпискаПриОткрытии(Отказ, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	КлючиСтрок = Строки.ПолучитьКлючи();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатЗаказГрузоотправителя.Ссылка КАК Ссылка,
	               |	уатЗаказГрузоотправителя.Мультимодальный КАК Мультимодальный,
	               |	уатЗаказГрузоотправителя.ЭтоЭтап КАК ЭтоЭтап,
	               |	уатЗаказГрузоотправителя.Проведен КАК Проведен
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	Документ.уатЗаказГрузоотправителя КАК уатЗаказГрузоотправителя
	               |ГДЕ
	               |	уатЗаказГрузоотправителя.Ссылка В(&мсвЗаказов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	уатЭтапыМультимодальныхПеревозок_уэ.Этап КАК Этап
	               |ПОМЕСТИТЬ втЭтапы
	               |ИЗ
	               |	РегистрСведений.уатЭтапыМультимодальныхПеревозок_уэ КАК уатЭтапыМультимодальныхПеревозок_уэ
	               |ГДЕ
	               |	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя В(&мсвЗаказов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втЭтапы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	втЭтапы.Этап КАК Этап,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК СтатусЗаказа
	               |ПОМЕСТИТЬ втСтатусыРодительскихЗаказов
	               |ИЗ
	               |	втЭтапы КАК втЭтапы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСтатусыГрузов_уэ.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ
	               |						втЭтапы.Этап КАК Заказ
	               |					ИЗ
	               |						втЭтапы КАК втЭтапы)) КАК уатСтатусыГрузов_уэСрезПоследних
	               |		ПО (уатСтатусыГрузов_уэСрезПоследних.Заказ = втЭтапы.Этап)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втЭтапы.ЗаказГрузоотправителя,
	               |	втЭтапы.Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(втСтатусыРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(втСтатусыРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК СтатусЗаказа
	               |ПОМЕСТИТЬ ТабСтатусовРодительскихЗаказов
	               |ИЗ
	               |	втСтатусыРодительскихЗаказов КАК втСтатусыРодительскихЗаказов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСтатусыГрузов_уэСрезПоследних.Заказ КАК Заказ,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК Статус
	               |ПОМЕСТИТЬ уатСтатусыГрузов_уэСрезПоследних
	               |ИЗ
	               |	РегистрСведений.уатСтатусыГрузов_уэ.СрезПоследних(, Заказ В (&мсвЗаказов)) КАК уатСтатусыГрузов_уэСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	уатСтатусыГрузов_уэСрезПоследних.Заказ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание КАК Основание,
	               |	КОЛИЧЕСТВО(уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент) КАК Всего,
	               |	СУММА(ВЫБОР
	               |			КОГДА уатСтатусыСопроводительныхДокументовСрезПоследних.Статус = ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.ОбработкаЗавершена)
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОбработкаЗавершена
	               |ПОМЕСТИТЬ втСтатусыСопроводительныхДокументовСрезПоследних
	               |ИЗ
	               |	РегистрСведений.уатСтатусыСопроводительныхДокументов.СрезПоследних(, СопроводительныйДокумент.Основание В (&МсвЗаказов)) КАК уатСтатусыСопроводительныхДокументовСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЗаказы.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА втЗаказы.Мультимодальный
	               |				И НЕ втЗаказы.ЭтоЭтап
	               |			ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |		ИНАЧЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |	КОНЕЦ КАК СтатусЗаказа,
	               |	СУММА(ЕСТЬNULL(втСтатусыСопроводительныхДокументовСрезПоследних.Всего, 0)) <> 0 КАК НаличиеСопроводительныхДокументов,
	               |	ВЫБОР
	               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.Всего) = СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена)
	               |			ТОГДА 3
	               |		КОГДА СУММА(ЕСТЬNULL(втСтатусыСопроводительныхДокументовСрезПоследних.Всего, 0)) = 0
	               |			ТОГДА 0
	               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена) = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК СтатусОбработкиСопроводительныхДокументов
	               |ИЗ
	               |	втЗаказы КАК втЗаказы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТабСтатусовРодительскихЗаказов КАК ТабСтатусовРодительскихЗаказов
	               |		ПО втЗаказы.Ссылка = ТабСтатусовРодительскихЗаказов.ЗаказГрузоотправителя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ уатСтатусыГрузов_уэСрезПоследних КАК уатСтатусыГрузов_уэСрезПоследних
	               |		ПО втЗаказы.Ссылка = уатСтатусыГрузов_уэСрезПоследних.Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыСопроводительныхДокументовСрезПоследних КАК втСтатусыСопроводительныхДокументовСрезПоследних
	               |		ПО втЗаказы.Ссылка = втСтатусыСопроводительныхДокументовСрезПоследних.Основание
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втЗаказы.Ссылка,
	               |	ВЫБОР
	               |		КОГДА втЗаказы.Мультимодальный
	               |				И НЕ втЗаказы.ЭтоЭтап
	               |			ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |		ИНАЧЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |	КОНЕЦ";
	Запрос.УстановитьПараметр("мсвЗаказов", КлючиСтрок);

	ВыборкаЗаказ = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаЗаказ.Следующий() Цикл
	    СтрокаСписка        = Строки[ВыборкаЗаказ.Ссылка];	
		ДанныеСтрокаСписка  = СтрокаСписка.Данные;
		ДанныеСтрокаСписка.СтатусЗаказа = ВыборкаЗаказ.СтатусЗаказа;           
		ДанныеСтрокаСписка.СостояниеВыполненияСтрока = Строка(ДанныеСтрокаСписка.ПроцентВыполнения)
			+ "% " + Нстр("en = 'done'; ru = 'выполнено'");
		ДанныеСтрокаСписка.НаличиеСопроводительныхДокументов         = ВыборкаЗаказ.НаличиеСопроводительныхДокументов;
		ДанныеСтрокаСписка.СтатусОбработкиСопроводительныхДокументов = ВыборкаЗаказ.СтатусОбработкиСопроводительныхДокументов;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЦветаСтатусов()
	
	мсвУдаляемыхЭлементов = Новый Массив();
	Для Каждого ЭлементУсловногоОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный" Тогда
			мсвУдаляемыхЭлементов.Добавить(ЭлементУсловногоОформления);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементУсловногоОформления Из мсвУдаляемыхЭлементов Цикл
		УсловноеОформление.Элементы.Удалить(ЭлементУсловногоОформления);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатСтатусы_уэ.Ссылка,
	|	уатСтатусы_уэ.Наименование,
	|	уатСтатусы_уэ.ЦветФонаПоУмолчанию,
	|	уатСтатусы_уэ.ЦветТекстаПоУмолчанию
	|ИЗ
	|	Справочник.уатСтатусы_уэ КАК уатСтатусы_уэ
	|ГДЕ
	|	НЕ уатСтатусы_уэ.ПометкаУдаления
	|	И уатСтатусы_уэ.ДействуетНаЗаказыГрузоотправителей";
	
	ВыборкаЦвета = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаЦвета.Следующий() Цикл 
		ЦветФона   = Неопределено;
		ЦветТекста = Неопределено;
		
		ХранилищеЦветФона = ВыборкаЦвета.ЦветФонаПоУмолчанию;
		Если Не ХранилищеЦветФона = Неопределено Тогда 
			ДанныеЦветФона = ХранилищеЦветФона.Получить();
			Если Не ДанныеЦветФона = Неопределено И ТипЗнч(ДанныеЦветФона) = Тип("Цвет") Тогда
				ЦветФона = ДанныеЦветФона;
			КонецЕсли;
		КонецЕсли;
		
		ХранилищеЦветТекста = ВыборкаЦвета.ЦветТекстаПоУмолчанию;
		Если Не ХранилищеЦветТекста = Неопределено Тогда 
			ДанныеЦветТекста = ХранилищеЦветТекста.Получить();
			Если Не ДанныеЦветТекста = Неопределено И ТипЗнч(ДанныеЦветТекста) = Тип("Цвет") Тогда
				ЦветТекста = ДанныеЦветТекста;
			КонецЕсли;
		КонецЕсли;
		
		Если ЦветТекста = Неопределено И ЦветФона = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		
		ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.СтатусЗаказа");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ВыборкаЦвета.Ссылка;
		ЭлементОтбора.Использование  = Истина;
		
		Если Не ЦветТекста = Неопределено Тогда 
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветТекста);
		КонецЕсли;
		
		Если Не ЦветФона = Неопределено Тогда 
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
		КонецЕсли;
		
		ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный";
		ЭлементУсловногоОформления.Представление = НСтр("en='By status color';ru='По цвету статуса '") + ВыборкаЦвета.Наименование;
		ЭлементУсловногоОформления.Использование = Истина;
		
		ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СтатусЗаказа");
		ПолеОформления.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыОформлениеСписка()
	
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__СОСТОЯНИЕ_НОВЫЙ__", Нстр("en='New';ru='Новый'"));
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__СОСТОЯНИЕ_ОТКРЫТ__", Нстр("en='Open';ru='Открыт'"));
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__СОСТОЯНИЕ_ЧАСТИЧНОВЫПОЛНЕН__", Нстр("en='Partially completed';ru='Частично выполнен'"));
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__СОСТОЯНИЕ_ВЫПОЛНЕН__", Нстр("en='Completed';ru='Выполнен'"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор()
	Если ЗначениеЗаполнено(ОтборСтатус)
		ИЛИ ЗначениеЗаполнено(ОтборСтатусОбработкиСопроводительныхДокументов) Тогда
		МассивЗаказовДляСтатусов = ПолучитьМассивЗаказовПоСтатусам(ОтборСтатус, ОтборСтатусОбработкиСопроводительныхДокументов);
		Список.Параметры.УстановитьЗначениеПараметра("ОтборСтатус", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("МассивЗаказовДляСтатусов", МассивЗаказовДляСтатусов);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ОтборСтатус", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("МассивЗаказовДляСтатусов", Новый Массив);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Организация", ОтборОрганизация);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Организация",,, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивЗаказовПоСтатусам(Статус, СтатусОбработкиСопроводительныхДокументов)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатЗаказГрузоотправителя.Ссылка КАК Ссылка,
	               |	уатЗаказГрузоотправителя.Мультимодальный КАК Мультимодальный,
	               |	уатЗаказГрузоотправителя.ЭтоЭтап КАК ЭтоЭтап,
	               |	уатЗаказГрузоотправителя.Проведен КАК Проведен
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	Документ.уатЗаказГрузоотправителя КАК уатЗаказГрузоотправителя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	уатЭтапыМультимодальныхПеревозок_уэ.Этап КАК Этап
	               |ПОМЕСТИТЬ втЭтапы
	               |ИЗ
	               |	РегистрСведений.уатЭтапыМультимодальныхПеревозок_уэ КАК уатЭтапыМультимодальныхПеревозок_уэ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втЭтапы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	втЭтапы.Этап КАК Этап,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК СтатусЗаказа
	               |ПОМЕСТИТЬ втСтатусыРодительскихЗаказов
	               |ИЗ
	               |	втЭтапы КАК втЭтапы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатСтатусыГрузов_уэ.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ
	               |						втЭтапы.Этап КАК Заказ
	               |					ИЗ
	               |						втЭтапы КАК втЭтапы)) КАК уатСтатусыГрузов_уэСрезПоследних
	               |		ПО (уатСтатусыГрузов_уэСрезПоследних.Заказ = втЭтапы.Этап)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втЭтапы.ЗаказГрузоотправителя,
	               |	втЭтапы.Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(втСтатусыРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(втСтатусыРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК СтатусЗаказа
	               |ПОМЕСТИТЬ ТабСтатусовРодительскихЗаказов
	               |ИЗ
	               |	втСтатусыРодительскихЗаказов КАК втСтатусыРодительскихЗаказов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСтатусыГрузов_уэСрезПоследних.Заказ КАК Заказ,
	               |	ВЫБОР
	               |		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))) > 1
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Составной)
	               |		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый)))
	               |	КОНЕЦ КАК Статус
	               |ПОМЕСТИТЬ уатСтатусыГрузов_уэСрезПоследних
	               |ИЗ
	               |	РегистрСведений.уатСтатусыГрузов_уэ.СрезПоследних(, ) КАК уатСтатусыГрузов_уэСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	уатСтатусыГрузов_уэСрезПоследних.Заказ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание КАК Основание,
	               |	КОЛИЧЕСТВО(уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент) КАК Всего,
	               |	СУММА(ВЫБОР
	               |			КОГДА уатСтатусыСопроводительныхДокументовСрезПоследних.Статус = ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.ОбработкаЗавершена)
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОбработкаЗавершена
	               |ПОМЕСТИТЬ втСтатусыСопроводительныхДокументовСрезПоследних
	               |ИЗ
	               |	РегистрСведений.уатСтатусыСопроводительныхДокументов.СрезПоследних(, ) КАК уатСтатусыСопроводительныхДокументовСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЗаказы.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА втЗаказы.Мультимодальный
	               |				И НЕ втЗаказы.ЭтоЭтап
	               |			ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |		ИНАЧЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |	КОНЕЦ КАК СтатусЗаказа,
	               |	СУММА(ЕСТЬNULL(втСтатусыСопроводительныхДокументовСрезПоследних.Всего, 0)) <> 0 КАК НаличиеСопроводительныхДокументов,
	               |	ВЫБОР
	               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.Всего) = СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена)
	               |			ТОГДА ""обработка завершена""
	               |		КОГДА СУММА(ЕСТЬNULL(втСтатусыСопроводительныхДокументовСрезПоследних.Всего, 0)) = 0
	               |			ТОГДА ""не введены""
	               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена) = 0
	               |			ТОГДА ""обработка не завершена""
	               |		ИНАЧЕ ""обработка в работе""
	               |	КОНЕЦ КАК СтатусОбработкиСопроводительныхДокументов
	               |ПОМЕСТИТЬ втРезультат
	               |ИЗ
	               |	втЗаказы КАК втЗаказы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТабСтатусовРодительскихЗаказов КАК ТабСтатусовРодительскихЗаказов
	               |		ПО втЗаказы.Ссылка = ТабСтатусовРодительскихЗаказов.ЗаказГрузоотправителя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ уатСтатусыГрузов_уэСрезПоследних КАК уатСтатусыГрузов_уэСрезПоследних
	               |		ПО втЗаказы.Ссылка = уатСтатусыГрузов_уэСрезПоследних.Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыСопроводительныхДокументовСрезПоследних КАК втСтатусыСопроводительныхДокументовСрезПоследних
	               |		ПО втЗаказы.Ссылка = втСтатусыСопроводительныхДокументовСрезПоследних.Основание
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втЗаказы.Ссылка,
	               |	ВЫБОР
	               |		КОГДА втЗаказы.Мультимодальный
	               |				И НЕ втЗаказы.ЭтоЭтап
	               |			ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.СтатусЗаказа, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |		ИНАЧЕ ЕСТЬNULL(уатСтатусыГрузов_уэСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.Новый))
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРезультат.Ссылка КАК Ссылка,
	               |	втРезультат.СтатусЗаказа КАК СтатусЗаказа,
	               |	втРезультат.НаличиеСопроводительныхДокументов КАК НаличиеСопроводительныхДокументов,
	               |	втРезультат.СтатусОбработкиСопроводительныхДокументов КАК СтатусОбработкиСопроводительныхДокументов
	               |ИЗ
	               |	втРезультат КАК втРезультат
	               |ГДЕ  ";
	Если ЗначениеЗаполнено(Статус) 
		И ЗначениеЗаполнено(СтатусОбработкиСопроводительныхДокументов) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	втРезультат.СтатусЗаказа = &Статус
		|	И втРезультат.СтатусОбработкиСопроводительныхДокументов = &СтатусОбработкиСопроводительныхДокументов";
	ИначеЕсли ЗначениеЗаполнено(Статус) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	втРезультат.СтатусЗаказа = &Статус";
	ИначеЕсли ЗначениеЗаполнено(СтатусОбработкиСопроводительныхДокументов) Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	уатЗаказГрузоотправителя.Ссылка КАК Ссылка,
		               |	уатЗаказГрузоотправителя.Мультимодальный КАК Мультимодальный,
		               |	уатЗаказГрузоотправителя.ЭтоЭтап КАК ЭтоЭтап,
		               |	уатЗаказГрузоотправителя.Проведен КАК Проведен
		               |ПОМЕСТИТЬ втЗаказы
		               |ИЗ
		               |	Документ.уатЗаказГрузоотправителя КАК уатЗаказГрузоотправителя
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание КАК Основание,
		               |	КОЛИЧЕСТВО(уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент) КАК Всего,
		               |	СУММА(ВЫБОР
		               |			КОГДА уатСтатусыСопроводительныхДокументовСрезПоследних.Статус = ЗНАЧЕНИЕ(Справочник.уатСтатусы_уэ.ОбработкаЗавершена)
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК ОбработкаЗавершена
		               |ПОМЕСТИТЬ втСтатусыСопроводительныхДокументовСрезПоследних
		               |ИЗ
		               |	РегистрСведений.уатСтатусыСопроводительныхДокументов.СрезПоследних(, ) КАК уатСтатусыСопроводительныхДокументовСрезПоследних
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	уатСтатусыСопроводительныхДокументовСрезПоследних.СопроводительныйДокумент.Основание
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.Всего) = СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена)
		               |			ТОГДА ""обработка завершена""
		               |		КОГДА СУММА(ЕСТЬNULL(втСтатусыСопроводительныхДокументовСрезПоследних.Всего, 0)) = 0
		               |			ТОГДА ""не введены""
		               |		КОГДА СУММА(втСтатусыСопроводительныхДокументовСрезПоследних.ОбработкаЗавершена) = 0
		               |			ТОГДА ""обработка не завершена""
		               |		ИНАЧЕ ""обработка в работе""
		               |	КОНЕЦ КАК СтатусОбработкиСопроводительныхДокументов,
		               |	втЗаказы.Ссылка КАК Ссылка
		               |ПОМЕСТИТЬ втРезультат
		               |ИЗ
		               |	втЗаказы КАК втЗаказы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыСопроводительныхДокументовСрезПоследних КАК втСтатусыСопроводительныхДокументовСрезПоследних
		               |		ПО втЗаказы.Ссылка = втСтатусыСопроводительныхДокументовСрезПоследних.Основание
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	втЗаказы.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втРезультат.СтатусОбработкиСопроводительныхДокументов КАК СтатусОбработкиСопроводительныхДокументов,
		               |	втРезультат.Ссылка КАК Ссылка
		               |ИЗ
		               |	втРезультат КАК втРезультат
		               |ГДЕ
		               |	втРезультат.СтатусОбработкиСопроводительныхДокументов = &СтатусОбработкиСопроводительныхДокументов";
	КонецЕсли;
	Запрос.УстановитьПараметр("Статус", Статус);
	Запрос.УстановитьПараметр("СтатусОбработкиСопроводительныхДокументов", СтатусОбработкиСопроводительныхДокументов);
	
	ВыборкаЗаказ = Запрос.Выполнить().Выбрать();
	
	МассивЗаказовДляСтатусов = Новый Массив();
	Пока ВыборкаЗаказ.Следующий() Цикл
		МассивЗаказовДляСтатусов.Добавить(ВыборкаЗаказ.Ссылка);
	КонецЦикла;

	Возврат МассивЗаказовДляСтатусов;
	
КонецФункции

#КонецОбласти
