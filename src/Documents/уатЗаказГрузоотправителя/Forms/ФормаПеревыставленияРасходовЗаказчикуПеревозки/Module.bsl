#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	
	// начало блока стандартных операций
	ДопПараметрыОткрытие = Новый Структура("ИмяФормы", ИмяФормы);
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	// конец блока стандартных операций    
	
	Если Параметры.Свойство("МаршрутныйЛист") И ЗначениеЗаполнено(Параметры.МаршрутныйЛист) Тогда 
		МаршрутныйЛист = Параметры.МаршрутныйЛист;	
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаказНаТС") И ЗначениеЗаполнено(Параметры.ЗаказНаТС) Тогда 
		ЗаказНаТС = Параметры.ЗаказНаТС;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущаяСумма") Тогда
		ТекущаяСумма = Параметры.ТекущаяСумма;
	КонецЕсли; 
	
	Если Параметры.Свойство("МассивЗаказов") И Параметры.МассивЗаказов.Количество() Тогда
		Для Каждого ТекЗаказ Из Параметры.МассивЗаказов Цикл
			НовСтрока = СписокЗаказов.Добавить();
			НовСтрока.ЗаказНаТС = ТекЗаказ;
		КонецЦикла;;	
	КонецЕсли; 
	
	Если Параметры.Свойство("ОперацияРучноеЗаполнение") Тогда
		МЛРучноеЗаполнение = Параметры.ОперацияРучноеЗаполнение;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Immediate opening for this object is prohibited!';ru='Непосредственное открытие для данного объекта запрещено!'"), 10);
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Если ВладелецФормы.ИмяФормы = "Документ.уатМаршрутныйЛист.Форма.ФормаДокумента" Тогда
		РежимРаботы = 0;
	Иначе
		РежимРаботы = 1;
	КонецЕсли;
	
	Если СписокЗаказов.Количество() Тогда
		ЗаполнитьСписокВыбораЗаказовНаТСПоМЛ();
	КонецЕсли;
	
	РассчитатьСуммуСУчетомНаценки();
	УстановитьВидимость();  
	
КонецПроцедуры

#КонецОбласти   


#Область ОбработчикиСобытийЭлементовШапкиФормы 

&НаКлиенте
Процедура РежимПересчетаПриИзменении(Элемент)
	УстановитьВидимость();
	Если РежимПересчета = 0 Тогда
		ПроцентНаценки = 0;
	ИначеЕсли РежимПересчета = 1 Тогда
		ФиксированнаяСуммаНаценки = 0;
	КонецЕсли;  
	РассчитатьСуммуСУчетомНаценки();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНаценкиПриИзменении(Элемент)
	РассчитатьСуммуСУчетомНаценки();
КонецПроцедуры

&НаКлиенте
Процедура ФиксированнаяСуммаНаценкиПриИзменении(Элемент)
	РассчитатьСуммуСУчетомНаценки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы  

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураЗакрытия = Новый Структура("ЗаказНаТС, НоваяСумма", ЗаказНаТС, НоваяСуммаРасходов);
	Закрыть(СтруктураЗакрытия);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Процедура УстановитьВидимость() 
	
	Элементы.ФиксированнаяСуммаНаценки.Видимость = РежимПересчета = 0;
	Элементы.ПроцентНаценки.Видимость = РежимПересчета = 1;
	
	ВидОперации = ?(ЗначениеЗаполнено(МаршрутныйЛист), уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(МаршрутныйЛист, "ВидОперации"), "");
	
	Если РежимРаботы = 1
		Или (РежимРаботы = 0 И МЛРучноеЗаполнение) Тогда
		Элементы.ЗаказНаТС.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура РассчитатьСуммуСУчетомНаценки()
	Если РежимПересчета = 0 Тогда
		НоваяСуммаРасходов = ТекущаяСумма + ФиксированнаяСуммаНаценки; 
	ИначеЕсли РежимПересчета = 1 Тогда
		НоваяСуммаРасходов = ТекущаяСумма + ТекущаяСумма * ПроцентНаценки / 100;
	КонецЕсли;	
КонецПроцедуры  

&НаКлиенте
Процедура ЗаполнитьСписокВыбораЗаказовНаТСПоМЛ() 
	
	Элементы.ЗаказНаТС.СписокВыбора.Очистить();
	
	МассивЗаказов = ПолучитьСписокЗаказовИзМЛ();
	
	Если МассивЗаказов.Количество() <> 0 Тогда	
		Для Каждого ТекЗаказ Из МассивЗаказов Цикл 
			Элементы.ЗаказНаТС.СписокВыбора.Добавить(ТекЗаказ, Строка(ТекЗаказ));
		КонецЦикла;	
	КонецЕсли;
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокЗаказовИзМЛ()
	Возврат СписокЗаказов.Выгрузить().ВыгрузитьКолонку("ЗаказНаТС");	
КонецФункции

#КонецОбласти