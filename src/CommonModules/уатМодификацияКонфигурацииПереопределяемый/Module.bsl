////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм, таких как:
// "ПриСозданииНаСервере".
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - форма, из обработчика события которой происходит вызов процедуры.
//          см. справочную информацию по событиям управляемой формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	// {УАТ_ПРОФ}
	уатМодификацияКонфигурации_проф.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	// {/УАТ_ПРОФ}
	
	// {УАТ_УЭ}
	уатМодификацияКонфигурации_уэ.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	// {/УАТ_УЭ}
	
	// УАТ СТД, ПРОФ, КОРП
	Если Форма.ИмяФормы = "Обработка.слкМенеджерЛицензий.Форма.МенеджерЛицензийСЛК"
		Или Форма.ИмяФормы = "Обработка.слкМенеджерЛицензий.Форма.МенеджерЛицензийСЛКУпрощенный" Тогда
		
		ФормаМенеджераЛицензийСЛКПриСозданииНаСервере(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - форма, из обработчика события которой происходит вызов процедуры.
//          см. справочную информацию по событиям управляемой формы.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	// {УАТ_УЭ}
	уатМодификацияКонфигурации_уэ.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// {/УАТ_УЭ}
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - форма, из обработчика события которой происходит вызов процедуры.
//          см. справочную информацию по событиям управляемой формы.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	// {УАТ_ПРОФ}
	уатМодификацияКонфигурации_проф.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	// {/УАТ_ПРОФ}
	
	// {УАТ_УЭ}
	уатМодификацияКонфигурации_уэ.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	// {/УАТ_УЭ}
	
КонецПроцедуры

#КонецОбласти

#Область Общее

// Переопределяемая процедура, вызываемая из серверного контекста формы
//
// Параметры:
//  Форма		 - УправляемаяФорма - форма
//  ДопПараметры - Структура - структура дополнительных параметров
//
Процедура ФормаВыполнитьДействияВКонтекстеСервера(Форма, ДопПараметры=Неопределено) Экспорт
	
	// {УАТ_ПРОФ}
	уатМодификацияКонфигурации_проф.ФормаВыполнитьДействияВКонтекстеСервера(Форма, ДопПараметры);
	// {/УАТ_ПРОФ}
	
	// {УАТ_УЭ}
	уатМодификацияКонфигурации_уэ.ФормаВыполнитьДействияВКонтекстеСервера(Форма, ДопПараметры);
	// {/УАТ_УЭ}
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая при установке рабочего стола
//
// Параметры:
//  СоставФорм	 - СоставФормНачальнойСтраницы - набор форм, входящих в рабочий стол
//
Процедура УстановитьРабочийСтолПользователя(СоставФорм) Экспорт
	
	// {УАТ_УЭ}
	уатМодификацияКонфигурации_уэ.УстановитьРабочийСтолПользователя(СоставФорм);
	// {/УАТ_УЭ}
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
// См. "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике. и ОтчетыКлиентПереопределяемый.ОбработчикКоманды().
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Булево - Признак отказа от создания формы.
//   СтандартнаяОбработка - Булево - Признак выполнения стандартной (системной) обработки события.
//
// Пример:
//	//Добавление команды с обработчиком в ОтчетыКлиентПереопределяемый.ОбработчикКоманды:
//	Команда = ФормаОтчета.Команды.Добавить("МояОсобеннаяКоманда");
//	Команда.Действие  = "Подключаемый_Команда";
//	Команда.Заголовок = НСтр("en='My team...';ru='Моя команда...'");
//	
//	Кнопка = ФормаОтчета.Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), ФормаОтчета.Элементы.<ИмяПодменю>);
//	Кнопка.ИмяКоманды = Команда.Имя;
//	
//	ФормаОтчета.ПостоянныеКоманды.Добавить(КомандаСоздать.Имя);
//
Процедура ПриСозданииНаСервереФормыОтчета(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если Форма.ИмяФормы = "Отчет.уатУстановленныеНаТСАгрегаты.Форма" Тогда 
		ПриСозданииНаСервереУстановленныеНаТСАгрегаты(Форма, Отказ, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриСозданииНаСервереУстановленныеНаТСАгрегаты(Форма, Отказ, СтандартнаяОбработка)
	
	ПараметрВалютаОтчета = Форма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВалютаОтчета"));
	Если Не ПараметрВалютаОтчета = Неопределено Тогда 
		Если уатРаботаСМетаданными.уатЕстьКонстанта("ВалютаУправленческогоУчета") Тогда 
			ПараметрВалютаОтчета.Значение = Константы.ВалютаУправленческогоУчета.Получить(); 
		Иначе 
			ПараметрВалютаОтчета.Значение = Константы.ВалютаРегламентированногоУчета.Получить(); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаМенеджераЛицензийСЛКПриСозданииНаСервере(Форма)
	
	ГруппаКоманд = Форма.КоманднаяПанель;
	
	// Добавление команды формы перехода на другой вариант защиты
	КомандаПерейтиНаЗащиту1СРарус = Форма.Команды.Добавить("_уатКомандаПерейтиНаЗащиту1СРарус");
	КомандаПерейтиНаЗащиту1СРарус.Заголовок = "Перейти на защиту 1С-Рарус";
	КомандаПерейтиНаЗащиту1СРарус.Действие = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	
	ГруппаКоманднаяПанель = Неопределено;
	Если Форма.ИмяФормы = "Обработка.слкМенеджерЛицензий.Форма.МенеджерЛицензийСЛКУпрощенный" Тогда
		ГруппаКоманднаяПанель = Форма.Элементы.Найти("ГруппаПанельПодключения");
	КонецЕсли;
	Если ГруппаКоманднаяПанель = Неопределено Тогда
		ГруппаКоманднаяПанель = Форма.КоманднаяПанель;
	КонецЕсли;
	ЭлементПерейтиНаЗащиту1СРарус = Форма.Элементы.Добавить("_уатКнопкаПерейтиНаЗащиту1СРарус", Тип("КнопкаФормы"), ГруппаКоманднаяПанель);
	ЭлементПерейтиНаЗащиту1СРарус.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	ЭлементПерейтиНаЗащиту1СРарус.ИмяКоманды = "_уатКомандаПерейтиНаЗащиту1СРарус";
	
КонецПроцедуры

#КонецОбласти
