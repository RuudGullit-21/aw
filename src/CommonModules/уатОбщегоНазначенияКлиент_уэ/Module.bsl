////////////////////////////////////////////////////////////////////////////////
// Управление автотранспортом.
// 
// Процедуры и функции общего назначения.
// 
// Содержит код, используемый в варианте поставке КОРП
///////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОптимальноеПерестроениеЗаказов

Процедура ПредупредитьОБольшомЧислеЗаказов(ПараметрыОптимизации, ОповещениеПриПродолжении, Отказ, ЗаданВопрос) Экспорт
	
	Если ПараметрыОптимизации.АлгоритмОптимальногоПерестроения = "Очередей" Тогда
		
		ЧислоЗаказовДляПредупреждения = 30;
		ЧислоЗаказовДляОтказа = 40;
		
		Если ПараметрыОптимизации.ДанныеПоЗаказам.КоличествоЗаказов > ЧислоЗаказовДляОтказа Тогда
			ТекстНСтр = НСтр("ru = 'Максимальное количество Заказов на ТС для оптимизации в Маршрутном листе - %1.
				|Количество Заказов на ТС в текущем документе: %2.
				|Алгоритм Очередей не может использоваться для решения данной задачи.
				|При таком объеме Заказов на ТС рекомендуется использовать более производительный алгоритм ""Rarus VRP"".
				|'");
			ТекстНСтр = СтрШаблон(ТекстНСтр, ЧислоЗаказовДляОтказа, ПараметрыОптимизации.ДанныеПоЗаказам.КоличествоЗаказов);
			ТекстСообщения = Новый ФорматированнаяСтрока(ТекстНСтр, СтрокаЗаявкаНаПодключение());
			Отказ = Истина;
			ПоказатьПредупреждение(, ТекстСообщения);
			Возврат;
		ИначеЕсли ПараметрыОптимизации.ДанныеПоЗаказам.КоличествоЗаказов > ЧислоЗаказовДляПредупреждения Тогда
			ТекстНСтр = НСтр("ru = 'В Маршрутном листе, который содержит более 30 Заказов на ТС, продолжительность оптимизации может превышать 5 минут.
				|При таком объеме Заказов на ТС рекомендуется использовать более производительный алгоритм ""Rarus VRP"".
				|'");
			ТекстВопроса = Новый ФорматированнаяСтрока(ТекстНСтр, СтрокаЗаявкаНаПодключение(), Символы.ПС, НСтр("ru = 'Продолжить оптимизацию?'"));
			ЗаданВопрос = Истина;
			ПоказатьВопрос(ОповещениеПриПродолжении, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаЗаявкаНаПодключение() Экспорт
	
	СтрокаРезультат = Новый ФорматированнаяСтрока(
		НСтр("ru = 'Для получения тестового доступа необходимо отправить заявку по адресу '"),
		Новый ФорматированнаяСтрока("vrp@rarus.ru", Новый Шрифт(,,,,Истина), ОбщегоНазначенияВызовСервера.ЦветСтиля("ГиперссылкаЦвет")),
		НСтр("ru = ' из специальной формы. '"),
		Новый ФорматированнаяСтрока("Отправить заявку сейчас",,,,
			"e1cib/command/Обработка.уатОбращениеВТехническуюПоддержку.Команда.ОтправитьЗаявкуНаПодключениеМаршрутизации")
	);
	
	Возврат СтрокаРезультат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
