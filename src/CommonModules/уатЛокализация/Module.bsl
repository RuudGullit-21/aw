
////////////////////////////////////////////////////////////////////////////////
// Общий модуль "Локализация".
//
// Предоставляет интерфейс вызовов для объектов подсистем БСП для локализации
// объектов, перевод которых невозможен, например, для макетов.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура предназначена для подмены макета "КлассификаторСубъектовРФ".
// 
// Возвращаемое значение:
//  ТекстовыйДокумент - данные макета
//
Функция ПолучитьМакет_КлассификаторСубъектовРФ() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Метаданные.Обработки.Найти("уатЛокализация") = Неопределено Тогда 
		ИспользуетсяЛокализация = Ложь;
	Иначе 
		ИспользуетсяЛокализация = Истина;
	КонецЕсли;
	
	Если ИспользуетсяЛокализация И Не ТекущийЯзык() = Метаданные.Языки.Русский Тогда
		// Здесь используется проверка ТекущийЯзык() языка текущего пользователя,
		// чтобы разные пользователи могли использовать разные классификаторы.
		// Так как дополнительный макет есть только на английском, то не имеет смысла проверять язык локализации пользователя
		// функцией ТекущийКодЛокализации().
		Возврат Обработки["уатЛокализация"].ПолучитьМакет("РегистрСведений_АдресныеОбъекты_КлассификаторСубъектовРФ");
	Иначе 
		Возврат РегистрыСведений.АдресныеОбъекты.ПолучитьМакет("КлассификаторСубъектовРФ");
	КонецЕсли;
	
КонецФункции // ПолучитьМакет_КлассификаторСубъектовРФ()

// Процедура предназначена для подмены макета "КлассификаторСтранМира".
// 
// Возвращаемое значение:
//  ТекстовыйДокумент - данные макета 
//
Функция ПолучитьМакет_КлассификаторСтранМира() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Метаданные.Обработки.Найти("уатЛокализация") = Неопределено Тогда 
		ИспользуетсяЛокализация = Ложь;
	Иначе 
		ИспользуетсяЛокализация = Истина;
	КонецЕсли;
	
	Если ИспользуетсяЛокализация И Не ТекущийЯзык() = Метаданные.Языки.Русский Тогда
		// Здесь используется проверка ТекущийЯзык() языка текущего пользователя,
		// чтобы разные пользователи могли использовать разные классификаторы.
		// Так как дополнительный макет есть только на английском, то не имеет смысла проверять язык локализации пользователя
		// функцией ТекущийКодЛокализации().
		Возврат Обработки["уатЛокализация"].ПолучитьМакет("Справочник_СтраныМира_Классификатор");
	Иначе 
		Возврат Справочники.СтраныМира.ПолучитьМакет("Классификатор");
	КонецЕсли;
	
КонецФункции // ПолучитьМакет_КлассификаторСтранМира()

// Процедура предназначена для подмены макета "ОбщероссийскийКлассификаторВалют".
// 
// Возвращаемое значение:
//   ТекстовыйДокумент - данные макета 
//
Функция ПолучитьМакет_ОбщероссийскийКлассификаторВалют() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Метаданные.Обработки.Найти("уатЛокализация") = Неопределено Тогда 
		ИспользуетсяЛокализация = Ложь;
	Иначе 
		ИспользуетсяЛокализация = Истина;
	КонецЕсли;
	
	Если ИспользуетсяЛокализация И НЕ Константы.уатКонфигурацияДляРФ.Получить() Тогда 
		Возврат Обработки["уатЛокализация"].ПолучитьМакет("Обработка_ЗагрузкаКурсовВалют_ОбщероссийскийКлассификаторВалют");
	Иначе 
		Возврат Обработки.ЗагрузкаКурсовВалют.ПолучитьМакет("ОбщероссийскийКлассификаторВалют");
	КонецЕсли;
	
КонецФункции // ПолучитьМакет_ОбщероссийскийКлассификаторВалют()

// Процедура предназначена для подмены макета "ПроизводственныеКалендари".
// 
// Возвращаемое значение:
//   ТекстовыйДокумент - данные макета 
//
Функция ПолучитьМакет_ПроизводственныеКалендари() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Метаданные.Обработки.Найти("уатЛокализация") = Неопределено Тогда 
		ИспользуетсяЛокализация = Ложь;
	Иначе 
		ИспользуетсяЛокализация = Истина;
	КонецЕсли;
	
	Если ИспользуетсяЛокализация И Не ТекущийЯзык() = Метаданные.Языки.Русский Тогда
		// Здесь используется проверка ТекущийЯзык() языка текущего пользователя,
		// чтобы разные пользователи могли использовать разные классификаторы.
		// Так как дополнительный макет есть только на английском, то не имеет смысла проверять язык локализации пользователя
		// функцией ТекущийКодЛокализации().
		Возврат Обработки["уатЛокализация"].ПолучитьМакет("Справочник_ПроизводственныеКалендари");
	Иначе 
		МодульКалендарныеГрафики = ОбщегоНазначения.ОбщийМодуль("Обработки.ЗаполнениеКалендарныхГрафиков");
		Возврат МодульКалендарныеГрафики.ПолучитьМакет("ПроизводственныеКалендари");
	КонецЕсли;
	
КонецФункции // ПолучитьМакет_ПроизводственныеКалендари()

// Процедура предназначена для подмены макета "КлассификаторЕдиницИзмерения".
// 
// Возвращаемое значение:
//   ТекстовыйДокумент - данные макета 
//
Функция ПолучитьМакет_КлассификаторЕдиницИзмерения() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Метаданные.Обработки.Найти("уатЛокализация") = Неопределено Тогда 
		ИспользуетсяЛокализация = Ложь;
	Иначе 
		ИспользуетсяЛокализация = Истина;
	КонецЕсли;
	
	Если ИспользуетсяЛокализация И НЕ Константы.уатКонфигурацияДляРФ.Получить() Тогда 
		Макет = Обработки["уатЛокализация"].ПолучитьМакет("Справочник_КлассификаторЕдиницИзмерения_КлассификаторЕдиницИзмерения");
		Возврат Макет;
	Иначе 
		Возврат Справочники.КлассификаторЕдиницИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	КонецЕсли;
	
КонецФункции // ПолучитьМакет_КлассификаторЕдиницИзмерения()

#КонецОбласти
