
#Область СлужебныйПрограммныйИнтерфейс


#Область ОбработчикиСобытийФормы

// Процедура вызывается из обработчика Форма.ПослеЗаписи
// Параметры:
//	Форма - форма документа
//
Процедура ПослеЗаписи(Форма) Экспорт
	
	Если НЕ Форма.Объект.ТребуетСогласования Тогда
		Возврат;
	КонецЕсли;
	
	СтатусСогласования = уатСогласованиеДокументовСервер.СтатусСогласования(Форма.Объект.Ссылка);
	Если НЕ Форма.Элементы.ТребуетСогласования.Доступность Тогда
		Если СтатусСогласования.Код = 0 Тогда 
			// если согласования нет вообще, то введем на основании новое
			уатСогласованиеДокументовСервер.СоздатьБизнесПроцессСогласования(Форма.Объект.Ссылка);
		Иначе
			ПоказатьЗначение(Неопределено, СтатусСогласования.Ссылка);
		КонецЕсли;
		
	ИначеЕсли Форма.Элементы.ТребуетСогласования.Доступность И СтатусСогласования.Код = 0 Тогда
		СоздатьОткрытьСогласование(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается из обработчика Форма.ОбработкаОповещения
// Параметры:
//	Форма - форма документа
//	ИмяСобытия - имя события оповещения (передается из обрабтчика формы)
//	Параметр - параметр оповещения (передается из обрабтчика формы)
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если (ИмяСобытия = "БизнесПроцессИзменен" ИЛИ ИмяСобытия = "ЗадачаИзменена")
		И уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Параметр, "Предмет") = Форма.Объект.Ссылка Тогда
		
		ОбновитьСтатусСогласования(Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

// Процедура вызывается из обработчиков изменения Организации.
// Вызов при изменении Подразделения не требуется, 
//  так как настройка "Требует согласования" устанавливается только по организации
// Параметры:
//	Форма - форма документа
//
Процедура ОрганизацияПодразделениеПриИзменении(Форма) Экспорт
	СтруктураОбъектовНастроек = Новый Структура("Организация", Форма.Объект.Организация);
	
	Форма.Объект.ТребуетСогласования = уатСогласованиеДокументовСервер.ДокументТребуетСогласования(
		Форма.ИмяДокументаСогласование, СтруктураОбъектовНастроек);
	
	ОбновитьСтатусСогласования(Форма);
КонецПроцедуры

// Процедура вызывается из обработчика флага ТребуетСогласования
// Параметры:
//	Форма - форма документа
//
Процедура ТребуетСогласованияПриИзменении(Форма) Экспорт
	
	ТребуетСогласования = Форма.Объект.ТребуетСогласования;
	
	// запрет изменения флага для проведенного документа
	Если Форма.Объект.Проведен И ТребуетСогласования Тогда
		Форма.Объект.ТребуетСогласования = Ложь;	
		ТекстНСТР = НСтр("en='The document held! Cancel held and check again!';ru='Документ проведен! Отмените проведение и установите флаг повторно!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Модифицированность = Ложь;
	КонецЕсли;
	
	// запрет изменения флага, если запущен бизнес-процесс согласования
	Если НЕ ТребуетСогласования И уатСогласованиеДокументовСервер.СтатусСогласования(Форма.Объект.Ссылка).Код <> 0 Тогда
		Форма.Объект.ТребуетСогласования = Истина;
		ТекстНСТР = НСтр("en='It is not allowed to cancel started approval!';ru='Запрещено отменять стартованное согласование!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		Форма.Модифицированность = Ложь;
	КонецЕсли;
	
	ОбновитьСтатусСогласования(Форма);
	
КонецПроцедуры

// Процедура вызывается из обработчика нажатия на гиперссылку НадписьСогласован
// Параметры:
//	Форма - форма документа
//
Процедура НадписьСогласованНажатие(Форма) Экспорт
	
	Отказ = Ложь;
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(Форма, Форма.Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьОткрытьСогласование(Форма);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Процедура выполняет обновление текста и цвета надписи статуса согласования
// Параметры:
//	Форма - форма документа
//
Процедура ОбновитьСтатусСогласования(Форма) Экспорт
	
	Если Форма.Объект.ТребуетСогласования Тогда
		Форма.Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Форма.Элементы.ГруппаНадписьСогласованНадпись;
		Если Форма.Объект.Ссылка.Пустая() Тогда
			Форма.Элементы.НадписьСогласован.Заголовок = НСтр("en='Not agreed';ru='Не согласован'");
			Форма.Элементы.НадписьСогласован.Гиперссылка = Истина;
		Иначе
			СтатусСогласования = уатСогласованиеДокументовСервер.СтатусСогласования(Форма.Объект.Ссылка);
			Форма.Элементы.НадписьСогласован.Заголовок = СтатусСогласования.Статус;
			Форма.Элементы.НадписьСогласован.Гиперссылка = Истина;
			//Форма.Элементы.ТребуетСогласования.Доступность = (Форма.СтатусСогласования.Код = 0);
		КонецЕсли;
		Если Форма.Элементы.НадписьСогласован.Заголовок = НСтр("en='Agreed';ru='Согласован'") Тогда
			Форма.Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Зеленый;
		Иначе
			Форма.Элементы.НадписьСогласован.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
	Иначе
		Форма.Элементы.ГруппаНадписьСогласован.ТекущаяСтраница = Форма.Элементы.ГруппаНадписьСогласованПустая;
	КонецЕсли;
	
КонецПроцедуры

// Процедура открывает существующее или новое согласование, если оно еще не создано
// Параметры:
//	Форма - форма документа
//
Процедура СоздатьОткрытьСогласование(Форма) Экспорт
	
	СтатусСогласования = уатСогласованиеДокументовСервер.СтатусСогласования(Форма.Объект.Ссылка);
	Если СтатусСогласования.Код = 0 Тогда 
		// Если согласования нет вообще, то введем на основании новое
		Если уатОбщегоНазначения.ПроверкаВнешнегоПользователя() Тогда
			// Внешнему пользователю запрещено изменять список согласующих, создаем бизнес-процесс сразу
			уатСогласованиеДокументовСервер.СоздатьБизнесПроцессСогласования(Форма.Объект.Ссылка);
		Иначе
			ПараметрыОткрытия = Новый Структура("Основание", Форма.Объект.Ссылка);
			ОткрытьФорму("БизнесПроцесс.уатСогласование.ФормаОбъекта", ПараметрыОткрытия);
		КонецЕсли;
	Иначе 
		// если согласование есть, то просто откроем его форму
		ПоказатьЗначение(,СтатусСогласования.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти
