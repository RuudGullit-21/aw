
#Область ПрограммныйИнтерфейс

// Возвращает список доступных для отбора показателей координат.
// 
// Возвращаемое значение:
//  Структура - Структура из типов показателей координат (ПеречислениеСсылка.ItobПоказательКоординат).
//
Функция ДоступныеПоказателиКоординат() Экспорт
	
	Возврат ItobДинамическиеОтборыПовтИсп.ДоступныеПоказателиКоординат();
	
КонецФункции
 
// Функция - Проверить условие динамического отбора
// Проверяет, выполняется ли условие динамического отбора (заданное в ТЧ "УсловияОтбора",
//  см., например, справочник "ItobВидыГруппировок".
//
// Параметры:
//  СтрокиДинамическогоОтбора	 - 	Массив - Строки динамического отбора
//  ИсточникЗначения			 - 	 Произвольный - Структура (или аналогичный структуре тип, например,
//  		менеджер записи регистра сведений).
//  		Структура должна содержать значения всех полей, заданных в ДоступныеПоказателиКоординат(),
//  		которые будут сравниваться со значениями из условий отбора. 
//  ДатчикиТерминала			 - 	 ТаблицаЗначений, Неопределено - Таблица значений с колонками "НазначениеДатчика",
//  									"КодДатчикаСтрокой" 
//  ЗначенияДатчиков			 - 	 Соответствие - Соответствие кода датчика терминала
//  					и его значения (для проверки условия по значению датчика). 
// 
// Возвращаемое значение:
//   - Булево - Истина, если условие выполняется.
//
Функция ПроверитьУсловиеДинамическогоОтбора(СтрокиДинамическогоОтбора, ИсточникЗначения, ДатчикиТерминала, ЗначенияДатчиков) Экспорт
	
	Если СтрокиДинамическогоОтбора.Количество() = 0
		 ИЛИ СтрокиДинамическогоОтбора[0].ТЧУсловийОтбораПустая Тогда
		 
		Возврат Истина;   // Если у ТЧ нет строк, считаем, что условие отбора выполняется.
	КонецЕсли; 
	
	ДоступныеПоказателиКоординат = ДоступныеПоказателиКоординат();
	
	Для каждого стрУсловияОтбораЭлемента Из СтрокиДинамическогоОтбора Цикл					
		Если НЕ ПроверитьУсловиеДинамическогоОтбораДляСтроки(стрУсловияОтбораЭлемента, 
															 ИсточникЗначения, 
															 ДатчикиТерминала,  
															 ЗначенияДатчиков,
															 ДоступныеПоказателиКоординат) Тогда 
												
			Возврат Ложь;	// При невыполнении хотя бы одного условия проверка не пройдена.		
		КонецЕсли; 
	КонецЦикла;
	
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьУсловиеДинамическогоОтбораДляСтроки(СтрокаУсловия, ИсточникЗначения, ДатчикиТерминала, ЗначенияДатчиков, ДоступныеПоказателиКоординат)
	
	РезультатВыполненияУсловия = Ложь;
	
	ЗначениеПоказателя = Неопределено;		
	Если ТипЗнч(СтрокаУсловия.Показатель) = Тип("ПеречислениеСсылка.ItobПоказательКоординат") Тогда
		// Проверяем по параметру показателю координат.
		Если СтрокаУсловия.Показатель = ДоступныеПоказателиКоординат.Скорость Тогда
			ЗначениеПоказателя = ИсточникЗначения.Скорость;
		ИначеЕсли СтрокаУсловия.Показатель = ДоступныеПоказателиКоординат.Направление Тогда
			ЗначениеПоказателя = ИсточникЗначения.Направление;
		ИначеЕсли СтрокаУсловия.Показатель = ДоступныеПоказателиКоординат.ПревышениеСкоростиОтносительноПДД Тогда 	
			Если НЕ ЗначениеЗаполнено(ИсточникЗначения.РазрешеннаяСкоростьПоПДД)
				 ИЛИ НЕ ЗначениеЗаполнено(ИсточникЗначения.Скорость) Тогда
				 
				Возврат Ложь;	
			КонецЕсли;
			
			ЗначениеПоказателя = ИсточникЗначения.Скорость - ИсточникЗначения.РазрешеннаяСкоростьПоПДД; 	
		КонецЕсли; 
	ИначеЕсли ТипЗнч(СтрокаУсловия.Показатель) = Тип("СправочникСсылка.ItobНазначенияДатчиков") Тогда
		// Проверяем по значению датчика.
		// Получаем датчик, такой же как в условии.
		Если ДатчикиТерминала = Неопределено Тогда
			Возврат РезультатВыполненияУсловия;
		КонецЕсли; 
		
		НайденныйДатчик = ДатчикиТерминала.Найти(СтрокаУсловия.Показатель, "Назначение");
		Если НЕ НайденныйДатчик = Неопределено
			 И ЗначениеЗаполнено(НайденныйДатчик.КодДатчикаСтрокой) Тогда
			 
			ЗначениеПоказателя = ЗначенияДатчиков[НайденныйДатчик.КодДатчикаСтрокой];
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеПоказателя = Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаУсловия.ВидСравнения) Тогда
		РезультатВыполненияУсловия = Ложь;
	Иначе
		// Проверяем условие.
		Если СтрокаУсловия.ВидСравнения = Перечисления.ItobВидыСравнения.НеРавно Тогда
			РезультатВыполненияУсловия = НЕ Вычислить("ЗначениеПоказателя = СтрокаУсловия.Значение");				
		Иначе				
			РезультатВыполненияУсловия = Вычислить("ЗначениеПоказателя " + СтрокаУсловия.ВидСравнения + " СтрокаУсловия.Значение");				
		КонецЕсли;
	КонецЕсли; 
	
	
	Возврат РезультатВыполненияУсловия;
	
КонецФункции

#КонецОбласти 