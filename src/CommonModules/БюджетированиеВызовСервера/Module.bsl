
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает типы значений аналитики
//
// Параметры
//  АналитикаСтатейБюджетов - ПланВидовХарактеристикСсылка.АналитикиСтатейБюджетов 
//  
// Возвращаемое значение
//  ДоступныеТипы - Соответствие
//         Ключ - Тип -  Тип значения аналитики
//         Значение - Полное имя объекта метаданных
//        
Функция ДоступныеТипыАналитикиСтатейБюджетов(АналитикаСтатейБюджетов) Экспорт
	
	Возврат ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ДоступныеТипыАналитикиСтатейБюджетов(АналитикаСтатейБюджетов);
	
КонецФункции

// Возвращает параметры расшифровки и основное действие для "особой" расшифровки отчета
//
// Параметры:
// 	Расшифровка - Число - Идентификатор расшифровки
// 	АдресДанныхРасшифровки - Строка - Адрес временного хранилища с данными расшифровки
//
// Возвращаемое значение
// 	ДанныеРасшифровкиОтчета - Структура содержащая параметры расшифровки и основное действие
//
Функция ДанныеРасшифровкиОтчета(Расшифровка, АдресДанныхРасшифровки) Экспорт
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	ЭлементРасшифровки = ДанныеРасшифровки.Элементы[Расшифровка];
	ОсновноеДействие = ЭлементРасшифровки.ОсновноеДействие;
	
	ПоляРасшифровки = Новый Структура;
	Для каждого ЗначениеПоля Из ЭлементРасшифровки.ПолучитьПоля() Цикл
		ПоляРасшифровки.Вставить(ЗначениеПоля.Поле, ЗначениеПоля.Значение);
	КонецЦикла;
	
	ПоляРасшифровкиРодителей = Новый Структура;
	Для каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ЗаполнитьПоляРодительскихЭлементовРасшифровки(Родитель, ПоляРасшифровкиРодителей);
	КонецЦикла;
	
	ПараметрыДанных = Новый Структура;
	Для каждого Параметр Из ДанныеРасшифровки.Настройки.ПараметрыДанных.Элементы Цикл
		Если Не Параметр.Использование Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыДанных.Вставить(Параметр.Параметр, Параметр.Значение);
	КонецЦикла; 
	
	Отбор = Новый Структура;
	Для каждого ЭлементОтбора Из ДанныеРасшифровки.Настройки.Отбор.Элементы Цикл
		Если Не ЭлементОтбора.Использование Или ЭлементОтбора.ВидСравнения <> ВидСравненияКомпоновкиДанных.Равно Тогда
			Продолжить;
		КонецЕсли;
		Поле = Строка(ЭлементОтбора.ЛевоеЗначение);
		Отбор.Вставить(Поле, ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;
	
	ДанныеРасшифровкиОтчета = Новый Структура;
	ДанныеРасшифровкиОтчета.Вставить("ПоляРасшифровки", ПоляРасшифровки);
	ДанныеРасшифровкиОтчета.Вставить("ПоляРасшифровкиРодители", ПоляРасшифровкиРодителей);
	ДанныеРасшифровкиОтчета.Вставить("ПараметрыДанных", ПараметрыДанных);
	ДанныеРасшифровкиОтчета.Вставить("Отбор", Отбор);
	ДанныеРасшифровкиОтчета.Вставить("ОсновноеДействие", ОсновноеДействие);
	
	Возврат ДанныеРасшифровкиОтчета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоляРодительскихЭлементовРасшифровки(ЭлементРасшифровки, ПоляРасшифровкиРодителей)
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого ЗначениеПоля Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			ПоляРасшифровкиРодителей.Вставить(ЗначениеПоля.Поле, ЗначениеПоля.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Для каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ЗаполнитьПоляРодительскихЭлементовРасшифровки(Родитель, ПоляРасшифровкиРодителей);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти