////////////////////////////////////////////////////////////////////////////////
// Оперативный мониторинг (клиент, сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает представление времени.
//
// Параметры:
//  ВремяСек			 - Число - Секунды.
//  ПоказыватьСекунды	 - Булево	 - Отображать секунды в представлении.
// 
// Возвращаемое значение:
//  Строка - Представление времени.
//
Функция ПредставлениеВремени(Знач ВремяСек, ПоказыватьСекунды = Истина) Экспорт
	
	Сек = ВремяСек % 60;
	ВремяСек = (ВремяСек - Сек)/60;
	
	Мин = ВремяСек % 60;
	ВремяСек = (ВремяСек - Мин)/60;
	
	Час = ВремяСек % 24;
	ВремяСек = (ВремяСек - Час)/24;
	
	Сут = ВремяСек;
	
	Результат = Новый Массив();
	
	Если Сут <> 0 Тогда
		Результат.Добавить("" + Сут + " сут");
	КонецЕсли;
	Если Час <> 0 Тогда
		Результат.Добавить("" + Час + " ч");
	КонецЕсли;
	Если Мин <> 0 Тогда
		Результат.Добавить("" + Мин + " мин");
	КонецЕсли;
	Если Сек <> 0 И ПоказыватьСекунды Тогда
		Результат.Добавить("" + Сек + " сек");
	КонецЕсли;
	
	Возврат СтрСоединить(Результат, " ");	

КонецФункции // ПредставлениеВремени()

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПроверитьДоступностьСервисаCsmSvc,
// на сервере см. ItobОперативныйМониторинг.ПроверитьДоступностьСервисаCsmSvc).
// Проверка доступности сервера CsmSvc.
//  При этом запрашивается тестовая страница по протоколу HTTP.
//
// Параметры:
//  АдресСервера - Строка				 - Адрес сервера в формате <IP>:<Порт>, или <DNS имя>:<Порт>.
//  ПортСервера	 - Число, Неопределено	 - Порт сервера.
// 
// Возвращаемое значение:
//  Булево - Истина если доступен, Ложь если не доступен.
//
Функция ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПроверитьДоступностьСервисаCsmSvc()

// Устарела.
// Необходимо выполнить перед началом работы системы.
//
// Параметры:
//  ДанныеОПодключении	 - Структура - Данные о подключении.
//  ЗапретВхода			 - Булево	 - Запрет входа.
//  ПричинаЗапрета		 - Строка	 - Причина запрета.
//
Процедура ПередНачаломРаботыСистемы(ДанныеОПодключении, ЗапретВхода, ПричинаЗапрета) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.УстановкаЧасовогоПоясаСеанса,
// на сервере см. ItobОперативныйМониторинг.УстановкаЧасовогоПоясаСеанса).
// Производит установку часового пояса текущего сеанса.
//
// Параметры:
//  МестныйЧасовойПояс	 - Строка	 - Идентификатор часового пояса.
//
Процедура УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс) Экспорт
	#Если НаКлиенте Тогда
		ItobОперативныйМониторингВызовСервера.УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс);
	#Иначе
		ItobОперативныйМониторинг.УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс);
	#КонецЕсли
КонецПроцедуры

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьАдресКарты,
// на сервере см. ItobОперативныйМониторинг.ПолучитьАдресКарты).
// Возвращает адрес карты.
//
// Параметры:
//  АтрибутыКарты	 - Строка	 - Атрибуты карты.
// 
// Возвращаемое значение:
//  Строка - Адрес карты.
//
Функция ПолучитьАдресКарты(АтрибутыКарты="") Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьАдресКарты(АтрибутыКарты);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьАдресКарты(АтрибутыКарты);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьАдресКарты()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ОпределитьАдресCsmSvc,
// на сервере см. ItobОперативныйМониторинг.ОпределитьАдресCsmSvc).
// Определить адрес CsmSvc.
//
// Параметры:
//  СтрокаСоединенияКлиента	 - Строка	 - Строка соединения клиента.
// 
// Возвращаемое значение:
//  Неопределено - Неопределено.
//
Функция ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента) Экспорт 
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента);
	#Иначе
		Результат = ItobОперативныйМониторинг.ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ОпределитьАдресCsmSvc()
	
// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьИнтервалыДвижения,
// на сервере см. ItobОперативныйМониторинг.ПолучитьИнтервалыДвижения).
// Формирует таблицу интервалов движения для заданного объекта мониторинга.
//
// Параметры:
//  Объект					 - СправочникаСсылка.ItobТранспортныеСредства	 - Ссылка на справочник "Транспортные средства".
//  НачДата					 - Дата											 - Период начала формирования интервалов.
//  КонДата					 - Дата											 - Период окончания формирования интервалов.
//  ГеокодироватьАдреса		 - Булево, Неопределено							 - Геокодировать адреса.
//  ВключатьДанныеДатчиков	 - Булево, Неопределено							 - Включать данные датчиков.
//  ПараметрыБулево			 - Структура, Неопределено						 - Параметры:
//  						* ИспользоватьДанныеРегистраИнтервалыДвижения - Булево - Использовать данные регистра интервалы движения.
//  						* ИспользоватьПоправочныйКоэффициент - Булево - Использовать поправочный коэффициент.
//  						* ВключатьДанныеТерминала - Булево - Включать данные терминала.
//  						* РассчитыватьДанныеВыработки - Булево - Рассчитывать данные выработки.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица интервалов.
//
Функция ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса=Ложь, ВключатьДанныеДатчиков=Неопределено, ПараметрыБулево = Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса, ВключатьДанныеДатчиков, ПараметрыБулево);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса, ВключатьДанныеДатчиков, ПараметрыБулево);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьИнтервалыДвижения()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПривестиКДатеВремениПоГринвичу,
// на сервере см. ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу).
// Приводит переданную дату к универсальному времени.
//  (Стандартная функция некорректно работает с летним временем).
//
// Параметры:
//  ДатаВремя	 - Дата	 - Исходная дата.
// 
// Возвращаемое значение:
//  Дата - Дата по Гринвичу.
//
Функция ПривестиКДатеВремениПоГринвичу(ДатаВремя) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПривестиКДатеВремениПоГринвичу(ДатаВремя);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ДатаВремя);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПривестиКДатеВремениПоГринвичу()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.СформироватьМаршрутОбъектаМониторинга,
// на сервере см. ItobОперативныйМониторинг.СформироватьМаршрутОбъектаМониторинга).
// Формирует таблицу маршрута для заданного объекта мониторинга.
//
// Параметры:
//  Объект					 - СправочникСсылка.упСотрудники, СправочникСсылка.упТранспортныеСредства	 - Объект мониторинга.
//  НачДата					 - Дата																		 - Период начала маршрута.
//  КонДата					 - Дата																		 - Период окончания маршрута.
//  ВключатьДанныеДатчиков	 - Булево, Неопределено														 - Включать данные датчиков.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Маршрут объекта мониторинга.
//
Функция СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков);
	#Иначе
		Результат = ItobОперативныйМониторинг.СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // СформироватьМаршрутОбъектаМониторинга()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьПараметрыСдвигаВремени,
// на сервере см. ItobОперативныйМониторинг.ПолучитьПараметрыСдвигаВремени).
// Возвращает параметры сдвига времени.
//
// Параметры:
//  УниверсальноеВремя	 - Дата, Неопределено	 - Текущая универсальная дата.
// 
// Возвращаемое значение:
//  Структура - Параметры сдвига времени.
//
Функция ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя = Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПараметрыСдвигаВремени()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьДанныеДатчикаОбъекта,
// на сервере см. ItobОперативныйМониторинг.ПолучитьДанныеДатчикаОбъекта).
// Возвращает данные датчика объекта мониторинга.
//
// Параметры:
//  Объект								 - СправочникСсылка.упСотрудники, СправочникСсылка.упТранспортныеСредства	 - Объект мониторинга.
//  НачДата								 - Дата																		 - Период начала данных по датчику.
//  КонДата								 - Дата																		 - Период окончания данных по датчику.
//  Датчик								 - СправочникСсылка.ItobДатчики												 - Ссылка на справочник "Датчики".
//  РасширитьГраницыКоличествоЗаписей	 - Число																	 - Расширяет границу количества записей.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные датчика.
//
Функция ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей=0) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьДанныеДатчикаОбъекта()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьПривязанныйТерминал,
// на сервере см. ItobОперативныйМониторинг.ПолучитьПривязанныйТерминал).
// Функция возвращает терминал, привязанный к переданному объекту.
//
// Параметры:
//  ТекущийОбъект	 - СправочникСсылка.упСотрудники, СправочникСсылка.упТранспортныеСредства	 - Объект мониторинга.
//  НаДату			 - Дата																		 - Учетная дата.
// 
// Возвращаемое значение:
//  СправочникСсылка.ItobТерминалы - Привязанный терминал.
//
Функция ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПривязанныйТерминал()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьПробегОбъекта,
// на сервере см. ItobОперативныйМониторинг.ПолучитьПробегОбъекта).
// Возвращает пробег объекта.
//
// Параметры:
//  ТекущийОбъект	 - СправочникСсылка.упСотрудники, СправочникСсылка.упТранспортныеСредства	 - Объект мониторинга.
//  НачДата			 - Дата																		 - Начала периода пробега.
//  КонДата			 - Дата																		 - Окончание периода пробега.
// 
// Возвращаемое значение:
//  Число - Пробег
//
Функция ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПробегОбъекта()

// Устарела. Следует использовать новую
// (на клиенте см. ItobОперативныйМониторингВызовСервера.ПолучитьАдресСервисаCsmSvcСервер,
// на сервере см. ItobОперативныйМониторинг.ПолучитьАдресСервисаCsmSvcСервер).
// Возвращает адрес сервиса CsmSvc.
// 
// Возвращаемое значение:
//  Строка - Адрес сервиса.
//
Функция ПолучитьАдресСервисаCsmSvcСервер() Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьАдресСервисаCsmSvcСервер();
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьАдресСервисаCsmSvcСервер();
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьАдресСервисаCsmSvcСервер()

#КонецОбласти 

#КонецОбласти 
