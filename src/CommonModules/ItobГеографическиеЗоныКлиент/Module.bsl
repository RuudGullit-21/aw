////////////////////////////////////////////////////////////////////////////////
// Географические зоны (клиент)
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОбработчикиОписанийОповещений
	
// Обрабатывает событие "ОООбработкаЗаписиГеографическойЗоны".
//
// Параметры:
//  Результат				 - СправочникСсылка.ItobГеографическиеЗоны	 - Указатель на географическую зону
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры.
//
Процедура ОООбработкаЗаписиГеографическойЗоны(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("СправочникСсылка."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ГеографическиеЗоны")) Тогда
		ItobГеографическиеЗоныВызовСервера.ЗаполнитьТочкиГеографическойЗоны(Результат, ДополнительныеПараметры.СтрНовыеКоординатыГеографическойЗоны);
		Элементы = ДополнительныеПараметры.ЭтотОбъект.Элементы;
		Если Элементы.ГеографическиеЗоныВсе.Пометка Тогда
		   ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ItobГеографическиеЗоныВызовСервера.ПолучитьТекстСкриптаГеографическиеЗоны());
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры 

// Обрабатывает событие "ООВыборГеографическойЗоныДляРедактирования".
//
// Параметры:
//  Результат				 - СправочникСсылка.ItobГеографическиеЗоны	 - Указатель на географическую зону
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры.
//
Процедура ООВыборГеографическойЗоныДляРедактирования(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат = Неопределено Тогда
		ДополнительныеПараметры.ЭтотОбъект.ВыбраннаяГеографическаяЗона 						= Результат;
		ДополнительныеПараметры.ЭтотОбъект.Элементы.ГеографическиеЗоныРедактировать.Пометка = Истина;
		Попытка	
			ТекстСкрипта = ItobГеографическиеЗоныВызовСервера.ПолучитьСкриптОтображенияГеографическойЗоныСервер(Результат, Истина);
			ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(ДополнительныеПараметры.ЭтотОбъект.Элементы.ПолеHTML, ТекстСкрипта);
		Исключение
			ItobОбщегоНазначенияВызовСервера.ЗаписьЖурналаРегистрацииОшибка(НСтр("ru = 'Активация строки географической зоны'", "ru"),ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		ДополнительныеПараметры.ЭтаФорма.Элементы.ГеографическиеЗоныСохранить.Доступность = Истина;
	КонецЕсли; 
КонецПроцедуры 

// Обрабатывает событие "ООВыборГеографическойЗоныДляПросмотра".
//
// Параметры:
//  Результат				 - СправочникСсылка.ItobГеографическиеЗоны	 - Указатель на географическую зону
//  ДополнительныеПараметры	 - Структура								 - Дополнительные параметры.
//
Процедура ООВыборГеографическойЗоныДляПросмотра(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат = Неопределено Тогда
		ДополнительныеПараметры.ЭтотОбъект.ВыбраннаяГеографическаяЗона = Результат;
		Попытка	
			МассивПараметров = Новый Массив();
			МассивПараметров.Добавить(Результат);
			ТекстСкрипта = ItobГеографическиеЗоныВызовСервера.ПолучитьТекстСкриптаГеографическиеЗоны(Новый Структура("Текст, Параметры","ItobГеографическиеЗоны.Ссылка=&Параметр0",МассивПараметров));
			ТекстСкрипта = ТекстСкрипта + "gPolygon = new OpenLayers.Geometry.Polygon([linearRing]); m_map.zoomToExtent(gPolygon.getBounds());";
			ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(ДополнительныеПараметры.ЭтотОбъект.Элементы.ПолеHTML, ТекстСкрипта);
		Исключение
			ItobОбщегоНазначенияВызовСервера.ЗаписьЖурналаРегистрацииОшибка(НСтр("ru = 'Активация строки географической зоны'", "ru"),ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли; 
КонецПроцедуры 


#КонецОбласти

// Создает географическую зону.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура СоздатьГеографическуюЗону(ЭтотОбъект) Экспорт
	Элементы = ЭтотОбъект.Элементы;
	
	Если Элементы.ГеографическиеЗоныСоздать.Пометка Тогда
		Элементы.ГеографическиеЗоныСоздать.Пометка = Ложь;
		ТекстСкрипта = "destroy_geozones_control();
		|var AllGeozonLayer = m_map.getLayersByName(""AllGeozonLayer"");
		|if (AllGeozonLayer.length > 0)
		|{ m_map.removeLayer(AllGeozonLayer[0]); }";
		
		ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
		
		Элементы.ГеографическиеЗоныСохранить.Доступность = Ложь;
	Иначе
		Элементы.ГеографическиеЗоныСоздать.Пометка = Истина;
		
		ТекстСкрипта = 
		"var pointList = [];
		|var pt = null;
		|destroy_geozones_control();
		|create_geozones_control();
		|geozones_control.handler.setPoints(pointList);";			
		
		ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
		
		Элементы.ГеографическиеЗоныСохранить.Доступность = Истина;
	КонецЕсли; 
КонецПроцедуры

// Сохраняет географическую зону.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура СохранитьГеографическуюЗону(ЭтотОбъект) Экспорт
	Элементы = ЭтотОбъект.Элементы;
	ВыбраннаяГеографическаяЗона = ЭтотОбъект.ВыбраннаяГеографическаяЗона;
	
	Элементы.ГеографическиеЗоныСохранить.Доступность = Ложь;
	
	// узнаем количество точек
	ТекстСкрипта ="document.form.result.value = geozones_control.handler.getPoints().length;";
	ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
	Если Элементы.ПолеHTML.Документ.form.result.value = "true" Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(Элементы.ПолеHTML.Документ.form.result.value, " ") Тогда
		ItobРаботаС_БСП_КлиентСервер.СообщитьПользователю(НСтр("ru = 'Не создано ни одной точки для записи географической зоны!'"));
	Иначе
		КоличествоТочек = Число(Элементы.ПолеHTML.Документ.form.result.value);
		
		СтрНовыеКоординатыГеографическойЗоны = "";
		Для Счетчик = 0 По КоличествоТочек-1 Цикл
			ТекстСкрипта =
				"var pt = geozones_control.handler.getPoints()["+Формат(Счетчик,"ЧН=0; ЧГ=0")+"];
				|pt.transform(m_map.getProjectionObject(), m_map.displayProjection);
				|document.form.result.value = pt.toShortString();";
			ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
			
			СтрокаКоординат = Элементы.ПолеHTML.Документ.form.result.value;
			СтрНовыеКоординатыГеографическойЗоны = 
			?(СтрНовыеКоординатыГеографическойЗоны="","",СтрНовыеКоординатыГеографическойЗоны+Символы.ПС)+СтрокаКоординат;		
			
		КонецЦикла;
		
		Если ВыбраннаяГеографическаяЗона.Пустая() Тогда
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("СтрНовыеКоординатыГеографическойЗоны", СтрНовыеКоординатыГеографическойЗоны);
			ДопПараметры.Вставить("ВыполнитьЗаполнитьТочкиНаСервере", Истина);
			ДопПараметры.Вставить("ЭтотОбъект", ЭтотОбъект);
			ОткрытьФорму("Справочник."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ГеографическиеЗоны")+".ФормаОбъекта",,,,,,Новый ОписаниеОповещения("ОООбработкаЗаписиГеографическойЗоны",ItobГеографическиеЗоныКлиент,ДопПараметры));
		Иначе
			ItobГеографическиеЗоныВызовСервера.ЗаполнитьТочкиГеографическойЗоны(ВыбраннаяГеографическаяЗона, СтрНовыеКоординатыГеографическойЗоны);
			Элементы.ГеографическиеЗоныРедактировать.Пометка = Ложь;
			ВыбраннаяГеографическаяЗона = Неопределено;
		КонецЕсли; 
		
		ТекстСкрипта = 
			"destroy_geozones_control();
			|var AllGeozonLayer = m_map.getLayersByName(""AllGeozonLayer"");
			|if (AllGeozonLayer.length > 0)
			|{ m_map.removeLayer(AllGeozonLayer[0]); }";
		
		ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
		Элементы.ГеографическиеЗоныСоздать.Пометка = Ложь;
	    Если Элементы.ГеографическиеЗоныВсе.Пометка Тогда
			ПоказатьВсеГеографическиеЗоны(Элементы.ПолеHTML);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Позволяет редактировать географическую зону.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура РедактироватьГеографическуюЗону(ЭтотОбъект) Экспорт
	Элементы = ЭтотОбъект.Элементы;
	ВыбраннаяГеографическаяЗона = ЭтотОбъект.ВыбраннаяГеографическаяЗона;
	
	Если НЕ ItobОбщегоНазначенияКлиент.КартаЗагружена(Элементы.ПолеHTML) Тогда
		Возврат;
	КонецЕсли;
		
	Если Элементы.ГеографическиеЗоныРедактировать.Пометка Тогда
		Элементы.ГеографическиеЗоныРедактировать.Пометка = Ложь;
		ТекстСкрипта = "destroy_geozones_control();
		|var AllGeozonLayer = m_map.getLayersByName(""AllGeozonLayer"");
		|if (AllGeozonLayer.length > 0)
		|{ m_map.removeLayer(AllGeozonLayer[0]); }";
		
		ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
		ВыбраннаяГеографическаяЗона = Неопределено;
		Элементы.ГеографическиеЗоныСохранить.Доступность = Ложь;
		
	Иначе
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ЭтотОбъект", ЭтотОбъект);
		ДопПараметры.Вставить("ЭтаФорма", ЭтотОбъект.ЭтаФорма);
		ОткрытьФорму("Справочник."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ГеографическиеЗоны")+".ФормаВыбора",,,,,, Новый ОписаниеОповещения("ООВыборГеографическойЗоныДляРедактирования", ItobГеографическиеЗоныКлиент, ДопПараметры), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
КонецПроцедуры

// Позволяет просмотреть географическую зону.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура ПросмотретьГеографическуюЗону(ЭтотОбъект) Экспорт
	Элементы = ЭтотОбъект.Элементы;
	ВыбраннаяГеографическаяЗона = ЭтотОбъект.ВыбраннаяГеографическаяЗона;
	
	Если НЕ ItobОбщегоНазначенияКлиент.КартаЗагружена(Элементы.ПолеHTML) Тогда
		Возврат;
	КонецЕсли;
		
	Если Элементы.ГеографическиеЗоныРедактировать.Пометка Тогда
		Элементы.ГеографическиеЗоныРедактировать.Пометка = Ложь;
		ТекстСкрипта = "destroy_geozones_control(); 
		|var AllGeozonLayer = m_map.getLayersByName(""AllGeozonLayer"");
		|if (AllGeozonLayer.length > 0)
		|{ m_map.removeLayer(AllGeozonLayer[0]); }";
		
		ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(Элементы.ПолеHTML, ТекстСкрипта);
		ВыбраннаяГеографическаяЗона = Неопределено;
		Элементы.ГеографическиеЗоныСохранить.Доступность = Ложь;
		
	Иначе
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ЭтотОбъект", ЭтотОбъект);
		ДопПараметры.Вставить("ЭтаФорма", ЭтотОбъект.ЭтаФорма);
		ОткрытьФорму("Справочник."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ГеографическиеЗоны")+".ФормаВыбора",,,,,, Новый ОписаниеОповещения("ООВыборГеографическойЗоныДляПросмотра", ItobГеографическиеЗоныКлиент, ДопПараметры), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
КонецПроцедуры

// Отображает все географические зоны на карте.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура ВсеГеографическиеЗоны(ЭтотОбъект) Экспорт
	
	Элементы = ЭтотОбъект.Элементы;
	ПоказатьВсеГеографическиеЗоны(Элементы.ПолеHTML);
	ItobОбщегоНазначенияКлиентСервер.ОбновитьПометкуЭлемента(ЭтотОбъект, 
															"ГеографическиеЗоныГруппаВсе", 
															"ГеографическиеЗоныГруппаПользовательские", 
															Элементы.ГеографическиеЗоныВсе);
	
КонецПроцедуры

// Отменяет отображение всех географических зон на карте.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//
Процедура СнятьВсеГеографическиеЗоны(ЭтотОбъект) Экспорт
	
	Элементы = ЭтотОбъект.Элементы;
	ОтменитьПоказВсехГеографическихЗон(Элементы.ПолеHTML);
	ItobОбщегоНазначенияКлиентСервер.ОбновитьПометкуЭлемента(ЭтотОбъект, 
															"ГеографическиеЗоныГруппаВсе", 
															"ГеографическиеЗоныГруппаПользовательские", 
															Элементы.ГеографическиеЗоныСнятьВсе);

	
КонецПроцедуры

// Позволяет редактировать настройки географических зон.
//
// Параметры:
//  Форма		 - УправляемаяФорма	 - Объект "Рабочее место диспетчера".
//  ИмяКоманды	 - Строка			 - Имя команды.
// 
// Возвращаемое значение:
//  Булево - Команда настроек обработана.
//
Функция Установить(Форма, ИмяКоманды) Экспорт
		
	Если ИмяКоманды = "ГеогафическиеЗоны_Настройки" Тогда
		ОбщийМодульФильтрыНаКартахКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ItobФильтрыНаКартахКлиент");
		ОбщийМодульФильтрыНаКартахКлиент.ОбработатьКомандуНастройки(ПредопределенноеЗначение("Перечисление.ItobВидыФильтровНаКартах.ГеографическиеЗоны"));
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
				
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПоказатьВсеГеографическиеЗоны(ПолеHTML)

	ТекстСкрипта = ItobГеографическиеЗоныВызовСервера.ПолучитьТекстСкриптаГеографическиеЗоны();		
 	ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(ПолеHTML, ТекстСкрипта);
	
КонецПроцедуры

Процедура ОтменитьПоказВсехГеографическихЗон(ПолеHTML)

	ТекстСкрипта = 
		"var find_lays = m_map.getLayersByName(""AllGeozonLayer"");
		|if (find_lays.length > 0) {
		|	vectorLayer = find_lays[0];
		|	vectorLayer.destroyFeatures();
		|	m_map.removeLayer(vectorLayer);
		|}";
		
	ItobОперативныйМониторингКлиент.ВыполнитьСкриптНаПолеHTML(ПолеHTML, ТекстСкрипта);

КонецПроцедуры

#КонецОбласти


 