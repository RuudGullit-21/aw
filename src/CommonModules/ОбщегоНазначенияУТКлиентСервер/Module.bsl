#Область СлужебныйПрограммныйИнтерфейс

// Рассчитывает дату окончания периода
//
// Параметры:
//  ДатаНачала			 - 	 - дата начала, от которой будет рассчитана дата окончания периода
//  Периодичность		 - 	 - значение перечисления "Периодичность"
//  КоличествоПериодов	 - 	 - количество повторов периода
// 
// Возвращаемое значение:
//  Дата - Дата окончания периода
//
Функция РассчитатьДатуОкончанияПериода(ДатаНачала, Периодичность, КоличествоПериодов) Экспорт

	ОдинДень = 86400;

	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда 
		
		ДатаОкончания = ДатаНачала + ОдинДень * КоличествоПериодов;

	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ДатаОкончания = ДатаНачала + ОдинДень * 7 * КоличествоПериодов;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда
		
		ДеньМесяца = День(ДатаНачала);
		НачМесяца = НачалоМесяца(ДатаНачала);
		Если ДеньМесяца <= 10 Тогда
			НомерДекады = 1;
		ИначеЕсли ДеньМесяца <= 20 Тогда
			НомерДекады = 2;
		Иначе
			НомерДекады = 3;
		КонецЕсли;
			
		НомерДекады = НомерДекады + КоличествоПериодов;
		
		Если НомерДекады > 0 Тогда
			Месяцев = Цел((НомерДекады-1)/3);
		Иначе
			Месяцев = -1 - Цел((-НомерДекады)/3);
		КонецЕсли;
			
		НомерДекады = НомерДекады - 3*Месяцев;
		Дт = ДобавитьМесяц(НачМесяца, Месяцев) + (НомерДекады-1) * 10 * ОдинДень;

		Если КоличествоПериодов > 0 Тогда
			ДатаОкончания = Дт;
		
		Иначе 
			ДеньМесяца = День(Дт);

			Если ДеньМесяца <= 10 Тогда
				ДатаОкончания = КонецДня(НачалоМесяца(Дт) + ОдинДень * 9);
			ИначеЕсли ДеньМесяца <= 20 Тогда
				ДатаОкончания = КонецДня(НачалоМесяца(Дт) + ОдинДень * 19);
			Иначе
				ДатаОкончания = КонецМесяца(Дт);
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда
		
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 3 * КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда
		
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 6 * КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда
		
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 12 * КоличествоПериодов);

	КонецЕсли;
			
	Возврат КонецДня(ДатаОкончания-ОдинДень);

КонецФункции // РассчитатьДатуОкончанияПериода()

// Рассчитывает ближайшую к указанной дату начала периода
//
// Параметры:
//  ДатаНачала		 - 	 - дата, к которой будет рассчитана ближайшая дата начала периода
//  Периодичность	 - 	 - значение перечисления "Периодичность"
// 
// Возвращаемое значение:
//  Дата - Дата начала ближайшего периода
//
Функция РассчитатьДатуНачалаБлижайшегоПериода(ДатаНачала, Периодичность) Экспорт
	
	ОдинДень = 86400;
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		
		БлижайшаяДата = ДатаНачала;
		
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		Если ДатаНачала = НачалоНедели(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецНедели(ДатаНачала) + ОдинДень;
		КонецЕсли;
		
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда
		
		ДеньМесяца   = День(ДатаНачала);
		НачалоМесяца = НачалоМесяца(ДатаНачала);
		
		Если ДеньМесяца = 1 Или ДеньМесяца = 11 Или ДеньМесяца = 21 Тогда
			БлижайшаяДата = ДатаНачала;
		ИначеЕсли ДеньМесяца <= 10 Тогда // Первая декада
			БлижайшаяДата = НачалоМесяца + ОдинДень * 10;
		ИначеЕсли ДеньМесяца <= 20 Тогда // Вторая декада
			БлижайшаяДата = НачалоМесяца + ОдинДень * 20;
		Иначе // Третья декада
			БлижайшаяДата = КонецМесяца(НачалоМесяца) + ОдинДень;
		КонецЕсли;
		
	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		Если ДатаНачала = НачалоМесяца(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецМесяца(ДатаНачала) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда
		
		Если ДатаНачала = НачалоКвартала(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецКвартала(ДатаНачала) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда
		
		НачалоГода      = НачалоГода(ДатаНачала);
		НачалоПолугодия = ДобавитьМесяц(НачалоГода,6);
		
		Если ДатаНачала = НачалоПолугодия Или ДатаНачала = НачалоГода Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = ?(ДатаНачала > НачалоПолугодия, КонецГода(ДатаНачала) + ОдинДень, НачалоПолугодия);
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда
		
		Если ДатаНачала = НачалоГода(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецГода(ДатаНачала) + ОдинДень;
		КонецЕсли;

	КонецЕсли;
	
	Возврат БлижайшаяДата;
	
КонецФункции // РассчитатьДатуНачалаБлижайшегоПериода()

#Область ВспомогательныеПроцедурыРаботыСОтчетами

// Устанавливает значение свойства элемента формы, если находит элемент на форме
//
// Параметры:
//  ЭлементыФормы				 - ВсеЭлементыФормы	 - элементы формы, среди которых содержится искомый элемент.
//  ИмяЭлемента					 - Строка			 - имя искомого элемента.
//  ИмяСвойства					 - Строка			 - имя свойства, для которого будет устанавливаться значение.
//  Значение					 - Произвольный		 - значение, которое будет установлено
//  УстанавливатьДляПодчиненных	 - Булево			 - установить аналогичное свойство для подчиненных элементов искомого элемента
//
Процедура УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение, УстанавливатьДляПодчиненных = Ложь) Экспорт
	
	Элемент = ЭлементыФормы.Найти(ИмяЭлемента);
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НРег(ИмяСвойства) = "толькопросмотр"
		И ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
			
		ИмяСвойстваЭлемента = "Доступность";
		ЗначениеСвойства    = НЕ Значение;
	Иначе
		ИмяСвойстваЭлемента = ИмяСвойства;
		ЗначениеСвойства    = Значение;
	КонецЕсли;
	
	Если Элемент[ИмяСвойстваЭлемента] <> ЗначениеСвойства Тогда
		Элемент[ИмяСвойстваЭлемента] = ЗначениеСвойства;
	КонецЕсли;
	
	ТипыЭлементовФормыСПодчиненнымиЭлементами = Новый ОписаниеТипов("УправляемаяФорма, ГруппаФормы, ТаблицаФормы");
	
	Если УстанавливатьДляПодчиненных И ТипыЭлементовФормыСПодчиненнымиЭлементами.СодержитТип(ТипЗнч(Элемент)) Тогда
		Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
			УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ПодчиненныйЭлемент.Имя, ИмяСвойства, Значение, Истина);
		КонецЦикла;
 	КонецЕсли;
 	
КонецПроцедуры // УстановитьСвойствоЭлементаФорма()

#КонецОбласти

#Область ВыборПериодаИзСписка

Функция НачалоПериодаОтчета(ВидПериода, ДатаПериода) Экспорт
	
	НачалоПериода = ДатаПериода;
	
	Если ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Год") Тогда
		НачалоПериода = НачалоГода(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Полугодие") Тогда
		Если Месяц(ДатаПериода) > 6 Тогда
			НачалоПериода = Дата(Год(ДатаПериода), 7, 1);
		Иначе
			НачалоПериода = Дата(Год(ДатаПериода), 1, 1);
		КонецЕсли;
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал") Тогда
		НачалоПериода = НачалоКвартала(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц") Тогда
		НачалоПериода = НачалоМесяца(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Декада") Тогда
		Если День(ДатаПериода) <= 10 Тогда
			НачалоПериода = Дата(Год(ДатаПериода), Месяц(ДатаПериода), 1);
		ИначеЕсли День(ДатаПериода) > 10 И День(ДатаПериода) <= 20 Тогда
			НачалоПериода = Дата(Год(ДатаПериода), Месяц(ДатаПериода), 11);
		Иначе
			НачалоПериода = Дата(Год(ДатаПериода), Месяц(ДатаПериода), 21);
		КонецЕсли;
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Неделя") Тогда
		НачалоПериода = НачалоНедели(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.День") Тогда
		НачалоПериода = НачалоДня(ДатаПериода);
		
	КонецЕсли;
		
	Возврат НачалоПериода;
	
КонецФункции
 
Функция КонецПериодаОтчета(ВидПериода, ДатаПериода) Экспорт
	
	КонецПериода = ДатаПериода;
	
	Если ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Год") Тогда
		КонецПериода = КонецГода(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Полугодие") Тогда
		Если Месяц(ДатаПериода) > 6 Тогда
			КонецПериода = КонецГода(ДатаПериода);
		Иначе
			КонецПериода = КонецДня(Дата(Год(ДатаПериода), 6, 30));
		КонецЕсли;
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал") Тогда
		КонецПериода = КонецКвартала(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц") Тогда
		КонецПериода = КонецМесяца(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Декада") Тогда
		Если День(ДатаПериода) <= 10 Тогда
			КонецПериода = КонецДня(Дата(Год(ДатаПериода), Месяц(ДатаПериода), 10));
		ИначеЕсли День(ДатаПериода) > 10 И День(ДатаПериода) <= 20 Тогда
			КонецПериода = КонецДня(Дата(Год(ДатаПериода), Месяц(ДатаПериода), 20));
		Иначе
			КонецПериода = КонецМесяца(ДатаПериода);
		КонецЕсли;
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Неделя") Тогда
		КонецПериода = КонецНедели(ДатаПериода);
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.День") Тогда
		КонецПериода = КонецДня(ДатаПериода);
		
	КонецЕсли;
		
	Возврат КонецПериода;
	
КонецФункции

Функция ПолучитьСписокПериодов(Знач НачалоПериода, Знач ВидПериода) Экспорт
	
	СписокПериодов = Новый СписокЗначений;
	Если НачалоПериода = '00010101' Тогда
		Возврат Новый СписокЗначений;
	Иначе
		ЗначениеНачалоПериода = НачалоПериода;
	КонецЕсли;
	
	Если ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Год") Тогда
		ТекущийГод = Год(ЗначениеНачалоПериода);
		СписокПериодов.Добавить(Дата(ТекущийГод - 7, 1, 1), НСтр("en='Previous years';ru='Предыдущие года'"));
		Для Сч = ТекущийГод - 3 По ТекущийГод + 3 Цикл
			СписокПериодов.Добавить(Дата(Сч, 1, 1), Формат(Сч, "ЧГ=0"));
		КонецЦикла;
		СписокПериодов.Добавить(Дата(ТекущийГод + 7, 1, 1), НСтр("en='Next years';ru='Последующие года'"));
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Полугодие") Тогда
		ТекущийГод = Год(ЗначениеНачалоПериода);
		СписокПериодов.Добавить(Дата(ТекущийГод - 2, 1, 1), Формат(ТекущийГод - 2, "ЧГ=0") + "...");
		Для Сч = ТекущийГод - 1 По ТекущийГод + 1 Цикл
			СписокПериодов.Добавить(Дата(Сч, 1, 1), НСтр("en='I half a year';ru='I полугодие'") + " " + Формат(Сч, "ЧГ=0"));
			СписокПериодов.Добавить(Дата(Сч, 7, 1), НСтр("en='II half year';ru='II полугодие'") + " " + Формат(Сч, "ЧГ=0"));
		КонецЦикла;
		СписокПериодов.Добавить(Дата(ТекущийГод + 2, 1, 1), Формат(ТекущийГод + 2, "ЧГ=0") + "...");
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал") Тогда
		ТекущийГод = Год(ЗначениеНачалоПериода);
		СписокПериодов.Добавить(Дата(ТекущийГод - 2, 1, 1), Формат(ТекущийГод - 2, "ЧГ=0") + "...");
		Для Сч = ТекущийГод - 1 По ТекущийГод Цикл
			СписокПериодов.Добавить(Дата(Сч, 1, 1), НСтр("en='I quarter';ru='I квартал'") + " " + Формат(Сч, "ЧГ=0"));
			СписокПериодов.Добавить(Дата(Сч, 4, 1), НСтр("en='II quarter';ru='II квартал'") + " " + Формат(Сч, "ЧГ=0"));
			СписокПериодов.Добавить(Дата(Сч, 7, 1), НСтр("en='III quarter';ru='III квартал'") + " " + Формат(Сч, "ЧГ=0"));
			СписокПериодов.Добавить(Дата(Сч, 10, 1), НСтр("en='IV quarter';ru='IV квартал'") + " " + Формат(Сч, "ЧГ=0"));
		КонецЦикла;
		СписокПериодов.Добавить(Дата(ТекущийГод + 1, 1, 1), Формат(ТекущийГод + 1, "ЧГ=0") + "...");
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц") Тогда
		ТекущийГод = Год(ЗначениеНачалоПериода);
		СписокПериодов.Добавить(Дата(ТекущийГод - 1, 1, 1), Формат(ТекущийГод - 1, "ЧГ=0") + "...");
		Для Сч = 1 По 12 Цикл
			СписокПериодов.Добавить(Дата(ТекущийГод, Сч, 1), Формат(Дата(ТекущийГод, Сч, 1), "ДФ='MMMM yyyy'"));
		КонецЦикла;
		СписокПериодов.Добавить(Дата(ТекущийГод + 1, 1, 1), Формат(ТекущийГод + 1, "ЧГ=0") + "...");
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Декада") Тогда
		ТекущийГод   = Год(ЗначениеНачалоПериода);
		ТекущийМесяц = Месяц(ЗначениеНачалоПериода);
		
		СчМесяц = ?(ТекущийМесяц - 4 < 1, 12 + ТекущийМесяц - 4, ТекущийМесяц - 4);
		СчГод   = ?(ТекущийМесяц - 4 < 1, ТекущийГод - 1       , ТекущийГод);
		Сч = 6;
		
		Период = Дата(?(СчМесяц <> 1, СчГод, СчГод - 1), ?(СчМесяц > 1, СчМесяц - 1, 12), 1);
		СписокПериодов.Добавить(Период, Формат(Период, "ДФ='MMMM yyyy'") + "...");
		Пока Сч >0 Цикл
			СписокПериодов.Добавить(Дата(СчГод, СчМесяц, 1),  НСтр("en='I Dec.';ru='I дек.'") + " " + Нрег(Формат(Дата(СчГод, СчМесяц, 1), "ДФ='MMMM yyyy'")));
			СписокПериодов.Добавить(Дата(СчГод, СчМесяц, 11), НСтр("en='II Dec.';ru='II дек.'") + " " + Нрег(Формат(Дата(СчГод, СчМесяц, 1), "ДФ='MMMM yyyy'")));
			СписокПериодов.Добавить(Дата(СчГод, СчМесяц, 21), НСтр("en='III Dec.';ru='III дек.'") + " " + Нрег(Формат(Дата(СчГод, СчМесяц, 1), "ДФ='MMMM yyyy'")));
			СчМесяц = СчМесяц + 1;
			Если СчМесяц > 12 Тогда
				СчГод = СчГод + 1;
				СчМесяц = 1;
			КонецЕсли;
			Сч = Сч - 1;
		КонецЦикла;
		СписокПериодов.Добавить(Дата(СчГод, СчМесяц, 1), Формат(Дата(СчГод, СчМесяц, 1), "ДФ='MMMM yyyy'") + "...");
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Неделя") Тогда
		НачалоНедели = НачалоНедели(ЗначениеНачалоПериода) - 21 * 86400;
		
		СписокПериодов.Добавить(НачалоНедели - 7 * 86400, НСтр("en='Prev. weeks ...';ru='Пред. недели ...'"));
		Для Сч = 0 По 6 Цикл
			НачНедели = НачалоНедели + 7 * Сч * 86400;  
			КонНедели = КонецНедели(НачНедели);
			СписокПериодов.Добавить(НачНедели, Формат(НачНедели, "ДФ=dd.MM") + " - " + Формат(КонНедели, "ДФ=dd.MM"));
		КонецЦикла;
		СписокПериодов.Добавить(НачалоНедели + 7 * 86400, НСтр("en='Next. weeks ...';ru='След. недели ...'") );
		
	ИначеЕсли ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.День") Тогда
		КонецНедели   = КонецНедели(ЗначениеНачалоПериода);
		ДатаДняНедели = НачалоНедели(ЗначениеНачалоПериода);
		
		СписокПериодов.Добавить(ДатаДняНедели - 86400, НСтр("en='Previous week';ru='Предыдущая неделя'"));
		
		Пока ДатаДняНедели < КонецНедели Цикл
			ДеньНед = ДеньНедели(ДатаДняНедели);
			
			СписокПериодов.Добавить(ДатаДняНедели, Формат(ДатаДняНедели, "ДФ='dd MMMM yyyy (ddd)'"));
			
			ДатаДняНедели = ДатаДняНедели + 86400;
		КонецЦикла;
		
		СписокПериодов.Добавить(КонецНедели + 1, НСтр("en='Next week';ru='Следующая неделя'"));
	КонецЕсли;
	
	Возврат СписокПериодов;
	
КонецФункции

#КонецОбласти

#КонецОбласти