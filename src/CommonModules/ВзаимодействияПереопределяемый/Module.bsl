///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается для получения контактов (участников) по указанному предмету взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  ИмяТаблицыКонтактов   - Строка - имя таблицы предмета взаимодействий, в котором требуется выполнить поиск.
//                                   Например, "Документы.ЗаказПокупателя".
//  ТекстЗапросаДляПоиска - Строка - в этот параметр указать фрагмент запроса для поиска. При выполнении запроса 
//                                   в параметр запроса &Предмет подставляется ссылка на предмет взаимодействия.
//
Процедура ПриПоискеКонтактов(Знач ИмяТаблицыКонтактов, ТекстЗапросаДляПоиска) Экспорт
	
	// {УАТ}
	Если ИмяТаблицыКонтактов = Метаданные.Документы.уатЗаказГрузоотправителя.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.уатЗаказГрузоотправителя.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	// {/УАТ}
	
КонецПроцедуры	

// Позволяет переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть, например, при массовых рассылках, когда имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо - ДокументСсылка.ЭлектронноеПисьмоВходящее
//         - ДокументСсылка.ЭлектронноеПисьмоИсходящее - электронное письмо, 
//           для которого необходимо получить вложения.
//  ПрисоединенныеФайлы - Структура - задать сведения о файлах, присоединенных к письму:
//    * ВладелецФайлов                     - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//    * ИмяСправочникаПрисоединенныхФайлов - Строка - имя объекта метаданных присоединенных файлов.
//
Процедура ПриПолученииПрисоединенныхФайлов(Письмо, ПрисоединенныеФайлы) Экспорт

	// {УАТ}
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() И (ТипЗнч(Письмо) = Тип("ДокументСсылка.уатРассылкаЭлектронныхПисем_уэ") Или ТипЗнч(Письмо) = Тип("ДокументОбъект.уатРассылкаЭлектронныхПисем_уэ")) Тогда 
		ПрисоединенныеФайлы = Новый Структура(
			"ВладелецФайлов, ИмяСправочникаПрисоединенныхФайлов",
			Письмо,
			"уатРассылкаЭлектронныхПисем_уэПрисоединенныеФайлы"
		);
	КонецЕсли;
	// {/УАТ}
	
КонецПроцедуры

// Вызывается для настройки логики ограничения доступа к взаимодействиям.
// Пример заполнения наборов значений доступа см. в комментарии
// к процедуре УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
//
// Параметры:
//  Объект - ДокументОбъект.Встреча
//         - ДокументОбъект.ЗапланированноеВзаимодействие
//         - ДокументОбъект.СообщениеSMS
//         - ДокументОбъект.ТелефонныйЗвонок
//         - ДокументОбъект.ЭлектронноеПисьмоВходящее
//         - ДокументОбъект.ЭлектронноеПисьмоИсходящее - объект, для которого нужно заполнить наборы.
//  Таблица - см. УправлениеДоступом.ТаблицаНаборыЗначенийДоступа
//
Процедура ПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица) Экспорт
	
	// {УАТ}
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.Встреча") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗапланированноеВзаимодействие") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СообщениеSMS") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица);
	КонецЕсли;
	// {/УАТ}
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПоискеКонтактов.
// Возвращает текст запроса, отбирающего контакты (участников) предмета взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  УдалитьПомещатьВоВременнуюТаблицу - Булево - всегда Ложь.
//  ИмяТаблицы                        - Строка - имя таблицы предмета взаимодействий, в котором будет выполнен поиск.
//  УдалитьОбъединить                 - Булево - всегда Истина.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоискКонтактовПоПредмету(УдалитьПомещатьВоВременнуюТаблицу, ИмяТаблицы, УдалитьОбъединить = Ложь) Экспорт
	
	Возврат "";
	
КонецФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПолученииПрисоединенныхФайлов.
// Возможность переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть например при массовых рассылках. В этом случае имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо  - ДокументСсылка
//          - ДокументОбъект - документ электронное письмо, для которого необходимо получить вложения.
//
// Возвращаемое значение:
//  Структура, Неопределено  - Неопределено, если присоединенные файлы хранятся при письме.
//                             Структура, если присоединенные файлы хранятся в другом объекте:
//                              * Владелец - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//                              * ИмяСправочникаПрисоединенныеФайлы - Строка - имя объекта метаданных присоединенных файлов.
//
Функция ДанныеОбъектаМетаданныхПрисоединенныхФайловПисьма(Письмо) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

// {УАТ}
#Область СлужебныеПроцедурыИФункции

Процедура ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 1;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;
	
	// Ограничение по "Ответственный".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 2;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 1;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;
	
	// Ограничение по "Ответственный".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 2;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 1;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;
	
	// Ограничение по "Ответственный".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 2;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = 1;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;
	
	// Ограничение по "Ответственный".
	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = 2;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Ответственный" или "Учетная запись".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 1;
	СтрокаТаб.ЗначениеДоступа = Объект.УчетнаяЗапись;
	
	// Ограничение по "Ответственный".
	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = 2;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен "Ответственный" или "Учетная запись" или "Автор".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = 1;
	СтрокаТаблицы.ЗначениеДоступа = Объект.УчетнаяЗапись;
	
	// Ограничение по "Автор".
	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = 2;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;
	
	// Ограничение по "Ответственный".
	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = 3;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;
	
КонецПроцедуры

#КонецОбласти
// {/УАТ}
