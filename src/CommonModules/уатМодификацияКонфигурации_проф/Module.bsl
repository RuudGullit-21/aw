
////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм, таких как:
// "ПриСозданииНаСервере".
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - форма, из обработчика события которой происходит вызов процедуры.
//          см. справочную информацию по событиям управляемой формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
		
	Если Форма.ИмяФормы = "Документ.уатЗаказГрузоотправителя.Форма.ФормаДокумента" Тогда
		ФормаДокументаУатЗаказГрузоотправителяПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.уатМаршрутныйЛист.Форма.ФормаДокумента" Тогда
		ФормаДокументаУатМаршрутныйЛистПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
		
	ИначеЕсли Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" Тогда
		ФормаДокументаВывестиДолг(Форма, Отказ);
		ФормаДокументаВывестиДолгПоДокументу(Форма, Отказ);
	КонецЕсли;

	КнопкаИзменениеВариантаПоставки = Форма.Элементы.Найти("ФормаИзменениеВариантаПоставки");
	Если КнопкаИзменениеВариантаПоставки <> Неопределено 
		И НЕ уатОбщегоНазначенияПовтИсп.РазрешеноИзменениеПоставки() Тогда
		КнопкаИзменениеВариантаПоставки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - форма, из обработчика события которой происходит вызов процедуры.
//          см. справочную информацию по событиям управляемой формы.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Общее

// Выполнить действия в контексте сервера формы
//
// Параметры:
//  Форма		 - Управляемая форма
//  ДопПараметры - Структура доп. параметров
//
Процедура ФормаВыполнитьДействияВКонтекстеСервера(Форма, ДопПараметры=Неопределено) Экспорт
	
	Если Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента"
		И ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("Действие") Тогда
		
		Если ДопПараметры.Действие = "ВыводНадписиДолга" Тогда
			ФормаДокументаВывестиНадписьДолга(Форма, ДопПараметры);
		ИначеЕсли ДопПараметры.Действие = "ОбновлениеСуммыДолга" Тогда
			ФормаДокументаОбновитьСуммуДолга(Форма, ДопПараметры);
		ИначеЕсли ДопПараметры.Действие = "ВыводНадписиДолгаПоДокументу" Тогда
			ФормаДокументаВывестиНадписьДолгаПоДокументу(Форма, ДопПараметры);
		ИначеЕсли ДопПараметры.Действие = "ОбновлениеСуммыДолгаПоДокументу" Тогда
			ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, ДопПараметры);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ФормаДокументаУатЗаказГрузоотправителяПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)
	
	Форма.Элементы.ОбъектСтроительства.Видимость = Истина;
	
КонецПроцедуры

Процедура ФормаДокументаУатМаршрутныйЛистПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)
	
	Форма.Элементы.ОбъектСтроительства.Видимость = Истина;
	
КонецПроцедуры

Процедура ФормаДокументаВывестиНадписьДолга(Форма, ДопПараметры)
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.уатВзаиморасчетыСКонтрагентами) Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаДолга = Форма.Элементы.Найти("ГруппаДолгКонтрагента");
	Если ГруппаДолга = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ГруппаДолга.РастягиватьПоГоризонтали = Ложь;
	ГруппаДолга.Ширина                   = 23;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_НадписьДолгаКонтрагента", Новый ОписаниеТипов("Строка")));
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	КомандаОбновить = Форма.Команды.Добавить("_ОбновитьНадписьДолга");
	КомандаОбновить.Действие    = "Подключаемый_уатВыполнитьКоманду";
	КомандаОбновить.Заголовок   = НСтр("en='Update';ru='Обновить'");
	КомандаОбновить.Подсказка   = НСтр("en='Update debt of counterparty';ru='Обновить долг контрагента'");;
	КомандаОбновить.Картинка    = БиблиотекаКартинок.Обновить;
	КомандаОбновить.Отображение = ОтображениеКнопки.Картинка;
	
	тНадписьДолг = Форма.Элементы.Добавить("_НадписьДолгаКонтрагента", Тип("ПолеФормы"), ГруппаДолга);
	тНадписьДолг.Вид                      = ВидПоляФормы.ПолеНадписи;
	тНадписьДолг.Гиперссылка              = Истина;
	тНадписьДолг.ПутьКДанным              = "_НадписьДолгаКонтрагента";
	тНадписьДолг.Заголовок                = НСтр("en='Debt inscription of counterparty';ru='Надпись долга контрагента'");
	тНадписьДолг.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
	тНадписьДолг.РастягиватьПоГоризонтали = Ложь;
	тНадписьДолг.Ширина                   = 20;
	тНадписьДолг.ОтображениеПодсказки     = ОтображениеПодсказки.Нет;
	тНадписьДолг.ГоризонтальноеПоложение  = ГоризонтальноеПоложениеЭлемента.Центр;
	тНадписьДолг.УстановитьДействие("Нажатие", "Подключаемый_ПолеФормыНажатие");
	
	кнОбновитьДолг = Форма.Элементы.Добавить("_ОбновитьНадписьДолга", Тип("КнопкаФормы"), ГруппаДолга);
	кнОбновитьДолг.ИмяКоманды = "_ОбновитьНадписьДолга";
	кнОбновитьДолг.Вид        = ВидКнопкиФормы.Гиперссылка;
	кнОбновитьДолг.Ширина     = 3;
	
КонецПроцедуры

Процедура ФормаДокументаОбновитьСуммуДолга(Форма, ДопПараметры)
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.уатВзаиморасчетыСКонтрагентами) Тогда
		Возврат;
	КонецЕсли;
	
	флЕстьТребуемыйРеквизит = Ложь;
	
	Для Каждого ТекРеквизит Из Форма.ПолучитьРеквизиты() Цикл 
		Если ТекРеквизит.Имя = "_НадписьДолгаКонтрагента" Тогда 
			флЕстьТребуемыйРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флЕстьТребуемыйРеквизит Тогда 
		Возврат;
	КонецЕсли;
	
	СуммаДолга = уатОбщегоНазначенияТиповые_проф.ТекущийДолг(Форма.Объект.ДоговорКонтрагента, Неопределено, Форма.Объект.Ссылка);
	
	Если СуммаДолга > 0 Тогда // Должен нам
		Форма._НадписьДолгаКонтрагента = НСтр("en='Debt';ru='Должен нам'") + " " +Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+Форма.Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(255, 0, 0);
		
	ИначеЕсли СуммаДолга < 0 Тогда // Мы должны
		Форма._НадписьДолгаКонтрагента = НСтр("en='We have';ru='Мы должны'") +" "+Формат(СуммаДолга*-1, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+Форма.Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(0, 150, 70);
		
	Иначе // долга нет
		Форма._НадписьДолгаКонтрагента = НСтр("en='No debt under the contract';ru='По договору нет долга'");
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(0, 0, 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокументаВывестиНадписьДолгаПоДокументу(Форма, ДопПараметры)
	
	ГруппаДолга = Форма.Элементы.Найти("ГруппаДолгПоДокументу");
	ГруппаДолгаНДС = Форма.Элементы.Найти("ГруппаДолгПоДокументуНДС");
	
	Если ГруппаДолга = Неопределено ИЛИ ГруппаДолгаНДС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаДолга.Видимость = (Форма.Объект.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным);
	ГруппаДолгаНДС.Видимость = ГруппаДолга.Видимость;
		
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.уатВзаиморасчетыСКонтрагентами) Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаДолга.РастягиватьПоГоризонтали = Ложь;
	ГруппаДолга.Ширина                   = 30;
	ГруппаДолгаНДС.РастягиватьПоГоризонтали = Ложь;
	ГруппаДолгаНДС.Ширина                   = 30;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_НадписьДолгПоДокументу", Новый ОписаниеТипов("Строка")));
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	КомандаОбновить = Форма.Команды.Добавить("_ОбновитьНадписьДолгаПоДокументу");
	КомандаОбновить.Действие    = "Подключаемый_уатВыполнитьКоманду";
	КомандаОбновить.Заголовок   = НСтр("en='Update';ru='Обновить'");
	КомандаОбновить.Подсказка   = НСтр("en='Update document debt';ru='Обновить долг по документу'");;
	КомандаОбновить.Картинка    = БиблиотекаКартинок.Обновить;
	КомандаОбновить.Отображение = ОтображениеКнопки.Картинка;
	
	тНадписьДолг = Форма.Элементы.Добавить("_НадписьДолгПоДокументу", Тип("ПолеФормы"), ГруппаДолга);
	тНадписьДолг.Вид                      = ВидПоляФормы.ПолеНадписи;
	тНадписьДолг.Гиперссылка              = Истина;
	тНадписьДолг.ПутьКДанным              = "_НадписьДолгПоДокументу";
	тНадписьДолг.Заголовок                = НСтр("en='Document debt inscription';ru='Надпись долга по документу'");
	тНадписьДолг.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
	тНадписьДолг.РастягиватьПоГоризонтали = Ложь;
	тНадписьДолг.Ширина                   = 27;
	тНадписьДолг.ОтображениеПодсказки     = ОтображениеПодсказки.Нет;
	тНадписьДолг.ГоризонтальноеПоложение  = ГоризонтальноеПоложениеЭлемента.Лево;
	тНадписьДолг.УстановитьДействие("Нажатие", "Подключаемый_ПолеФормыНажатие");
	
	тНадписьДолг = Форма.Элементы.Добавить("_НадписьДолгПоДокументуНДС", Тип("ПолеФормы"), ГруппаДолгаНДС);
	тНадписьДолг.Вид                      = ВидПоляФормы.ПолеНадписи;
	тНадписьДолг.Гиперссылка              = Истина;
	тНадписьДолг.ПутьКДанным              = "_НадписьДолгПоДокументу";
	тНадписьДолг.Заголовок                = НСтр("en='Document debt inscription';ru='Надпись долга по документу'");
	тНадписьДолг.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
	тНадписьДолг.РастягиватьПоГоризонтали = Ложь;
	тНадписьДолг.Ширина                   = 27;
	тНадписьДолг.ОтображениеПодсказки     = ОтображениеПодсказки.Нет;
	тНадписьДолг.ГоризонтальноеПоложение  = ГоризонтальноеПоложениеЭлемента.Лево;
	тНадписьДолг.УстановитьДействие("Нажатие", "Подключаемый_ПолеФормыНажатие");
	
	кнОбновитьДолг = Форма.Элементы.Добавить("_ОбновитьНадписьДолгаПоДокументу", Тип("КнопкаФормы"), ГруппаДолга);
	кнОбновитьДолг.ИмяКоманды = "_ОбновитьНадписьДолгаПоДокументу";
	кнОбновитьДолг.Вид        = ВидКнопкиФормы.Гиперссылка;
	кнОбновитьДолг.Ширина     = 3;
	
	кнОбновитьДолг = Форма.Элементы.Добавить("_ОбновитьНадписьДолгаПоДокументуНДС", Тип("КнопкаФормы"), ГруппаДолгаНДС);
	кнОбновитьДолг.ИмяКоманды = "_ОбновитьНадписьДолгаПоДокументу";
	кнОбновитьДолг.Вид        = ВидКнопкиФормы.Гиперссылка;
	кнОбновитьДолг.Ширина     = 3;
	
КонецПроцедуры

Процедура ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, ДопПараметры)
	
	флЕстьТребуемыйРеквизит = Ложь;
	
	Для Каждого ТекРеквизит Из Форма.ПолучитьРеквизиты() Цикл 
		Если ТекРеквизит.Имя = "_НадписьДолгПоДокументу" Тогда 
			флЕстьТребуемыйРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флЕстьТребуемыйРеквизит Тогда 
		Возврат;
	КонецЕсли;
	
	ГруппаДолга = Форма.Элементы.ГруппаДолгПоДокументу;
	ГруппаДолгаНДС = Форма.Элементы.ГруппаДолгПоДокументуНДС;
	
	ГруппаДолга.Видимость = (Форма.Объект.ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным);
	ГруппаДолгаНДС.Видимость = ГруппаДолга.Видимость;
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.уатВзаиморасчетыСКонтрагентами) Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДолга = уатОбщегоНазначенияТиповые_проф.ТекущийДолгПоДокументу(Форма.Объект.ДоговорКонтрагента, Форма.Объект.Ссылка);
	
	Если СуммаДолга > 0 Тогда // Должен нам
		Форма._НадписьДолгПоДокументу = НСтр("en='Debt on document';ru='Должен нам по документу'") + " " +Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+Форма.Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(255, 0, 0);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(255, 0, 0);
		
	ИначеЕсли СуммаДолга < 0 Тогда // Мы должны
		Форма._НадписьДолгПоДокументу = НСтр("en='We have on document';ru='Мы должны по документу'") +" "+Формат(СуммаДолга*-1, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+Форма.Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(0, 150, 70);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(0, 150, 70);
		
	Иначе // долга нет
		Форма._НадписьДолгПоДокументу = НСтр("en='No document debt';ru='По документу нет долга'");
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(0, 0, 0);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(0, 0, 0);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокументаВывестиДолг(Форма, Отказ)
	
	ГруппаДолга = Форма.Элементы.Найти("ГруппаДолгКонтрагента");
	Если ГруппаДолга = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ФормаВыполнитьДействияВКонтекстеСервера(Форма, Новый Структура("Действие", "ВыводНадписиДолга"));
	ФормаВыполнитьДействияВКонтекстеСервера(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолга"));
	
КонецПроцедуры

Процедура ФормаДокументаВывестиДолгПоДокументу(Форма, Отказ)
	
	ГруппаДолга = Форма.Элементы.Найти("ГруппаДолгПоДокументу");
	Если ГруппаДолга = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ФормаВыполнитьДействияВКонтекстеСервера(Форма, Новый Структура("Действие", "ВыводНадписиДолгаПоДокументу"));
	ФормаВыполнитьДействияВКонтекстеСервера(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолгаПоДокументу"));
	
КонецПроцедуры

// Процедура добавляет настройку типа Булево в виде флажка и текстовую подсказку под настройкой
Процедура ОбщаяФормаУатФормаКонстантДобавитьНастройкуФлаг(Форма, ИмяКонстанты, ГруппаВладелец = Неопределено, ДопПараметрыГруппы = Неопределено, Пояснение = "") Экспорт
	МетаданныеКонстанта = Метаданные.Константы[ИмяКонстанты];
	
	ТекГруппа = Форма.Элементы.Добавить("Группа" + ИмяКонстанты, Тип("ГруппаФормы"), ГруппаВладелец);
	ТекГруппа.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
	ТекГруппа.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТекГруппа.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	ТекГруппа.Отображение                = ОтображениеОбычнойГруппы.Нет;
	ТекГруппа.ОтображатьЗаголовок        = Ложь;
	ТекГруппа.Ширина                     = 43;
	ТекГруппа.РастягиватьПоГоризонтали   = Ложь;
	Если ТипЗнч(ДопПараметрыГруппы) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ТекГруппа, ДопПараметрыГруппы);
	КонецЕсли;
	
	ТекФлажок = Форма.Элементы.Добавить(ИмяКонстанты, Тип("ПолеФормы"), ТекГруппа);
	ТекФлажок.Вид                = ВидПоляФормы.ПолеФлажка;
	ТекФлажок.ПутьКДанным        = ИмяКонстанты;
	ТекФлажок.Заголовок          = МетаданныеКонстанта.Синоним;
	ТекФлажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	ТекФлажок.Доступность        = ПравоДоступа("Изменение", МетаданныеКонстанта);
	ТекФлажок.УстановитьДействие("ПриИзменении", "Подключаемый_ПолеФормыПриИзменении");
	
	Если НЕ ПустаяСтрока(МетаданныеКонстанта.Пояснение) Тогда
		Если НЕ ЗначениеЗаполнено(Пояснение) Тогда
			ТекПодсказка = Форма.Элементы.Добавить(ИмяКонстанты + "Подсказка", Тип("ДекорацияФормы"), ТекГруппа);
			ТекПодсказка.Заголовок  = МетаданныеКонстанта.Пояснение;
			ТекПодсказка.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		Иначе
			ТекПодсказка = Форма.Элементы.Добавить(ИмяКонстанты + "Подсказка", Тип("ДекорацияФормы"), ТекГруппа);
			ТекПодсказка.Заголовок  = Пояснение;
			ТекПодсказка.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура добавляет настройку типа Булево в виде флажка и текстовую подсказку под настройкой
Процедура ОбщаяФормаУатФормаКонстантДобавитьНастройкуПеречисление(Форма, ИмяКонстанты, ГруппаВладелец = Неопределено, ДопПараметрыГруппы = Неопределено) Экспорт
	МетаданныеКонстанта = Метаданные.Константы[ИмяКонстанты];
	
	ТекГруппа = Форма.Элементы.Добавить("Группа" + ИмяКонстанты, Тип("ГруппаФормы"), ГруппаВладелец);
	ТекГруппа.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
	ТекГруппа.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТекГруппа.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	ТекГруппа.Отображение                = ОтображениеОбычнойГруппы.Нет;
	ТекГруппа.ОтображатьЗаголовок        = Ложь;
	ТекГруппа.Ширина                     = 43;
	ТекГруппа.РастягиватьПоГоризонтали   = Ложь;
	Если ТипЗнч(ДопПараметрыГруппы) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ТекГруппа, ДопПараметрыГруппы);
	КонецЕсли;
	
	ТекЭлемент = Форма.Элементы.Добавить(ИмяКонстанты, Тип("ПолеФормы"), ТекГруппа);
	ТекЭлемент.Вид                = ВидПоляФормы.ПолеВвода;
	ТекЭлемент.ПутьКДанным        = ИмяКонстанты;
	ТекЭлемент.Заголовок          = МетаданныеКонстанта.Синоним;
	ТекЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	ТекЭлемент.Доступность        = ПравоДоступа("Изменение", МетаданныеКонстанта);
	ТекЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПолеФормыПриИзменении");
	ТекЭлемент.Ширина             = 8;
	ТекГруппа.РастягиватьПоГоризонтали   = Ложь;
КонецПроцедуры

// Процедура добавляет команду в виде гиперссылки и текстовую подсказку под командой
Процедура ОбщаяФормаУатФормаКонстантДобавитьКомандуГиперссылку(Форма, ИмяКоманды, ЗаголовокКоманды, ПодсказкаКоманды, ГруппаВладелец = Неопределено) Экспорт
	// добавление команды формы
	ТекКоманда = Форма.Команды.Добавить(ИмяКоманды);
	ТекКоманда.Действие  = "Подключаемый_уатВыполнитьКоманду";
	ТекКоманда.Заголовок = ЗаголовокКоманды;
	
	// добавление группы элементов
	ТекГруппаЭлементов = Форма.Элементы.Добавить("Группа" + ИмяКоманды, Тип("ГруппаФормы"), ГруппаВладелец);
	ТекГруппаЭлементов.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
	ТекГруппаЭлементов.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ТекГруппаЭлементов.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	ТекГруппаЭлементов.Отображение                = ОтображениеОбычнойГруппы.Нет;
	ТекГруппаЭлементов.ОтображатьЗаголовок        = Ложь;
	ТекГруппаЭлементов.Ширина                     = 43;
	ТекГруппаЭлементов.РастягиватьПоГоризонтали   = Ложь;
	
	// добавление кнопки-гиперссылки
	ТекГиперссылка = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ТекГруппаЭлементов);
	ТекГиперссылка.ИмяКоманды = ИмяКоманды;
	ТекГиперссылка.Вид        = ВидКнопкиФормы.Гиперссылка;
	
	// текстовая подсказка
	ТекПодсказка = Форма.Элементы.Добавить(ИмяКоманды + "Подсказка", Тип("ДекорацияФормы"), ТекГруппаЭлементов);
	ТекПодсказка.Заголовок  = ПодсказкаКоманды;
	ТекПодсказка.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
КонецПроцедуры

// Функция возвращает новую добавленную горизонтальную группу настроек
Функция ОбщаяФормаУатФормаКонстантДобавитьГруппуНастроек(Форма, ИмяГруппы, ГруппаВладелец = Неопределено, ДопПараметрыГруппы = Неопределено) Экспорт
	ТекГруппа = Форма.Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ГруппаВладелец);
	ТекГруппа.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
	ТекГруппа.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ТекГруппа.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	ТекГруппа.Отображение                = ОтображениеОбычнойГруппы.Нет;
	ТекГруппа.ОтображатьЗаголовок        = Ложь;
	Если ТипЗнч(ДопПараметрыГруппы) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ТекГруппа, ДопПараметрыГруппы);
	КонецЕсли;
	
	Возврат ТекГруппа;
КонецФункции

#КонецОбласти