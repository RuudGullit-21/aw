
#Область СлужебныйПрограммныйИнтерфейс

// В отличие от аналогичной функции из ОбщегоНазначения, учитывает включенные в КИ подсистемы.
//
// Параметры:
//	ПолноеИмяПодсистемы - Строка - Полный путь (с учетов вложенности подсистем) к проверяемой подсистеме.
//	ПреобразоватьПутьКПодсистеме - Булево - Если установить в Истину, то для объектов ЦСМ в составе другой конфигурации
//								   в путь к подсистеме будет добавлено стандартное имя подсистемы ЦСМ (см. ItobЦентрСпутниковогоМониторинга.ИмяКонфигурацииЦСМ()).
//								   Так, например, "УчетГСМ" превратится в ItobЦентрСпутниковогоМониторинга.УчетГСМ.
//
Функция ПодсистемаСуществует(ПолноеИмяПодсистемы, ПреобразоватьПутьКПодсистеме = Истина) Экспорт
	
	ИмяКорневойПодсистемы = ПолноеИмяПодсистемы;
	ПозицияТочки = СтрНайти(ПолноеИмяПодсистемы, ".");
	Если ПозицияТочки > 0 Тогда
		ИмяКорневойПодсистемы = Лев(ПолноеИмяПодсистемы, ПозицияТочки - 1);	
	КонецЕсли;

	ПолноеИмяДляПоиска = ПолноеИмяПодсистемы;
	Если ПреобразоватьПутьКПодсистеме
		 И НЕ ItobЦентрСпутниковогоМониторинга.ЭтоКонфигурацияЦСМ()
		 И ItobОбщегоНазначенияПовтИсп.ПодсистемаВходитВЦСМ(ИмяКорневойПодсистемы) Тогда
		 		
		ПолноеИмяДляПоиска = ItobЦентрСпутниковогоМониторинга.ИмяПодсистемыЦСМ() + "." + ПолноеИмяПодсистемы;
	КонецЕсли;
	 
	Возврат ПроверитьСуществованиеПодсистемыРекурсивно(Метаданные, СтрРазделить(ПолноеИмяДляПоиска, ".", Ложь), -1);
	
КонецФункции

// Проверяет вхождение переданной по имени подсистемы в подсистему спутникового мониторинга, определяемую
//	при помощи функций модуля "ItobЦентрСпутниковогоМониторинга".
// Возвращает Ложь, если в конфигурации, не являющейся конфигурацией ЦСМ не найдено подсистемы с именем, 
//	заданным в ItobЦентрСпутниковогоМониторинга.ИмяПодсистемыЦСМ().
//
Функция ПодсистемаВходитВЦСМ(ИмяПодсистемы) Экспорт
		 
	КоллекцияПодсистемДляПоиска = Метаданные.Подсистемы;								
	Если НЕ ItobЦентрСпутниковогоМониторинга.ЭтоКонфигурацияЦСМ() Тогда
		ПодсистемаЦСМ = Метаданные.Подсистемы.Найти(ItobЦентрСпутниковогоМониторинга.ИмяПодсистемыЦСМ());
		Если НЕ ПодсистемаЦСМ = Неопределено Тогда
			КоллекцияПодсистемДляПоиска = ПодсистемаЦСМ.Подсистемы;		
		Иначе
			Возврат Ложь;
		КонецЕсли; 
	КонецЕсли; 								
	
	
	Возврат НЕ (КоллекцияПодсистемДляПоиска.Найти(ИмяПодсистемы) = Неопределено);
	
КонецФункции

Функция ИмяРеквизитаМоделиУТС() Экспорт
		
	ИмяСправочникаТС = ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ТранспортныеСредства");
	ИмяСправочникаМоделиТС = ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("МаркиТранспорта");
	ИмяРеквизитаМодели = ItobОбщегоНазначения.ИмяРеквизитаОбъектаПоТипу(ТипЗнч(Справочники[ИмяСправочникаТС].ПустаяСсылка()), 
																		Справочники[ИмяСправочникаМоделиТС].ПустаяСсылка());
																		
	Если НЕ ItobЦентрСпутниковогоМониторинга.ЭтоКонфигурацияЦСМ() Тогда
		ItobЦентрСпутниковогоМониторингаПереопределяемый.ПереопределитьИмяРеквизитаМодели(ИмяРеквизитаМодели);		
	КонецЕсли; 
	
	
	Возврат ИмяРеквизитаМодели;
	
КонецФункции

// Функция - Масштаб объектов на карте
// 
// Возвращаемое значение:
//  Число - Коэффициент на которой будет умножено значение размера объекта на карте по умолчанию.
//
Функция МасштабыОбъектовНаКарте() Экспорт
	
	МасштабыОбъектов = Новый Структура;
	МасштабыОбъектов.Вставить("МасштабОтслеживаемыхОбъектов", 
							  ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиКарты", "МасштабОтслеживаемыхОбъектов", 1));
	МасштабыОбъектов.Вставить("МасштабТекстаПредставленияТС", 
							  ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиКарты", "МасштабТекстаПредставленияТС", 1));
	МасштабыОбъектов.Вставить("МасштабСлужебныхОбъектов", 
							  ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиКарты", "МасштабСлужебныхОбъектов", 1));
	МасштабыОбъектов.Вставить("МасштабУказателяНаправления", 
							  ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиКарты", "МасштабУказателяНаправления", 1));
	
	
	Возврат МасштабыОбъектов;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьСуществованиеПодсистемыРекурсивно(МетаданныеКоллекцииПодсистем, ЧастиПолногоИмени, ТекущаяИтерация)
			
	ТекущаяИтерация = ТекущаяИтерация + 1;
	НайденнаяПодсистема = МетаданныеКоллекцииПодсистем.Подсистемы.Найти(ЧастиПолногоИмени[ТекущаяИтерация]);	
	
	Если НЕ НайденнаяПодсистема = Неопределено Тогда
		Если ТекущаяИтерация = ЧастиПолногоИмени.Количество() - 1 Тогда
			Возврат Истина;
		Иначе
			Возврат ПроверитьСуществованиеПодсистемыРекурсивно(НайденнаяПодсистема, ЧастиПолногоИмени, ТекущаяИтерация);
		КонецЕсли; 	
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

#КонецОбласти 