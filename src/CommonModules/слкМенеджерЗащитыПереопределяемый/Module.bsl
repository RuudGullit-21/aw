////////////////////////////////////////////////////////////////////////////////
// Менеджер защиты: Система лицензирования отраслевых и специализированных решений.
// Переопределение процедур и функций
// Область выполнения: Сервер
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Для переопределения результатов функции УстановкаПараметровСеанса
//  менеджера защиты СЛК.
//
// Параметры:
//  УстановленныеПараметры	 - 	 - Массив из Строка - Массив имен установленных параметров сеанса
//  ИменаПараметровСеанса	 - 	 - Массив из Строка, Неопределено - в массиве имена параметров
//  	сеанса для инициализации.
//
Процедура ПереопределитьПараметрыСеанса(УстановленныеПараметры, Знач ИменаПараметровСеанса) Экспорт
	
	// Параметры сеанса, инициализация которых требует обращения к одним и тем же данным
	// следует инициализировать сразу группой. Для того, чтобы избежать их повторной инициализации,
	// имена уже установленных параметров сеанса сохраняются в массиве УстановленныеПараметры.
	
	Если ИменаПараметровСеанса = Неопределено Тогда
		// Раздел установки параметров сеанса при начале сеанса (ИменаПараметровСеанса = Неопределено)
		// Выполняется установка параметров сеанса, которые можно инициализировать 
		// при начале работы системы.
		
	КонецЕсли;
	
КонецПроцедуры

// Переопределение параметров серий ключей защиты, определенных в конфигурации
//  В зависимости от параметра Активные - возвращаются параметры или всех серий или
//  доступные по установленным пользователю сеанса ролям
//
// Параметры:
//  СерииКлючейКонфигурации	 - Соответствие	 - Соответствие параметров подключения
//  	сериям ключей защиты
//  Активные				 - Булево		 - только доступные по установленным пользователю сеанса ролям
//
Процедура ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации, Знач Активные = Истина) Экспорт
	
	// {УАТ}
	уатЗащищенныеФункцииСервер.ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации);
	
	// +СофтФон
	сфпЛицензированиеСервер.ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации);
	// -СофтФон
	// {/УАТ}
	
КонецПроцедуры // ПолучитьСерииКлючейКонфигурации()

// Переопределение параметров подключения серии ключей защиты.
// В зависимости от параметра Активные - возвращаются параметры или всех серий или
// доступные по установленным пользователю сеанса ролям
//
// Параметры:
//  ПараметрыПодключения  - Структура - Структура параметров подключения.
//							Соответствует структуре, возвращаемой функцией 
//							слкМенеджерЗащитыСервер.СтруктураПараметровПодключенияСерииКлючейЗащиты(). 
//	Серия - Строка, Неопределено - Уникальная серия ключей защиты СЛК. Если серия не указана,
//					возвращается пустая структура настроек менеджера серии защиты.
//
Процедура ПереопределитьПараметрыПодключенияСерииКлючейЗащиты(ПараметрыПодключения, Знач Серия) Экспорт

КонецПроцедуры // ПереопределитьПараметрыПодключенияСерииКлючейЗащиты()

// Переопределение основной формы менеджера лицензий.
//
// Параметры:
//  ИспользоватьУпрощеннуюФорму	 - Булево	 - Если Истина, то используется упрощенная форма, иначе стандартная
//  	Упрощенную форму рекомендуется использовать, если подключается только одна серия ключей защиты
//
Процедура ПриОбработкеПолученияФормыМенеджераЛицензий(ИспользоватьУпрощеннуюФорму) Экспорт
	
КонецПроцедуры

#Область МинимальноНеобходимаяВерсияКомпонентыЗащиты

// Переопределение минимально необходимой версии компоненты защиты СЛК.
// Вызывается из слкМенеджерЗащиты.ПолучитьМинимальнуюВерсиюКомпонентыЗащиты().
//
// Возвращаемое значение:
//  Строка - минимальная версия компоненты защиты.
//
Функция ПолучитьМинимальнуюВерсиюКомпонентыЗащиты() Экспорт
	
	МинимальнаяВерсия = ""; // Если строка пустая, то используется версия из модуля слкМенеджерЗащиты.
	
	Возврат МинимальнаяВерсия;
	
КонецФункции // ПолучитьМинимальнуюВерсиюКомпонентыЗащиты()

// Переопределение сообщения про устаревшую версию компоненты защиты СЛК.
// Вызывается из слкМенеджерЗащиты.ПроверитьАктуальностьВерсииКомпонентыЗащиты().
//
// Параметры:
//  ТекущаяВерсия - строка - текущая версия компоненты СЛК.
//  НеобходимаяВерсия - строка - минимально необходимая версия компоненты СЛК.
//
// Возвращаемое значение:
//  Строка - текст сообщения для устаревшей версии компоненты СЛК.
//
Функция ПолучитьТекстИсключенияДляУстаревшейКомпонентыСЛК(ТекущаяВерсия, НеобходимаяВерсия) Экспорт
	
	СообщениеИсключения = "";
	
	Возврат СообщениеИсключения;
	
КонецФункции // ПолучитьТекстИсключенияДляУстаревшейКомпонентыСЛК()

#КонецОбласти

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма				 - 			 - форма, из обработчика события которой происходит вызов процедуры.
//  			см. справочную информацию по событиям управляемой формы.
//  Отказ				 - Булево	 - Признак отказа от создания формы.
//  	Если в теле процедуры-обработчика установить данному параметру значение Истина, то форма создана не будет.
//  СтандартнаяОбработка - Булево	 - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//  	Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//
Процедура МенеджерЛицензийСЛКПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти
