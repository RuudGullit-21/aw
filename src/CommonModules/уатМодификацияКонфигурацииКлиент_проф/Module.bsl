////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм и реквизитов форм.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма	 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Отказ	 - 	 - 
//
Процедура ПриОткрытии(Форма, Отказ) Экспорт
		
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма			 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  ПараметрыЗаписи	 - 	 - 
//
Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	Если Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" Тогда 
		Попытка
			ФормаДокументаОбновитьСуммуДолга(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолга"));
			ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолгаПоДокументу"));
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПоляФорм

// Переопределяемая процедура, вызываемая из обработчика события "ПриИзменении" поля формы.
//  Вызов происходит из подключаемой процедуры "Подключаемый_ПолеПриИзменении".
//
// Параметры:
//  Форма	 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Элемент	 - 	 - элемент формы, вызвавший указанный обработчик.
//
Процедура ПолеФормыПриИзменении(Форма, Элемент) Экспорт
		
	Если Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" Тогда 
		Попытка
			ФормаДокументаОбновитьСуммуДолга(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолга"));
			ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолгаПоДокументу"));
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из обработчика события "НачалоВыбора" поля формы.
//  Вызов происходит из подключаемой процедуры "Подключаемый_ПолеНачалоВыбора".
//
// Параметры:
//  Форма				 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Элемент				 - 	 - элемент формы, вызвавший указанный обработчик.
//  ДанныеВыбора		 - 	 - данные для выбора.
//  СтандартнаяОбработка - 	 - признак выполнения стандартной (системной) обработки события.
//
Процедура ПолеФормыНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Переопределяемая процедура, вызываемая из обработчика события "ОбработкаВыбора" поля формы.
//  Вызов происходит из подключаемой процедуры "Подключаемый_ПолеНачалоВыбора".
//
// Параметры:
//  Форма				 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Элемент				 - 	 - элемент формы, вызвавший указанный обработчик.
//  ВыбранноеЗначение	 - 	 - выбранное значение, которое будет установлено как значения поля ввода.
//  СтандартнаяОбработка - 	 - признак выполнения стандартной (системной) обработки события.
//
Процедура ПолеФормыОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Переопределяемая процедура, вызываемая из обработчика события "Нажатие" поля формы.
//  Вызов происходит из подключаемой процедуры "Подключаемый_ПолеНажатие".
//
// Параметры:
//  Форма				 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Элемент				 - 	 - элемент формы, вызвавший указанный обработчик.
//  СтандартнаяОбработка - 	 - признак выполнения стандартной (системной) обработки события.
//
Процедура ПолеФормыНажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Если Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" 
		И Элемент.Имя = "_НадписьДолгаКонтрагента" Тогда 
		ФормаДокументаОбработатьНажатиеДолгКонтрагента(Форма, Элемент, СтандартнаяОбработка);
		
	ИначеЕсли Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" 
		И (Элемент.Имя = "_НадписьДолгПоДокументу" ИЛИ Элемент.Имя = "_НадписьДолгПоДокументуНДС") Тогда 
		ФормаДокументаОбработатьНажатиеДолгПоДокументу(Форма, Элемент, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из обработчика события "ПередУдалением" поля таблицы формы.
//
// Параметры:
//  Форма	 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Элемент	 - 	 - элемент формы, вызвавший указанный обработчик.
//  Отказ	 - 	 - признак отказа от удаления.
//
Процедура ПолеТаблицыФормыПередУдалением(Форма, Элемент, Отказ) Экспорт
	
	Если Форма.ИмяФормы = "Справочник.уатМаршруты.Форма.ФормаЭлемента" Тогда 
		ФормаЭлементаСправочникаУатМаршрутыПолеТаблицыФормыПередУдалением(Форма, Элемент, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Переопределяемая процедура, вызываемая из обработчика события "Подключаемый_ВыполнитьКоманду" команд формы.
//
// Параметры:
//  Форма	 - 	 - форма, из обработчика события которой происходит вызов процедуры.
//  	см. справочную информацию по событиям управляемой формы.
//  Команда	 - 	 - выполняемая команда.
//
Процедура ВыполнитьПодключаемуюКоманду(Форма, Команда) Экспорт
		
	Если Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" 
		И Команда.Имя = "_ОбновитьНадписьДолга" Тогда
		
		ФормаДокументаОбновитьСуммуДолга(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолга"));
		
	ИначеЕсли Лев(Форма.ИмяФормы, 9) = "Документ." И Прав(Форма.ИмяФормы, 14) = "ФормаДокумента" 
		И Команда.Имя = "_ОбновитьНадписьДолгаПоДокументу" Тогда
		
		ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, Новый Структура("Действие", "ОбновлениеСуммыДолгаПоДокументу"));
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается перед удалением поля таблицы формы Маршруты
//
// Параметры:
//  Результат	 - 	 - Вариант ответа на вопрос об удалении
//  ДопПараметры - 	 - Структура доп. параметров
//
Процедура ФормаЭлементаСправочникаУатМаршрутыПолеТаблицыФормыПередУдалениемПродолжение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		уатМодификацияКонфигурацииВызовСервера_проф.УдалитьПунктПриУдаленииСтрокиМаршрута(ДопПараметры.Форма.Объект.Ссылка, ДопПараметры.УИДТекПункта);
		ДопПараметры.Форма.Объект.Этапы.Удалить(ДопПараметры.Форма.Объект.Этапы.НайтиСтроки(Новый Структура("УИД", ДопПараметры.УИДТекПункта))[0]);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ФормаДокументаОбновитьСуммуДолга(Форма, ДопПараметры)
	
	флЕстьТребуемыйРеквизит = Ложь;
	
	Для Каждого ТекРеквизит Из Форма.Элементы Цикл 
		Если ТекРеквизит.Имя = "_НадписьДолгаКонтрагента" Тогда 
			флЕстьТребуемыйРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флЕстьТребуемыйРеквизит Тогда 
		Возврат;
	КонецЕсли;
	
	ФлЕстьОшибки = Ложь;
	СуммаДолга   = уатОбщегоНазначенияТиповые_проф.ТекущийДолг(Форма.Объект.ДоговорКонтрагента, Неопределено, Форма.Объект.Ссылка, ФлЕстьОшибки);
	Если ФлЕстьОшибки Тогда 
		Возврат;
	КонецЕсли;

	Если СуммаДолга > 0 Тогда // Должен нам
		Форма._НадписьДолгаКонтрагента = НСтр("en='Debt';ru='Должен нам'") + " " +Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Форма.Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(255, 0, 0);
		
	ИначеЕсли СуммаДолга < 0 Тогда // Мы должны
		Форма._НадписьДолгаКонтрагента = НСтр("en='We have';ru='Мы должны'") +" "+Формат(СуммаДолга*-1, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Форма.Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(0, 150, 70);
		
	Иначе // долга нет
		Форма._НадписьДолгаКонтрагента = НСтр("en='No debt under the contract';ru='По договору нет долга'");
		Форма.Элементы._НадписьДолгаКонтрагента.ЦветТекста = Новый Цвет(0, 0, 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокументаОбновитьСуммуДолгаПоДокументу(Форма, ДопПараметры)
	
	флЕстьТребуемыйРеквизит = Ложь;
	
	Для Каждого ТекРеквизит Из Форма.Элементы Цикл 
		Если ТекРеквизит.Имя = "_НадписьДолгПоДокументу" Тогда 
			флЕстьТребуемыйРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флЕстьТребуемыйРеквизит Тогда 
		Возврат;
	КонецЕсли;
	
	ГруппаДолга = Форма.Элементы.ГруппаДолгПоДокументу;
	ГруппаДолгаНДС = Форма.Элементы.ГруппаДолгПоДокументуНДС;
	
	ГруппаДолга.Видимость = (уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Форма.Объект.ДоговорКонтрагента, "ВедениеВзаиморасчетов")
		= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным"));
	ГруппаДолгаНДС.Видимость = ГруппаДолга.Видимость;
	
	флЕстьОшибки = Ложь;
	СуммаДолга   = уатОбщегоНазначенияТиповые_проф.ТекущийДолгПоДокументу(Форма.Объект.ДоговорКонтрагента, Форма.Объект.Ссылка, флЕстьОшибки);
	Если флЕстьОшибки Тогда 
		Возврат;
	КонецЕсли;

	Если СуммаДолга > 0 Тогда // Должен нам
		Форма._НадписьДолгПоДокументу = НСтр("en='Debt on document';ru='Должен нам по документу'") + " " +Формат(СуммаДолга, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Форма.Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(255, 0, 0);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(255, 0, 0);
		
	ИначеЕсли СуммаДолга < 0 Тогда // Мы должны
		Форма._НадписьДолгПоДокументу = НСтр("en='We have on document';ru='Мы должны по документу'") +" "+Формат(СуммаДолга*-1, "ЧДЦ=2; ЧРД=,; ЧГ=3,0")+ " "+уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Форма.Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(0, 150, 70);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(0, 150, 70);
		
	Иначе // долга нет
		Форма._НадписьДолгПоДокументу = НСтр("en='No document debt';ru='По документу нет долга'");
		Форма.Элементы._НадписьДолгПоДокументу.ЦветТекста = Новый Цвет(0, 0, 0);
		Форма.Элементы._НадписьДолгПоДокументуНДС.ЦветТекста = Новый Цвет(0, 0, 0);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаЭлементаСправочникаУатМаршрутыПолеТаблицыФормыПередУдалением(Форма, Элемент, Отказ)
	
	УИДТекПункта = Форма.Элементы.ПунктыСледования.ТекущиеДанные.УИД;
	
	Если уатМодификацияКонфигурацииВызовСервера_проф.ЕстьРасписаниеДвиженияПоУИДПунктаМаршрута(Форма.Объект.Ссылка, УИДТекПункта) Тогда 
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения(
			"ФормаЭлементаСправочникаУатМаршрутыПолеТаблицыФормыПередУдалениемПродолжение", 
			уатМодификацияКонфигурацииКлиент_проф, 
			Новый Структура("Форма,УИДТекПункта", Форма, УИДТекПункта));
			
		ТекстНСТР = НСтр("en='Timetable is filled in for this point. Delete point?';ru='Для данного пункта заполнено расписание движения. Удалить пункт?'");
		
		ПоказатьВопрос(Оповещение, 
			ТекстНСТР,
			РежимДиалогаВопрос.ДаНет,
			, 
			КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокументаОбработатьНажатиеДолгКонтрагента(Форма, Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не уатМодификацияКонфигурацииВызовСервера_проф.ПравоРедактированиеОтчета() Тогда
		ТекстНСТР = НСтр("en='Insufficient permissions to view.';ru='Недостаточно прав для просмотра.'");
		ПоказатьПредупреждение(,ТекстНСТР, 10);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ДоговорКонтрагента", Форма.Объект.ДоговорКонтрагента));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючВарианта", "Задолженность по договору");
	ОткрытьФорму("Отчет.уатЗадолженностьПоКонтрагентам.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

Процедура ФормаДокументаОбработатьНажатиеДолгПоДокументу(Форма, Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не уатМодификацияКонфигурацииВызовСервера_проф.ПравоРедактированиеОтчета() Тогда
		ТекстНСТР = НСтр("en='Insufficient permissions to view.';ru='Недостаточно прав для просмотра.'");
		ПоказатьПредупреждение(,ТекстНСТР, 10);
		Возврат;
	КонецЕсли;
		
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Сделка", Форма.Объект.Ссылка));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючВарианта", "Задолженность по сделке");
	ОткрытьФорму("Отчет.уатЗадолженностьПоКонтрагентам.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
