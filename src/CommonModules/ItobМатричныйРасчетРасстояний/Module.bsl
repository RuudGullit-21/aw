
#Область ПрограммныйИнтерфейс

// Функция - Рассчитать по точке и столбцу
//
// Параметры:
//  ТочкаИсточник			 - Структура - данные точки. 
//  ТочкиНазначения			 - Массив из Структура - точки назначения.
//  ВВидеТаблицы			 - Булево - если Истина результат будет представлен в виде таблицы значений,
//										иначе в виде массива.							
//  СпособРасчетаМаршрута	 - Строка - способ расчета маршрута.
//  ТекстОшибки				 - Строка - текст ошибки.
// 
// Возвращаемое значение:
//	- ТаблицаЗначений 
//	- Массив  
//
Функция РассчитатьПоТочкеИСтолбцу(ТочкаИсточник, ТочкиНазначения, ВВидеТаблицы = Ложь, СпособРасчетаМаршрута = Неопределено, ТекстОшибки = "") Экспорт
		
	Параметры = ПараметрыРасчетаПоТочкеИСтолбцу();
	Параметры.ТочкаИсточник = ТочкаИсточник;
	Параметры.ТочкиНазначения = ТочкиНазначения;
	Параметры.ПолучитьРезультатВВидеТаблицы = ВВидеТаблицы;
	Параметры.СпособРасчетаМаршрута = СпособРасчетаМаршрута;
	Параметры.ТекстОшибки = ТекстОшибки;
	
	Результат = ItobМатричныйРасчетРасстоянийСлужебный.РасчетПоТочкеИСтолбцу(Параметры);
	ТекстОшибки = Параметры.ТекстОшибки;
	
	
 	Возврат Результат;
	
КонецФункции

// Функция - Параметры расчета по точке и столбцу в фоне
// 
// Возвращаемое значение:
//	Структура 
//
Функция ПараметрыРасчетаПоТочкеИСтолбцуВФоне() Экспорт
	
	Параметры = ПараметрыРасчетаПоТочкеИСтолбцу();
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыРасчетаВФоне()); 
	
	
	Возврат Параметры;
	
КонецФункции

// Процедура - Рассчитать по точке и столбцу в фоне
//
// Параметры:
//  ВходящиеПараметры - Структура - параметры.  
//
Процедура РассчитатьПоТочкеИСтолбцуВФоне(ВходящиеПараметры) Экспорт
		
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "Матричный расчет расстояний";
	ПараметрыВыполнения.КлючФоновогоЗадания = Строка(Новый УникальныйИдентификатор);		
	ПараметрыВыполнения.ОжидатьЗавершение = ВходящиеПараметры.ОжидатьЗавершение;
		
	ВходящиеПараметры.РезультатВыполненияДлительнойОперации = ДлительныеОперации.ВыполнитьВФоне("ItobМатричныйРасчетРасстоянийСлужебный.РасчетПоТочкеИСтолбцу", 
																								 ВходящиеПараметры, 
																								 ПараметрыВыполнения);		
КонецПроцедуры

#Область ВходныеИРезультирующиеСтруктуры

// Функция - Инициализировать данные точки расчета расстояний
// 
// Возвращаемое значение:
//	Структура - данные точки.
//
Функция ИнициализироватьДанныеТочкиРасчетаРасстояний() Экспорт
	
	ДанныеТочки = Новый Структура;
	
	ДанныеТочки.Вставить("Индекс");
	ДанныеТочки.Вставить("Широта");
	ДанныеТочки.Вставить("Долгота");
	ДанныеТочки.Вставить("Адрес");
	
	
	Возврат ДанныеТочки;
	
КонецФункции

// Функция - Структура результата расчета расстояний
// 
// Возвращаемое значение:
//  Структура 
//
Функция СтруктураРезультатаРасчетаРасстояний() Экспорт
	
	Результат = Новый Структура;	
	Результат.Вставить("Индекс1");
	Результат.Вставить("Индекс2");
	Результат.Вставить("Расстояние");
	Результат.Вставить("Время");
	Результат.Вставить("АдресПолучателя1");
	Результат.Вставить("АдресПолучателя2");
	Результат.Вставить("Широта1");
	Результат.Вставить("Широта2");
	Результат.Вставить("Долгота1");
	Результат.Вставить("Долгота2");
	
	
	Возврат Результат;
	
КонецФункции

// Функция - Шаблон таблицы результата расчета расстояний
//
// Параметры:
//  ДобавляемыеИндексы	 - Строка - добавляемые индексы строкой через запятую.
// 
// Возвращаемое значение:
//	ТаблицаЗначений 
//
Функция ШаблонТаблицыРезультатаРасчетаРасстояний(ДобавляемыеИндексы = "") Экспорт
	
	Результат = Новый ТаблицаЗначений;
	
	СтруктураСтроки = СтруктураРезультатаРасчетаРасстояний();
	Для каждого КлючИЗначение Из СтруктураСтроки Цикл
		Результат.Колонки.Добавить(КлючИЗначение.Ключ);	
	КонецЦикла; 
	
	Если ЗначениеЗаполнено(ДобавляемыеИндексы) Тогда
		ВсеИндексы = СтрРазделить(СтрЗаменить(ДобавляемыеИндексы, " ", ""), ",", Ложь);
		Для каждого ДобавляемыйИндекс Из ВсеИндексы Цикл
			Результат.Индексы.Добавить(ДобавляемыйИндекс);		
		КонецЦикла; 
	КонецЕсли; 
	
	
	Возврат Результат;
	
КонецФункции
 
#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыРасчетаПоТочкеИСтолбцу()
	
	Параметры = Новый Структура;
	Параметры.Вставить("ТочкаИсточник");
	Параметры.Вставить("ТочкиНазначения");
	
	Параметры.Вставить("СпособРасчетаМаршрута", Неопределено);
	Параметры.Вставить("ПолучитьРезультатВВидеТаблицы", Ложь);
	Параметры.Вставить("ТекстОшибки", "");
	
	
	Возврат Параметры;
	
КонецФункции

Функция ПараметрыРасчетаВФоне()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ОжидатьЗавершение", 0);	
	Параметры.Вставить("РезультатВыполненияДлительнойОперации");

	
	Возврат Параметры;
	
КонецФункции
 
#КонецОбласти 