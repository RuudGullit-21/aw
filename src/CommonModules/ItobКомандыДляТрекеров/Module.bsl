////////////////////////////////////////////////////////////////////////////////
// Команды для трекеров (сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет в событие "При создании на сервере" обработки "ItobРабочееМестоДиспетчера" дополнительную обработку.
//
// Параметры:
//  ЭтотОбъект	 - УправляемаяФорма	 - Форма обработки "ItobРабочееМестоДиспетчера".
//
Процедура РабочееМестоДиспетчераПриСозданииНаСервере(ЭтотОбъект) Экспорт
	Форма = ЭтотОбъект.ЭтаФорма;

	Команда = ItobОбщегоНазначения.ДобавитьКомандуНаФорму(Форма, "ОтправитьКомандуНаТрекер", "Подключаемый_ОтправитьКомандуНаТрекер", Новый Структура("Заголовок",НСтр("ru = 'Отправить команду на трекер'")));
	ItobОбщегоНазначения.ДобавитьЭлементНаФорму(Форма, "ДеревоОбъектовМониторингаОтправитьКомандуНаТрекер", Тип("КнопкаФормы"),Форма.Элементы.ДеревоОбъектовМониторингаКонтекстноеМеню,Новый Структура("ИмяКоманды,Картинка",Команда.Имя,ItobОбщегоНазначенияКлиентСервер.ПолучитьКартинкуИзБиблиотеки("Обработка")));
	
КонецПроцедуры

// Процедура отправляет команду на трекер.
//
// Параметры:
//  Терминал		 - СправочникСсылка.ItobТерминалы	 - Указатель на терминал.
//  Команда			 - Строка							 - Команда.
//  ТекстОшибки		 - Строка							 - Текст ошибки.
//  ПисатьВЖурнал	 - Булево							 - Результат писать в журнал регистрации.
// 
// Возвращаемое значение:
//  Булево - Результат выполнения команды.
//
Функция ВыполнитьКомандуНаСервере(Терминал, Команда, ТекстОшибки, ПисатьВЖурнал = Ложь) Экспорт
	Результат = _ВыполнитьКомандуНаСервере(Терминал, Команда, ТекстОшибки);
	
	Если ПисатьВЖурнал Тогда
		Если Результат Тогда
			ЗаписьЖурналаРегистрации(НСтр("ru = 'НазначеннаяКоманда'","ru"),УровеньЖурналаРегистрации.Информация,,,НСтр("ru = 'РегламентноеЗаданиеВыполнениеКоманды, успешная отправка на трекер'")+" "+Терминал);
		Иначе
			ЗаписьЖурналаРегистрации(НСтр("ru = 'НазначеннаяКоманда'","ru"),УровеньЖурналаРегистрации.Ошибка,,,НСтр("ru = 'РегламентноеЗаданиеВыполнениеКоманды, ошибка отправки команды на терминал'")+" "+Терминал+": "+ТекстОшибки);
		КонецЕсли;
	КонецЕсли; 
	
	Возврат Результат
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура отправляет команду на трекер
//
Функция _ВыполнитьКомандуНаСервере(Терминал, Команда, ТекстОшибки)
			
	СерверSMS = Константы.ItobАдресSmsСервера.Получить();
	Если ПустаяСтрока(СерверSMS) Тогда
		ТекстОшибки = НСтр("ru = 'В настройках системы не указан адрес Sms сервера!'");
		Возврат Ложь;
	
	КонецЕсли;
	
	ПортSMS = Константы.ItobПортSmsСервера.Получить();
	Если ПортSMS = 0 Тогда
		ТекстОшибки = НСтр("ru = 'В настройках системы не указан порт Sms сервера!'");
		Возврат Ложь;		
	
	КонецЕсли;
	
	ДанныеТерминала = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Терминал, "СерверСбораДанных.Логин, СерверСбораДанных.Пароль");
	ЛогинРепликации = ДанныеТерминала.СерверСбораДанныхЛогин;
	ПарольРепликации = ДанныеТерминала.СерверСбораДанныхПароль;
	
	Результат = Ложь;
	
	Попытка
	
		HTTP = Новый HTTPСоединение(СерверSMS,ПортSMS);
		ЗапросHTTP = Новый HTTPЗапрос("/SendSms?login="+ЛогинРепликации+"&pwd="+ПарольРепликации+"&cmd=sms&text="+Команда+"&device_code="+Формат(Терминал.Код,"ЧЦ=15; ЧН=0; ЧГ=0"));
		РезультатСкачивания = Ложь;
		Попытка
		    ОтветHTTP = HTTP.ВызватьHTTPМетод("GET", ЗапросHTTP);
			ОтветСервера = ОтветHTTP.ПолучитьТелоКакСтроку();
			Если ВРЕГ(СокрЛП(ОтветСервера)) = "OK" Тогда
				Результат = Истина;					
			Иначе
				ТекстОшибки = ОтветСервера;		
			КонецЕсли;			
		Исключение
		   	ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		
	КонецПопытки;	
	
	Возврат Результат;

КонецФункции

#КонецОбласти
