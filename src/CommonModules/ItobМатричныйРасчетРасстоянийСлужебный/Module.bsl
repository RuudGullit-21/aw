
#Область СлужебныйПрограммныйИнтерфейс

Функция РасчетПоТочкеИСтолбцу(ВходящиеПараметры, АдресРезультата = Неопределено) Экспорт
	
	Если ВходящиеПараметры.ТочкаИсточник = Неопределено ИЛИ ВходящиеПараметры.ТочкиНазначения.Количество() = 0 Тогда
		Возврат Неопределено;		
	КонецЕсли;
	
	Источники = Новый Массив;
	Источники.Добавить(ВходящиеПараметры.ТочкаИсточник);
	
	// На геосервис отправляются сгруппированные по координатам назначения.
	//	Связь между "настоящим" пакетом и фактически отправленным сохраняется в соответствии "СвязьИсходныхИАктуальныхИндексов".
	//	Затем по этой связи будут получены требуемые координаты для каждого исходного назначения.
	УникальныеНазначения = Новый Массив;
	ИндексыУникальныхНазначений = Новый Соответствие;
	СвязьИсходныхИАктуальныхИндексов = Новый Соответствие;
	ИсходныйИндекс = 0;
	СледующийАктуальныйИндексНазначения = 0;
	Для каждого Назначение Из ВходящиеПараметры.ТочкиНазначения Цикл		
		КлючПоиска = Строка(Назначение.Широта) + "_" + Строка(Назначение.Долгота);		

		Если ИндексыУникальныхНазначений[КлючПоиска] = Неопределено Тогда
			ИндексыУникальныхНазначений.Вставить(КлючПоиска, СледующийАктуальныйИндексНазначения);		
			СледующийАктуальныйИндексНазначения = СледующийАктуальныйИндексНазначения + 1;
			
			УникальныеНазначения.Добавить(Назначение);
		КонецЕсли; 
		 
		СвязьИсходныхИАктуальныхИндексов.Вставить(ИсходныйИндекс, ИндексыУникальныхНазначений[КлючПоиска]); 
		
		ИсходныйИндекс = ИсходныйИндекс + 1;
	КонецЦикла; 
		
	ПараметрыРасчетаНаГеосервисе = ItobГеографическиеСервисы.ПараметрыРасчетаРасстояний();
	ПараметрыРасчетаНаГеосервисе.Источники = Источники;
	ПараметрыРасчетаНаГеосервисе.Назначения = УникальныеНазначения;
	ПараметрыРасчетаНаГеосервисе.СпособРасчетаМаршрута = ВходящиеПараметры.СпособРасчетаМаршрута;
	РасстоянияИВремена = ItobГеографическиеСервисы.МатричныйРасчетРасстояний(ПараметрыРасчетаНаГеосервисе, ВходящиеПараметры.ТекстОшибки);
	Если ЗначениеЗаполнено(ВходящиеПараметры.ТекстОшибки) ИЛИ НЕ ЗначениеЗаполнено(РасстоянияИВремена) Тогда
		Возврат Неопределено;	
	КонецЕсли; 
	
	РезультатРасчета = Неопределено;
	Если ВходящиеПараметры.ПолучитьРезультатВВидеТаблицы Тогда
		 РезультатРасчета = СформироватьРезультатРасчетаРасстоянийВВидеТаблицы(РасстоянияИВремена,
															   				   Источники,
															   				   ВходящиеПараметры.ТочкиНазначения,
																			   СвязьИсходныхИАктуальныхИндексов);	
	Иначе
		РезультатРасчета = СформироватьРезультатРасчетаРасстоянийВВидеМассива(РасстоянияИВремена,
										   				  					  Источники,
										   				   					  ВходящиеПараметры.ТочкиНазначения,
														 					  СвязьИсходныхИАктуальныхИндексов);
	КонецЕсли; 
	
	
	Если НЕ АдресРезультата = Неопределено Тогда
		ПоместитьВоВременноеХранилище(РезультатРасчета, АдресРезультата);	
	КонецЕсли; 
	
	
	Возврат РезультатРасчета;
	
КонецФункции
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьРезультатРасчетаРасстоянийВВидеТаблицы(РасстоянияИВремена, ТочкиИсточники, ИсходныеТочкиНазначения, СвязьИсходныхИАктуальныхИндексов)
	
	РезультатРасчета = ItobМатричныйРасчетРасстояний.ШаблонТаблицыРезультатаРасчетаРасстояний();
	Для СчетчикИсточники = 0 По ТочкиИсточники.Количество() - 1 Цикл
		Источник = ТочкиИсточники[СчетчикИсточники];
		Для СчетчикНазначения = 0 По ИсходныеТочкиНазначения.Количество() - 1 Цикл
			НовСтрока = РезультатРасчета.Добавить();
			
			ПараметрыЗаполнения = ПараметрыЗаполненияСтрокиВРезультирующемПакете();
			ПараметрыЗаполнения.ТочкаИсточник = Источник;
			ПараметрыЗаполнения.ТекущаяТочкаНазначения = ИсходныеТочкиНазначения[СчетчикНазначения];
			ПараметрыЗаполнения.ИндексИсточника = СчетчикИсточники;
			ПараметрыЗаполнения.ИндексНазначения = СчетчикНазначения;
			ПараметрыЗаполнения.РасстоянияИВремена = РасстоянияИВремена;
			ПараметрыЗаполнения.СвязьИсходныхИАктуальныхИндексов = СвязьИсходныхИАктуальныхИндексов;
			ЗаполнитьСтрокуВРезультирующемПакете(НовСтрока, ПараметрыЗаполнения);			
		КонецЦикла;
	КонецЦикла; 
		
	
	Возврат РезультатРасчета;
	
КонецФункции
 
Функция СформироватьРезультатРасчетаРасстоянийВВидеМассива(РасстоянияИВремена, ТочкиИсточники, ИсходныеТочкиНазначения, СвязьИсходныхИАктуальныхИндексов)
	
	РезультатРасчета = Новый Массив;	
	Для СчетчикИсточники = 0 По ТочкиИсточники.Количество() - 1 Цикл
		Источник = ТочкиИсточники[СчетчикИсточники];
		Для СчетчикНазначения = 0 По ИсходныеТочкиНазначения.Количество() - 1 Цикл
			ТекущаяСтруктураРезультата = ItobМатричныйРасчетРасстояний.СтруктураРезультатаРасчетаРасстояний();
			
			ПараметрыЗаполнения = ПараметрыЗаполненияСтрокиВРезультирующемПакете();
			ПараметрыЗаполнения.ТочкаИсточник = Источник;
			ПараметрыЗаполнения.ТекущаяТочкаНазначения = ИсходныеТочкиНазначения[СчетчикНазначения];
			ПараметрыЗаполнения.ИндексИсточника = СчетчикИсточники;
			ПараметрыЗаполнения.ИндексНазначения = СчетчикНазначения;
			ПараметрыЗаполнения.РасстоянияИВремена = РасстоянияИВремена;
			ПараметрыЗаполнения.СвязьИсходныхИАктуальныхИндексов = СвязьИсходныхИАктуальныхИндексов;
			ЗаполнитьСтрокуВРезультирующемПакете(ТекущаяСтруктураРезультата, ПараметрыЗаполнения);
			
			РезультатРасчета.Добавить(ТекущаяСтруктураРезультата);
		КонецЦикла; 
	КонецЦикла;  
	
		
	Возврат РезультатРасчета;
	
КонецФункции

Функция ПараметрыЗаполненияСтрокиВРезультирующемПакете()
	
	Параметры = Новый Структура;
	Параметры.Вставить("ТочкаИсточник");
	Параметры.Вставить("ТекущаяТочкаНазначения");
	Параметры.Вставить("ИндексИсточника");   	// Внешний индекс (чтобы можно было понять, между какими точками подсчитано расстояние).
	Параметры.Вставить("ИндексНазначения");   	// Внешний индекс (чтобы можно было понять, между какими точками подсчитано расстояние).
	Параметры.Вставить("РасстоянияИВремена");	// Указатель на возвращенную с геосервиса коллекцию рассчитанных расстояний и времен.
	
	// Если указано, то ожидается указатель на соответствие между индексом из исходного пакета назначений (ключ)
	//	и индексом из пакета уникальных назначений.
	//	Требуется для уменьшения нагрузки на геосервис (чтобы не считать неуникальные координаты).
	//	Если не указано, то считается, что индексы в исходном и рассчитанном пакете взаимно однозначны.
	Параметры.Вставить("СвязьИсходныхИАктуальныхИндексов", Неопределено);		
	
	
	Возврат Параметры;
	
КонецФункции
 
Процедура ЗаполнитьСтрокуВРезультирующемПакете(РезультирующаяСтрока, ПараметрыЗаполнения)
	
	РезультирующаяСтрока.Индекс1 = ПараметрыЗаполнения.ТочкаИсточник.Индекс;
	РезультирующаяСтрока.Индекс2 = ПараметрыЗаполнения.ТекущаяТочкаНазначения.Индекс;
	РезультирующаяСтрока.АдресПолучателя1 = ПараметрыЗаполнения.ТочкаИсточник.Адрес;
	РезультирующаяСтрока.АдресПолучателя2 = ПараметрыЗаполнения.ТекущаяТочкаНазначения.Адрес;
	РезультирующаяСтрока.Широта1 = ПараметрыЗаполнения.ТочкаИсточник.Широта;
	РезультирующаяСтрока.Широта2 = ПараметрыЗаполнения.ТекущаяТочкаНазначения.Широта;
	РезультирующаяСтрока.Долгота1 = ПараметрыЗаполнения.ТочкаИсточник.Долгота;
	РезультирующаяСтрока.Долгота2 = ПараметрыЗаполнения.ТекущаяТочкаНазначения.Долгота;
	
	АктуальныйИндексИсточника = ПараметрыЗаполнения.ИндексИсточника;
	АктуальныйИндексНазначения = Неопределено;
	Если ПараметрыЗаполнения.СвязьИсходныхИАктуальныхИндексов = Неопределено Тогда
		АктуальныйИндексНазначения = ПараметрыЗаполнения.ИндексНазначения;
	Иначе
		АктуальныйИндексНазначения = ПараметрыЗаполнения.СвязьИсходныхИАктуальныхИндексов[ПараметрыЗаполнения.ИндексНазначения];
	КонецЕсли; 
	
	Если АктуальныйИндексНазначения = Неопределено Тогда
		ВызватьИсключение "Ошибка при матричном расчете расстояний: неверный результирующий пакет";	
	КонецЕсли; 
	
	РезультирующаяСтрока.Расстояние = ПараметрыЗаполнения.РасстоянияИВремена.Расстояния[АктуальныйИндексИсточника][АктуальныйИндексНазначения];
	РезультирующаяСтрока.Время = ПараметрыЗаполнения.РасстоянияИВремена.Времена[АктуальныйИндексИсточника][АктуальныйИндексНазначения];
	
КонецПроцедуры

#КонецОбласти