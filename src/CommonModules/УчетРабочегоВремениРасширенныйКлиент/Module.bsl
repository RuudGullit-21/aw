
#Область СлужебныеПроцедурыИФункции

Процедура ТабельОрганизацияПриИзменении(Форма) Экспорт
	Форма.Объект.ДанныеОВремени.Очистить();	
КонецПроцедуры	

Процедура ТабельДанныеОВремениПередНачаломДобавления(Форма, Элемент, Отказ, Копирование, Родитель, Группа) Экспорт
	Отказ = Истина;
	Форма.Модифицированность = Истина;
	
	ИдентификаторТекущейСтроки = Элемент.ТекущаяСтрока;
	ДобавленныеСтроки = Новый Массив;
		
	ДанныеНовойСтроки = Форма.Объект.ДанныеОВремени.Добавить();
	ДобавленныеСтроки.Добавить(ДанныеНовойСтроки);
	
	ИдентификаторНовойСтроки = ДанныеНовойСтроки.ПолучитьИдентификатор();
	ИндексНовойСтроки = Форма.Объект.ДанныеОВремени.Индекс(ДанныеНовойСтроки);
	
	Если ИндексНовойСтроки = 0 Тогда
		НомерСтрокиПредыдущегоСотрудника = 0;
	Иначе
		НомерСтрокиПредыдущегоСотрудника = Форма.Объект.ДанныеОВремени[ИндексНовойСтроки - 1].НомерСтрокиСотрудник;
	КонецЕсли;
	
	ДанныеНовойСтроки.НомерСтрокиСотрудник = НомерСтрокиПредыдущегоСотрудника + 1;
	ДанныеНовойСтроки.ЭтоПерваяСтрокаПоСотруднику = Истина;
	ДанныеНовойСтроки.ЧетнаяСтрока = (ДанныеНовойСтроки.НомерСтрокиСотрудник % 2 = 0); 
	
	Для НомерСтроки = 2 По Форма.ВысотаСтроки Цикл
		НоваяСтрокаПоСотруднику = Форма.Объект.ДанныеОВремени.Добавить();
		НоваяСтрокаПоСотруднику.Сотрудник = ДанныеНовойСтроки.Сотрудник;
		НоваяСтрокаПоСотруднику.НомерСтрокиСотрудник = ДанныеНовойСтроки.НомерСтрокиСотрудник;
		НоваяСтрокаПоСотруднику.ЧетнаяСтрока = ДанныеНовойСтроки.ЧетнаяСтрока;
		НоваяСтрокаПоСотруднику.ЭтоПерваяСтрокаПоСотруднику = Ложь;
		
		ДобавленныеСтроки.Добавить(НоваяСтрокаПоСотруднику);
	КонецЦикла;		
	
	Если Копирование Тогда
		ЗаполнитьДанныеКопируемойСтроки(Форма.Объект.ДанныеОВремени, ДобавленныеСтроки, ИдентификаторТекущейСтроки)	
	КонецЕсли;	
	
	Форма.Элементы.ДанныеОВремени.ТекущаяСтрока = ИдентификаторНовойСтроки;	
	Форма.Элементы.ДанныеОВремени.ТекущийЭлемент = Форма.Элементы.ДанныеОВремениСотрудник;
	Форма.Элементы.ДанныеОВремени.ИзменитьСтроку();
КонецПроцедуры

Процедура ЗаполнитьДанныеКопируемойСтроки(ДанныеОВремени, ЗаполняемыеСтроки, ИдентификаторКопируемойСтроки)
	КопируемаяСтрока = ДанныеОВремени.НайтиПоИдентификатору(ИдентификаторКопируемойСтроки);
	
	СтрокиИсточникиДанных = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельСтрокиПоСотруднику(ДанныеОВремени, КопируемаяСтрока.НомерСтрокиСотрудник);
	
	НезаполянемыеСвойства = "НомерСтрокиСотрудник, ЧетнаяСтрока, ЭтоПерваяСтрокаПоСотруднику, Сотрудник, НеЗаполнятьПриИзмененииСотрудника";

	Для Индекс = 0 По СтрокиИсточникиДанных.Количество() - 1 Цикл 		
		СтрокаПриемник = ЗаполняемыеСтроки[Индекс]; 
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокиИсточникиДанных[Индекс], ,НезаполянемыеСвойства);
		
		Если СтрокаПриемник.ЭтоПерваяСтрокаПоСотруднику Тогда
			СтрокаПриемник.НеЗаполнятьПриИзмененииСотрудника = Истина;
		КонецЕсли;	
	КонецЦикла;		
КонецПроцедуры	

Процедура ТабельВводДанныхОВремениЗаДень(ДанныеОВремени, ДанныеТекущейСтроки, НомерДня, ВидОтображенияВремени)
	Если ДанныеОВремени.Часы <> 0 Тогда
		Часы = ДанныеОВремени.Часы;
	ИначеЕсли ДанныеОВремени.ВидВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.уатВидыИспользованияРабочегоВремени.Явка") Тогда
		Часы = ДанныеТекущейСтроки["ЧасовНорма" + НомерДня];
	Иначе
		Часы = 0;
	КонецЕсли;	
	
	ДанныеТекущейСтроки["ВидВремени" + НомерДня] = ДанныеОВремени.ВидВремени;
	ДанныеТекущейСтроки["Часов" + НомерДня] = Окр(Часы, 2);
	ДанныеТекущейСтроки["Время" + НомерДня + "Представление"] = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельПредставлениеВремениПоВиду(ДанныеОВремени.БуквенноеОбозначение, Окр(Часы, 2), ВидОтображенияВремени);	
КонецПроцедуры

Функция ТабельДанныеОВремениИзПредставления(Форма, Знач ПредставлениеДанныхОВремени, ДанныеТекущейСтроки, НомерДня, Отказ = Ложь)
	ДанныеОВремени = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельРазобратьСтрокуВремени(Форма.ОписаниеВидовВремени, Форма.ОбозначениеВидаВремениПоУмолчанию, ПредставлениеДанныхОВремени, Отказ);
	
	Если Отказ = Истина Тогда
		Возврат Неопределено;
	ИначеЕсли ДанныеОВремени = Неопределено Или ДанныеОВремени.БуквенноеОбозначение = "" И ДанныеОВремени.Часы = 0  Тогда 
		Возврат Новый Структура("ВидВремени, БуквенноеОбозначение, Часы",  ПредопределенноеЗначение("Справочник.уатВидыИспользованияРабочегоВремени.ПустаяСсылка"), "", 0);	
	ИначеЕсли ДанныеОВремени.БуквенноеОбозначение = "" Тогда 
		Если ПустаяСтрока(ДанныеТекущейСтроки["ВидВремениПоУмолчаниюОбозначение" + НомерДня]) Тогда 
			Возврат Новый Структура("ВидВремени, БуквенноеОбозначение, Часы",  ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.уатВидыИспользованияРабочегоВремени.Явка"), Форма.ОбозначениеВидаВремениПоУмолчанию, ДанныеОВремени.Часы);
		ИначеЕсли ДанныеТекущейСтроки.ЭтоПерваяСтрокаПоСотруднику Тогда
			ОписаниеВидаВремени = Форма.ОписаниеВидовВремени.Получить(ДанныеТекущейСтроки["ВидВремениПоУмолчаниюОбозначение" + НомерДня]);
			Возврат Новый Структура("ВидВремени, БуквенноеОбозначение, Часы",  ОписаниеВидаВремени.ВидВремени, ДанныеТекущейСтроки["ВидВремениПоУмолчаниюОбозначение" + НомерДня], ДанныеОВремени.Часы);
		Иначе
			Возврат Новый Структура("ВидВремени, БуквенноеОбозначение, Часы",   ПредопределенноеЗначение("Справочник.уатВидыИспользованияРабочегоВремени.ПустаяСсылка"), "", ДанныеОВремени.Часы);	
		КонецЕсли;	
	Иначе	
		ОписаниеВидаВремени = Форма.ОписаниеВидовВремени.Получить(ДанныеОВремени.БуквенноеОбозначение);
		Если ОписаниеВидаВремени = Неопределено Тогда
			Отказ = Истина;
			Возврат Неопределено;
		Иначе			
			Возврат Новый Структура("ВидВремени, БуквенноеОбозначение, Часы", ОписаниеВидаВремени.ВидВремени, ДанныеОВремени.БуквенноеОбозначение, ДанныеОВремени.Часы);
		КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура ТабельДанныеОВремениВремяПредставлениеОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	Отказ = Ложь;
	ДанныеТекущейСтроки = Форма.Элементы.ДанныеОВремени.ТекущиеДанные;
	НомерДня = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельНомерДняПоИмениЭлемента(Элемент.Имя);
	ДанныеОВремени = ТабельДанныеОВремениИзПредставления(Форма, Текст, ДанныеТекущейСтроки, НомерДня, Отказ);       
	Если Отказ Тогда		
		ПоказатьПредупреждение(, НСтр("ru = 'В поле введены некорректные данные.'"));
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(ДанныеТекущейСтроки["Время" + НомерДня + "Представление"]);
	Иначе 
		ВидОтображенияВремени = Форма.ЭтотОбъект.ПереключательВидаОтображенияВремени;
		ТабельВводДанныхОВремениЗаДень(ДанныеОВремени, ДанныеТекущейСтроки, НомерДня, ВидОтображенияВремени);
	КонецЕсли;	
КонецПроцедуры

Процедура ТабельДанныеОВремениВремяПредставлениеАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка) Экспорт
	
	Если Не ПустаяСтрока(Текст) Тогда
		ВидОтображенияВремени = Форма.ЭтотОбъект.ПереключательВидаОтображенияВремени;
		ДанныеОВремени = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельРазобратьСтрокуВремени(
							Форма.ОписаниеВидовВремени, 
							Форма.ОбозначениеВидаВремениПоУмолчанию,
							Текст,,ВидОтображенияВремени); 
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		Если ДанныеОВремени = Неопределено Тогда
			Возврат;
		КонецЕсли;	
			
		БуквенноеОбозначение = ДанныеОВремени.БуквенноеОбозначение;	
		ДлинаТекста = СтрДлина(БуквенноеОбозначение);
		
		ДобавленныеЗначения = Новый Массив;
		
		Для Каждого ОписаниеВидаВремени Из Форма.ОписаниеВидовВремени Цикл
			Если ВРег(ОписаниеВидаВремени.Ключ) = ВРег(БуквенноеОбозначение) Тогда
				ЗначениеВыбора = Новый Структура;
				Для Каждого КлючЗначение Из ОписаниеВидаВремени.Значение Цикл
					ЗначениеВыбора.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
				КонецЦикла;	
				ЗначениеВыбора.Вставить("БуквенноеОбозначение", ОписаниеВидаВремени.Ключ);
				ЗначениеВыбора.Вставить("Часы", ДанныеОВремени.Часы);
				Если ВидОтображенияВремени = "0" Тогда
					ЧасыСтрока = ?(ДанныеОВремени.Часы = 0, "", " " + Формат(ДанныеОВремени.Часы, "ЧГ="));
					ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")" + ЧасыСтрока;
				Иначе
					мМинуты = Окр(Окр(ДанныеОВремени.Часы - Цел(ДанныеОВремени.Часы), 2)*60);
					мЧасы   = Цел(ДанныеОВремени.Часы);
					Если мМинуты = 0 И мЧасы = 0 Тогда
						ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")";
					Иначе
						мДата   = мЧасы + (мМинуты/100);
						мДата   = Формат(мДата, "ЧДЦ=2; ЧРД=:");
						ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")" + " " + мДата;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеВыбора.Добавить(ЗначениеВыбора, ПредставлениеЗначенияВыбора);
				
				ДобавленныеЗначения.Добавить(ОписаниеВидаВремени.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Если Не ДанныеОВремени.ЕстьРазделитель Или ДобавленныеЗначения.Количество() = 0 Тогда
			Для Каждого ОписаниеВидаВремени Из Форма.ОписаниеВидовВремени Цикл
				Если Лев(ВРег(ОписаниеВидаВремени.Ключ), ДлинаТекста) = ВРег(БуквенноеОбозначение) 
					И ДобавленныеЗначения.Найти(ОписаниеВидаВремени.Ключ) = Неопределено Тогда
								
					ЗначениеВыбора = Новый Структура;
					Для Каждого КлючЗначение Из ОписаниеВидаВремени.Значение Цикл
						ЗначениеВыбора.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
					КонецЦикла;	
					ЗначениеВыбора.Вставить("БуквенноеОбозначение", ОписаниеВидаВремени.Ключ);
					ЗначениеВыбора.Вставить("Часы", ДанныеОВремени.Часы);
					Если ВидОтображенияВремени = "0" Тогда
						ЧасыСтрока = ?(ДанныеОВремени.Часы = 0, "", " " + Формат(ДанныеОВремени.Часы, "ЧГ="));
						ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")" + ЧасыСтрока;
					Иначе
						мМинуты = Окр(Окр(ДанныеОВремени.Часы - Цел(ДанныеОВремени.Часы), 2)*60);
						мЧасы   = Цел(ДанныеОВремени.Часы);
						Если мМинуты = 0 И мЧасы = 0 Тогда
							ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")";
						Иначе
							мДата   = мЧасы + (мМинуты/100);
							мДата   = Формат(мДата, "ЧДЦ=2; ЧРД=:");
							ПредставлениеЗначенияВыбора = ОписаниеВидаВремени.Значение.Наименование + " (" + ОписаниеВидаВремени.Ключ + ")" + " " + мДата;
						КонецЕсли;
					КонецЕсли;
					
					ДанныеВыбора.Добавить(ЗначениеВыбора, ПредставлениеЗначенияВыбора);
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ТабельДанныеОВремениВремяПредставлениеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда      
		НомерДня = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельНомерДняПоИмениЭлемента(Элемент.Имя);
		ДанныеТекущейСтроки = Форма.Элементы.ДанныеОВремени.ТекущиеДанные;
		
		СтандартнаяОбработка = Ложь;
		Если ДанныеТекущейСтроки <> Неопределено Тогда
		
			ИмяТекущегоРеквизита = "Время" + НомерДня + "Представление"; 
			
			ДанныеОВремени = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельРазобратьСтрокуВремени(Форма.ОписаниеВидовВремени, Форма.ОбозначениеВидаВремениПоУмолчанию, ДанныеТекущейСтроки[ИмяТекущегоРеквизита]);
			
			ОписаниеВыбранногоВидаВремени = Форма.ОписаниеВидовВремени.Получить(ВыбранноеЗначение.БуквенноеОбозначение);
			
			Если Не ВыбранноеЗначение.Свойство("Часы") Тогда
				ВыбранноеЗначение.Вставить("Часы", 0);
			КонецЕсли;	
			Если ВыбранноеЗначение.Часы = 0
				И ДанныеОВремени <> Неопределено 
				И ОписаниеВыбранногоВидаВремени <> Неопределено Тогда
				
				ВыбранноеЗначение.Часы = ДанныеОВремени.Часы;
			КонецЕсли;
			ВидОтображенияВремени = Форма.ЭтотОбъект.ПереключательВидаОтображенияВремени;
			ТабельВводДанныхОВремениЗаДень(ВыбранноеЗначение, ДанныеТекущейСтроки, НомерДня, ВидОтображенияВремени);
		КонецЕсли;			
	КонецЕсли;	
	Форма.Модифицированность = Истина;
КонецПроцедуры

Процедура ТабельДанныеОВремениПередОкончаниемРедактирования(Форма, Элемент, НоваяСтрока, ОтменаРедактирования, Отказ) Экспорт 
	ДанныеТекущейСтроки   = Форма.Элементы.ДанныеОВремени.ТекущиеДанные;
	ВидОтображенияВремени = Форма.ЭтотОбъект.ПереключательВидаОтображенияВремени;
	Если ДанныеТекущейСтроки <> Неопределено Тогда
		ГоловнаяСтрока = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельГоловнаяСтрокаТекущегоСотрудника(Форма.Объект.ДанныеОВремени, ДанныеТекущейСтроки);
		МассивСтрок = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельСтрокиПоСотруднику(Форма.Объект.ДанныеОВремени, ГоловнаяСтрока.НомерСтрокиСотрудник);
		ОбозначенияВидовВремени = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельОбозначенияВидовВремени(Форма.ОписаниеВидовВремени);
		УчетРабочегоВремениРасширенныйКлиентСервер.ТабельЗаполнитьИтогиПоСотруднику(МассивСтрок, ОбозначенияВидовВремени, ВидОтображенияВремени);
		
		СтрокаЗаполнена = Ложь;
		Для Сч = 1 По 31 Цикл
			Если Не ДанныеТекущейСтроки["ВидВремени" + Сч].Пустая() Тогда
				СтрокаЗаполнена = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		ВсеСтрокиЗаполнены = Истина;
		Для Каждого СтрокаПоСотруднику Из МассивСтрок Цикл
			Если СтрокаПоСотруднику.НомерСтроки <> ДанныеТекущейСтроки.НомерСтроки 
				И СтрокаПоСотруднику.ПустаяСтрока Тогда
				
				ВсеСтрокиЗаполнены = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ВсеСтрокиЗаполнены И ДанныеТекущейСтроки.ПустаяСтрока И СтрокаЗаполнена Тогда
			Форма.КоличествоПолностьюЗаполненныхСтрок = Форма.КоличествоПолностьюЗаполненныхСтрок + 1;
		ИначеЕсли ВсеСтрокиЗаполнены И (Не ДанныеТекущейСтроки.ПустаяСтрока) И (Не СтрокаЗаполнена) Тогда
			Форма.КоличествоПолностьюЗаполненныхСтрок = Форма.КоличествоПолностьюЗаполненныхСтрок - 1;
		КонецЕсли;	
		
		ДанныеТекущейСтроки.ПустаяСтрока = Не СтрокаЗаполнена;
		
		Если НоваяСтрока Тогда
			УчетРабочегоВремениРасширенныйКлиентСервер.ТабельУстановитьИнфонадписьВысотаСтрок(Форма);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ТабельДанныеОВремениПредставлениеНачалоВыбора(Форма, СтандартнаяОбработка, Элемент) Экспорт
	СтандартнаяОбработка = Ложь;
	
	НомерДня = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельНомерДняПоИмениЭлемента(Элемент.Имя);
	ВидВремени = Форма.Элементы.ДанныеОВремени.ТекущиеДанные["ВидВремени" + НомерДня];
	
	ДоступныеВидыВремени = Новый Массив;
	
	Для Каждого ОписаниеВидаВремени Из Форма.ОписаниеВидовВремени Цикл
		ДоступныеВидыВремени.Добавить(ОписаниеВидаВремени.Значение.ВидВремени);
	КонецЦикла;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ссылка", ДоступныеВидыВремени);
		
	ПараметрыФормы = Новый Структура("РежимВыбора, МножественныйВыбор, ЗакрыватьПриВыборе, ТекущаяСтрока, РежимВыбораИнформацииОВидеВремени, Отбор");
	ПараметрыФормы.РежимВыбора = Истина;
	ПараметрыФормы.МножественныйВыбор = Ложь;
	ПараметрыФормы.ЗакрыватьПриВыборе = Истина;
	ПараметрыФормы.ТекущаяСтрока = ВидВремени;
	ПараметрыФормы.РежимВыбораИнформацииОВидеВремени = Истина;
	ПараметрыФормы.Отбор = Отбор;
	
	ОткрытьФорму("Справочник.уатВидыИспользованияРабочегоВремени.Форма.ФормаСписка", ПараметрыФормы, Элемент);	
КонецПроцедуры	

Процедура ТабельПереместитьСтрокуВниз(Форма) Экспорт
	ТабельПереместитьСтроку(Форма, 1);	
КонецПроцедуры	

Процедура ТабельПереместитьСтрокуВверх(Форма) Экспорт 
	ТабельПереместитьСтроку(Форма, -1);		
КонецПроцедуры	

Процедура ТабельПереместитьСтроку(Форма, Направление)
	ДанныеТекущейСтроки = Форма.Элементы.ДанныеОВремени.ТекущиеДанные;
	
	ДанныеОВремени = Форма.Объект.ДанныеОВремени;
	
	Если ДанныеТекущейСтроки = Неопределено 
		Или (ДанныеТекущейСтроки.НомерСтрокиСотрудник = 1 И Направление = -1)
		Или (ДанныеОВремени.Количество() / Форма.ВысотаСтроки = ДанныеТекущейСтроки.НомерСтрокиСотрудник  
			 И Направление = 1) Тогда 
		Возврат
	КонецЕсли;	
	
	ГоловнаяСтрокаПоСотруднику = УчетРабочегоВремениРасширенныйКлиентСервер.ТабельГоловнаяСтрокаТекущегоСотрудника(ДанныеОВремени, ДанныеТекущейСтроки);
	
	ИндексГоловнойСтроки = ДанныеОВремени.Индекс(ГоловнаяСтрокаПоСотруднику);
	
	Смещение = (Форма.ВысотаСтроки * 2) * Направление - 1 * Направление;
	Для Сч = 0 По Форма.ВысотаСтроки - 1 Цикл
		ИндексОбрабатываемойСтроки = ?(Направление = 1, ИндексГоловнойСтроки, ИндексГоловнойСтроки + Форма.ВысотаСтроки - 1);
		ОбрабатываемаяСтрока = ДанныеОВремени[ИндексОбрабатываемойСтроки];
		ОбрабатываемаяСтрока.ЧетнаяСтрока = Не ОбрабатываемаяСтрока.ЧетнаяСтрока;
		ОбрабатываемаяСтрока.НомерСтрокиСотрудник = ОбрабатываемаяСтрока.НомерСтрокиСотрудник + Направление;
		ДанныеОВремени.Сдвинуть(ДанныеОВремени.Индекс(ОбрабатываемаяСтрока), Смещение);
	КонецЦикла;	
	
	Для Сч = 0 По Форма.ВысотаСтроки - 1 Цикл
		ОбрабатываемаяСтрока = ДанныеОВремени[ИндексГоловнойСтроки + Сч];
		ОбрабатываемаяСтрока.ЧетнаяСтрока = Не ОбрабатываемаяСтрока.ЧетнаяСтрока;
		ОбрабатываемаяСтрока.НомерСтрокиСотрудник = ОбрабатываемаяСтрока.НомерСтрокиСотрудник - Направление;	
	КонецЦикла;
КонецПроцедуры	

#КонецОбласти
