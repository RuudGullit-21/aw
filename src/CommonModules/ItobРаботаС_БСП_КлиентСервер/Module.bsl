////////////////////////////////////////////////////////////////////////////////
// Работа с БСП (клиент, сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс
	
#Область ПодсистемаБазоваяФункциональность

// Устанавливает свойство ИмяСвойства элемента формы с именем ИмяЭлемента в значение Значение.
// Применяется в тех случаях, когда элемент формы может не быть на форме из-за отсутствия прав у пользователя
// на объект, реквизит объекта или команду.
//
// Параметры:
//  ЭлементыФормы - ВсеЭлементФормы, ЭлементыФормы - коллекция элементов управляемой формы.
//  ИмяЭлемента   - Строка       - имя элемента формы.
//  ИмяСвойства   - Строка       - имя устанавливаемого свойства элемента формы.
//  Значение      - Произвольный - новое значение элемента.
// 
Процедура УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение) Экспорт
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobВызовСервераПовтИсп.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("ОбщегоНазначенияКлиентСервер");
			ОбщийМодуль.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Пример:
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые
//  строки;
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//  РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//  РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
    Результат = Неопределено;
	
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobВызовСервераПовтИсп.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("СтроковыеФункцииКлиентСервер");
			Результат = ОбщийМодуль.РазложитьСтрокуВМассивПодстрок(Строка,Разделитель,ПропускатьПустыеСтроки,СокращатьНепечатаемыеСимволы);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Формирует и выводит сообщение, которое может быть связано с элементом 
// управления формы.
//
// Параметры:
//  ТекстСообщенияПользователю - Строка - текст сообщения.
//  КлючДанных                 - ЛюбаяСсылка - объект или ключ записи информационной базы, к которому это сообщение относится.
//  Поле                       - Строка - наименование реквизита формы.
//  ПутьКДанным                - Строка - путь к данным (путь к реквизиту формы).
//  Отказ                      - Булево - выходной параметр, всегда устанавливается в значение Истина.
//
// Пример:
//
//  1. Для вывода сообщения у поля управляемой формы, связанного с реквизитом объекта:
//  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ПолеВРеквизитеФормыОбъект",
//   "Объект");
//
//  Альтернативный вариант использования в форме объекта:
//  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "Объект.ПолеВРеквизитеФормыОбъект");
//
//  2. Для вывода сообщения рядом с полем управляемой формы, связанным с реквизитом формы:
//  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ИмяРеквизитаФормы");
//
//  3. Для вывода сообщения связанного с объектом информационной базы:
//  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ОбъектИнформационнойБазы, "Ответственный",,Отказ);
//
//  4. Для вывода сообщения по ссылке на объект информационной базы:
//  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), Ссылка, , , Отказ);
//
//  Случаи некорректного использования:
//   1. Передача одновременно параметров КлючДанных и ПутьКДанным.
//   2. Передача в параметре КлючДанных значения типа отличного от допустимых.
//   3. Установка ссылки без установки поля (и/или пути к данным).
//
Процедура СообщитьПользователю(
		Знач ТекстСообщенияПользователю,
		Знач КлючДанных = Неопределено,
		Знач Поле = "",
		Знач ПутьКДанным = "",
		Отказ = Ложь) Экспорт
		
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobВызовСервераПовтИсп.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("ОбщегоНазначенияКлиентСервер");
			ОбщийМодуль.СообщитьПользователю(ТекстСообщенияПользователю,КлючДанных,Поле,ПутьКДанным,Отказ);
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщенияПользователю;
		Сообщение.Поле = Поле;
		
		ЭтоОбъект = Ложь;
		
		#Если НЕ ТонкийКлиент И НЕ ВебКлиент Тогда
			Если КлючДанных <> Неопределено
			   И XMLТипЗнч(КлючДанных) <> Неопределено Тогда
				ТипЗначенияСтрокой = XMLТипЗнч(КлючДанных).ИмяТипа;
				ЭтоОбъект = СтрНайти(ТипЗначенияСтрокой, "Object.") > 0;
			КонецЕсли;
		#КонецЕсли
			
		Если ЭтоОбъект Тогда
			Сообщение.УстановитьДанные(КлючДанных);
		Иначе
			Сообщение.КлючДанных = КлючДанных;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ПутьКДанным) Тогда
			Сообщение.ПутьКДанным = ПутьКДанным;
		КонецЕсли;
			
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает ссылку на общий модуль по имени.
//
// Параметры:
//  Имя	 - Строка	 - имя общего модуля, например:
//  	"ItobОбщегоНазначения",
//  	"ItobОбщегоНазначенияКлиент".
// 
// Возвращаемое значение:
//  ОбщийМодуль - Общий модуль.
//
Функция ПолучитьОбщийМодуль(Имя) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
	    Результат = ОбщегоНазначенияКлиент.ОбщийМодуль(Имя);
	#Иначе
		Результат = ОбщегоНазначения.ОбщийМодуль(Имя);
	#КонецЕсли 
	
	Возврат Результат;	
КонецФункции // ПолучитьОбщийМодуль()
 
#КонецОбласти 

#Область ПодсистемаПечать 
	
// Возвращает макет печатной формы по полному пути к макету.
//
// Параметры:
//  ПолныйПутьКМакету - Строка - полный путь к макету в формате:
//								"Документ.<ИмяДокумента>.<ИмяМакета>"
//								"Обработка.<ИмяОбработки>.<ИмяМакета>"
//								"ОбщийМакет.<ИмяМакета>".
// Возвращаемое значение:
//   ТабличныйДокумент - для макета типа MXL.
//	 ДвоичныеДанные    - для макетов DOC и ODT.
//
Функция ПолучитьМакет(ПолныйПутьКМакету) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
	    Результат = ItobРаботаС_БСП_ВызовСервера.ПолучитьМакет(ПолныйПутьКМакету);
	#Иначе
		Результат = ItobРаботаС_БСП.ПолучитьМакет(ПолныйПутьКМакету);
	#КонецЕсли 
	
	Возврат Результат;
КонецФункции

#КонецОбласти 
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает установленную версию Библиотеки стандартных подсистем
//
Функция ВерсияБСП()
	Возврат ItobРаботаС_БСП_ВызовСервераПовтИсп.ВерсияБСП();
КонецФункции

#КонецОбласти
