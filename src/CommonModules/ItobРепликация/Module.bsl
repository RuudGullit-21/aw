
#Область ПрограммныйИнтерфейс

// Функция - Настройки репликации по умолчанию
// 
// Возвращаемое значение:
//	Структура 
//
Функция НастройкиРепликацииПоУмолчанию() Экспорт
	
	Настройки = Новый Структура;
	Настройки.Вставить("Сервер", "");
	Настройки.Вставить("Порт", 80);
	Настройки.Вставить("Логин", "");
	Настройки.Вставить("Пароль", "");
	Настройки.Вставить("Отключить", Истина);	
	
	Возврат Настройки;
	
КонецФункции

// Получает параметры репликации в виде структуры, преобразуя переданные настройки репликации.
//
// Параметры:
//	ИсточникНастроекСервераСбораДанных - СправочникСсылка.ItobСерверыСбораДанных, СправочникСсылка.ItobТерминалы,  Структура - Любая структура (например, СправочникОбъект, Структура)
//						 				 настроек репликации (см. "ItobРепликация.НастройкиРепликацииПоУмолчанию()"), пригодная для использования через ЗаполнитьЗначенияСвойств, 
//						  				 либо ссылка на справочник ItobСерверыСбораДанных, или ссылка на справочник "ItobТерминалы" с заполненным ССД.
//  ПодобратьМодульОбработчик - Булево - Истина если нужно переопределить модуль обработчик. 
// 
// Возвращаемое значение:
//	Структура
//
Функция ПолучитьПараметрыРепликации(ИсточникНастроекСервераСбораДанных, ПодобратьМодульОбработчик = Истина) Экспорт
	
	ПараметрыРепликации = НастройкиРепликацииПоУмолчанию();

	Если ТипЗнч(ИсточникНастроекСервераСбораДанных) = Тип("СправочникСсылка.ItobСерверыСбораДанных") Тогда
		ЗаполнитьНастройкиПоСерверуСбораДанных(ПараметрыРепликации, ИсточникНастроекСервераСбораДанных);
	ИначеЕсли ТипЗнч(ИсточникНастроекСервераСбораДанных) = Тип("СправочникСсылка.ItobТерминалы") Тогда
		СерверСбораДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникНастроекСервераСбораДанных, "СерверСбораДанных");
		Если НЕ ЗначениеЗаполнено(СерверСбораДанных) Тогда
			ВызватьИсключение "Попытка получить настройки сервера сбора данных из терминала с незаполненным сервером сбора данных";	
		КонецЕсли;
		ЗаполнитьНастройкиПоСерверуСбораДанных(ПараметрыРепликации, СерверСбораДанных);
	Иначе   // Для объекта "СправочникОбъект.ItobСерверыСбораДанных" или структуры.
		ЗаполнитьЗначенияСвойств(ПараметрыРепликации, ИсточникНастроекСервераСбораДанных);
	КонецЕсли;
	
	Если ПодобратьМодульОбработчик Тогда
		ПараметрыРепликации.Вставить("МодульОбработчикИмя", ОпределитьИмяМодуляРепликации());
		ПараметрыРепликации.Вставить("МодульОбработчик", ОбщегоНазначения.ОбщийМодуль(ПараметрыРепликации.МодульОбработчикИмя));	
	КонецЕсли; 
	
	
	Возврат ПараметрыРепликации;
	
КонецФункции

#Область ОберткиЗапросовКСерверуРепликации

// Отправляет тестовый запрос на сервер репликации, проверяя возможность подключения к нему.
//
// Параметры:
//	ИсточникНастроекСервераСбораДанных - СправочникСсылка.ItobСерверыСбораДанных, СправочникСсылка.ItobТерминалы,  Структура - Любая структура (например, СправочникОбъект, Структура)
//						 				 настроек репликации (см. "ItobРепликация.НастройкиРепликацииПоУмолчанию()"), пригодная для использования через ЗаполнитьЗначенияСвойств, 
//						  				 либо ссылка на справочник ItobСерверыСбораДанных, или ссылка на справочник "ItobТерминалы" с заполненным ССД.
//	ТекстОшибки - Строка - Параметр, в который будет возвращен текст ошибки в случае неудачного теста соединения.
//
// Возвращаемое значение:
//	Булево - Результат прохождения теста соединения.
//
Функция ТестСоединенияССерверомРепликации(ИсточникНастроекСервераСбораДанных, ТекстОшибки = "") Экспорт
	
	Результат = Ложь;
	
	ПараметрыРепликации = ПолучитьПараметрыРепликации(ИсточникНастроекСервераСбораДанных);
			
	Если ПараметрыРепликации.Отключить Тогда
		ТекстОшибки = "Репликация на сервере " + ПараметрыРепликации.Сервер + " отключена в настройках";
		Возврат Результат;
	КонецЕсли; 	
	
	ПараметрыРепликации.МодульОбработчик.ТестСоединения(ПараметрыРепликации, ТекстОшибки);
	
	Результат = НЕ ЗначениеЗаполнено(ТекстОшибки);
	
	
	Возврат Результат;
	
КонецФункции


// Функция - Параметры запроса актуальности
// 
// Возвращаемое значение:
//	Структура
//
Функция ПараметрыЗапросаАктуальности() Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ИсточникНастроекСервераСбораДанных");
	ПараметрыЗапроса.Вставить("КодыТерминалов");
	
	ПараметрыЗапроса.Вставить("ОпределятьРазрешенныеСкоростиПоПДД", Ложь);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗапроса, ОбщиеПараметрыЗапросаКСерверуСбораДанных());
	 
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

// Получает данные актуальности по переданному массиву терминалов.
//  См. "ТестСоединенияССерверомРепликации()".
//
// Параметры:
//  ПараметрыЗапроса - Структура - параметры запроса. 
// 
// Возвращаемое значение:
//  Массив - из Структура
//
Функция ПолучитьДанныеАктуальности(ПараметрыЗапроса) Экспорт
	
	ПараметрыРепликации = ПолучитьПараметрыРепликации(ПараметрыЗапроса.ИсточникНастроекСервераСбораДанных);
		
	Возврат ПараметрыРепликации.МодульОбработчик.ПолучитьДанныеАктуальности(ПараметрыРепликации, ПараметрыЗапроса);

КонецФункции


// Функция - Параметры трека
// 
// Возвращаемое значение:
//	Структура
//
Функция ПараметрыТрека() Экспорт
	
	ПараметрыТрека = Новый Структура;
	ПараметрыТрека.Вставить("Терминал");
	ПараметрыТрека.Вставить("ДатаНачала");
	ПараметрыТрека.Вставить("ДатаОкончания");	
	
	ПараметрыТрека.Вставить("ТолькоВалидные", Истина);
	ПараметрыТрека.Вставить("ПреобразоватьДатыКUTC0", Истина);
	ПараметрыТрека.Вставить("КоличествоДополнительныхЗаписей", 0);
	ПараметрыТрека.Вставить("СчетчикНачинаяС", 0);
	ПараметрыТрека.Вставить("ОпределятьМестоположение", Ложь);
	ПараметрыТрека.Вставить("ОпределятьРазрешенныеСкоростиПоПДД", Ложь);

	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыТрека, ОбщиеПараметрыЗапросаКСерверуСбораДанных());
	 
	
	Возврат ПараметрыТрека;
	
КонецФункции

// Возвращает трек терминалы в виде таблицы значений.
//
// Параметры:
//  ПараметрыТрека	 - Структура - параметры терка. 
// 
// Возвращаемое значение:
//	ТаблицаЗначений
//
Функция ТрекТерминала(ПараметрыТрека) Экспорт
	
	ПараметрыРепликации = ПолучитьПараметрыРепликации(ПараметрыТрека.Терминал);		
	
	ПараметрыТрека.Вставить("ДатаНачалаUTC0");
	ПараметрыТрека.Вставить("ДатаОкончанияUTC0");
	Если ПараметрыТрека.ПреобразоватьДатыКUTC0 Тогда
		ПараметрыТрека.ДатаНачалаUTC0 = ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ПараметрыТрека.ДатаНачала);
		ПараметрыТрека.ДатаОкончанияUTC0 = ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ПараметрыТрека.ДатаОкончания);
	Иначе
		ПараметрыТрека.ДатаНачалаUTC0 = ПараметрыТрека.ДатаНачала;
		ПараметрыТрека.ДатаОкончанияUTC0 = ПараметрыТрека.ДатаОкончания;	
	КонецЕсли;
	
	Трек = ПараметрыРепликации.МодульОбработчик.ТрекТерминала(ПараметрыРепликации, ПараметрыТрека);	
	
	
	Возврат Трек;
	
КонецФункции


// Функция - Параметры запроса к данным терминалов
// 
// Возвращаемое значение:
//	Структура 
//
Функция ПараметрыЗапросаКДаннымТерминалов() Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ИсточникНастроекСервераСбораДанных");
	ПараметрыЗапроса.Вставить("ДанныеЗапроса");   // Массив структур (КодТерминала, СчетчикАктуальности и/или ЗапрашиваемыйПериод)
	
	ПараметрыЗапроса.Вставить("ГруппироватьПоТерминалам", Истина);
	ПараметрыЗапроса.Вставить("МаксимумЗаписейПоТерминалу", 10000);
	ПараметрыЗапроса.Вставить("ВключатьДанныеПредыдущейТочки", Ложь);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗапроса, ОбщиеПараметрыЗапросаКСерверуСбораДанных()); 
	
	
	Возврат ПараметрыЗапроса;
	
КонецФункции
 
// Функция - Данные терминалов
//
// Параметры:
//  ПараметрыЗапроса - Структура - параметры запроса.
// 
// Возвращаемое значение:
//	- Соответствие
//  - ТаблицаЗначений
//
Функция ДанныеТерминалов(ПараметрыЗапроса) Экспорт
	
	ПараметрыРепликации = ПолучитьПараметрыРепликации(ПараметрыЗапроса.ИсточникНастроекСервераСбораДанных);
	
	Возврат ПараметрыРепликации.МодульОбработчик.ДанныеТерминалов(ПараметрыРепликации, ПараметрыЗапроса);

КонецФункции


// Функция - Параметры запроса местоположения терминалов
// 
// Возвращаемое значение:
//	Структура 
//
Функция ПараметрыЗапросаМестоположенияТерминалов() Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ИсточникНастроекСервераСбораДанных");
	ПараметрыЗапроса.Вставить("КодыТерминалов");
	ПараметрыЗапроса.Вставить("НаДату");
	
	ПараметрыЗапроса.Вставить("ПреобразоватьПериодКUTC0", Истина);
	ПараметрыЗапроса.Вставить("ОпределятьМестоположение", Ложь);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗапроса, ОбщиеПараметрыЗапросаКСерверуСбораДанных());
	 
	
	Возврат ПараметрыЗапроса;
	
КонецФункции
 
// Функция - Местоположение терминалов
//
// Параметры:
//  ПараметрыЗапроса - Структура - параметры запроса.
// 
// Возвращаемое значение:
//	ТаблицаЗначений 
//
Функция МестоположениеТерминалов(ПараметрыЗапроса) Экспорт
	
	ПараметрыЗапроса.Вставить("ПериодUTC0", 
							  ?(ПараметрыЗапроса.ПреобразоватьПериодКUTC0, 
							  	ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ПараметрыЗапроса.НаДату), 
								ПараметрыЗапроса.НаДату));

	ПараметрыРепликации = ПолучитьПараметрыРепликации(ПараметрыЗапроса.ИсточникНастроекСервераСбораДанных);
	
	
	Возврат ПараметрыРепликации.МодульОбработчик.МестоположениеТерминалов(ПараметрыРепликации, ПараметрыЗапроса);
	
КонецФункции


// Функция - Параметры запроса последнее валидное значение датчика
// 
// Возвращаемое значение:
//	Структура 
//
Функция ПараметрыЗапросаПоследнееВалидноеЗначениеДатчика() Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Терминал");
	ПараметрыЗапроса.Вставить("Датчик");
	ПараметрыЗапроса.Вставить("ИнтервалВалидностиНачало");
	ПараметрыЗапроса.Вставить("ИнтервалВалидностиОкончание");
	ПараметрыЗапроса.Вставить("НаДату");
	
	ПараметрыЗапроса.Вставить("ПреобразоватьПериодКUTC0", Истина);
	ПараметрыЗапроса.Вставить("ТекстОшибки", "");
	ПараметрыЗапроса.Вставить("ТребуемыйФорматДанныхДатчиков", Перечисления.ItobВариантыПолученияДанныхДатчиков.ОбработанныеДанные);
	 
	// Если ложь - преобразуются в массив. Используется, только если указано получение обработанных данных датчиков.
	ПараметрыЗапроса.Вставить("ПреобразоватьОбработанныеДанныеДатчиковВСоответствие", Истина);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

// Функция - Последнее валидное значение датчика
//
// Параметры:
//  ПараметрыЗапроса - Структура - параметры запроса.
// 
// Возвращаемое значение:
//   Структура 
//
Функция ПоследнееВалидноеЗначениеДатчика(ПараметрыЗапроса) Экспорт
	
	ПараметрыЗапроса.Вставить("ПериодUTC0", 
							  ?(ПараметрыЗапроса.ПреобразоватьПериодКUTC0, 
							  	ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ПараметрыЗапроса.НаДату), 
								ПараметрыЗапроса.НаДату));

	ПараметрыРепликации = ПолучитьПараметрыРепликации(ПараметрыЗапроса.Терминал);
	
	
	Возврат ПараметрыРепликации.МодульОбработчик.ПоследнееВалидноеЗначениеДатчика(ПараметрыРепликации, ПараметрыЗапроса);
	
КонецФункции
 
#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Для дальнейшего развития обеспечена поддержка нескольких протоколов.
//	В текущей реализации не требуется.
//
Функция ОпределитьИмяМодуляРепликации() 
		
	Возврат "ItobСвязьССерверомРепликации";
	
КонецФункции

Процедура ЗаполнитьНастройкиПоСерверуСбораДанных(Настройки, СерверСбораДанных)
	
	Поля = Новый Массив;
	Для каждого КлючИЗначение Из Настройки Цикл
		Поля.Добавить(КлючИЗначение.Ключ);	
	КонецЦикла; 
	ДанныеСправочника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СерверСбораДанных, Поля);
	
	ЗаполнитьЗначенияСвойств(Настройки, ДанныеСправочника);
	
КонецПроцедуры

Функция ОбщиеПараметрыЗапросаКСерверуСбораДанных()
	
	Параметры = Новый Структура;	
	Параметры.Вставить("ТребуемыйФорматДанныхДатчиков", Перечисления.ItobВариантыПолученияДанныхДатчиков.НеПолучать);
	
	// Если ложь - преобразуются в массив. Используется, только если указано получение обработанных данных датчиков.
	Параметры.Вставить("ПреобразоватьОбработанныеДанныеДатчиковВСоответствие", Истина);	
	
	Параметры.Вставить("ТекстОшибки", "");

	
	Возврат Параметры;
	
КонецФункции
 
#КонецОбласти 

