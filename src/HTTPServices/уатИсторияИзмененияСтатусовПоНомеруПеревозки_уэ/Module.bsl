
#Область СлужебныеПроцедурыИФункции

Функция ШаблонЗапросаGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);    
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	ТрекНомер = Запрос.ПараметрыURL.Получить("ТрекНомер");  
	
	Если НРег(ИмяМетода) = НРег("tracking") Тогда
		СтруктураОтвет = ПолучитьИсториюИзмененияСтатусовЗаказа(ТрекНомер);
		Ответ.КодСостояния = СтруктураОтвет.КодСостояния;
		Ответ.УстановитьТелоИзСтроки(ПреобразоватьВJSON(СтруктураОтвет.ДанныеОтвета), "UTF-8");
	Иначе
		Результат = Новый Структура("message", "Invalid method name """ + ИмяМетода + """");
		Ответ.КодСостояния = 400;
		Ответ.УстановитьТелоИзСтроки(ПреобразоватьВJSON(Результат), "UTF-8");
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции  

Функция ПреобразоватьВJSON(ВходныеДанные)
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ВходныеДанные);
	ТекстJSON = ЗаписьJSON.Закрыть();
	Возврат ТекстJSON;
КонецФункции   

Функция ПолучитьИсториюИзмененияСтатусовЗаказа(ТрекНомер) 
	
	УчетПланФакта = Константы.уатУчетПланФактаПоМаршрутуВМаршрутныхЛистах.Получить();
	СтруктураОтвет = Новый Структура("КодСостояния, ДанныеОтвета", 500, "");
	ДанныеОтвета = Новый Структура;
	
	Запрос = Новый Запрос();
	Запрос.Текст = уатЗаказыНаТС_уэ.ТекстЗапросаСтатусовПеревозкиПоТрекНомеру(); 
	
	Запрос.УстановитьПараметр("Штрихкод", ТрекНомер);
	РезультатЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	ТаблицаДанныеМаршрутныхЛистов = РезультатЗапроса[3].Выгрузить();
	
	ДанныеОтвета.Вставить("id", ТрекНомер); 
	
	МассивИсторииИзменений = Новый Массив(); 
	
	Если Не РезультатЗапроса[0].Пустой() Тогда 
		
		ДанныеНайденногоДокумента = РезультатЗапроса[0].Выгрузить();
		
		ДанныеОтвета.Вставить("object", Строка(ДанныеНайденногоДокумента[0].ЗаказГрузоотправителя));
		
		// История изменения статусов
		Если Не РезультатЗапроса[4].Пустой() Тогда 
			
			Выборка = РезультатЗапроса[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			СоответствиеСтатусы = Новый Соответствие;
			Пока Выборка.Следующий() Цикл
				// Для каждого груза вычисляем текущий статус в каждый момент изменения статусов
				ВыборкаДетали = Выборка.Выбрать();
				ЗаказГрузоотправителя = Неопределено;
				ГрузовоеМесто = Неопределено;
				Пока ВыборкаДетали.Следующий() Цикл
					СоответствиеСтатусы.Вставить(ВыборкаДетали.ГрузовоеМесто, ВыборкаДетали.Статус);
					ЗаказГрузоотправителя = ВыборкаДетали.Заказ;
					ГрузовоеМесто = ВыборкаДетали.ГрузовоеМесто;
				КонецЦикла;
				
				// Затем получаем список всех активых статусов и выводим его
				мсвСтатусы = Новый Массив;
				Для Каждого КлючИЗначение Из СоответствиеСтатусы Цикл
					Если мсвСтатусы.Найти(КлючИЗначение.Значение) = Неопределено Тогда
						мсвСтатусы.Добавить(КлючИЗначение.Значение);
					КонецЕсли;
				КонецЦикла;
				
				СтруктураСтроки = Новый Структура("Date, Status, Location");
				СтруктураСтроки.Date = Выборка.Период;
				Местоположение = Строка(уатЗаказыНаТС_уэ.МестоположениеПоМаршрутномуЛисту(ТаблицаДанныеМаршрутныхЛистов, Выборка.Период, ЗаказГрузоотправителя, ГрузовоеМесто, УчетПланФакта));    
				СтруктураСтроки.Location = Местоположение;
				
				Если мсвСтатусы.Количество() = 1 Тогда
					СтруктураСтроки.Status = Строка(мсвСтатусы[0]);  
				ИначеЕсли мсвСтатусы.Количество() > 1 Тогда
					СтрокаСтатуса = Строка(Справочники.уатСтатусы_уэ.Составной) + "(" + СтрСоединить(мсвСтатусы, ", ") + ")";
					СтруктураСтроки.Status = СтрокаСтатуса;
				КонецЕсли; 
				
				МассивИсторииИзменений.Добавить(СтруктураСтроки);
				
			КонецЦикла; 
			
			ДанныеОтвета.Вставить("statusarray", МассивИсторииИзменений);
			СтруктураОтвет.КодСостояния = 200; 
			ДанныеОтвета.Вставить("code", СтруктураОтвет.КодСостояния); 
			ДанныеОтвета.Вставить("message", НСтр("en='Data search completed successfully.'; ru='Поиск завершен успешно.'"));
		Иначе
			ДанныеОтвета.Вставить("message", НСтр("en='Status change history not found.'; ru='История изменения статусов заказа не найдена.'"));
			СтруктураОтвет.КодСостояния = 410;    
			ДанныеОтвета.Вставить("code", СтруктураОтвет.КодСостояния);
			СтруктураОтвет.ДанныеОтвета = ПреобразоватьВJSON(ДанныеОтвета);
		КонецЕсли;
	Иначе 
		ДанныеОтвета.Вставить("message", НСтр("en='Track number not found.'; ru='Введенный трек-номер не найден в системе.'"));
		СтруктураОтвет.КодСостояния = 410; 
		ДанныеОтвета.Вставить("code", СтруктураОтвет.КодСостояния);
		СтруктураОтвет.ДанныеОтвета = ПреобразоватьВJSON(ДанныеОтвета);
	КонецЕсли;
	
	СтруктураОтвет.ДанныеОтвета = ДанныеОтвета;
	Возврат СтруктураОтвет;
	
КонецФункции 

#КонецОбласти
