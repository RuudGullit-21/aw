#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает имя формы, соответствующее значению перечисления для настройки
//
// Параметры:
//  ТипДействия	 - 	 - ПеречислениеСсылка.ТипыДействийШаговБюджетныхПроцессов
//  	Действие, для которого определяется форма настройки
// 
// Возвращаемое значение:
//  Строка - Имя формы
//
Функция ИмяФормы(ТипДействия) Экспорт
	
	Возврат "Перечисление.ТипыДействийШаговБюджетныхПроцессов.Форма." + 
		ОбщегоНазначения.ИмяЗначенияПеречисления(ТипДействия);
		
КонецФункции

// Возвращает таблицу значений, заполненную настройками действия
//
// Параметры:
//  Форма				 - УправляемаяФорма	 - форма, где пользователь указывал настройки
//  РеквизитыНастроек	 - Массив			 - Имена реквизитов, которые необходимо сохранить как настройки
// 
// Возвращаемое значение:
//  ТаблицаЗначний - сформированные настройки
//
Функция НастройкиДействия(Форма, РеквизитыНастроек) Экспорт
	
	Настройки = Новый ТаблицаЗначений;
	Настройки.Колонки.Добавить("Имя");
	Настройки.Колонки.Добавить("Значение");
	Настройки.Колонки.Добавить("Представление");
	
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для каждого РеквизитНастройки Из РеквизитыНастроек Цикл
		Для каждого РеквизитФормы Из РеквизитыФормы Цикл
			Если РеквизитФормы.Имя <> РеквизитНастройки Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Настройки.Добавить();
			НоваяСтрока.Имя = РеквизитФормы.Имя;
			НоваяСтрока.Значение = Форма[РеквизитФормы.Имя];
			НоваяСтрока.Представление = РеквизитФормы.Заголовок;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

// Процедура заполняет реквизиты формы на основании переданной таблицы значений с настройками
//
// Параметры:
//  Настройки	 - 			 - 
//  Форма		 - УправляемаяФорма	 - форма, в реквизиты которой требуется восстановить настройки
//
Процедура ВосстановитьНастройкиДействия(Настройки, Форма) Экспорт
	
	Реквизиты = Форма.ПолучитьРеквизиты();
	Для Каждого Реквизит из Реквизиты Цикл
		Если Реквизит.Имя = "Адрес" Или Реквизит.Имя = "ШагПроцесса" Или Реквизит.Имя = "МодельБюджетирования" Тогда 
			Продолжить;
		КонецЕсли;
		Элемент = Настройки.Найти(Реквизит.Имя, "Имя");
		Если Элемент <> Неопределено И Реквизит.ТипЗначения.СодержитТип(ТипЗнч(Элемент.Значение)) Тогда
			Форма[Реквизит.Имя] = Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает представление настроек для отображения на форме бюджетной задачи или шага процесса
//
// Параметры:
//  НастройкиДействия	 - 	 - 
// 
// Возвращаемое значение:
//  Строка - имя настроек
//
Функция ПолучитьПредставлениеДействия(Знач НастройкиДействия) Экспорт
	
	Результат = "";
	
	Если НастройкиДействия.Количество() = 0 Тогда
		Результат = НСтр("en='<Настройки действия не заданы>';ru='<Настройки действия не заданы>'");
		Возврат Результат;
	КонецЕсли;
	
	Шаблон = "%Представление: %Значение";
	Для каждого Настройка Из НастройкиДействия Цикл
		Если Не ЗначениеЗаполнено(Настройка.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Текст = СтрЗаменить(Шаблон, "%Представление", Настройка.Представление);
		Текст = СтрЗаменить(Текст, "%Значение", Настройка.Значение);
		
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), ", ", "") + Текст;
		
	КонецЦикла;
	
	Возврат Результат; 
	
КонецФункции

#КонецОбласти

#КонецЕсли