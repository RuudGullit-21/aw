#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Адрес = Параметры.Адрес;
	ШагПроцесса = Параметры.ШагПроцесса;
	МодельБюджетирования = Параметры.МодельБюджетирования;
	
	НастройкиДействия = ПолучитьИзВременногоХранилища(Адрес);
	Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВосстановитьНастройкиДействия(НастройкиДействия, ЭтаФорма);
	
	Для каждого Элемент Из УтверждаемыеШагиБюджетногоПроцесса Цикл
		НоваяСтрока = ШагиБюджетногоПроцесса.Добавить();
		НоваяСтрока.ШагБюджетногоПроцесса = Элемент.Значение;
	КонецЦикла;
	
	ЗаполнитьПараметрыВыбораУтверждаемыхШагов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(СохранитьНастройкиНаСервере());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыВыбораУтверждаемыхШагов()
	
	// Определим шаги процесса, ввод документов на которых можно утверждать на данном шаге
	ШагиДляУтверждения = Новый Массив;
	
	ТаблицаЗадач = Справочники.МоделиБюджетирования.ПолучитьБюджетныеЗадачи(МодельБюджетирования, ТекущаяДатаСеанса());
	НачалоДействияМодели = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МодельБюджетирования, "НачалоДействия");
	ПараметрыПоиска = Новый Структура("ШагПроцесса, Период", ШагПроцесса, НачалоДействияМодели);
	СтрокаШагаПроцесса = ТаблицаЗадач.НайтиСтроки(ПараметрыПоиска)[0];
	ЗаполнитьШагиДляУтвержденияРекурсивно(ТаблицаЗадач, СтрокаШагаПроцесса, ШагиДляУтверждения);
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(ШагиДляУтверждения)));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.НеВыполняется", Ложь));
	Элементы.УтверждаемыйШагПроцесса.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШагиДляУтвержденияРекурсивно(ТаблицаЗадач, СтрокаШагаПроцесса, ШагиДляУтверждения)
	
	Для каждого ПредыдущаяЗадача Из СтрокаШагаПроцесса.ПредыдущиеЗадачи Цикл
		НомерЗадачи = ПредыдущаяЗадача.НомерЗадачи;
		СтрокаПредыдущейЗадачи = ТаблицаЗадач.Найти(НомерЗадачи, "НомерЗадачи");
		Если СтрокаПредыдущейЗадачи.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана
			Или СтрокаПредыдущейЗадачи.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводЭкземпляраБюджета Тогда
			ШагиДляУтверждения.Добавить(СтрокаПредыдущейЗадачи.ШагПроцесса);
		КонецЕсли;
		ЗаполнитьШагиДляУтвержденияРекурсивно(ТаблицаЗадач, СтрокаПредыдущейЗадачи, ШагиДляУтверждения)
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНастройкиНаСервере()
	
	УтверждаемыеШагиБюджетногоПроцесса.Очистить();
	Для каждого Строка Из ШагиБюджетногоПроцесса Цикл
		УтверждаемыеШагиБюджетногоПроцесса.Добавить(Строка.ШагБюджетногоПроцесса);
	КонецЦикла;
	
	Реквизиты = Новый Массив;
	Реквизиты.Добавить("УтверждаемыеШагиБюджетногоПроцесса");
	
	Настройки = Перечисления.ТипыДействийШаговБюджетныхПроцессов.НастройкиДействия(ЭтаФорма, Реквизиты);
	Возврат ПоместитьВоВременноеХранилище(Настройки, Адрес);
	
КонецФункции

#КонецОбласти
