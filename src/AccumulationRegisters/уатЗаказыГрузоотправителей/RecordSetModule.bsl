#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Попытка
		Регистратор = ЭтотОбъект.Отбор.Регистратор.Значение;
	Исключение
		Регистратор = Неопределено;
	КонецПопытки;
	
	ОтклонениеГруза = Ложь;
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.уатОтклонениеГруза") Тогда
		ОтклонениеГруза = Истина; 
		ВсеОтклоненныеЗаказы = Новый Массив();
		Для Каждого ТекСтрока Из Регистратор.Заказы Цикл
			Если НЕ ТекСтрока.ПричинаОтклонения.ЗакрытУспешно Тогда
				 ВсеОтклоненныеЗаказы.Добавить(ТекСтрока.ЗаказГрузоотправителя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтарыйНабор = РегистрыНакопления.уатЗаказыГрузоотправителей.СоздатьНаборЗаписей();
	Для каждого ЭлементОтбора Из Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			СтарыйНабор.Отбор[ЭлементОтбора.Имя].Установить(ЭлементОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	СтарыйНабор.Прочитать();
	
	Заказы				 = Новый Массив();
	ОтклоненныеЗаказы	 = Новый Массив();
	мсвЭтапов			 = Новый Массив();
	Для Каждого СтрокаНабора Из СтарыйНабор Цикл  
		Если Заказы.Найти(СтрокаНабора.ЗаказГрузоотправителя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Заказы.Добавить(СтрокаНабора.ЗаказГрузоотправителя); 
		Если СтрокаНабора.ЗаказГрузоотправителя.ЭтоЭтап Тогда 
			мсвЭтапов.Добавить(СтрокаНабора.ЗаказГрузоотправителя);
		КонецЕсли;
	КонецЦикла;

	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл  
		Если Заказы.Найти(СтрокаНабора.ЗаказГрузоотправителя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Заказы.Добавить(СтрокаНабора.ЗаказГрузоотправителя);
		Если СтрокаНабора.ЗаказГрузоотправителя.ЭтоЭтап Тогда 
			мсвЭтапов.Добавить(СтрокаНабора.ЗаказГрузоотправителя);
		КонецЕсли;
	КонецЦикла;
	
	Если ОтклонениеГруза Тогда
		Для Каждого ТекЗаказ Из Заказы Цикл
			Если ВсеОтклоненныеЗаказы.Найти(ТекЗаказ) <> Неопределено Тогда
				ОтклоненныеЗаказы.Добавить(ТекЗаказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если мсвЭтапов.Количество() > 0 Тогда
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("мсвЭтапов", мсвЭтапов);  
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя
		|ИЗ
		|	РегистрСведений.уатЭтапыМультимодальныхПеревозок_уэ КАК уатЭтапыМультимодальныхПеревозок_уэ
		|ГДЕ
		|	уатЭтапыМультимодальныхПеревозок_уэ.Этап В(&мсвЭтапов)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Заказы.Найти(Выборка.ЗаказГрузоотправителя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Заказы.Добавить(Выборка.ЗаказГрузоотправителя);
		КонецЦикла;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЗаказыВНаборе", 		 Заказы);
	ДополнительныеСвойства.Вставить("ОтклоненныеЗаказы",	 ОтклоненныеЗаказы);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат; 
	КонецЕсли;

	ОтклоненныеЗаказы = ДополнительныеСвойства.ОтклоненныеЗаказы;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ЗаказыВНаборе",		 ДополнительныеСвойства.ЗаказыВНаборе);
	Запрос.УстановитьПараметр("ОтклоненныеЗаказы",	 ОтклоненныеЗаказы);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказГрузоотправителя.Ссылка КАК Ссылка,
	|	уатЗаказГрузоотправителя.Мультимодальный КАК Мультимодальный,
	|	уатЗаказГрузоотправителя.ЭтоЭтап КАК ЭтоЭтап,
	|	уатЗаказГрузоотправителя.Проведен КАК Проведен
	|ПОМЕСТИТЬ втЗаказы
	|ИЗ
	|	Документ.уатЗаказГрузоотправителя КАК уатЗаказГрузоотправителя
	|ГДЕ
	|	уатЗаказГрузоотправителя.Ссылка В(&ЗаказыВНаборе)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатЭтапыМультимодальныхПеревозок_уэ.Этап КАК Этап
	|ПОМЕСТИТЬ втЭтапы
	|ИЗ
	|	РегистрСведений.уатЭтапыМультимодальныхПеревозок_уэ КАК уатЭтапыМультимодальныхПеревозок_уэ
	|ГДЕ
	|	уатЭтапыМультимодальныхПеревозок_уэ.ЗаказГрузоотправителя В(&ЗаказыВНаборе)
	|	И НЕ уатЭтапыМультимодальныхПеревозок_уэ.Этап В (&ОтклоненныеЗаказы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказыГрузоотправителейОстаткиИОбороты.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	СУММА(уатЗаказыГрузоотправителейОстаткиИОбороты.КоличествоРасход) КАК Количество
	|ПОМЕСТИТЬ втКолВоРасход
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.ОстаткиИОбороты(
	|			,
	|			,
	|			,
	|			,
	|			ЗаказГрузоотправителя В
	|				(ВЫБРАТЬ
	|					втЭтапы.Этап КАК ЗаказГрузоотправителя
	|				ИЗ
	|					втЭтапы КАК втЭтапы)) КАК уатЗаказыГрузоотправителейОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	уатЗаказыГрузоотправителейОстаткиИОбороты.ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток КАК ЕстьОстаток,
	|	NULL КАК ЕстьРасход
	|ПОМЕСТИТЬ втТабСтатусов
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(
	|			,
	|			ЗаказГрузоотправителя В
	|				(ВЫБРАТЬ
	|					втЭтапы.Этап КАК ЗаказГрузоотправителя
	|				ИЗ
	|					втЭтапы КАК втЭтапы)) КАК уатЗаказыГрузоотправителейОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втКолВоРасход.ЗаказГрузоотправителя,
	|	NULL,
	|	втКолВоРасход.Количество
	|ИЗ
	|	втКолВоРасход КАК втКолВоРасход
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втТабСтатусов.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	МАКСИМУМ(втТабСтатусов.ЕстьОстаток) КАК ЕстьОстаток,
	|	МАКСИМУМ(втТабСтатусов.ЕстьРасход) КАК ЕстьРасход
	|ПОМЕСТИТЬ втСостояния
	|ИЗ
	|	втТабСтатусов КАК втТабСтатусов
	|
	|СГРУППИРОВАТЬ ПО
	|	втТабСтатусов.ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втЭтапы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	втЭтапы.Этап КАК Этап,
	|	ВЫБОР
	|		КОГДА втЭтапы.Этап.Проведен
	|				И ЕСТЬNULL(втСостояния.ЕстьРасход, 0) > 0
	|				И ЕСТЬNULL(втСостояния.ЕстьОстаток, 0) > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.ЧастичноВыполнен)
	|		КОГДА втЭтапы.Этап.Проведен
	|					И ЕСТЬNULL(втСостояния.ЕстьРасход, 0) > 0
	|					И втСостояния.ЕстьОстаток ЕСТЬ NULL
	|				ИЛИ втСостояния.ЕстьОстаток = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Выполнен)
	|		КОГДА втЭтапы.Этап.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Открыт)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый)
	|	КОНЕЦ КАК СостояниеВыполнения,
	|	втСостояния.ЕстьОстаток КАК ЕстьОстаток,
	|	втСостояния.ЕстьРасход КАК ЕстьРасход
	|ПОМЕСТИТЬ втСтатусыРодительскихЗаказов
	|ИЗ
	|	втЭтапы КАК втЭтапы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСостояния КАК втСостояния
	|		ПО втЭтапы.Этап = втСостояния.ЗаказГрузоотправителя
	|
	|СГРУППИРОВАТЬ ПО
	|	втЭтапы.ЗаказГрузоотправителя,
	|	втЭтапы.Этап,
	|	ВЫБОР
	|		КОГДА втЭтапы.Этап.Проведен
	|				И ЕСТЬNULL(втСостояния.ЕстьРасход, 0) > 0
	|				И ЕСТЬNULL(втСостояния.ЕстьОстаток, 0) > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.ЧастичноВыполнен)
	|		КОГДА втЭтапы.Этап.Проведен
	|					И ЕСТЬNULL(втСостояния.ЕстьРасход, 0) > 0
	|					И втСостояния.ЕстьОстаток ЕСТЬ NULL
	|				ИЛИ втСостояния.ЕстьОстаток = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Выполнен)
	|		КОГДА втЭтапы.Этап.Проведен
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Открыт)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый)
	|	КОНЕЦ,
	|	втСостояния.ЕстьОстаток,
	|	втСостояния.ЕстьРасход
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(втСтатусыРодительскихЗаказов.СостояниеВыполнения, ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый))) > 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.ЧастичноВыполнен)
	|		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(втСтатусыРодительскихЗаказов.СостояниеВыполнения, ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый)))
	|	КОНЕЦ КАК СостояниеВыполнения,
	|	СУММА(втСтатусыРодительскихЗаказов.ЕстьОстаток) КАК ЕстьОстаток,
	|	СУММА(втСтатусыРодительскихЗаказов.ЕстьРасход) КАК ЕстьРасход
	|ПОМЕСТИТЬ ТабСтатусовРодительскихЗаказов
	|ИЗ
	|	втСтатусыРодительскихЗаказов КАК втСтатусыРодительскихЗаказов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтатусыРодительскихЗаказов.ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказыГрузоотправителейОстаткиИОбороты.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	СУММА(уатЗаказыГрузоотправителейОстаткиИОбороты.КоличествоРасход) КАК Количество
	|ПОМЕСТИТЬ втКолВоРасходОсновныеЗаказы
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.ОстаткиИОбороты(, , , , ЗаказГрузоотправителя В (&ЗаказыВНаборе)) КАК уатЗаказыГрузоотправителейОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	уатЗаказыГрузоотправителейОстаткиИОбороты.ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток КАК ЕстьОстаток,
	|	NULL КАК ЕстьРасход
	|ПОМЕСТИТЬ втТабСтатусовОсновныеЗаказы
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(, ЗаказГрузоотправителя В (&ЗаказыВНаборе)) КАК уатЗаказыГрузоотправителейОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втКолВоРасходОсновныеЗаказы.ЗаказГрузоотправителя,
	|	NULL,
	|	втКолВоРасходОсновныеЗаказы.Количество
	|ИЗ
	|	втКолВоРасходОсновныеЗаказы КАК втКолВоРасходОсновныеЗаказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТабСтатусовОсновныеЗаказы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя,
	|	МАКСИМУМ(втТабСтатусовОсновныеЗаказы.ЕстьОстаток) КАК ЕстьОстаток,
	|	МАКСИМУМ(втТабСтатусовОсновныеЗаказы.ЕстьРасход) КАК ЕстьРасход
	|ПОМЕСТИТЬ Состояния
	|ИЗ
	|	втТабСтатусовОсновныеЗаказы КАК втТабСтатусовОсновныеЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	втТабСтатусовОсновныеЗаказы.ЗаказГрузоотправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказы.Ссылка КАК Заказ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втЗаказы.Мультимодальный
	|					И НЕ втЗаказы.ЭтоЭтап
	|				ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.СостояниеВыполнения, ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый))
	|			ИНАЧЕ ВЫБОР
	|					КОГДА втЗаказы.Проведен
	|							И ЕСТЬNULL(Состояния.ЕстьРасход, 0) > 0
	|							И ЕСТЬNULL(Состояния.ЕстьОстаток, 0) > 0
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.ЧастичноВыполнен)
	|					КОГДА втЗаказы.Проведен
	|								И ЕСТЬNULL(Состояния.ЕстьРасход, 0) > 0
	|								И Состояния.ЕстьОстаток ЕСТЬ NULL
	|							ИЛИ Состояния.ЕстьОстаток = 0
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Выполнен)
	|					КОГДА втЗаказы.Проведен
	|							И НЕ Состояния.ЕстьОстаток ЕСТЬ NULL
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Открыт)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Новый)
	|				КОНЕЦ
	|		КОНЕЦ) КАК Состояние,
	|	СУММА(ВЫБОР
	|			КОГДА втЗаказы.Мультимодальный
	|					И НЕ втЗаказы.ЭтоЭтап
	|				ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.ЕстьРасход, 0)
	|			ИНАЧЕ ЕСТЬNULL(Состояния.ЕстьРасход, 0)
	|		КОНЕЦ) КАК КоличествоВыполнено,
	|	СУММА(ВЫБОР
	|			КОГДА втЗаказы.Мультимодальный
	|					И НЕ втЗаказы.ЭтоЭтап
	|				ТОГДА ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.ЕстьОстаток, 0) + ЕСТЬNULL(ТабСтатусовРодительскихЗаказов.ЕстьРасход, 0)
	|			ИНАЧЕ ЕСТЬNULL(Состояния.ЕстьОстаток, 0) + ЕСТЬNULL(Состояния.ЕстьРасход, 0)
	|		КОНЕЦ) КАК КоличествоВсего
	|ПОМЕСТИТЬ втРезультат
	|ИЗ
	|	втЗаказы КАК втЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСтатусовРодительскихЗаказов КАК ТабСтатусовРодительскихЗаказов
	|		ПО втЗаказы.Ссылка = ТабСтатусовРодительскихЗаказов.ЗаказГрузоотправителя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Состояния КАК Состояния
	|		ПО втЗаказы.Ссылка = Состояния.ЗаказГрузоотправителя
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаказы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя КАК ЗаказГрузоотправителя
	|ПОМЕСТИТЬ втЗакрытие
	|ИЗ
	|	Документ.уатОтклонениеГруза.Заказы КАК уатОтклонениеГрузаЗаказы
	|ГДЕ
	|	уатОтклонениеГрузаЗаказы.Ссылка.Проведен
	|	И НЕ уатОтклонениеГрузаЗаказы.ПричинаОтклонения.ЗакрытУспешно
	|	И НЕ уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя В (&ОтклоненныеЗаказы)
	|	И уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя В(&ЗаказыВНаборе)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРезультат.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА НЕ втЗакрытие.ЗаказГрузоотправителя ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.уатСостоянияВыполненияЗаказов.Отклонен)
	|		ИНАЧЕ втРезультат.Состояние
	|	КОНЕЦ КАК Состояние,
	|	втРезультат.КоличествоВыполнено КАК КоличествоВыполнено,
	|	втРезультат.КоличествоВсего КАК КоличествоВсего,
	|	ВЫБОР
	|		КОГДА втРезультат.КоличествоВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ втРезультат.КоличествоВыполнено / втРезультат.КоличествоВсего * 100
	|	КОНЕЦ КАК ПроцентВыполнения
	|ИЗ
	|	втРезультат КАК втРезультат
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗакрытие КАК втЗакрытие
	|		ПО втРезультат.Заказ = втЗакрытие.ЗаказГрузоотправителя";
	
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.уатТекущееСостояниеВыполненияЗаказов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Заказ.Установить(Выборка.Заказ); 
			НаборЗаписей.Прочитать(); 
			
			Если НаборЗаписей.Количество() > 0 Тогда 
				Запись = НаборЗаписей[0];
			Иначе
				Запись = НаборЗаписей.Добавить();
			КонецЕсли;
			
			Если Выборка.Состояние = Перечисления.уатСостоянияВыполненияЗаказов.Отклонен
				И ОтклоненныеЗаказы.Найти(Выборка.Заказ) <> Неопределено Тогда
				Запись.Состояние = Перечисления.уатСостоянияВыполненияЗаказов.Отклонен;
			Иначе
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
			КонецЕсли;
			
			НаборЗаписей.Записать();
		КонецЦикла; 
	Исключение
		Информация = ИнформацияОбОшибке();
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
