
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущееДействие = Объект.Действие;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗначениеКопировать = Неопределено;
		Если Параметры.Свойство("ЗначениеКопирования", ЗначениеКопировать) Тогда
			
			ТаблицаНастроек = ЗначениеКопировать.НастройкаДействия.Получить();
			Если ТаблицаНастроек <> Неопределено Тогда
				НастройкаДействия.Загрузить(ТаблицаНастроек);
			КонецЕсли;
			
			ТаблицаНастройкиКонтрольныхОтчетов = ЗначениеКопировать.НастройкиКонтрольныхОтчетов.Получить();
			Если ТаблицаНастройкиКонтрольныхОтчетов <> Неопределено Тогда
				НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастройкиКонтрольныхОтчетов);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	НастроитьСписокДействийШага();
	
	УправлениеФормой();

	//СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТаблицаНастроек = ТекущийОбъект.НастройкаДействия.Получить();
	Если ТаблицаНастроек <> Неопределено Тогда
		НастройкаДействия.Загрузить(ТаблицаНастроек);
	КонецЕсли;
	
	ТаблицаНастройкиКонтрольныхОтчетов = ТекущийОбъект.НастройкиКонтрольныхОтчетов.Получить();
	Если ТаблицаНастройкиКонтрольныхОтчетов <> Неопределено Тогда
		НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастройкиКонтрольныхОтчетов);
	КонецЕсли;
	
	//МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкаДействия = Новый ХранилищеЗначения(НастройкаДействия.Выгрузить());
	ТекущийОбъект.НастройкиКонтрольныхОтчетов = Новый ХранилищеЗначения(НастройкиКонтрольныхОтчетов.Выгрузить());
	
	//МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	//МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи);
	Заглушка = Истина;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	//МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	Заглушка = Истина;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ДействиеПриИзмененииСервер();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьДействие(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстНСТР = НСтр("en='Для настройки действия необходимо записать объект. Записать?';ru='Для настройки действия необходимо записать объект. Записать?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("НастроитьДействиеЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	НастроитьДействиеФрагмент(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Если Не Записать() Тогда
            Отказ = Истина;
        КонецЕсли
    Иначе 
        Отказ = Истина;
    КонецЕсли;
    
    НастроитьДействиеФрагмент(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеФрагмент(Знач Отказ)
    
    Перем ИмяФормыНастройки, Оповещение, ПараметрыФормы;
    
    Если Отказ Тогда
        Возврат;
    КонецЕсли;
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиДействияВоВременноеХранилище());
    ПараметрыФормы.Вставить("ШагПроцесса",          Объект.Ссылка);
    ПараметрыФормы.Вставить("МодельБюджетирования", Объект.Владелец);
    
    Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиДействия", ЭтотОбъект);
    
    ИмяФормыНастройки = ИмяФормыНастройкиНаСервере(Объект.Действие);
    ОткрытьФорму(ИмяФормыНастройки, ПараметрыФормы, ЭтотОбъект, , , , Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьКонтрольныеОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище());
	ПараметрыФормы.Вставить("ШагПроцесса",          Объект.Ссылка);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.Владелец);
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиКонтрольныхОтчетов", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ШагиБюджетныхПроцессов.Форма.НастройкаКонтрольныхОтчетов", 
		ПараметрыФормы, ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	//СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	Заглушка = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьСписокДействийШага()
	
	РеквизитыМодели = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.Владелец, "ИспользоватьДляЗаполненияЛимитовРасходаДС, ИспользоватьУтверждениеБюджетов");
		
	Если РеквизитыМодели.ИспользоватьДляЗаполненияЛимитовРасходаДС = Неопределено
			ИЛИ РеквизитыМодели.ИспользоватьУтверждениеБюджетов = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	Если Не РеквизитыМодели.ИспользоватьДляЗаполненияЛимитовРасходаДС Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.УстановкаЛимитовРасходаДС);
	КонецЕсли;
	Если Не РеквизитыМодели.ИспользоватьУтверждениеБюджетов Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов);
	КонецЕсли;

	//Если Не (ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеЗакупок")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПродаж")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПроизводства")
	//	Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеСборкиРазборки")) Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийШаговБюджетныхПроцессов.ВводПлана);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДействиеИзСписка(ТипДействия)
	
	ЭлементСписка = Элементы.Действие.СписокВыбора.НайтиПоЗначению(ТипДействия);
	Если ЭлементСписка <> Неопределено Тогда
		Элементы.Действие.СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДействиеПриИзмененииСервер()
	
	Если Объект.Действие = ТекущееДействие Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаДействия.Очистить();
	ТекущееДействие = Объект.Действие;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыНастройкиНаСервере(Действие)
	
	Возврат Перечисления.ТипыДействийШаговБюджетныхПроцессов.ИмяФормы(Действие)
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ЭтоДействиеПрочее = (Объект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.Прочее);
	ЭтоДействиеУтверждения = (Объект.Действие = Перечисления.ТипыДействийШаговБюджетныхПроцессов.УтверждениеБюджетов);
	ВидимостьНастроек = ЗначениеЗаполнено(Объект.Действие) И Не ЭтоДействиеПрочее;
	Элементы.НастройкиДействия.Видимость = ВидимостьНастроек;
	
	ПредставлениеДействия = Перечисления.ТипыДействийШаговБюджетныхПроцессов.ПолучитьПредставлениеДействия(НастройкаДействия);
	Элементы.ДекорацияНастройки.Заголовок = ПредставлениеДействия;
	
	ЗаголовокКонтрольныеОтчеты = НСтр("en='Настроить контрольные отчеты (%1)';ru='Настроить контрольные отчеты (%1)'");
	Элементы.НастроитьКонтрольныеОтчеты.Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ЗаголовокКонтрольныеОтчеты, 
			НастройкиКонтрольныхОтчетов.Количество());
	Элементы.НастроитьКонтрольныеОтчеты.Видимость = ЭтоДействиеПрочее Или ЭтоДействиеУтверждения;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкиКонтрольныхОтчетов.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПоместитьНастройкиДействияВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкаДействия.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкиДействияСервер(Адрес)
	
	НастройкаДействия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес)
	
	НастройкиКонтрольныхОтчетов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиДействия(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиДействияСервер(Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиКонтрольныхОтчетов(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес);
	
КонецПроцедуры

#КонецОбласти
