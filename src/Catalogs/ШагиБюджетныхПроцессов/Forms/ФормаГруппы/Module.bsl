
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодичностьРодителя = ?(ЗначениеЗаполнено(Объект.Родитель), Объект.Родитель.Периодичность, Объект.Владелец.Периодичность);
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
			Если Не ЗначениеЗаполнено(Объект.Родитель) Тогда
				Объект.Периодичность = Перечисления.Периодичность.Год;
			Иначе
				Объект.Периодичность = ПериодичностьРодителя;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ПорядокВыполненияШагов) Тогда
			Объект.ПорядокВыполненияШагов = Перечисления.ПорядокВыполненияШаговБюджетногоПроцесса.Последовательно;
		КонецЕсли;
	КонецЕсли;
	
	Периодическая = Объект.Периодичность <> ПериодичностьРодителя;
	УстановитьПараметрыПериодичности();
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);

	//СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПорядокВыполненияШаговПриИзменении(Элемент)
	
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеЗапускаПриИзменении(Элемент)
	
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодическаяПриИзменении(Элемент)
	
	УстановитьПараметрыПериодичности();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	УстановитьПараметрыПериодичности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	//СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	Заглушка = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиЭлементовФормы(Объект, Элементы)
	
	Если Объект.ПорядокВыполненияШагов = ПредопределенноеЗначение("Перечисление.ПорядокВыполненияШаговБюджетногоПроцесса.Параллельно") Тогда
		Элементы.УсловиеЗапуска.Заголовок = НСтр("en='Запускать все задачи';ru='Запускать все задачи'");
	Иначе
		Элементы.УсловиеЗапуска.Заголовок = НСтр("en='Запускать первую задачу';ru='Запускать первую задачу'");
	КонецЕсли;
	
	Если Объект.УсловиеЗапуска = ПредопределенноеЗначение("Перечисление.ТипыУсловийЗапускаШаговБюджетногоПроцесса.ДоНачалаПериода")
		ИЛИ Объект.УсловиеЗапуска = ПредопределенноеЗначение("Перечисление.ТипыУсловийЗапускаШаговБюджетногоПроцесса.ДоОкончанияПериода") Тогда
		Элементы.Срок.Заголовок = НСтр("en='for';ru='за'");
	Иначе
		Элементы.Срок.Заголовок = НСтр("en='every';ru='через'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыПериодичности()
	
	Элементы.Периодичность.Видимость = Периодическая;
	ПериодичностьРодителя = ?(ЗначениеЗаполнено(Объект.Родитель), Объект.Родитель.Периодичность, Объект.Владелец.Периодичность);
	
	Если Периодическая Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаПериодичностей.Периодичность,
		               |	ТаблицаПериодичностей.Порядок
		               |ПОМЕСТИТЬ УпорядоченныеПериодичности
		               |ИЗ
		               |	&ТаблицаПериодичностей КАК ТаблицаПериодичностей
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	УпорядоченныеПериодичности.Порядок
		               |ПОМЕСТИТЬ ПериодичностьТекущая
		               |ИЗ
		               |	УпорядоченныеПериодичности КАК УпорядоченныеПериодичности
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.Периодичность КАК ПеречислениеПериодичность
		               |		ПО УпорядоченныеПериодичности.Периодичность = ПеречислениеПериодичность.Ссылка
		               |			И (ПеречислениеПериодичность.Ссылка = &Ссылка)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	УпорядоченныеПериодичности.Периодичность КАК Периодичность
		               |ИЗ
		               |	ПериодичностьТекущая КАК ТаблицаПериодичности
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УпорядоченныеПериодичности КАК УпорядоченныеПериодичности
		               |		ПО ТаблицаПериодичности.Порядок >= УпорядоченныеПериодичности.Порядок
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.Периодичность КАК ПеречислениеПериодичность
		               |		ПО (УпорядоченныеПериодичности.Периодичность = ПеречислениеПериодичность.Ссылка)";
		
		ТаблицаПериодичностей = Перечисления.Периодичность.УпорядоченныеПериодичности(Истина);
		Запрос.УстановитьПараметр("ТаблицаПериодичностей", ТаблицаПериодичностей);
		Запрос.УстановитьПараметр("Ссылка", ПериодичностьРодителя);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Элементы.Периодичность.СписокВыбора.Очистить();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Элементы.Периодичность.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Периодичность);
			
		КонецЦикла;
		
	Иначе
		
		Объект.Периодичность = ПериодичностьРодителя;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
