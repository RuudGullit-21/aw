
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	НастроитьКомпоновщикОтбора();
	
	Если НЕ ПравоДоступа("Редактирование", Метаданные.Справочники.уатТарифыТС) Тогда
		Элементы.ГруппаСтраницаОбластьДействия.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеВидимостью();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для Каждого ТекОтбор Из КомпоновщикНастроекОтбора.Настройки.Отбор.Элементы Цикл
		Если ТипЗнч(ТекОтбор) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Отказ = Истина;
			ТекстНСТР = НСтр("en='Prohibited adding group to tariff owner scope!';ru='Запрещено добавление групп в область действия тарифа!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	СохранитьНастройкиОтбораОбластиДействий(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзменениеТарифаТС");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкиОтбораПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрВыработкиПриИзменении(Элемент)
	Если Объект.ПараметрВыработки <> ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоТочекПоТипуПункта") Тогда
		Объект.ТипПункта = Неопределено;
	КонецЕсли;
	Если Объект.ПараметрВыработки <> ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоТочекПоВидуОперации") Тогда
		Объект.ТипТочкиМаршрута = Неопределено;
	КонецЕсли;
	Если Объект.ПараметрВыработки <> ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоУпаковок") Тогда
		Объект.ВидУпаковки = Неопределено;
	КонецЕсли;
	Если Объект.ПараметрВыработки <> ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоКонтейнеров") Тогда
		Объект.ТипКонтейнера = Неопределено;
	КонецЕсли;
		
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрВыработкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	мсвЗапрещенныеКВыбору = Новый Массив;
	мсвЗапрещенныеКВыбору.Добавить(ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.СкладскаяОбработка"));
	ПараметрыФормыВыбора = Новый Структура("мсвЗапрещенныеКВыбору", мсвЗапрещенныеКВыбору);
	
	ОткрытьФорму("Справочник.уатПараметрыВыработки.ФормаВыбора", ПараметрыФормыВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура МетодРасчетаПриИзменении(Элемент)
	Если Объект.МетодРасчета = ПредопределенноеЗначение("Перечисление.уатМетодыРасчетаПоТарифам.ПроцентомОтСуммы") Тогда
		Объект.ПараметрВыработки = Неопределено;
		ПараметрВыработкиПриИзменении(Неопределено);
		КомпоновщикНастроекОтбора.Настройки.Отбор.Элементы.Очистить();
	КонецЕсли;
	Если Объект.МетодРасчета <> ПредопределенноеЗначение("Перечисление.уатМетодыРасчетаПоТарифам.ПоПараметруВыработки") Тогда
		Объект.МинимальнаяВыработка = 0;
	КонецЕсли;
		
	УправлениеВидимостью();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьКомпоновщикОтбора()
	ЭтоЛогистика = уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП();
	
	Если ЭтоЛогистика Тогда
		СхемаКомпоновкиДанных = Справочники.уатТарифыСебестоимости_уэ.ПолучитьМакет("КомпоновкаДанныхОбластьДействия");
	Иначе
		СхемаКомпоновкиДанных = Справочники.уатТарифыСебестоимости_уэ.ПолучитьМакет("КомпоновкаДанныхОбластьДействия_проф");
	КонецЕсли;
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	КомпоновщикНастроекОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ЗагрузитьНастройкиОтбораОбластиДействий();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОтбораОбластиДействий()
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекНастройки = ТекОбъект.ОбластьДействия.Получить();
	Если ТипЗнч(ТекНастройки) = Тип("НастройкиКомпоновкиДанных") Тогда
		КомпоновщикНастроекОтбора.ЗагрузитьНастройки(ТекНастройки);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтбораОбластиДействий(ТекОбъект)
	ТекОбъект.ОбластьДействия = Новый ХранилищеЗначения(КомпоновщикНастроекОтбора.Настройки);
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()
	ФиксТариф = (Объект.МетодРасчета = ПредопределенноеЗначение("Перечисление.уатМетодыРасчетаПоТарифам.ФиксированнойСуммой"));
	ПроцТариф = (Объект.МетодРасчета = ПредопределенноеЗначение("Перечисление.уатМетодыРасчетаПоТарифам.ПроцентомОтСуммы"));
	
	Если ФиксТариф Тогда
		Элементы.ГруппаБазовыеУслуги.Видимость = Ложь;
		Элементы.ГруппаПараметрВыработки.Видимость = Истина;
		Элементы.ГруппаМинимальнаяВыработка.Видимость = Ложь;
		//Элементы.ГруппаОписаниеПарамВыраб.Видимость = Истина;
		Элементы.Валюта.Видимость = Истина;
		Элементы.Тариф.Заголовок = НСтр("en='Tariff';ru='Тариф'");
		Элементы.ГруппаСтраницаОбластьДействия.Видимость = Истина;
	ИначеЕсли ПроцТариф Тогда
		Элементы.ГруппаБазовыеУслуги.Видимость = Истина;
		Элементы.ГруппаПараметрВыработки.Видимость = Ложь;
		//Элементы.ГруппаОписаниеПарамВыраб.Видимость = Ложь;
		Элементы.Валюта.Видимость = Ложь;
		Элементы.Тариф.Заголовок = НСтр("en='Tariff';ru='Тариф'") + ", %";
		Элементы.ГруппаСтраницаОбластьДействия.Видимость = Ложь;
	Иначе
		Элементы.ГруппаБазовыеУслуги.Видимость = Ложь;
		Элементы.ГруппаПараметрВыработки.Видимость = Истина;
		Элементы.ГруппаМинимальнаяВыработка.Видимость = Истина;
		//Элементы.ГруппаОписаниеПарамВыраб.Видимость = Истина;
		Элементы.Валюта.Видимость = Истина;
		Элементы.Тариф.Заголовок = НСтр("en='Tariff';ru='Тариф'");
		Элементы.ГруппаСтраницаОбластьДействия.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ТипПункта.Видимость = (НЕ ПроцТариф И Объект.ПараметрВыработки
		= ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоТочекПоТипуПункта"));
	Элементы.ТипТочкиМаршрута.Видимость = (НЕ ПроцТариф И Объект.ПараметрВыработки
		= ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоТочекПоВидуОперации"));
	Элементы.ВидУпаковки.Видимость = (НЕ ПроцТариф И Объект.ПараметрВыработки
		= ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоУпаковок"));
	Элементы.ТипКонтейнера.Видимость = (НЕ ПроцТариф И Объект.ПараметрВыработки
		= ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоКонтейнеров"));
КонецПроцедуры

#КонецОбласти
