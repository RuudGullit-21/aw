
#Область ОбработчикиСобытий

// Процедура вызывается перед записью элемента справочника.
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		Если НЕ ЗначениеЗаполнено(Наименование) Тогда 
			Наименование = уатНастройкиШаблонов.СформироватьНаименованиеПоШаблону("Справочник_ДоговорыКонтрагентов", ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьПоСтруктуре(ДанныеЗаполнения);
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		Если Не ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Заполняет реквизиты объекта значениями, полученными в структуре ДанныхЗаполнения.
//	Заполнение возможно только в случае, когда в качестве ДанныхЗаполнения получена структура.
//	Заполнены будут только те реквизиты, для которых в метаданных установлен флаг "ЗаполнятьИзДанныхЗаполнения"
//
//
// Параметры
//  <Объект>  - <СправочникОбъект>, <ДокументОбъект> и т.д. - Заполняемый объект
//  <ДанныеЗаполнения>  - <произвольный тип> - параметр, полученный в ОбработкеЗаполнения объекта
//  <МетаданныеОбъекта>  - <Метаданные> -
//
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		ИЛИ ДанныеЗаполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = ЭтотОбъект.Метаданные();
	
	СтруктураЗаполнения = Новый Структура;
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			СтруктураЗаполнения.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			Если (ЭтотОбъект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента)
				ИЛИ
				(НЕ ЭтотОбъект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы)
				Тогда
				СтруктураЗаполнения.Вставить(Реквизит.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьЗначенияСвойств(СтруктураЗаполнения, ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЭтоГруппа Тогда
		Если ПолучитьФункциональнуюОпцию("уатИспользоватьДокументооборот") Тогда
			Для Каждого ТекСтрока Из ВидыСопроводительныхДокументов Цикл
				НомСтр = Формат(ТекСтрока.НомерСтроки, "ЧН=0; ЧГ=0");
				
				Если ТекСтрока.СпособРасчетаДней = 1 И НЕ ЗначениеЗаполнено(ТекСтрока.ПроизводственныйКалендарь) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + НомСтр
						+ " табличной части ""Виды сопроводительных документов"" не указан производственный календарь",
						ЭтотОбъект,
						"ВидыСопроводительныхДокументов[" + НомСтр + "].ПроизводственныйКалендарь",,
						Отказ);
				КонецЕсли;
				Если ТекСтрока.ВидДокумента.ВидВладельца = Перечисления.уатВидыВладельцевСопроводительныхДокументов.ДокументыОрганизации Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + НомСтр
						+ " табличной части ""Виды сопроводительных документов"" указан вид документа с типом ""Документы организации""",
						ЭтотОбъект,
						"ВидыСопроводительныхДокументов[" + НомСтр + "].ВидДокумента",,
						Отказ);
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
	
		Если ПолучитьФункциональнуюОпцию("уатИспользоватьПлатежныйКалендарь")
			И ВедениеВзаиморасчетов <> Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом Тогда
			
			Если ГрафикОплаты.Итог("Процент") > 100 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Общий процент в графике оплаты не должен превышать 100%",,,, Отказ);
			КонецЕсли;
			
			мсвВариантыОтсчета = Новый Массив;
			мсвЭтапыОплаты     = Новый Массив;
			Для Каждого ТекСтрока Из ГрафикОплаты Цикл
				НомСтр = Формат(ТекСтрока.НомерСтроки, "ЧН=0; ЧГ=0");
				
				Если мсвВариантыОтсчета.Найти(ТекСтрока.ВариантОтсчета) <> Неопределено
					ИЛИ мсвЭтапыОплаты.Найти(ТекСтрока.ЭтапОплаты) <> Неопределено Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						"В табличной части ""График оплаты"" не должно быть строк с повторящимся этапом оплаты (включая пустые) или вариантом отсчета.",
						ЭтотОбъект,
						"ГрафикОплаты[" + НомСтр + "]",,
						Отказ);
					Прервать;
				Иначе
					мсвВариантыОтсчета.Добавить(ТекСтрока.ВариантОтсчета);
					мсвЭтапыОплаты.Добавить(ТекСтрока.ЭтапОплаты);
				КонецЕсли;
				
				Если ТекСтрока.ВариантОтсчета = Перечисления.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов
					И НЕ ЗначениеЗаполнено(ТекСтрока.ВидСопроводительногоДокумента) Тогда
											
					Если ГрафикОплаты.Количество() = 1 Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнен вид сопроводительных документов в графике оплаты",,,, Отказ);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнена колонка ""Вид сопроводительных документов"" в строке " + НомСтр + " списка ""График оплаты""",
							ЭтотОбъект, "ГрафикОплаты[" + НомСтр + "].ВидСопроводительногоДокумента",, Отказ);
					КонецЕсли;
				КонецЕсли;
				Если ТекСтрока.ВариантОтсчета.Пустая() Тогда
					Если ГрафикОплаты.Количество() = 1 Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнен вариант отсчета в графике оплаты",,,, Отказ);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнена колонка ""Вариант отсчета"" в строке " + НомСтр + " списка ""График оплаты""",
							ЭтотОбъект, "ГрафикОплаты[" + НомСтр + "].ВариантОтсчета",, Отказ);
					КонецЕсли;
				КонецЕсли;
				Если ТекСтрока.Процент = 0 Тогда
					Если ГрафикОплаты.Количество() = 1 Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнен процент оплаты в графике оплаты",,,, Отказ);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							"Не заполнена колонка ""Процент"" в строке " + НомСтр + " списка ""График оплаты""",
							ЭтотОбъект, "ГрафикОплаты[" + НомСтр + "].Процент",, Отказ);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
