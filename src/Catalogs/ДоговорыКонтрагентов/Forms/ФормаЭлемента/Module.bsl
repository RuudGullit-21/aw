
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
		КонецЕсли;
			
		Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
			Если Параметры.Свойство("Владелец") И ЗначениеЗаполнено(Параметры.Владелец) Тогда
				Объект.Владелец = Параметры.Владелец;
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьПоШаблону();
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// Ограничение списка выбора поля "Вид договора"
	Если Параметры.Свойство("ВидДоговораДоступныеЗначения") Тогда
		Элементы.ВидДоговора.РежимВыбораИзСписка = Истина;
		Элементы.ВидДоговора.СписокВыбора.ЗагрузитьЗначения(Параметры.ВидДоговораДоступныеЗначения); 
		Объект.ВидДоговора = Параметры.ВидДоговораДоступныеЗначения[0];
	КонецЕсли;
	
	НаименованиеПоШаблону = СформироватьНаименованиеСервер();
	
	флИспользоватьДокументооборот    = ПолучитьФункциональнуюОпцию("уатИспользоватьДокументооборот");
	флИспользоватьПлатежныйКалендарь = ПолучитьФункциональнуюОпцию("уатИспользоватьПлатежныйКалендарь");
	флИспользоватьЗакреплениеМЛЗаПеревозчиками = ПолучитьФункциональнуюОпцию("уатИспользоватьЗакреплениеМаршрутныхЛистовЗаПеревозчиками_уэ");
	Элементы.ГруппаСопроводительныеДокументы.Видимость = флИспользоватьДокументооборот;
	
	ОбновитьСпособРасчетаДнейПредставление();
	
	Если Объект.ГрафикОплаты.Количество() = 0 Тогда
		СпособРедактированияГрафикаОплаты = 0;
	ИначеЕсли Объект.ГрафикОплаты.Количество() = 1 Тогда
		СпособРедактированияГрафикаОплаты = 1;
	Иначе
		СпособРедактированияГрафикаОплаты = 2;
	КонецЕсли;
	СпособРедактированияГрафикаОплатыСтарый = СпособРедактированияГрафикаОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Автотест Тогда
		Возврат;
	КонецЕсли;

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьРеквизитыСтрокиПоТЧГрафикОплаты();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не Объект.ЭтоГруппа Тогда
		Если флИспользоватьПлатежныйКалендарь И СпособРедактированияГрафикаОплаты = 1
			И ГрафикОплаты_ВидДней = 1 И НЕ ЗначениеЗаполнено(ГрафикОплаты_ПроизводственныйКалендарь) Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				"Не указан производственный календарь.",,
				"ГрафикОплаты_ПроизводственныйКалендарь",,
				Отказ);
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Наименование)
			И Объект.Наименование = НаименованиеПоШаблону 
			И НЕ ВопросСформироватьНаименование Тогда
			
			НовоеНаименование              = СформироватьНаименованиеСервер();
			Если НовоеНаименование <> НаименованиеПоШаблону Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, НовоеНаименование), "Измененить наименование на новое по шаблону?",
				РежимДиалогаВопрос.ДаНет,60,КодВозвратаДиалога.Нет);
			Иначе
				ВопросСформироватьНаименование = Истина;
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(Объект.Наименование) Тогда
			Объект.Наименование = СформироватьНаименованиеСервер();
			Модифицированность             = Истина;
			ВопросСформироватьНаименование = Истина;
		КонецЕсли;
	Иначе
		ВопросСформироватьНаименование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, НовоеНаименование) Экспорт
	
	ВопросСформироватьНаименование = Истина;
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Наименование   = СформироватьНаименованиеСервер();
		НаименованиеПоШаблону = Объект.Наименование;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	ОбновитьСпособРасчетаДнейПредставление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	// временно отключено до решения проблемы с нажатием кнопки "Провести и закрыть"
	Если НЕ ВопросСформироватьНаименование 
		И ЗначениеЗаполнено(Объект.Наименование)
		И Объект.Наименование = НаименованиеПоШаблону Тогда
		СтандартнаяОбработка			 = Ложь;
		ЗавершениеРаботы				 = Ложь;
		Отказ							 = Истина;
		ВопросСформироватьНаименование	 = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.уатШаблоныДокументов_уэ") Тогда
		ЗаполнитьДокументыПоШаблонуЗавершение(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидДоговораПриИзменении(Элемент)

	Если НЕ ЗначениеЗаполнено(Объект.ВидДоговора)
			ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее")) Тогда
		Объект.ТипЦен = Неопределено;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ВидДоговора)
			ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"))
			ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом")) Тогда
		//Объект.РасчетыВУсловныхЕдиницах = Ложь;
	КонецЕсли;

	ЭтоДоговорПриобретения = 
		(Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"))
		ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));

	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ВалютаВзаиморасчетовПриИзменении(Элемент)

	Если Объект.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
		//Объект.РасчетыВУсловныхЕдиницах = Ложь;
	КонецЕсли;

	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура РасчетыВУсловныхЕдиницахПриИзменении(Элемент)

	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ВедениеВзаиморасчетовПриИзменении(Элемент)
	
	Если флИспользоватьПлатежныйКалендарь И (Объект.ВедениеВзаиморасчетов.Пустая() ИЛИ Объект.ВедениеВзаиморасчетов
		= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом")) Тогда
		Объект.ГрафикОплаты.Очистить();
		ЗаполнитьРеквизитыСтрокиПоТЧГрафикОплаты();
	КонецЕсли;
		
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролироватьСуммуЗадолженностиПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияГрафикаОплатыПриИзменении(Элемент)
	
	Если СпособРедактированияГрафикаОплаты = 1 И Объект.ГрафикОплаты.Количество() > 1 Тогда
		ТекстНСТР = НСтр("en='All lines of payment schedule except the first will be deleted."
			"Do you want to continue?';ru='Все строки графика оплаты, кроме первой, будут удалены."
			"Продолжить?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СпособРедактированияПриИзмененииЗавершение", ЭтотОбъект),
			ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
        Возврат;
	ИначеЕсли СпособРедактированияГрафикаОплаты = 0 И Объект.ГрафикОплаты.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Payment schedule data will be deleted."
			"Do you want to continue?';ru='Данные графика оплаты будут удалены."
			"Продолжить?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СпособРедактированияПриИзмененииЗавершение", ЭтотОбъект),
			ТекстНСТР, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
        Возврат;
	КонецЕсли;
	
	СпособРедактированияПриИзмененииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> КодВозвратаДиалога.Да Тогда
        СпособРедактированияГрафикаОплаты = СпособРедактированияГрафикаОплатыСтарый;
        Возврат;
    КонецЕсли;

	Если СпособРедактированияГрафикаОплаты = 1 Тогда
		Пока Объект.ГрафикОплаты.Количество() > 1 Цикл
	        СтрокаУдаления = Объект.ГрафикОплаты[1];
	        Объект.ГрафикОплаты.Удалить(СтрокаУдаления);
			Модифицированность = Истина;
		КонецЦикла;
	ИначеЕсли СпособРедактированияГрафикаОплаты = 0 Тогда
		Объект.ГрафикОплаты.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	    
    СпособРедактированияПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура СпособРедактированияПриИзмененииФрагмент()
	
	СпособРедактированияГрафикаОплатыСтарый = СпособРедактированияГрафикаОплаты;
	ЗаполнитьРеквизитыСтрокиПоТЧГрафикОплаты();
	УстановитьВидимостьДоступность();
    
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ЭтапОплатыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ГрафикОплаты_ЭтапОплаты) Тогда
		ЭтапОплатыСтруктура = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ГрафикОплаты_ЭтапОплаты,
			"ВариантОтсчета, Процент, Срок, ПроизводственныйКалендарь, ВидСопроводительногоДокумента");
		ГрафикОплаты_ВариантОтсчета = ЭтапОплатыСтруктура.ВариантОтсчета;
		ГрафикОплаты_Процент = ЭтапОплатыСтруктура.Процент;
		ГрафикОплаты_Срок = ЭтапОплатыСтруктура.Срок;
		ГрафикОплаты_ПроизводственныйКалендарь = ЭтапОплатыСтруктура.ПроизводственныйКалендарь;
		ГрафикОплаты_ВидСопроводительногоДокумента = ЭтапОплатыСтруктура.ВидСопроводительногоДокумента;
		Если ЗначениеЗаполнено(ГрафикОплаты_ВидСопроводительногоДокумента) Тогда
			ГрафикОплаты_ВидДней = 1;
		Иначе
			ГрафикОплаты_ВидДней = 0;
		КонецЕсли;

		ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
		УстановитьВидимостьДоступность();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ВариантОтсчетаПриИзменении(Элемент)
	Если ГрафикОплаты_ВариантОтсчета <> ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов") Тогда
		ГрафикОплаты_ВидСопроводительногоДокумента = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ВидДнейПриИзменении(Элемент)
	Если ГрафикОплаты_ВидДней = 0 Тогда
		ГрафикОплаты_ПроизводственныйКалендарь = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ПроцентПриИзменении(Элемент)
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_СрокПриИзменении(Элемент)
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ПроизводственныйКалендарьПриИзменении(Элемент)
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплаты_ВидСопроводительногоДокументаПриИзменении(Элемент)
	ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыГрафикОплаты

&НаКлиенте
Процедура ГрафикОплатыЭтапОплатыПриИзменении(Элемент)

	ТекСтрока = Элементы.ГрафикОплаты.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.ЭтапОплаты) Тогда
		ЭтапОплатыСтруктура = уатОбщегоНазначенияТиповые.ПолучитьЗначенияРеквизитов(ТекСтрока.ЭтапОплаты,
			"ВариантОтсчета, Процент, Срок, ПроизводственныйКалендарь, ВидСопроводительногоДокумента");
		ЗаполнитьЗначенияСвойств(ТекСтрока, ЭтапОплатыСтруктура);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПлатежейВариантОтсчетаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ГрафикОплаты.ТекущиеДанные;
	Если ТекСтрока.ВариантОтсчета <> ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов") Тогда
		ТекСтрока.ВидСопроводительногоДокумента = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыСД

&НаКлиенте
Процедура ВидыСопроводительныхДокументовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ОбновитьСпособРасчетаДнейПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ВидыСопроводительныхДокументовСпособРасчетаДнейПредставлениеПриИзменении(Элемент)
	ТекСтрока = Элементы.ВидыСопроводительныхДокументов.ТекущиеДанные;
	Если ТекСтрока.СпособРасчетаДнейПредставление = "Рабочие" Тогда
		ТекСтрока.СпособРасчетаДней = 1;
	Иначе
		ТекСтрока.СпособРасчетаДней = 0;
		ТекСтрока.ПроизводственныйКалендарь = Неопределено;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	Оповещ = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, Оповещ);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДопПараметры) Экспорт
	УстановитьВидимостьДоступность();
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура НастроитьШаблон(Команда)
	
	ПараметрыФормы = Новый Структура("ОбъектНастройки", "Справочник_ДоговорыКонтрагентов");
	ОткрытьФорму("ОбщаяФорма.уатНастройкаШаблона", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	
	Объект.Наименование   = СформироватьНаименованиеСервер();
	НаименованиеПоШаблону = Объект.Наименование;
	Модифицированность  = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидыДокументовПоШаблону(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Оповещ = Новый ОписаниеОповещения("ЗаполнитьДокументыПоШаблонуОтвет", ЭтотОбъект);
		ПоказатьВопрос(Оповещ, "Перед выполнением операции документ будет записан. Продолжить?",
			РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.уатШаблоныДокументов_уэ.ФормаВыбора",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументыПоШаблонуОтвет(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Рез = Записать();
		Если Рез Тогда
			ОткрытьФорму("Справочник.уатШаблоныДокументов_уэ.ФормаВыбора",, ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыПоШаблонуЗавершение(Шаблон)
	Для Каждого ТекВидДокумента Из Шаблон.ВидыДокументов Цикл
		Если НЕ ЗначениеЗаполнено(ТекВидДокумента.ВидДокумента) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.ВидыСопроводительныхДокументов.Добавить();
		НоваяСтрока.ВидДокумента = ТекВидДокумента.ВидДокумента;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьВидимостьДоступность()

	ЭтоДоговорКомиссии     = 
		(Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"))
		ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	ЭтоДоговорПриобретения = 
		(Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"))
		ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	ЭтоДоговорРеализации   = 
		(Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"))
		ИЛИ (Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));

	//Группа "Ведение взаиморасчетов"
	//Элементы.РасчетыВУсловныхЕдиницах.Доступность =
	//	(ЭтоДоговорРеализации 
	//	ИЛИ Объект.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"))
	//	И (Объект.ВалютаВзаиморасчетов <> ВалютаРегламентированногоУчета);
	
	Элементы.ДопустимаяСуммаЗадолженности.Доступность = Объект.КонтролироватьСуммуЗадолженности;
	Элементы.ЗапрещатьПроведениеПриЗадолженности.Доступность = Объект.КонтролироватьСуммуЗадолженности;
	
	Элементы.ГруппаГрафикОплаты.Видимость = флИспользоватьПлатежныйКалендарь
		И (Объект.ВедениеВзаиморасчетов
			= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказамНаТС")
		ИЛИ Объект.ВедениеВзаиморасчетов
			= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоНакладным")
		ИЛИ Объект.ВедениеВзаиморасчетов
			= ПредопределенноеЗначение("Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам"));
				
	Элементы.ГрафикОплаты_ПроизводственныйКалендарь.Видимость = (ГрафикОплаты_ВидДней = 1);
	Элементы.ГрафикОплаты_ВидСопроводительногоДокумента.Видимость = (ГрафикОплаты_ВариантОтсчета
		= ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов"));
		
	Если СпособРедактированияГрафикаОплаты = 0 Тогда
		Элементы.СтраницыГрафикОплаты.Видимость = Ложь;
	Иначе
		Элементы.СтраницыГрафикОплаты.Видимость = Истина;
		Если СпособРедактированияГрафикаОплаты = 1 Тогда
			Элементы.СтраницыГрафикОплаты.ТекущаяСтраница = Элементы.СтраницаГрафикОплатыОдинЭтап;
		Иначе
			Элементы.СтраницыГрафикОплаты.ТекущаяСтраница = Элементы.СтраницаГрафикОплатыНесколькоЭтапов;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаГрафикОплаты.ТолькоПросмотр = (Элементы.ГрафикОплаты.ТолькоПросмотр ИЛИ НЕ Элементы.ГрафикОплаты.Доступность);
	Элементы.ГруппаПодсказкаГрафик.Видимость = Объект.ГрафикОплаты.НайтиСтроки(
		Новый Структура("ВариантОтсчета",
			ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ДоОтправленияПоЗаказу"))).Количество() > 0;
	Элементы.ПланированиеОбъемовПеревозок.Видимость = флИспользоватьЗакреплениеМЛЗаПеревозчиками
		И ЭтоДоговорПриобретения;
КонецПроцедуры

&НаСервере
Функция СформироватьНаименованиеСервер()
	
	СпрОб = РеквизитФормыВЗначение("Объект");
	
	Возврат уатНастройкиШаблонов.СформироватьНаименованиеПоШаблону("Справочник_ДоговорыКонтрагентов", СпрОб);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоШаблону()
	
	СпрОб = РеквизитФормыВЗначение("Объект");
	Пустышка = уатНастройкиШаблонов.СоздатьДоговорКонтрагентаПоШаблону(СпрОб);
	ЗначениеВРеквизитФормы(СпрОб, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпособРасчетаДнейПредставление()
	Для Каждого ТекВидСД Из Объект.ВидыСопроводительныхДокументов Цикл
		Если ТекВидСД.СпособРасчетаДней = 1 Тогда
			ТекВидСД.СпособРасчетаДнейПредставление = "Рабочие";
		Иначе
			ТекВидСД.СпособРасчетаДнейПредставление = "Календарные";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧГрафикОплатыПоРеквизитамСтроки()
	Если Объект.ГрафикОплаты.Количество() = 0 Тогда
		Объект.ГрафикОплаты.Добавить();
	КонецЕсли;
	
	Объект.ГрафикОплаты[0].ЭтапОплаты                    = ГрафикОплаты_ЭтапОплаты;
	Объект.ГрафикОплаты[0].ВариантОтсчета                = ГрафикОплаты_ВариантОтсчета;
	Объект.ГрафикОплаты[0].Процент                       = ГрафикОплаты_Процент;
	Объект.ГрафикОплаты[0].Срок                          = ГрафикОплаты_Срок;
	Объект.ГрафикОплаты[0].ПроизводственныйКалендарь     = ГрафикОплаты_ПроизводственныйКалендарь;
	Объект.ГрафикОплаты[0].ВидСопроводительногоДокумента = ГрафикОплаты_ВидСопроводительногоДокумента;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыСтрокиПоТЧГрафикОплаты()
	
	Если Объект.ГрафикОплаты.Количество() = 0 Тогда
		ГрафикОплаты_ЭтапОплаты = Неопределено;
		ГрафикОплаты_ВариантОтсчета = Неопределено;
		ГрафикОплаты_Процент = 0;
		ГрафикОплаты_Срок = 0;
		ГрафикОплаты_ПроизводственныйКалендарь = Неопределено;
		ГрафикОплаты_ВидДней = 0;
		ГрафикОплаты_ВидСопроводительногоДокумента = Неопределено;
	Иначе
		ГрафикОплаты_ЭтапОплаты                    = Объект.ГрафикОплаты[0].ЭтапОплаты;
		ГрафикОплаты_ВариантОтсчета                = Объект.ГрафикОплаты[0].ВариантОтсчета;
		ГрафикОплаты_Процент                       = Объект.ГрафикОплаты[0].Процент;
		ГрафикОплаты_Срок                          = Объект.ГрафикОплаты[0].Срок;
		ГрафикОплаты_ПроизводственныйКалендарь     = Объект.ГрафикОплаты[0].ПроизводственныйКалендарь;
		ГрафикОплаты_ВидСопроводительногоДокумента = Объект.ГрафикОплаты[0].ВидСопроводительногоДокумента;
		Если ЗначениеЗаполнено(ГрафикОплаты_ПроизводственныйКалендарь) Тогда
			ГрафикОплаты_ВидДней = 1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
