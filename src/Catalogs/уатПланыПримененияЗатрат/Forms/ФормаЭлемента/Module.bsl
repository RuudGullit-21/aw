
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Фильтры.ПодчиненныеЭлементы.ФильтрыФильтр.ВыбиратьТип = Ложь;
	ОбновитьНадписьВидыЗатрат();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры


&НаКлиенте
Процедура ФильтрыФильтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекТС = Элементы.Фильтры.ТекущиеДанные.Фильтр;
	
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ТекТС) Тогда
		СтандартнаяОбработка = Ложь;
		
		мСписок = Новый СписокЗначений;
		мСписок.Добавить(1, НСтр("en='Columns';ru='Колонны'"));
		мСписок.Добавить(2, НСтр("en='vehicle';ru='Транспортное средство'"));
		мСписок.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ФильтрыФильтрНачалоВыбораЗавершение", ЭтотОбъект,
		Новый Структура("ТекТС, Элемент", ТекТС, Элемент)));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыФильтрНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Перем СтандартнаяОбработка;
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
		
	ИначеЕсли ВыбранныйЭлемент.Значение = 1 Тогда
		ОткрытьФорму("Справочник.уатКолонны.ФормаВыбора",, ДополнительныеПараметры.Элемент);
		
	ИначеЕсли ВыбранныйЭлемент.Значение = 2 Тогда
		СтруктураОтбора = Новый Структура;
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			СтруктураОтбора.Вставить("Организация", Объект.Организация);
		КонецЕсли;
		
		уатИнтерфейсВводаТС.РеквизитТСНачалоВыбора(
			ДополнительныеПараметры.Элемент, 
			ДополнительныеПараметры.ТекТС, 
			Неопределено, 
			СтандартнаяОбработка, 
			СтруктураОтбора
		);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьВидыЗатрат()
	СписокОтсутствующихВидовЗатрат = "";
	
	флЕстьГСМ     = Ложь;
	флЕстьШины    = Ложь;
	флЕстьРемонты = Ложь;
	флЕстьЗП      = Ложь;
	флВыдачаРМ    = Ложь;
	Для Каждого ТекСтрока Из Объект.Расходы Цикл
		Если ТекСтрока.СтатьяРасходов.ВидЗатрат = Перечисления.уатВидыЗатрат.ГСМ Тогда
			флЕстьГСМ = Истина;
		ИначеЕсли ТекСтрока.СтатьяРасходов.ВидЗатрат = Перечисления.уатВидыЗатрат.Шины Тогда
			флЕстьШины = Истина;
		ИначеЕсли ТекСтрока.СтатьяРасходов.ВидЗатрат = Перечисления.уатВидыЗатрат.Ремонт Тогда
			флЕстьРемонты = Истина;
		ИначеЕсли ТекСтрока.СтатьяРасходов.ВидЗатрат = Перечисления.уатВидыЗатрат.ОплатаТруда Тогда
			флЕстьЗП = Истина;
		ИначеЕсли ТекСтрока.СтатьяРасходов.ВидЗатрат = Перечисления.уатВидыЗатрат.ВыдачаРасходныхМатериалов Тогда
			флВыдачаРМ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ флЕстьГСМ Тогда
		СписокОтсутствующихВидовЗатрат = СписокОтсутствующихВидовЗатрат + ", " + НСтр("en='Fuels';ru='ГСМ'");
	КонецЕсли;
	Если НЕ флЕстьШины Тогда
		СписокОтсутствующихВидовЗатрат = СписокОтсутствующихВидовЗатрат + ", " + НСтр("en='Tires';ru='Шины'");
	КонецЕсли;
	Если НЕ флЕстьРемонты Тогда
		СписокОтсутствующихВидовЗатрат = СписокОтсутствующихВидовЗатрат + ", " + НСтр("en='Repairs';ru='Ремонты'");
	КонецЕсли;
	Если НЕ флЕстьЗП Тогда
		СписокОтсутствующихВидовЗатрат = СписокОтсутствующихВидовЗатрат + ", " + НСтр("en='Salary';ru='Оплата труда'");
	КонецЕсли;
	Если НЕ флВыдачаРМ Тогда
		СписокОтсутствующихВидовЗатрат = СписокОтсутствующихВидовЗатрат + ", " + НСтр("en='Salary';ru='Выдача расходных материалов'");
	КонецЕсли;
	Если СписокОтсутствующихВидовЗатрат <> "" Тогда
		СписокОтсутствующихВидовЗатрат = Сред(СписокОтсутствующихВидовЗатрат, 3);
	КонецЕсли;
	
	Если СписокОтсутствующихВидовЗатрат <> "" Тогда
		Элементы.НадписьВидыЗатрат.ЦветТекста = WebЦвета.Красный;
		ТекстНСТР = НСтр("en='The plan does not include expenses items for cost elements: %1"
"At posting of documents the Waybill, the Repair list, Issue of expendable materials"
"will not reflect the expenses of these types of costs!';ru='В план не включены статьи расходов для видов затрат: %1 "
"При проведении документов Путевой лист, Ремонтный лист, Выдача расходных материалов"
"не будут отражаться расходы по данным видам затрат!'");
		ТекстНСТР = СтрШаблон(ТекстНСТР,СписокОтсутствующихВидовЗатрат);
		Элементы.НадписьВидыЗатрат.Заголовок = ТекстНСТР;
	Иначе
		Элементы.НадписьВидыЗатрат.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		ТекстНСТР = НСтр("en='The plan includes articles on all types of costs necessary to reflect costs"
"in documents Waybill, Repair list, Issue of expendable materials';ru='В план включены статьи по всем видам затрат, необходимым для отражения расходов"
"в документах Путевой лист, Ремонтный лист, Выдача расходных материалов'");
		Элементы.НадписьВидыЗатрат.Заголовок = ТекстНСТР;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыПриИзменении(Элемент)
	ОбновитьНадписьВидыЗатрат();
КонецПроцедуры

#КонецОбласти