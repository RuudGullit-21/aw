
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтатус.Видимость = НЕ СпаравочникиЗагружены И Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаНаименованияГрузов.Видимость = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаУпаковки.Видимость           = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаТипыКузова.Видимость         = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаВариантыЗагрузки.Видимость   = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаВариантыРазгрузки.Видимость  = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	Элементы.ГруппаВалюты.Видимость             = Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если НЕ Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ Тогда
		Возврат;
	КонецЕсли;
	ХранилищеНастроек = ТекущийОбъект.НастройкиХранилище.Получить();
	Если Не ХранилищеНастроек = Неопределено Тогда 
		СтруктураНастроек = ХранилищеНастроек;
	КонецЕсли;
	
	Если СтруктураНастроек = Неопределено Тогда 
		СпаравочникиЗагружены = Ложь;
	Иначе
		
		СпаравочникиЗагружены = СтруктураНастроек.СпаравочникиЗагружены;
		
		CписокНаименованийУпаковок = СтруктураНастроек.СоответсвиеУпаковки;
		Для Каждого ТекСтрока Из CписокНаименованийУпаковок Цикл
			НоваяСтрокаСоответствие = СоответсвиеУпаковки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦикла;
		
		CписокНаименованийГрузов = СтруктураНастроек.НаименованияГрузов;
		Для Каждого ТекСтрока Из CписокНаименованийГрузов Цикл
			НоваяСтрокаСоответствие = НаименованияГрузов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦикла;
		
		CписокВариантовЗагрузки = СтруктураНастроек.ТипыКузова;
		Для Каждого ТекСтрока Из CписокВариантовЗагрузки Цикл
			НоваяСтрокаСоответствие = ТипыКузова.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦИкла;
		
		CписокВариантовРазгрузки = СтруктураНастроек.ВариантыЗагрузки;
		Для Каждого ТекСтрока Из CписокВариантовРазгрузки Цикл
			НоваяСтрокаСоответствие = ВариантыЗагрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦИкла;
		
		ТаблицаКузовов = СтруктураНастроек.ВариантыРазгрузки;
		Для Каждого ТекСтрока Из ТаблицаКузовов Цикл
			НоваяСтрокаСоответствие = ВариантыРазгрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦИкла;
		
		ТаблицаВалют = СтруктураНастроек.Валюты;
		Для Каждого ТекСтрока Из ТаблицаВалют Цикл
			НоваяСтрокаСоответствие = Валюты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСоответствие, ТекСтрока);
			НоваяСтрокаСоответствие.Идентификатор = СтрЗаменить(ТекСтрока.Идентификатор, Символы.НПП, "");
		КонецЦИкла;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Объект.Ссылка = Справочники.уатБиржиГрузоперевозок_уэ.АТИ Тогда
		Возврат;
	КонецЕсли;

	НастройкиСтруктура = ПолучитьСтруктуруНастроек();
	ТекущийОбъект.НастройкиХранилище = Новый ХранилищеЗначения(НастройкиСтруктура, Новый СжатиеДанных(9));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_УчетныеЗаписи

&НаКлиенте
Процедура УчетныеЗаписиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элементы.УчетныеЗаписи.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Строки = Объект.УчетныеЗаписи.НайтиСтроки(
		Новый Структура("Организация, Пользователь", ТекущиеДанные.Организация, ТекущиеДанные.Пользователь));
	Если Строки.Количество() > 1 Тогда
		ТекстОшибки = Нстр("ru = 'Запись с такими ключевыми полями уже существует'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузкаСправочников(Команда)

	Если Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатБиржиГрузоперевозок_уэ.АТИ") Тогда
		ЗагрузкаСправочниковАТИ();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаименованияГрузов(Команда)
	Если НаименованияГрузов.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаНаименованияГрузовЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаНаименованияГрузов();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСоответствиеУпаковки(Команда)
	Если СоответсвиеУпаковки.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаСоответствиеУпаковкиЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаСоответствиеУпаковки();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТипыКузова(Команда)
	Если ТипыКузова.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаТипыКузоваЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаТипыКузова();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВариантыЗагрузки(Команда)
	Если ТипыКузова.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаВариантыЗагрузкиЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаВариантыЗагрузки();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВариантыРазгрузки(Команда)
	Если ТипыКузова.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаВариантыРазгрузкиЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаВариантыРазгрузки();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВалюты(Команда)
	Если ТипыКузова.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузкаВалютыЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли;
	
	ЗагрузкаВалюты();

КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	СпаравочникиЗагружены = Ложь;
	Элементы.ГруппаСтатус.Видимость = НЕ СпаравочникиЗагружены И Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатБиржиГрузоперевозок_уэ.АТИ");
	НаименованияГрузов.Очистить();
	СоответсвиеУпаковки.Очистить();
	ТипыКузова.Очистить();
	ВариантыЗагрузки.Очистить();
	ВариантыРазгрузки.Очистить();
	Валюты.Очистить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузкаСправочниковАТИ()
	
	ТекстОшибки = "";
	
	ЗагрузкаНаименованияГрузов(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузкаСоответствиеУпаковки(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузкаТипыКузова(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;

	ЗагрузкаВариантыЗагрузки(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;

	ЗагрузкаВариантыРазгрузки(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузкаВалюты(ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;


	СпаравочникиЗагружены = Истина;
	Элементы.ГруппаСтатус.Видимость = НЕ СпаравочникиЗагружены
		И Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатБиржиГрузоперевозок_уэ.АТИ");
		
	ОписаниеНСТР = Нстр("ru = 'Справочники биржи загружены успешно.'");
	
	ПоказатьПредупреждение(Неопределено, ОписаниеНСТР);
	
	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруНастроек()
	
	СтруктураНастроек = Новый Структура(
	"СпаравочникиЗагружены,
	|НаименованияГрузов,
	|СоответсвиеУпаковки,
	|ТипыКузова,
	|ВариантыЗагрузки,
	|ВариантыРазгрузки, 
	|Валюты");
	
	СтруктураНастроек.СпаравочникиЗагружены = СпаравочникиЗагружены;
	
	МассивСоответсвиеУпаковки = Новый Массив();
	Для Каждого ТекСтрока Из СоответсвиеУпаковки Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Упаковка, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивСоответсвиеУпаковки.Добавить(СтруктураСвойств);
	КонецЦикла;
	
	МассивНаименованияГрузов = Новый Массив();
	Для Каждого ТекСтрока Из НаименованияГрузов Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Номенклатура, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивНаименованияГрузов.Добавить(СтруктураСвойств);
	КонецЦикла;
	
	МассивВариантыЗагрузки = Новый Массив();
	Для Каждого ТекСтрока Из ВариантыЗагрузки Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивВариантыЗагрузки.Добавить(СтруктураСвойств);
	КонецЦИкла;
	
	МассивВариантыРазгрузки = Новый Массив();
	Для Каждого ТекСтрока Из ВариантыРазгрузки Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивВариантыРазгрузки.Добавить(СтруктураСвойств);
	КонецЦИкла;
	
	МассивТипыКузова = Новый Массив();
	Для Каждого ТекСтрока Из ТипыКузова Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивТипыКузова.Добавить(СтруктураСвойств);
	КонецЦИкла;
	
	МассивВалюты = Новый Массив();
	Для Каждого ТекСтрока Из Валюты Цикл
		СтруктураСвойств = Новый Структура("НаименованиеАТИ, Валюта, Идентификатор");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, ТекСтрока);
		МассивВалюты.Добавить(СтруктураСвойств);
	КонецЦИкла;


	СтруктураНастроек.НаименованияГрузов    = МассивНаименованияГрузов;
	СтруктураНастроек.СоответсвиеУпаковки   = МассивСоответсвиеУпаковки;
	СтруктураНастроек.ТипыКузова            = МассивТипыКузова;
	СтруктураНастроек.ВариантыЗагрузки      = МассивВариантыЗагрузки;
	СтруктураНастроек.ВариантыРазгрузки     = МассивВариантыРазгрузки;
	СтруктураНастроек.Валюты                = МассивВалюты;
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузкаНаименованияГрузов(ТекстОшибки = Неопределено)

	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	CписокНаименованийГрузов = уатИнтеграции_уэ.АТИ_ПолучениеCпискаНаименованийГрузов(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из CписокНаименованийГрузов Цикл
			СтрокаИскомая = НаименованияГрузов.НайтиСтроки(
				Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Представление;
			Иначе
				НоваяСтрокаСоответствие = НаименованияГрузов.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Представление;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "");
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаСоответствиеУпаковки(ТекстОшибки = Неопределено)
	
	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	CписокНаименованийУпаковок = уатИнтеграции_уэ.АТИ_ПолучениеCпискаНаименованийУпаковок(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из CписокНаименованийУпаковок Цикл
			СтрокаИскомая = СоответсвиеУпаковки.НайтиСтроки(
				Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Представление;
				СтрокаИскомая[0].Идентификатор = ТекСтрока.Значение;
			Иначе
				НоваяСтрокаСоответствие = СоответсвиеУпаковки.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Представление;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "");
			КонецЕсли;;
		КонецЦикла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаТипыКузова(ТекстОшибки = Неопределено)

	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	ТаблицаКузовов = уатИнтеграции_уэ.АТИ_ПолучениеСпискаКузовов(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из ТаблицаКузовов Цикл
			СтрокаИскомая = ТипыКузова.НайтиСтроки(
			Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Идентификатор), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Наименование;
			Иначе
				НоваяСтрокаСоответствие = ТипыКузова.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Наименование;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Идентификатор), Символы.НПП, "");
			КонецЕсли;
		КонецЦИкла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаВариантыЗагрузки(ТекстОшибки = Неопределено)

	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	CписокВариантовЗагрузки = уатИнтеграции_уэ.АТИ_ПолучениеСпискаВариантовЗагрузки(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из CписокВариантовЗагрузки Цикл
			СтрокаИскомая = ВариантыЗагрузки.НайтиСтроки(
			Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Представление;
			Иначе
				НоваяСтрокаСоответствие = ВариантыЗагрузки.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Представление;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "");
			КонецЕсли;
		КонецЦИкла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаВариантыРазгрузки(ТекстОшибки = Неопределено)

	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	CписокВариантовРазгрузки = уатИнтеграции_уэ.АТИ_ПолучениеСпискаВариантовРазгрузки(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из CписокВариантовРазгрузки Цикл
			СтрокаИскомая = ВариантыРазгрузки.НайтиСтроки(
			Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Представление;
			Иначе
				НоваяСтрокаСоответствие = ВариантыРазгрузки.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Представление;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Значение), Символы.НПП, "");
			КонецЕсли;
		КонецЦИкла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаВалюты(ТекстОшибки = Неопределено)

	Если ТекстОшибки = Неопределено Тогда
		ТекстОшибки = "";
	КонецЕсли;
	
	CписокВалют = уатИнтеграции_уэ.АТИ_ПолучениеСпискаВалют(ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Для Каждого ТекСтрока Из CписокВалют Цикл
			СтрокаИскомая = Валюты.НайтиСтроки(
				Новый Структура("Идентификатор", СтрЗаменить(Строка(ТекСтрока.Значение.Идентификатор), Символы.НПП, "")));
			Если СтрокаИскомая.Количество() <> 0 Тогда
				СтрокаИскомая[0].НаименованиеАТИ = ТекСтрока.Представление;
			Иначе
				НоваяСтрокаСоответствие = Валюты.Добавить();
				НоваяСтрокаСоответствие.НаименованиеАТИ = ТекСтрока.Представление;
				НоваяСтрокаСоответствие.Идентификатор   = СтрЗаменить(Строка(ТекСтрока.Значение.Идентификатор), Символы.НПП, "");
				Валюта  = Справочники.Валюты.НайтиПоКоду(ТекСтрока.Значение.Код);
				СтрокаИскомая = Валюты.НайтиСтроки(
					Новый Структура("Валюта", Валюта));
				Если СтрокаИскомая.Количество() = 0 Тогда
					НоваяСтрокаСоответствие.Валюта = Валюта;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаТипыКузоваЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ТипыКузова.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаТипыКузова();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаНаименованияГрузовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		НаименованияГрузов.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаНаименованияГрузов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаСоответствиеУпаковкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		СоответсвиеУпаковки.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаСоответствиеУпаковки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВариантыЗагрузкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ВариантыЗагрузки.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаВариантыЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВариантыРазгрузкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ВариантыРазгрузки.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаВариантыРазгрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВалютыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Валюты.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗагрузкаВалюты();
	
КонецПроцедуры

#КонецОбласти

