#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);

	// Создание регламентного задания - пустышки (для хранения его идентификатора в данных).
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УИДРегламентногоЗадания);
	Если Задание = Неопределено Тогда
		// Из-за выполнения индивидуального регламентного задания непосредственно в необходимой области модели сервиса.
		// Создание регламентного задания осуществляется платформенным способом,
		// а не через программный интерфейс общего модуля РегламентныеЗадания.
		
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ItobВыполнениеНазначеннойКоманды);
		Задание.ИмяПользователя = Справочники.УдалитьItobНазначенныеКоманды.ИмяПользователяРегламентногоЗадания(Пользователь);
		Задание.Использование = Ложь;
		Задание.Наименование = Справочники.УдалитьItobНазначенныеКоманды.НаименованиеРегламентногоЗадания(Наименование);
		Задание.Записать();
		
		УИДРегламентногоЗадания = Задание.УникальныйИдентификатор;
	КонецЕсли;
			
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УИДРегламентногоЗадания);
	Если Задание <> Неопределено Тогда
		Задание.Удалить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УИДРегламентногоЗадания = Неопределено;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);	
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УИДРегламентногоЗадания);
	Если Задание <> Неопределено Тогда
		ЗаданиеИзменено = Ложь;
		
		Если Задание.Использование <> Использование Тогда
			Задание.Использование = Использование;
			ЗаданиеИзменено = Истина;
		КонецЕсли;
		
		// Расписание устанавливается в форме элемента.
		Если ДополнительныеСвойства.Свойство("Расписание") 
			И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание) Тогда
			Задание.Расписание = ДополнительныеСвойства.Расписание;
			ЗаданиеИзменено = Истина;
		КонецЕсли;
		
		ИмяПользователя = Справочники.УдалитьItobНазначенныеКоманды.ИмяПользователяРегламентногоЗадания(Пользователь);
		Если Задание.ИмяПользователя <> ИмяПользователя Тогда
			Задание.ИмяПользователя = ИмяПользователя;
			ЗаданиеИзменено = Истина;
		КонецЕсли;
		
		НаименованиеЗадания = Справочники.УдалитьItobНазначенныеКоманды.НаименованиеРегламентногоЗадания(Наименование);
		Если Задание.Наименование <> НаименованиеЗадания Тогда
			Задание.Наименование = НаименованиеЗадания;
			ЗаданиеИзменено = Истина;
		КонецЕсли;
		
		Если Задание.Параметры.Количество() <> 1 ИЛИ Задание.Параметры[0] <> Ссылка Тогда
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(Ссылка);
			Задание.Параметры = ПараметрыЗадания;
			ЗаданиеИзменено = Истина;
		КонецЕсли;
		
		Если ЗаданиеИзменено Тогда
			Задание.Записать();
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	 Пользователь = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли
