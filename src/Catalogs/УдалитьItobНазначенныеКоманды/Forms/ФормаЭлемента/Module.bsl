#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ОтборПоТрекерам = Истина;
		Объект.Использование = Истина;
		
		Расписание = Новый РасписаниеРегламентногоЗадания;	
		Расписание.ПериодПовтораДней = 1;
	Иначе
		ПрочитатьРасписаниеРегламентногоЗадания();	
	КонецЕсли; 
		
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Очистить();
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить("Состояние");
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить("ОтсутствуютДанныеМинуты", НСтр("ru = 'Отсутствуют данные, минуты'"));
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить("ОтсутствуютДанныеЧасы", НСтр("ru = 'Отсутствуют данные, часы'"));
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить(Перечисления.ItobПоказательКоординат.Скорость);
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить(Перечисления.ItobПоказательКоординат.Направление);
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ItobНазначенияДатчиков.Ссылка,
	|	ItobНазначенияДатчиков.Представление КАК Представление
	|ИЗ
	|	Справочник.ItobНазначенияДатчиков КАК ItobНазначенияДатчиков
	|ГДЕ
	|	(НЕ ItobНазначенияДатчиков.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Все операции с регламентными заданиями размещены в модуле объекта.
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание", Расписание);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТрекеры

&НаКлиенте
Процедура ОтборПоТрекерамПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьРасписание(Команда)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОбработкаВыбораРасписания", ItobОбщегоНазначенияКлиент, Новый Структура("ЭтаФорма", ЭтаФорма)));
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьРасписаниеРегламентногоЗадания()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторЗадания = Объект.УИДРегламентногоЗадания;
	Если ТипЗнч(ИдентификаторЗадания) = Тип("УникальныйИдентификатор") Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
		Если Задание <> Неопределено Тогда
			Расписание = Задание.Расписание;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()

	Элементы.ГруппаТрекеры.Видимость = Объект.ОтборПоТрекерам;

КонецПроцедуры

&НаКлиенте
Процедура УсловияОтбораПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") И ВыбранноеЗначение = "Состояние" Тогда
		Если ТипЗнч(Элементы.УсловияОтбора.ТекущиеДанные.Значение) <> Тип("ПеречислениеСсылка.ItobСостоянияТерминалов") Тогда
			Элементы.УсловияОтбора.ТекущиеДанные.Значение = ПустоеСостояниеТерминала;				
			
		КонецЕсли;		
		
	Иначе
		Если ТипЗнч(Элементы.УсловияОтбора.ТекущиеДанные.Значение) <> Тип("Число") Тогда
			Элементы.УсловияОтбора.ТекущиеДанные.Значение = 0;			
		
		КонецЕсли;		
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

