
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	мШирина = Элементы.ГруппаМакетТСКорпус.Ширина;
	ИнициализацияДанныхМакетаТС();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ШиринаМакетаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СохранитьДанныеВМакет(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Изменен макет ТС");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкаШиныУстановленаПриИзменении(Элемент)
	ТекДанные = Элементы.МестаУстановкиШин.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП") И ТекДанные.Установлена Тогда
		Для Каждого ТекШина Из МестаУстановкиШин Цикл
			Если ТекШина.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗПВ") ИЛИ
				ТекШина.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗПН") Тогда
				ТекШина.Установлена = Ложь;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ") И ТекДанные.Установлена Тогда
		Для Каждого ТекШина Из МестаУстановкиШин Цикл
			Если ТекШина.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛВ") ИЛИ
				ТекШина.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛН") Тогда
				ТекШина.Установлена = Ложь;
			КонецЕсли;
		КонецЦикла; 
	ИначеЕсли (ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛВ")
		ИЛИ ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛН")) И ТекДанные.Установлена Тогда
		ШиныАналоги = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки, Установлена", ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ"), Истина));
		Для Каждого ТекШина Из ШиныАналоги Цикл
			ТекШина.Установлена = Ложь;
		КонецЦикла;
	ИначеЕсли (ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗПВ")
		ИЛИ ТекДанные.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗПН")) И ТекДанные.Установлена Тогда
		ШиныАналоги = МестаУстановкиШин.НайтиСтроки(Новый Структура("МестоУстановки, Установлена", ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП"), Истина));
		Для Каждого ТекШина Из ШиныАналоги Цикл
			ТекШина.Установлена = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	ОтрисоватьШины();
КонецПроцедуры

&НаКлиенте
Процедура МакетТСПриИзменении(Элемент)
	Если МакетТС = 0 Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
	ИначеЕсли МакетТС = 1 Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетЛегковогоАвто;
	ИначеЕсли МакетТС = 2 Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетМикроавтобуса;
	ИначеЕсли МакетТС = 3 Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто4оси;
	ИначеЕсли МакетТС = 4 Тогда
		КорпусТС = Файл;
		РисунокКорпусаТС = Неопределено;
	КонецЕсли;
	
	ОтрисоватьКорпус();
	
КонецПроцедуры

&НаКлиенте
Процедура ШиринаМакетаПриИзменении(Элемент)
	Элементы.ГруппаМакетТСКорпус.Ширина = мШирина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыМестаУстановкиШин

&НаКлиенте
Процедура МестаУстановкиШинПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтобразитьВсеСтроки(Команда)
	
	Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
		Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
			ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ") Тогда
			ТекСтрока.Установлена = Ложь;
			Продолжить;
		КонецЕсли;
		ТекСтрока.Установлена = Истина;
	КонецЦикла;
	
	ОтрисоватьШины();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкиВоВсехСтроках(Команда)
	
	Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
		ТекСтрока.Установлена = Ложь;
	КонецЦикла;
	
	ОтрисоватьШины();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоМакету(Команда)
	
	Если МакетТС = 1 ИЛИ МакетТС = 2 Тогда
		Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ПЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ПП") Тогда
				ТекСтрока.Установлена = Истина;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Ложь;
		КонецЦикла;
	ИначеЕсли МакетТС = 0 Тогда
		Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗПН")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗПВ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗЛН")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗЛВ") Тогда
				ТекСтрока.Установлена = Ложь;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Истина;
		КонецЦикла;
	ИначеЕсли МакетТС = 3 Тогда
		Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ") Тогда
				ТекСтрока.Установлена = Ложь;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Истина;
		КонецЦикла;
	КонецЕсли;
	
	ОтрисоватьШины();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияДанныхМакетаТС()
	Запрос = Новый Запрос();
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	уатМестаУстановкиШин.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.уатМестаУстановкиШин КАК уатМестаУстановкиШин
	              |ГДЕ
	              |	уатМестаУстановкиШин.Предопределенный = ИСТИНА
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	уатМестаУстановкиШин.Наименование";
	
	СписокМестУстановки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	МестаУстановкиШин.Очистить();
	Для Каждого ТекСтрока Из СписокМестУстановки Цикл
		НоваяШина = МестаУстановкиШин.Добавить();
		НоваяШина.МестоУстановки = ТекСтрока.Ссылка;
		НоваяШина.Объект = СокрЛП("Шина_" + ТекСтрока.Ссылка);
	КонецЦикла;
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	РисунокКорпусаТС = ДокОбъект.ХранилищеМакета.Получить();
	ДеревоНастроек   = ДокОбъект.ДеревоМакета.Получить();
	Если ДеревоНастроек <> Неопределено Тогда
		Попытка
			ЗначениеВРеквизитФормы(ДеревоНастроек, "НастройкаМакетаТС");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// Если рисунок не указан, по умолчанию рисуем корпус грузового авто.
	Если НЕ ЗначениеЗаполнено(РисунокКорпусаТС) Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
		мШирина = 35;
	ИначеЕсли ТипЗнч(РисунокКорпусаТС) = Тип("Структура") Тогда
		Если РисунокКорпусаТС.Свойство("Макет") Тогда
			Если РисунокКорпусаТС.Свойство("ШиринаМакета") Тогда
				мШирина = РисунокКорпусаТС.ШиринаМакета;
			КонецЕсли;
			РисунокКорпусаТС = РисунокКорпусаТС.Макет;
		ИначеЕсли РисунокКорпусаТС.Свойство("ИмяФайла") Тогда
			Если РисунокКорпусаТС.Свойство("ШиринаМакета") Тогда
				мШирина = РисунокКорпусаТС.ШиринаМакета;
			КонецЕсли;
			Элементы.МакетТС.СписокВыбора.Добавить(4, РисунокКорпусаТС.ИмяФайла);
			Картинка = ПоместитьВоВременноеХранилище(РисунокКорпусаТС.Файл, Новый УникальныйИдентификатор);
			Файл	 = Картинка;
			КорпусТС = Картинка;
			РисунокКорпусаТС = Неопределено;
			МакетТС = 4;
		КонецЕсли;
	КонецЕсли;
	
	ЗагрузитьДанныеИзМакета();
	
	ОтрисоватьМакет();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзМакета()
	
	НастройкаМакетаТСДерево = РеквизитФормыВЗначение("НастройкаМакетаТС");
	
	// Первоначальная загрузка, новый макет - строк нет
	Если НастройкаМакетаТСДерево.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Таблица шин
	ВеткаШины = НастройкаМакетаТСДерево.Строки.Найти("Шины", "Объект");
	Если ВеткаШины <> Неопределено Тогда
		Для Каждого ТекСтрокаШины Из ВеткаШины.Строки Цикл
			СтрокаШиныВДереве = МестаУстановкиШин.НайтиСтроки(Новый Структура("Объект", ТекСтрокаШины.Объект));
			Если СтрокаШиныВДереве.Количество() <> 0 Тогда
				Для Каждого ТекСтрокаНастройкаШины Из ТекСтрокаШины.Строки Цикл
					Если ТекСтрокаНастройкаШины.Объект = "Установлено" Тогда
						СтрокаШиныВДереве[0].Установлена = ТекСтрокаНастройкаШины.Значение;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьМакет()
	ОтрисоватьКорпус();
	ОтрисоватьШины();
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьКорпус()
	
	Если ТипЗнч(РисунокКорпусаТС) <> Тип("Картинка") Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		КартинкаКорпусаТС = ПоместитьВоВременноеХранилище(РисунокКорпусаТС, Новый УникальныйИдентификатор);
		КартинкаКорпусаТС = КартинкаКорпусаТС;
	Исключение
		ТекстНСТР = НСтр("en='Error displaying picture:';ru='Ошибка отображения картинки:'") + " " + ИнформацияОбОшибке().Описание + " " +
		НСтр("en='cause';ru='по причине'") + " " + ИнформацияОбОшибке().Причина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
	КонецПопытки;
	
	КорпусТС = КартинкаКорпусаТС;
	
	Если РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто Тогда
		МакетТС = 0;
	ИначеЕсли РисунокКорпусаТС = БиблиотекаКартинок.уатМакетЛегковогоАвто Тогда
		МакетТС = 1;
	ИначеЕсли РисунокКорпусаТС = БиблиотекаКартинок.уатМакетМикроавтобуса Тогда
		МакетТС = 2;
	ИначеЕсли РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто4оси Тогда
		МакетТС = 3;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьШины()
	
	ФлагЗЛ = Ложь;
	ФлагЗП = Ложь;
	Для Каждого СтрокаШины Из МестаУстановкиШин Цикл
		ИмяШины = СтрокаШины.МестоУстановки.ИмяПредопределенныхДанных;
		Если (ИмяШины = "ЗЛВ" И ФлагЗЛ  = Истина) ИЛИ
			(ИмяШины = "ЗПВ" И ФлагЗП  = Истина) Тогда
			Продолжить;
		КонецЕсли;
			
		Если ИмяШины = "ЗЛ" И СтрокаШины.Установлена Тогда
			ИмяШины = "ЗЛВ";
			ФлагЗЛ  = Истина;
		ИначеЕсли ИмяШины = "ЗП" И СтрокаШины.Установлена Тогда
			ИмяШины = "ЗПВ";
			ФлагЗП = Истина;
		КонецЕсли;
		
		РисунокШина = Элементы.Найти(ИмяШины);
		Если РисунокШина <> Неопределено Тогда
			РисунокШина.Рамка = Новый Рамка(?(СтрокаШины.Установлена, ТипРамкиЭлементаУправления.Одинарная, ТипРамкиЭлементаУправления.БезРамки),?(СтрокаШины.Установлена, 2, 1));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеВМакет(ТекОбъект)
	
	НастройкаМакетаТСДерево = РеквизитФормыВЗначение("НастройкаМакетаТС");
	
	НастройкаМакетаТСДерево.Строки.Очистить();
	ТекКолонка = НастройкаМакетаТСДерево.Колонки.Найти("Объект");
	Если ТекКолонка = Неопределено Тогда
		НастройкаМакетаТСДерево.Колонки.Добавить("Объект");
	КонецЕсли;
	ТекКолонка = НастройкаМакетаТСДерево.Колонки.Найти("Значение");
	Если ТекКолонка = Неопределено Тогда
		НастройкаМакетаТСДерево.Колонки.Добавить("Значение");
	КонецЕсли;
	
	// Таблица шин
	ВеткаШины = НастройкаМакетаТСДерево.Строки.Добавить();
	ВеткаШины.Объект = "Шины";
	Для Каждого ТекСтрока Из МестаУстановкиШин Цикл
		НоваяВеткаШина = ВеткаШины.Строки.Добавить();
		НоваяВеткаШина.Объект = ТекСтрока.Объект;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Установлено";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.Установлена;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(НастройкаМакетаТСДерево, "НастройкаМакетаТС");
	
	ТекОбъект.ДеревоМакета = Новый ХранилищеЗначения(НастройкаМакетаТСДерево);
	
	Если Элементы.МакетТС.СписокВыбора.Количество() > 4 
		И МакетТС = 4 Тогда
		ИмяФайла = Элементы.МакетТС.СписокВыбора[4].Представление;
		Если ЭтоАдресВременногоХранилища(КорпусТС) Тогда
			ТекОбъект.ХранилищеМакета = Новый ХранилищеЗначения(Новый Структура("ИмяФайла, Файл, ШиринаМакета", ИмяФайла, ПолучитьИзВременногоХранилища(КорпусТС), мШирина));
		Иначе
			ТекОбъект.ХранилищеМакета = Новый ХранилищеЗначения(Неопределено);
		КонецЕсли;
	Иначе
		ТекОбъект.ХранилищеМакета = Новый ХранилищеЗначения(Новый Структура("Макет, ШиринаМакета", РисунокКорпусаТС, мШирина));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДопПараметры) Экспорт
	
	Если Не Подключено Тогда
		ОбработкаПродолжения = Новый ОписаниеОповещения("ВыбратьФайлПриНачалеПомещенияФайла", ЭтотОбъект, ДопПараметры);
		НачатьПомещениеФайла(ОбработкаПродолжения, , , , УникальныйИдентификатор);
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = ДопПараметры.Заголовок;
	Диалог.Фильтр = ДопПараметры.ДиалогОткрытияФайлаФильтр;
	
	НачатьПомещениеФайлов(Новый ОписаниеОповещения(
	"ВыбратьФайлПослеПомещенияФайлов", ЭтотОбъект, ДопПараметры), , Диалог, Ложь, УникальныйИдентификатор);
	
КонецПроцедуры

// Продолжение процедуры ВыбратьФайл.
&НаКлиенте
Процедура ВыбратьФайлПослеПомещенияФайлов(ПомещенныеФайлы, ДопПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ПомещенныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры.Вставить("Адрес", ПомещенныеФайлы[0].Хранение);
	ДопПараметры.Вставить("ИмяФайла", ПомещенныеФайлы[0].Имя);
	
	ВыбратьФайлПослеПомещенияФайла(ДопПараметры);
	
КонецПроцедуры

// Продолжение процедуры ВыбратьФайл.
&НаКлиенте
Процедура ВыбратьФайлПриНачалеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры.Вставить("Адрес", Адрес);
	ДопПараметры.Вставить("ИмяФайла", ВыбранноеИмяФайла);
	
	ВыбратьФайлПослеПомещенияФайла(ДопПараметры);
	
КонецПроцедуры

// Продолжение процедуры ВыбратьФайл.
&НаКлиенте
Процедура ВыбратьФайлПослеПомещенияФайла(ДопПараметры)
	ДопПараметры.Вставить("ОшибкаНаСервере", Новый Структура);
	ДопПараметры.Вставить("ДанныеПодписи",   Неопределено);
	
	ТекстОшибки = "";
	ДобавитьФайлНаСервере(ДопПараметры.Адрес, ДопПараметры.ИмяФайла, ТекстОшибки);
	Если ТекстОшибки <> "" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьФайлНаСервере(Адрес, ИмяФайла, ТекстОшибки = "")
	
	КорпусТС	 = Адрес;
	Файл		 = Адрес;
	
	Если Элементы.МакетТС.СписокВыбора.Количество() > 4 Тогда
		Элементы.МакетТС.СписокВыбора.Удалить(4);
	КонецЕсли;
	Если СтрНайти(ИмяФайла, "/") > 0 Тогда
		ПозицияРазделителя = СтрНайти(ИмяФайла, "/", НаправлениеПоиска.СКонца);
	ИначеЕсли СтрНайти(ИмяФайла, "\") > 0 Тогда
		ПозицияРазделителя = СтрНайти(ИмяФайла, "\", НаправлениеПоиска.СКонца);
	Иначе
		ПозицияРазделителя = 0;
	КонецЕсли;
	СтрИмяФайла = Сред(ИмяФайла, ПозицияРазделителя + 1);
	
	Элементы.МакетТС.СписокВыбора.Добавить(4, СтрИмяФайла);
	МакетТС		 = 4;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	ДиалогОткрытияФайлаФильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf'")
	+ НСтр("ru = '|Все файлы(*.*)|*.*'")
	+ НСтр("ru = '|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle'")
	+ НСтр("ru = '|Формат GIF(*.gif*)|*.gif'")
	+ НСтр("ru = '|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg'")
	+ НСтр("ru = '|Формат PNG(*.png*)|*.png'")
	+ НСтр("ru = '|Формат TIFF(*.tif)|*.tif'")
	+ НСтр("ru = '|Формат icon(*.ico)|*.ico'")
	+ НСтр("ru = '|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ДиалогОткрытияФайлаФильтр", ДиалогОткрытияФайлаФильтр);
	ДопПараметры.Вставить("Заголовок", НСтр("en='Select image file';ru='Выберите файл изображения'"));
	
	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения(
	"ВыбратьФайлПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект, ДопПараметры));
КонецПроцедуры

#КонецОбласти
