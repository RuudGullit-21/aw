
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьМакетыТС(Команда)
	ЗаполнитьМакетТС("Макет грузового автомобиля", 0);
	ЗаполнитьМакетТС("Макет легкового автомобиля", 1);
	ЗаполнитьМакетТС("Макет микроавтобуса", 2);
	ЗаполнитьМакетТС("Макет грузового автомобиля (4 оси)", 3);
	ОбновитьИнтерфейс();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьМакетТС(Наименование, ИДНомерМакета)
	
	ЭлементСправочника = Справочники.уатМакетыТС.НайтиПоНаименованию(Наименование, Истина);
	
	Если ИДНомерМакета = 0 Тогда
		РисунокТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
	ИначеЕсли ИДНомерМакета = 1 Тогда
		РисунокТС = БиблиотекаКартинок.уатМакетЛегковогоАвто;
	ИначеЕсли ИДНомерМакета = 2 Тогда
		РисунокТС = БиблиотекаКартинок.уатМакетМикроавтобуса;
	ИначеЕсли ИДНомерМакета = 3 Тогда
		РисунокТС = БиблиотекаКартинок.уатМакетГрузовогоАвто4оси;
	КонецЕсли;
	
	Если ЭлементСправочника.Пустая() Тогда
		
		НовыйЭлемент 				 = Справочники.уатМакетыТС.СоздатьЭлемент();
		НовыйЭлемент.Наименование 	 = Наименование;
		НовыйЭлемент.ХранилищеМакета = Новый ХранилищеЗначения(Новый Структура("Макет, ШиринаМакета", РисунокТС, 35));
		НовыйЭлемент.ДеревоМакета 	 = Новый ХранилищеЗначения(ДеревоНастроекМакетаТС(ИДНомерМакета));
		Попытка
			НовыйЭлемент.Записать();
			Сообщение 		= Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("en='';ru='Создан макет ТС: '") + Наименование;
			Сообщение.Сообщить();
		Исключение
			Сообщение 		= Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("en='';ru='Возникла ошибка при записи элемента '") + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
		
	Иначе
		СправочникОбъект 				 = ЭлементСправочника.ПолучитьОбъект();
		Если СправочникОбъект.ПометкаУдаления Тогда
			СправочникОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		СправочникОбъект.ХранилищеМакета = Новый ХранилищеЗначения(Новый Структура("Макет, ШиринаМакета", РисунокТС, 35));
		СправочникОбъект.ДеревоМакета 	 = Новый ХранилищеЗначения(ДеревоНастроекМакетаТС(ИДНомерМакета));
		Попытка
			СправочникОбъект.Записать();
			Сообщение 		= Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("en='';ru='Обновлен макет ТС: '") + СправочникОбъект.Наименование;
			Сообщение.Сообщить();
		Исключение
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("en='';ru='Возникла ошибка при записи элемента '") + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьТаблицуШин(ИДНомерМакета)
	
	МакетГрузовогоАвтомобиля = ИДНомерМакета = 0;
	МакетЛегковогоАвто = ИДНомерМакета = 1;
	МакетМикроавтобуса = ИДНомерМакета = 2;
	Макет4Оси = ИДНомерМакета = 3;
	
	ВсеМестаУстановкиШин = ИнициализацияМестУстановкиШин();
	
	// Для Легковой машины
	Если МакетЛегковогоАвто Или МакетМикроавтобуса Тогда
		Для Каждого ТекСтрока Из ВсеМестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ПЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ПП") Тогда
				ТекСтрока.Установлена = Истина;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Ложь;
		КонецЦикла;
	ИначеЕсли МакетГрузовогоАвтомобиля Тогда
		
		Для Каждого ТекСтрока Из ВсеМестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗПН")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗПВ")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗЛН")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ДЗЛВ") Тогда
				ТекСтрока.Установлена = Ложь;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Истина;
		КонецЦикла;
		
	ИначеЕсли Макет4Оси Тогда
		
		Для Каждого ТекСтрока Из ВсеМестаУстановкиШин Цикл
			Если ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗП")
				ИЛИ ТекСтрока.МестоУстановки = ПредопределенноеЗначение("Справочник.уатМестаУстановкиШин.ЗЛ") Тогда
				ТекСтрока.Установлена = Ложь;
				Продолжить;
			КонецЕсли;
			ТекСтрока.Установлена = Истина;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ВсеМестаУстановкиШин;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДеревоНастроекМакетаТС(ИДНомерМакета)
	
	ДеревоНастроек = Новый ДеревоЗначений();
	ДеревоНастроек.Колонки.Добавить("Объект");
	ДеревоНастроек.Колонки.Добавить("Значение");
	ДеревоНастроек.Колонки.Добавить("РедактироватьЗначение", Новый ОписаниеТипов("Булево"));
	ДеревоНастроек.Колонки.Добавить("РедактироватьОбъект", Новый ОписаниеТипов("Булево"));
	
	ТаблицаШин = СформироватьТаблицуШин(ИДНомерМакета);
	
	ВеткаШины = ДеревоНастроек.Строки.Добавить();
	ВеткаШины.Объект = "Шины";
	Для Каждого ТекСтрока Из ТаблицаШин Цикл
		НоваяВеткаШина = ВеткаШины.Строки.Добавить();
		НоваяВеткаШина.Объект = ТекСтрока.Объект;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Установлено";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.Установлена;
	КонецЦикла;
	
	Возврат ДеревоНастроек;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИнициализацияМестУстановкиШин()
	
	ТаблицаМестУстановки = Новый ТаблицаЗначений();
	ТаблицаМестУстановки.Колонки.Добавить("МестоУстановки", Новый ОписаниеТипов("СправочникСсылка.уатМестаУстановкиШин"));
	ТаблицаМестУстановки.Колонки.Добавить("Объект", Новый ОписаниеТипов("Строка"));
	ТаблицаМестУстановки.Колонки.Добавить("Установлена", Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос();
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	уатМестаУстановкиШин.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.уатМестаУстановкиШин КАК уатМестаУстановкиШин
	              |ГДЕ
	              |	уатМестаУстановкиШин.Предопределенный = ИСТИНА
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	уатМестаУстановкиШин.Наименование";
	
	СписокМестУстановки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ТаблицаМестУстановки.Очистить();
	Для Каждого ТекСтрока Из СписокМестУстановки Цикл
		НоваяШина = ТаблицаМестУстановки.Добавить();
		НоваяШина.МестоУстановки = ТекСтрока.Ссылка;
		НоваяШина.Объект = СокрЛП("Шина_" + ТекСтрока.Ссылка);
	КонецЦикла;
	
	Возврат ТаблицаМестУстановки;
КонецФункции

#КонецОбласти

