#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Объект.Организация =  уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
		
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатПрейскурантыТС) Тогда 
		Элементы.ТарифыСкопироватьТарифыИз.Видимость = Ложь;
		Элементы.ТарифыРедактированиеТарифов.Видимость = Ложь;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Объект.Ссылка);
	
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Элементы.Тарифы.Обновить();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Объект.Ссылка);
		
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.уатПрейскурантыТС") тогда
		Отказ = НЕ Записать();
		Если Отказ = ИСТИНА тогда 
			Возврат;
		КонецЕсли;
		
		СкопироватьТарифыИзДругогоПрейскуранта(ВыбранноеЗначение);
		Элементы.Тарифы.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТарифы

&НаКлиенте
Процедура ТарифыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтотОбъект, Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СкопироватьТарифыИз(Команда)
	ОткрытьФорму("Справочник.уатПрейскурантыТС.ФормаВыбора",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Калькулятор(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатКалькуляторТарифов.Форма", Новый Структура("Прейскурант", Объект.Ссылка))
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеТарифов(Команда)
	ТекСтрока = Элементы.Тарифы.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	Если ТекСтрока = Неопределено ИЛИ ТекСтрока.ЭтоГруппа Тогда
		ПараметрыФормы.Вставить("Прейскурант", Объект.Ссылка);
	Иначе
		ПараметрыФормы.Вставить("Тариф", ТекСтрока.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатРедактированиеТарифов_уэ.Форма", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.Контрагент.Видимость = Объект.ПрейскурантПоставщика;
КонецПроцедуры

&НаКлиенте
Процедура ПрейскурантПоставщикаПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеТарифаТС" Тогда
		Элементы.Тарифы.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьТарифыИзДругогоПрейскуранта(ВыбЗначение)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатТарифыТС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.уатТарифыТС КАК уатТарифыТС
	|ГДЕ
	|	уатТарифыТС.Владелец = &Владелец
	|	И НЕ уатТарифыТС.ПометкаУдаления
	|	И НЕ уатТарифыТС.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	уатТарифыТС.ЭтоГруппа,
	|	уатТарифыТС.Ссылка
	|ИТОГИ ПО
	|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Владелец", ВыбЗначение);
	РезЗапроса = Запрос.Выполнить();
	
	СоздатьТарифыПоИерархии(РезЗапроса);
КонецПроцедуры

&НаСервере
Процедура СоздатьТарифыПоИерархии(Выборка, ТекГруппа = Неопределено)
	ТекВыборка = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка"); 
	Пока ТекВыборка.Следующий() Цикл
		// Создание тарифа или группы тарифов
		НовТариф = ТекВыборка.Ссылка.Скопировать();
		НовТариф.Владелец = Объект.Ссылка;
		Если ЗначениеЗаполнено(ТекГруппа) Тогда
			НовТариф.Родитель = ТекГруппа;
		КонецЕсли;
		
		Попытка 
			НовТариф.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to copy %1 ""%2""';ru='Не удалось скопировать %1 ""%2""'");
			ТекстНСТР = СтрШаблон(ТекстНСТР,
				?(ТекВыборка.Ссылка.ЭтоГруппа, НСтр("en='tariffs group';ru='группу тарифов'"), НСтр("en='tariff';ru='тариф'")),
				НовТариф.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		КонецПопытки;
		
		Если ТекВыборка.Ссылка.ЭтоГруппа Тогда
			СоздатьТарифыПоИерархии(ТекВыборка, НовТариф.Ссылка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
