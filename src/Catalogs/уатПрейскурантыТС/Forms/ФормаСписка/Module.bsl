
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатПрейскурантыТС) Тогда 
		Элементы.ФормаИзменитьВыделенные.Видимость = Ложь;
		Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = Ложь;
		Элементы.ТарифыРедактированиеТарифов.Видимость = Ложь;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
    ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.уатПрейскурантыТС") тогда
		ТекСтрока = Элементы.Список.ТекущиеДанные;
		Если ТекСтрока <> Неопределено И НЕ ТекСтрока.ЭтоГруппа Тогда
			Если ТекСтрока.Ссылка = ВыбранноеЗначение Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите прейскурант-источник, отличный от прейскуранта-приемника.");
				Возврат;
			КонецЕсли;
			
			СкопироватьТарифыИзДругогоПрейскуранта(ТекСтрока.Ссылка, ВыбранноеЗначение);
			Элементы.Тарифы.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Дерево

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Дерево.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Родитель",,,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Родитель", ТекСтрока.Ссылка, 
			ВидСравненияКомпоновкиДанных.ВИерархии);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Неопределено);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Неопределено);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", ТекСтрока.Ссылка);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", ТекСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	Элементы.Тарифы.Обновить();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Тарифы

&НаКлиенте
Процедура ТарифыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если ТекСтрока.ЭтоГруппа Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Калькулятор(Команда)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатКалькуляторТарифов.Форма", Новый Структура("Прейскурант", ТекСтрока.Ссылка))
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Список);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДействующиеПрейскуранты(Команда)
	
	ПрейскурантСсылка = Элементы.Список.ТекущаяСтрока;
	Если ПрейскурантСсылка = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор",                   Новый Структура("Прейскурант", ПрейскурантСсылка));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ОткрытьФорму("Отчет.уатДействующиеПрейскуранты.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеТарифов(Команда)
	ТекСтрока = Элементы.Тарифы.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	Если ТекСтрока = Неопределено ИЛИ ТекСтрока.ЭтоГруппа Тогда
		ТекПрейскурант = Элементы.Список.ТекущиеДанные;
		Если ТекПрейскурант <> Неопределено Тогда
			ПараметрыФормы.Вставить("Прейскурант", ТекПрейскурант.Ссылка);
		КонецЕсли;
	Иначе
		ПараметрыФормы.Вставить("Тариф", ТекСтрока.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатРедактированиеТарифов_уэ.Форма", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьТарифыИз(Команда)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран прейскурант-приемник. Для выбора спозиционируйтесь на нужную строку в списке");
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.уатПрейскурантыТС.ФормаВыбора",, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СкопироватьТарифыИзДругогоПрейскуранта(ПрейскурантПриемник, ПрейскурантИсточник)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатТарифыТС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.уатТарифыТС КАК уатТарифыТС
	|ГДЕ
	|	уатТарифыТС.Владелец = &Владелец
	|	И НЕ уатТарифыТС.ПометкаУдаления
	|	И НЕ уатТарифыТС.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	уатТарифыТС.ЭтоГруппа,
	|	уатТарифыТС.Ссылка
	|ИТОГИ ПО
	|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Владелец", ПрейскурантИсточник);
	РезЗапроса = Запрос.Выполнить();
	
	СоздатьТарифыПоИерархии(РезЗапроса, ПрейскурантПриемник);
КонецПроцедуры

&НаСервере
Процедура СоздатьТарифыПоИерархии(Выборка, ПрейскурантПриемник, ТекГруппа = Неопределено)
	ТекВыборка = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка"); 
	Пока ТекВыборка.Следующий() Цикл
		// Создание тарифа или группы тарифов
		НовТариф = ТекВыборка.Ссылка.Скопировать();
		НовТариф.Владелец = ПрейскурантПриемник;
		Если ЗначениеЗаполнено(ТекГруппа) Тогда
			НовТариф.Родитель = ТекГруппа;
		КонецЕсли;
		
		Попытка 
			НовТариф.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to copy %1 ""%2""';ru='Не удалось скопировать %1 ""%2""'");
			ТекстНСТР = СтрШаблон(ТекстНСТР,
				?(ТекВыборка.Ссылка.ЭтоГруппа, НСтр("en='tariffs group';ru='группу тарифов'"), НСтр("en='tariff';ru='тариф'")),
				НовТариф.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР);
		КонецПопытки;
		
		Если ТекВыборка.Ссылка.ЭтоГруппа Тогда
			СоздатьТарифыПоИерархии(ТекВыборка, ПрейскурантПриемник, НовТариф.Ссылка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
