
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Объект.Ссылка.Пустая() Тогда
		НоваяСтрока = Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Добавить();
		НоваяСтрока.СпособРаспределенияЗатратМеждуАналитиками = Перечисления.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.НеРаспределять;
	КонецЕсли;
	
	Если Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Количество() = 1
		И Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками[0].Колонна.Пустая() Тогда
		СпособРаспределенияЗатратМеждуАналитиками =
			Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками[0].СпособРаспределенияЗатратМеждуАналитиками;
		ПараметрВыработкиРаспределенияМеждуАналитиками =
			Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками[0].ПараметрВыработки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьВидимость();
	УстановитьОтборПараметровВыработкиМеждуТС();
	УстановитьОтборПараметровВыработкиМеждуАналитиками();
	
КонецПроцедуры    

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПорядокОтнесенияЗатратПриИзменении(Элемент)
	УстановитьВидимость();
	Если Объект.ПорядокОтнесенияЗатрат = ПредопределенноеЗначение("Перечисление.уатПорядкиОтнесенияРасходов.ПрямыеРасходы") Тогда
		Объект.СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.НеРаспределять");
		Объект.ВариантСпособаРаспределенияЗатрат = 0;
		Объект.ПараметрВыработкиРаспределенияМеждуТС = Неопределено;
		Объект.ПараметрыВыработкиРаспределенияМеждуТС.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияЗатратПриИзменении(Элемент)
	УстановитьВидимость();
	Если Объект.СпособРаспределенияЗатрат <> ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоОбъемуВыработки")
		И Объект.СпособРаспределенияЗатрат <> ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоОбъемуВыработкиМЛ") Тогда
		Объект.ВариантСпособаРаспределенияЗатрат = 0;
		Объект.ПараметрВыработкиРаспределенияМеждуТС = Неопределено;
		Объект.ПараметрыВыработкиРаспределенияМеждуТС.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантСпособаРаспределенияЗатратПриИзменении(Элемент)
	УстановитьВидимость();
	Если Объект.ВариантСпособаРаспределенияЗатрат = 0 Тогда
		Объект.ПараметрыВыработкиРаспределенияМеждуТС.Очистить();
	Иначе
		Объект.ПараметрВыработкиРаспределенияМеждуТС = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияЗатратМеждуАналитикамиПриИзменении(Элемент)
	Если Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Количество() > 1 Тогда
		Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Очистить();
	КонецЕсли;
	Если Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Количество() = 0 Тогда
		НоваяСтрока = Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Добавить();
		НоваяСтрока.СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.НеРаспределять");
	КонецЕсли;
	Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками[0].СпособРаспределенияЗатратМеждуАналитиками = СпособРаспределенияЗатратМеждуАналитиками;
	
	УстановитьВидимость();
	УстановитьОтборПараметровВыработкиМеждуАналитиками();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрВыработкиРаспределенияМеждуАналитикамиПриИзменении(Элемент)
	Если Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Количество() > 1 Тогда
		Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Очистить();
	КонецЕсли;
	Если Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Количество() = 0 Тогда
		НоваяСтрока = Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Добавить();
		НоваяСтрока.СпособРаспределенияЗатратМеждуАналитиками = СпособРаспределенияЗатратМеждуАналитиками;
	КонецЕсли;
	Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками[0].ПараметрВыработки = ПараметрВыработкиРаспределенияМеждуАналитиками;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ВариантСпособаРаспределенияЗатратМеждуАналитикамиПриИзменении(Элемент)
	Если Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 0 Тогда
		Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Очистить();
		НоваяСтрока = Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.Добавить();
		НоваяСтрока.СпособРаспределенияЗатратМеждуАналитиками = СпособРаспределенияЗатратМеждуАналитиками;
		НоваяСтрока.ПараметрВыработки = ПараметрВыработкиРаспределенияМеждуАналитиками;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьНаРБППриИзменении(Элемент)
	Если НЕ Объект.РаспределятьНаРБП И ЗначениеЗаполнено(Объект.СтатьяРасходов) Тогда
		Объект.СтатьяРасходов = Неопределено;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеРасходовПоСцепкамПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыработкиРаспределенияМеждуАналитикамиПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ПараметрыВыработкиРаспределенияМеждуТСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	УстановитьОтборПараметровВыработкиМеждуТС();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыработкиРаспределенияМеждуАналитикамиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	УстановитьОтборПараметровВыработкиМеждуАналитикамиТекСтрока();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыработкиРаспределенияМеждуАналитикамиСпособРаспределенияЗатратМеждуАналитикамиПриИзменении(Элемент)
	ТекСтрока = Элементы.ПараметрыВыработкиРаспределенияМеждуАналитиками.ТекущиеДанные;
	Если ТекСтрока.СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.НеРаспределять")
		ИЛИ ТекСтрока.СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.ПустаяСсылка") Тогда
		
		ТекСтрока.ПараметрВыработки = Неопределено;
	КонецЕсли;
	
	УстановитьОтборПараметровВыработкиМеждуАналитикамиТекСтрока();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ГруппаРаспредМеждуТСНастройки.Видимость = (Объект.ПорядокОтнесенияЗатрат = ПредопределенноеЗначение("Перечисление.уатПорядкиОтнесенияРасходов.РаспределяемыеРасходы"));
	Элементы.ПрямыеРасходы.Видимость = (Объект.СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоПрочимСтатьямЗатрат"));
	Элементы.ВариантСпособаРаспределенияЗатрат.Видимость = (Объект.СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоОбъемуВыработки")
		ИЛИ Объект.СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоОбъемуВыработкиМЛ"));
	Элементы.ПараметрВыработкиРаспределенияМеждуТС.Видимость = (Элементы.ВариантСпособаРаспределенияЗатрат.Видимость И Объект.ВариантСпособаРаспределенияЗатрат = 0);
	Элементы.ПараметрыВыработкиРаспределенияМеждуТС.Видимость = (Элементы.ВариантСпособаРаспределенияЗатрат.Видимость И Объект.ВариантСпособаРаспределенияЗатрат = 1);
	
	РаспределятьМеждуАналитиками = (СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоВыработке")
		ИЛИ СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам"));
	
	ОтображениеНастроекРаспределенияМеждуАналитиками = РаспределятьМеждуАналитиками И (Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 0);
	
	Элементы.ВариантСпособаРаспределенияЗатратМеждуАналитиками.Видимость = ОтображениеНастроекРаспределенияМеждуАналитиками
		ИЛИ (Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 1);
	Элементы.ПараметрВыработкиРаспределенияМеждуАналитиками.Видимость = ОтображениеНастроекРаспределенияМеждуАналитиками;
	
	Элементы.СпособРаспределенияЗатратМеждуАналитиками.Видимость = Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 0;
	Элементы.ПараметрыВыработкиРаспределенияМеждуАналитиками.Видимость = Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 1;
	
	Элементы.СтатьяРасходов.Видимость = Объект.РаспределятьНаРБП;
	
	Элементы.СпособРаспределенияВнутриСцепки.Видимость = Объект.РаспределениеРасходовПоСцепкам;
	
	Если Объект.ВариантСпособаРаспределенияЗатратМеждуАналитиками = 0 Тогда
		Элементы.ГруппаНадписьВЦелом.Видимость = (СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам")
			И уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ПараметрВыработкиРаспределенияМеждуАналитиками, "СпособВводаЗначений") = ПредопределенноеЗначение("Перечисление.уатСпособыВводаЗначенийВыработкивМЛ_уэ.ВЦеломПоДокументу"));
	Иначе
		флВидимость = Ложь;
		Для Каждого ТекСтрока Из Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками Цикл
			Если ТекСтрока.СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам")
				И уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ТекСтрока.ПараметрВыработки, "СпособВводаЗначений") = ПредопределенноеЗначение("Перечисление.уатСпособыВводаЗначенийВыработкивМЛ_уэ.ВЦеломПоДокументу") Тогда
				флВидимость = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаНадписьВЦелом.Видимость = флВидимость;
	КонецЕсли;
	
	Элементы.ПараметрВыработкиРаспределенияМеждуЗаказами.Видимость = уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП();
	
	УстановитьВидимостьРаспределениеНепрямыхЗатратПоЗаказам();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРаспределениеНепрямыхЗатратПоЗаказам()
	Элементы.СпособРаспределениеНепрямыхЗатратПоЗаказам.Видимость =
		Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.НайтиСтроки(Новый Структура("СпособРаспределенияЗатратМеждуАналитиками",
		Перечисления.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоВыработке)).Количество() > 0
		ИЛИ Объект.ПараметрыВыработкиРаспределенияМеждуАналитиками.НайтиСтроки(Новый Структура("СпособРаспределенияЗатратМеждуАналитиками",
		Перечисления.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам)).Количество() > 0;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПараметровВыработкиМеждуТС()
	мсвПараметрыВыбора = Новый Массив;
	Если Объект.СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуТС.ПоОбъемуВыработкиМЛ") Тогда
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Предопределенный", Истина));
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДействуетНаТСМЛ", Истина));
	КонецЕсли;
	Элементы.ПараметрВыработкиРаспределенияМеждуТС.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
	Элементы.ПараметрыВыработкиРаспределенияМеждуТСПараметрВыработки.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПараметровВыработкиМеждуАналитиками(ТекСтрокаСпособРаспределенияЗатратМеждуАналитиками = Неопределено)
	мсвПараметрыВыбора = Новый Массив;
	Если СпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам") Тогда
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Справочники.уатПараметрыВыработки.ПараметрыВыработкиАвтоРасчетУслуг()));
		мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьДляМаршрутныхЛистов", Истина));
	КонецЕсли;
	Элементы.ПараметрВыработкиРаспределенияМеждуАналитиками.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПараметровВыработкиМеждуАналитикамиТекСтрока()
	ТекСтрокаСпособРаспределенияЗатратМеждуАналитиками = Элементы.ПараметрыВыработкиРаспределенияМеждуАналитиками.ТекущиеДанные.СпособРаспределенияЗатратМеждуАналитиками;
	Если ЗначениеЗаполнено(ТекСтрокаСпособРаспределенияЗатратМеждуАналитиками) Тогда
		мсвПараметрыВыбора = Новый Массив;
		Если ТекСтрокаСпособРаспределенияЗатратМеждуАналитиками = ПредопределенноеЗначение("Перечисление.уатСпособыРаспределенияДоходовРасходовМеждуАналитиками.РаспределятьПоЗаказам") Тогда
			мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ПараметрыВыработкиАвтоРасчетУслуг()));
			мсвПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьДляМаршрутныхЛистов", Истина));
		КонецЕсли;
		Элементы.ПараметрыВыработкиРаспределенияМеждуАналитикамиПараметрВыработки.ПараметрыВыбора = Новый ФиксированныйМассив(мсвПараметрыВыбора);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыВыработкиАвтоРасчетУслуг()
	Возврат Справочники.уатПараметрыВыработки.ПараметрыВыработкиАвтоРасчетУслуг();
КонецФункции

#КонецОбласти
