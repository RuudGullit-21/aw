
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	ВидДней = ?(ЗначениеЗаполнено(Объект.ПроизводственныйКалендарь), 1, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	
	ЗаполнитьНаименованиеПоШаблону();
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтсчетаПриИзменении(Элемент)
	
	Если Объект.ВариантОтсчета <> ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов") Тогда
		Объект.ВидСопроводительногоДокумента = Неопределено;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДнейПриИзменении(Элемент)

	Если ВидДней = 0 Тогда
		Объект.ПроизводственныйКалендарь = Неопределено;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьНаименованиеПоШаблону()

	СтрокаНаименование = "" + Объект.Процент + "%";
	
	Если Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПроизвольнаяДата") Тогда
		СтрокаНаименование = СтрокаНаименование + " на произвольную дату";
	Иначе
		Если Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ДоОтправленияПоЗаказу")
			ИЛИ Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ДоПрибытияПоЗаказу") Тогда
			СтрокаНаименование = СтрокаНаименование + " за";
		ИначеЕсли Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеДоставкиГруза")
			ИЛИ Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеОтправленияПоЗаказу")
			ИЛИ Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов")
			ИЛИ Объект.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПрибытияПоЗаказу") Тогда
			СтрокаНаименование = СтрокаНаименование + " через";
		КонецЕсли;
	
		СтрокаНаименование = СтрокаНаименование + " " + Объект.Срок;
		СтрокаНаименование = СтрокаНаименование + " " + ?(ВидДней = 0, "календ. дн.", "раб. дн.");
		СтрокаНаименование = СтрокаНаименование + " " +	НРег(Лев(Объект.ВариантОтсчета, 1)) + Сред(Объект.ВариантОтсчета, 2);
	КонецЕсли;
	
	Объект.Наименование = СтрокаНаименование;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ГруппаСрок.Видимость = (Объект.ВариантОтсчета
		<> ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПроизвольнаяДата"));
	Элементы.ПроизводственныйКалендарь.Видимость = (ВидДней = 1);
	Элементы.ВидСопроводительногоДокумента.Видимость = (Объект.ВариантОтсчета
		= ПредопределенноеЗначение("Перечисление.уатВариантыОтсчетаДатыПлатежа.ПослеПолученияСопроводительныхДокументов"));
	
КонецПроцедуры

#КонецОбласти
