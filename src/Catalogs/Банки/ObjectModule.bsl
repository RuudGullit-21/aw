
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ВключитьВозможностьИзменения() Экспорт
	
	Если РучноеИзменение = 0 Тогда
		РучноеИзменение = 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура СнятьСПоддержки() Экспорт
	
	РучноеИзменение = 2;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Страна = Справочники.СтраныМира.Россия Тогда
		
		Если НЕ ЭтоГруппа Тогда
			
			Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛП(КоррСчет)) Тогда
				
				ШаблонОшибки = НСтр("en='Correspondent account of bank consist of only numbers.';ru='В составе корр.счета банка должны быть только цифры.'");
				ТекстОшибки  = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Поле", "Корректность", НСтр("en='Corr. account';ru='Корр. счет'"),,, ШаблонОшибки);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.КоррСчет",, Отказ);
				
			КонецЕсли;
			
			ТекстОшибки = "";
			Если Не БанковскийИдентификационныйКодКорректен(Код, ТекстОшибки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.Код",, Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		НепроверяемыеРеквизиты = Новый Массив;
		НепроверяемыеРеквизиты.Добавить("Код");
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
	КонецЕсли;
	
	Если Не SWIFTКорректен(СокрЛП(СВИФТБИК), ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.СВИФТБИК",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Страна) Тогда
		Страна = Справочники.СтраныМира.Россия;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Проверяет корректность номера БИК банка
//
// Параметры:
//  БИК              - Строка - номер БИК проверяемого банка
//  ТекстСообщения   - Строка - в параметр передается текст сообщения об ошибке, если проверка не пройдена.
// 
// Возвращаемое значение:
//  Булево - Результат проверки БИК, если Ложь, тогда БИК некорректный
//
Функция БанковскийИдентификационныйКодКорректен(БИК, ТекстСообщения)
	
	Если ПустаяСтрока(БИК) Тогда
		Возврат Истина;
	КонецЕсли;
	
	БИККорректен = Ложь;
	ТекстСообщения = "";
	Если Не БанковскиеПравила_ПроверитьДлинуБИК(БИК) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='RCBIC of the Bank shall consist of 9 digits';ru='БИК банка должен состоять из 9 цифр'");
	ИначеЕсли Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(БИК) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en=""Bank's RCBIC must consists only numbers"";ru='В составе БИК банка должны быть только цифры'");
	Иначе
		БИККорректен = Истина;
	КонецЕсли;
	
	Возврат БИККорректен;
	
КонецФункции

// Проверяет корректность номера SWIFT банка
//
// Параметры:
//  СВИФТБИК          - Строка - номер SWIFT  проверяемого банка
//  ТекстСообщения - Строка - в параметр передается текст сообщения об ошибке, если проверка не пройдена.
// 
// Возвращаемое значение:
//  Булево - Результат проверки SWIFT, если Ложь, тогда SWIFT некорректный
//
Функция SWIFTКорректен(СВИФТБИК, ТекстСообщения)
	
	Если ПустаяСтрока(СВИФТБИК) Тогда
		Возврат Истина;
	КонецЕсли;
	
	SWIFTКорректен = Ложь;
	ТекстСообщения = "";
	Если Не БанковскиеПравила_ПроверитьДлинуSWIFT(СВИФТБИК) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='SWIFT should consist of 8 or 11 symbols';ru='SWIFT должен состоять из 8 или 11 символов'");
	ИначеЕсли Не БанковскиеПравила_ПроверитьРазрешенныеСимволыSWIFT(СВИФТБИК) Тогда
		ТекстСообщения = ТекстСообщения + НСтр("en='Allowed only letters from A to Z and numbers';ru='Разрешены только буквы от A до Z и цифры'");
	Иначе
		SWIFTКорректен = Истина;
	КонецЕсли;
	
	Возврат SWIFTКорректен;
	
КонецФункции

Функция БанковскиеПравила_ПроверитьДлинуБИК(БИК)
	Возврат СтрДлина(СокрЛП(БИК)) = 9;
КонецФункции

// Функция возвращает признак корректности длины SWIFT.
// Согласно ISO 9362 центральные офисы банков имет длину 8 символов,
// а подразделения банков - 11 символов (3 дополнительных символа для номера филиала)
//
// Параметры:
//  СВИФТБИК - Строка - код SWIFT BIC.
// 
// Возвращаемое значение:
//  Булево -  Признак того, что длина корректная.
//
Функция БанковскиеПравила_ПроверитьДлинуSWIFT(СВИФТБИК)
	ДлинаКода = СтрДлина(СВИФТБИК);
	ДлинаДляЦО = 8; 
	ДлинаДляФилиала = 11;
	
	Возврат ДлинаКода = ДлинаДляЦО ИЛИ ДлинаКода = ДлинаДляФилиала;
КонецФункции

// Функция проверяет код SWIFT на наличие разрешенных символов.
//  Источник: ISO 9362:2014 - BIC Implementation. Changes and impacts. (стр. 6).
//  Контроль всего кода выполняем на буквенно-цифровые символы, т.к.
//  стандарт не рекомендует выполнять проверки согласно конкретным разрешенным символам в отдельных разрядах SWIFT.
//
// Параметры:
//  СВИФТБИК - Строка - код SWIFT BIC.
// 
// Возвращаемое значение:
//  Булево - Признак того, что проверка пройдена.
//
Функция БанковскиеПравила_ПроверитьРазрешенныеСимволыSWIFT(СтрокаСимволов)
	
	ПроверитьРазрешенныеСимволы = Истина;
	
	Для ИндексСимвола = 1 По СтрДлина(СтрокаСимволов) Цикл
		
		СимволКода = ВРег(Сред(СтрокаСимволов, ИндексСимвола, 1));
		
		Если СтрНайти("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", СимволКода) = 0 Тогда
			ПроверитьРазрешенныеСимволы = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПроверитьРазрешенныеСимволы;
	
КонецФункции

#КонецОбласти

#КонецЕсли

