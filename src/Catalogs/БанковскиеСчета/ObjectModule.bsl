#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мВалютаРегламентированногоУчета Экспорт; // Валюта регламентированного учёта из настроек

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ПометкаУдаления ИЛИ Ссылка.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;

	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Валютный = ВалютаРегламентированногоУчета <> ВалютаДенежныхСредств;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Помеченные на удаление - не проверять
	Если ПометкаУдаления ИЛИ Ссылка.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ИностранныйБанк И НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛП(НомерСчета)) Тогда 
		ТекстНСТР = НСтр("en='Bank account number contains not only digits.';ru='В номере банковского счета присутствуют не только цифры.'") + Символы.ПС +
					НСтр("en='Perhaps the number is incorrect';ru='Возможно, номер указан неправильно'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР, ЭтотОбъект, "НомерСчета", "Объект", Отказ);
	КонецЕсли;
	
	Если ВалютаДенежныхСредств <> Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерСчета");
		МассивНепроверяемыхРеквизитов.Добавить("Банк");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ИсполняемаяЧастьМодуля

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецОбласти

#КонецЕсли