
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриЧтенииСозданииНаСервере();	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// При записи из формы обновление актуальных данных будет осуществлено в фоне - стандартная логика не нужна.
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПропуститьАктуализациюОформления", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ItobВариантыДинамическогоОформления.АктуализироватьОформлениеВФоне();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДляСпискаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДляКартыПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Карта_ДействиеСТекущейИконкойПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Карта_НоваяИконкаПриИзменении(Элемент)
	
	ОтобразитьИзображениеНовойВспомогательнойИконки();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыУсловияОтбора

&НаКлиенте
Процедура УсловияОтбораПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыбраноУсловиеЗадержкиДанных = (ВыбранноеЗначение = Тип("ПеречислениеСсылка.ItobЗадержкаДанныхТерминала"));
	Если ВыбраноУсловиеЗадержкиДанных Тогда
		// Действия из "..ПриИзменении" для кейса "ВыбранаЗадержкаДанныхТерминала" выполняем в "..ОбработкаВыбора" т.к. БыстрыйВыбор поля "УсловияОтбораПоказатель"
		// без отмены стандартной обработки позволяет задублировать логику с проверкой "..ПоказаДиалогаОчисткиТаблицыУсловияОтбора".
		СтандартнаяОбработка = Ложь;
		Элементы.УсловияОтбора.ТекущиеДанные.Показатель = ЗначениеЗадержкаДанныхТерминалаМинут();
		Элементы.УсловияОтбора.ТекущиеДанные.Значение = 0;
		ЭтотОбъект.Модифицированность = Истина;
		ПроверитьНеобходимостьПоказаДиалогаОчисткиТаблицыУсловияОтбора(ВыбраноУсловиеЗадержкиДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияОтбораПоказательПриИзменении(Элемент)
	
	ВыбраноУсловиеЗадержкиДанных = (ТипЗнч(Элементы.УсловияОтбора.ТекущиеДанные.Показатель) = Тип("ПеречислениеСсылка.ItobЗадержкаДанныхТерминала"));
	
	Если НЕ ВыбраноУсловиеЗадержкиДанных Тогда
		Если НЕ ЗначениеЗаполнено(Элементы.УсловияОтбора.ТекущиеДанные.Показатель) Тогда
			// При изменении показателя сначала выбираем тип, затем значение данного типа. Оба этапа заходят в "УсловияОтбораПоказательПриИзменении"
			// Эта ветка (первый этап изменен "Тип" показателя) избавляет от дублирования.
			Возврат;
		КонецЕсли;
		ПроверитьНеобходимостьПоказаДиалогаОчисткиТаблицыУсловияОтбора(ВыбраноУсловиеЗадержкиДанных);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Список_ВыбратьЦветФона(Команда)
	
	ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманды", "Список_ВыбратьЦветФона");
	ДополнительныеПараметры.Вставить("ИмяРеквизитаХранения", "Список_ЦветФона");
	ДиалогВыбораЦвета.Цвет = Элементы.Список_ВыбратьЦветФона.ЦветФона;
	ДиалогВыбораЦвета.Показать(Новый ОписаниеОповещения("ВыборЦветаЗавершение", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

&НаКлиенте
Процедура Список_ВыбратьЦветНадписи(Команда)
	
	ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманды", "Список_ВыбратьЦветНадписи");
	ДополнительныеПараметры.Вставить("ИмяРеквизитаХранения", "Список_ЦветНадписи");
	ДиалогВыбораЦвета.Цвет = Элементы.Список_ВыбратьЦветНадписи.ЦветФона;
	ДиалогВыбораЦвета.Показать(Новый ОписаниеОповещения("ВыборЦветаЗавершение", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

&НаКлиенте
Процедура Карта_ВыбратьЦветНадписи(Команда)
	
	ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманды", "Карта_ВыбратьЦветНадписи");
	ДополнительныеПараметры.Вставить("ИмяРеквизитаХранения", "Карта_ЦветНадписи");
	ДиалогВыбораЦвета.Цвет = Элементы.Карта_ВыбратьЦветНадписи.ЦветФона;
	ДиалогВыбораЦвета.Показать(Новый ОписаниеОповещения("ВыборЦветаЗавершение", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры


&НаКлиенте
Процедура Список_ОчиститьЦветФона(Команда)
	
	ОчиститьСохраненныйЦвет("Список_ВыбратьЦветФона", "Список_ЦветФона");
	
КонецПроцедуры

&НаКлиенте
Процедура Список_ОчиститьЦветНадписи(Команда)
	
	ОчиститьСохраненныйЦвет("Список_ВыбратьЦветНадписи", "Список_ЦветНадписи");
	
КонецПроцедуры

&НаКлиенте
Процедура Карта_ОчиститьЦветНадписи(Команда)
	
	ОчиститьСохраненныйЦвет("Карта_ВыбратьЦветНадписи", "Карта_ЦветНадписи");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	РаскраситьКнопкиНастройкиЦветовПоСохраненнымЗначениям();
	
	ОтобразитьИзображениеНовойВспомогательнойИконки();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаСписок.Видимость = Объект.ДляСписка;
	Элементы.ГруппаКарта.Видимость = Объект.ДляКарты;
	
	ТребуетсяНастроитьПоложениеНовойИконки = (Объект.Карта_ДействиеСТекущейИконкой = Перечисления.ItobДействияСИконкамиВДинамическомОформлении.ВывестиРядомВыбраннуюИконку);
	
	Элементы.ГруппаВыборИконки.Видимость = (ТребуетсяНастроитьПоложениеНовойИконки
											ИЛИ Объект.Карта_ДействиеСТекущейИконкой = Перечисления.ItobДействияСИконкамиВДинамическомОформлении.ЗаменитьВыбраннойИконкой);
											
	Элементы.ГруппаНастройкиПоложенияНовойИконки.Видимость = ТребуетсяНастроитьПоложениеНовойИконки;
	
КонецПроцедуры

&НаСервере
Процедура РаскраситьКнопкиНастройкиЦветовПоСохраненнымЗначениям()
	
	РаскраситьКнопкуНастройкиЦвета("Список_ВыбратьЦветФона", "Список_ЦветФона");
	РаскраситьКнопкуНастройкиЦвета("Список_ВыбратьЦветНадписи", "Список_ЦветНадписи");
	РаскраситьКнопкуНастройкиЦвета("Карта_ВыбратьЦветНадписи", "Карта_ЦветНадписи");
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьИзображениеНовойВспомогательнойИконки()
	
	Если НЕ ЗначениеЗаполнено(Объект.Карта_НоваяИконка) Тогда
		АдресИконки = "";
	Иначе
		АдресИконки = ПолучитьНавигационнуюСсылку(Объект.Карта_НоваяИконка, "Иконка");
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервере
Процедура РаскраситьКнопкуНастройкиЦвета(ИмяЭлементаКоманды, ИмяРеквизитаХранения)
	
	АбсолютныйЦвет = Неопределено;
	Если Объект[ИмяРеквизитаХранения] >= 0 Тогда   // Значения меньше нуля - цвет не задан пользователем.
		АбсолютныйЦвет = ItobОбщегоНазначенияКлиентСервер.ПолучитьЦветПоЗначениюХранения(Объект[ИмяРеквизитаХранения]);	
	КонецЕсли; 
	
	УстановитьЦветФонаЦветТекстаЭлементуФормыСервер(АбсолютныйЦвет, ИмяЭлементаКоманды);
	
КонецПроцедуры
 
&НаКлиенте
Процедура ВыборЦветаЗавершение(ВыбранныйЦвет, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЦвет = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	АбсолютныйЦвет = ItobОбщегоНазначенияВызовСервера.ПолучитьАбсолютныйЦвет(ВыбранныйЦвет);
	
	УстановитьЦветФонаЦветТекстаЭлементуФормыСервер(АбсолютныйЦвет, ДополнительныеПараметры.ИмяЭлементаКоманды);
	
	Объект[ДополнительныеПараметры.ИмяРеквизитаХранения] = ItobОбщегоНазначенияКлиентСервер.ПолучитьЗначениеХраненияЦвета(АбсолютныйЦвет.Красный, 
																								  						  АбсолютныйЦвет.Зеленый, 
																								  						  АбсолютныйЦвет.Синий);
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветФонаЦветТекстаЭлементуФормыСервер(АбсолютныйЦвет, ИмяЭлементаФормы)
	
	Если АбсолютныйЦвет = Неопределено Тогда
		Элементы[ИмяЭлементаФормы].ЦветФона = Новый Цвет;
		Элементы[ИмяЭлементаФормы].ЦветТекста = Новый Цвет;
		
		Возврат;
	КонецЕсли; 

	Элементы[ИмяЭлементаФормы].ЦветФона = АбсолютныйЦвет;
	Элементы[ИмяЭлементаФормы].ЦветТекста = Новый Цвет(255 - АбсолютныйЦвет.Красный, 
													   255 - АбсолютныйЦвет.Зеленый,
													   255 - АбсолютныйЦвет.Синий);
																				 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСохраненныйЦвет(ИмяЭлементаКоманды, ИмяРеквизитаХранения)
	
	Объект[ИмяРеквизитаХранения] = -1;
	
	УстановитьЦветФонаЦветТекстаЭлементуФормыСервер(Неопределено, ИмяЭлементаКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьПоказаДиалогаОчисткиТаблицыУсловияОтбора(ЭтоВариантОформленияЗадержкиДанных)
	
	Если Объект.УсловияОтбора.Количество() > 1
			И НЕ (Объект.ЭтоВариантОформленияЗадержкиДанных = ЭтоВариантОформленияЗадержкиДанных) Тогда
		// В таблицу условия отбора добавлена Не первая строка и ее тип может переключить флаг варианта "ЭтоВариантОформленияЗадержкиДанных"
		ДиалогВыбораОчисткиТаблицыУсловияОтбора(ЭтоВариантОформленияЗадержкиДанных);
	ИначеЕсли Объект.УсловияОтбора.Количество() = 1
				И НЕ (Объект.ЭтоВариантОформленияЗадержкиДанных = ЭтоВариантОформленияЗадержкиДанных) Тогда
		// В таблицу условия отбора добавлена первая строка и ее тип переключает флаг варианта "ЭтоВариантОформленияЗадержкиДанных"
		Объект.ЭтоВариантОформленияЗадержкиДанных = ЭтоВариантОформленияЗадержкиДанных;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораОчисткиТаблицыУсловияОтбора(ЭтоВариантОформленияЗадержкиДанных)
	
	ТекстВопроса = ?(ЭтоВариантОформленияЗадержкиДанных,
					 (НСтр("ru = 'При добавлении условия на задержку получения данных терминала будут удалены все остальные условия.
								|Продолжить?'")),
					 (НСтр("ru = 'При добавлении выбранного условия будут удалены условия на задержку получения данных терминал.
								|Продолжить?'")));
	
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить(КодВозвратаДиалога.Да, НСтр("ru= 'Продолжить'"));
	КнопкиВопроса.Добавить(КодВозвратаДиалога.Нет, НСтр("ru= 'Нет'"));
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоВариантОформленияЗадержкиДанных", ЭтоВариантОформленияЗадержкиДанных);
	ДополнительныеПараметры.Вставить("ТекущиеДанные", Элементы.УсловияОтбора.ТекущиеДанные);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветУсловияОтбораЗадержка", ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиВопроса);

КонецПроцедуры
 
&НаКлиенте
Процедура ОбработатьОтветУсловияОтбораЗадержка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// Очищаем ТЧ Условия, оставляем только текущее условие.
		ОставляемаяСтрока = ДополнительныеПараметры.ТекущиеДанные;
		Объект.УсловияОтбора.Очистить();
		НоваяСтрока = Объект.УсловияОтбора.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОставляемаяСтрока);
		Объект.ЭтоВариантОформленияЗадержкиДанных = ДополнительныеПараметры.ЭтоВариантОформленияЗадержкиДанных;
	Иначе
		ДополнительныеПараметры.ТекущиеДанные.Показатель = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеЗадержкаДанныхТерминалаМинут()
	Возврат Перечисления.ItobЗадержкаДанныхТерминала.ЗадержкаДанныхТерминалаМинут;
КонецФункции

#КонецОбласти