
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекстШаблонаНаименования = уатНастройкиШаблонов.ПолучитьТекстШаблона("Справочник_уатТС");
	ИнициализироватьКомпоновщикНастроек();
	ОбновитьСписокТС();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокТС_КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	
	ОбновитьСписокТС();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыбранные(Команда)
	
	ИзменитьВыбранныеСервер();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для Каждого ТекСтрока Из СписокТС Цикл 
		ТекСтрока.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	Для Каждого ТекСтрока Из СписокТС Цикл 
		ТекСтрока.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных();
	
	Источник = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	Источник.Имя = "Local";
	Источник.СтрокаСоединения = "";
	Источник.ТипИсточникаДанных = "Local";
	
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "СписокТС";
	НаборДанных.ИсточникДанных = "Local";
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	НаборДанных.Запрос = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатТС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.уатТС КАК уатТС
	|ГДЕ
	|	НЕ уатТС.ЭтоГруппа
	|	И НЕ уатТС.ПометкаУдаления";
	
	Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	Поле.Заголовок   = НСтр("en='Reference';ru='Ссылка'");
	Поле.ПутьКДанным = "Ссылка";
	Поле.Поле        = "Ссылка";
	
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	ВыбранноеПоле = НастройкиКомпоновкиДанных.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Заголовок = НСтр("en='Reference';ru='Ссылка'");
	ВыбранноеПоле.Использование = Истина;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
	
	ГруппировкаКомп = НастройкиКомпоновкиДанных.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ПолеГруппировки = ГруппировкаКомп.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Использование = Истина;
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
	ГруппировкаКомп.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	
	АдресСхемыКомпоновки = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	СписокТС_КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновки));
	СписокТС_КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновкиДанных);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокТС()
	
	СписокТС.Очистить();
	
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновки);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		СписокТС_КомпоновщикНастроек.ПолучитьНастройки(),
		,
		,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
	);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТабДанных = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Для Каждого ТекСтрока Из ТабДанных Цикл 
		НовСтрока = СписокТС.Добавить();
		НовСтрока.Ссылка = ТекСтрока.Ссылка;
		НовСтрока.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВыбранныеСервер()
	
	Для Каждого ТекСтрока Из СписокТС Цикл 
		Если Не ТекСтрока.Выбран Тогда 
			Продолжить;
		КонецЕсли;
		
		СпрОб = ТекСтрока.Ссылка.ПолучитьОбъект();
		СпрОб.Наименование = уатНастройкиШаблонов.СформироватьНаименованиеПоШаблону("Справочник_уатТС", СпрОб, ТекстШаблонаНаименования);
		СпрОб.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
