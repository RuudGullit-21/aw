
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__СОСТОЯНИЕ_НЕДЕЙСТВУЕТ_", НСтр("ru='не действует'"));
	Если ПравоДоступа("Просмотр", Метаданные.Справочники.уатРегистрационныеДокументыПрисоединенныеФайлы) Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, """__ВладелецФайлаВладелецДокументов__""",
			"уатРегистрационныеДокументыПрисоединенныеФайлы.ВладелецФайла.ВладелецДокументов");
	Иначе
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "__ВладелецФайлаВладелецДокументов__", 
			"ЗНАЧЕНИЕ(Справочник.уатТС.ПустаяСсылка)");
	КонецЕсли;
	
	ТекПользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
	мВремяДоОкончанияДействияДокументовТС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияДокументовТС"));
	мВремяДоОкончанияДействияТопливныхКарт = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт"));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияДокументовТС", мВремяДоОкончанияДействияДокументовТС);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияТопливныхКарт", мВремяДоОкончанияДействияТопливныхКарт);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекущаяДата", НачалоДня(ТекущаяДата()));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекущаяДатаВремя", ТекущаяДата());
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.ОтборПодразделение, "ОтборОрганизация");
	
	// уатУправлениеАвтотранспортом.МодификацияКонфигурации
	уатМодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец уатУправлениеАвтотранспортом.МодификацияКонфигурации
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	АвторизованВнешнийПользователь = Ложь;
	АвторизованныйКонтрагент = уатЗащищенныеФункцииСервер_проф.АвторизованныйКонтрагент(АвторизованВнешнийПользователь);
	Если АвторизованВнешнийПользователь Тогда
		Элементы.ГруппаОтборы.Видимость = Ложь;
		Элементы.Дерево.Видимость = Ложь;
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ВладелецТС", АвторизованныйКонтрагент,,,Истина);
		
		Элементы.ФормаОтображатьСтатусы.Видимость = Ложь;
		Элементы.ФормаПоказатьДопИнформацию.Видимость = Ложь;
		Элементы.ОтобразитьВыбывшие.Видимость = Ложь;
		
		// Скрытие стандартных команд, если они есть
		МассивИменКоманд = Новый Массив;
		МассивИменКоманд.Добавить("ФормаСоздатьГруппу");
		МассивИменКоманд.Добавить("ФормаРежимПросмотра");
		МассивИменКоманд.Добавить("ФормаПеренестиЭлемент");
		МассивИменКоманд.Добавить("ФормаУровеньВверх");
		МассивИменКоманд.Добавить("ФормаУровеньВниз");
		МассивИменКоманд.Добавить("СписокКонтекстноеМенюСоздатьГруппу");
		МассивИменКоманд.Добавить("СписокКонтекстноеМенюПеренестиЭлемент");
		МассивИменКоманд.Добавить("СписокКонтекстноеМенюУровеньВверх");
		МассивИменКоманд.Добавить("СписокКонтекстноеМенюУровеньВниз");
		СкрытьКомандыФормыПриСуществовании(МассивИменКоманд);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастроек = ВосстановитьНастройки();
	НастройкиНекорректны = (СтруктураНастроек = Неопределено ИЛИ ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
	
	УстановитьОтборВыбывшие();
	
	// нажмем кнопку при открытии, если после закрытия она осталась нажатой
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьСтатусы")) Тогда
		ОтображатьСтатусы = Ложь;
	Иначе
		ОтображатьСтатусы = СтруктураНастроек.ОтображатьСтатусы;
	КонецЕсли;
	Элементы.ФормаОтображатьСтатусы.Пометка = ОтображатьСтатусы;
	УстановитьВидимостьСтатусов();
	Если Не АвторизованВнешнийПользователь Тогда
		ЗаполнитьРеквизитыОтбора();
	КонецЕсли;
	
	// отображение строки доп. информации
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьДопИнфо")) Тогда
		ОтображатьДопИнфо = Ложь;
	Иначе
		ОтображатьДопИнфо = СтруктураНастроек.ОтображатьДопИнфо;
	КонецЕсли;
	Элементы.ФормаПоказатьДопИнформацию.Пометка = ОтображатьДопИнфо;
	ОтобразитьСкрытьДопИнформацию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборКолоннаПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборМодельТСПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипТСПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПанельДопИнформацииПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияКлиент.ПанельДопИнформацииПоТСПриНажатии(
		ЭтотОбъект, 
		Элемент, 
		ДанныеСобытия, 
		СтандартнаяОбработка,
		ТекущаяСтрока
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьВыбывшиеПриИзменении(Элемент)
	УстановитьОтборВыбывшие();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ПросроченныеДокументы И ВыбраннаяСтрока <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		
		Отбор = Новый Структура("ВладелецДокументов, ПринадлежностьДокументов", ВыбраннаяСтрока,
			ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыТС"));
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ОткрытьФорму("Справочник.уатРегистрационныеДокументы.ФормаСписка", ПараметрыФормы, Элемент);
		
	ИначеЕсли Поле = Элементы.ТО И ВыбраннаяСтрока <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Отбор",                   Новый Структура("ТС", ВыбраннаяСтрока));
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		ОткрытьФорму("Отчет.уатПриближениеСроковТО.Форма", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтображатьСтатусы(Команда)
	Элементы.ФормаОтображатьСтатусы.Пометка = НЕ Элементы.ФормаОтображатьСтатусы.Пометка;
	УстановитьВидимостьСтатусов();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДопИнформацию(Команда)
	Элементы.ФормаПоказатьДопИнформацию.Пометка = НЕ Элементы.ФормаПоказатьДопИнформацию.Пометка;
	ОтобразитьСкрытьДопИнформацию();
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить("Справочник.уатТС.Форма.ФормаВыбора", "ОбщиеНастройки");
	
	Возврат СтруктураНастроек;
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ОтображатьВыбывшие", ОтобразитьВыбывшие);
	СтруктураНастроек.Вставить("ОтображатьСтатусы" , Элементы.ФормаОтображатьСтатусы.Пометка);
	СтруктураНастроек.Вставить("ОтображатьДопИнфо" , Элементы.ФормаПоказатьДопИнформацию.Пометка);
	
	ХранилищеНастроекДанныхФорм.Сохранить("Справочник.уатТС.Форма.ФормаВыбора", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборВыбывшие()
	Если ОтобразитьВыбывшие Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДатаВыбытия", '00010101',,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДатаВыбытия", '00010101',,, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтатусов()
	Пометка = Элементы.ФормаОтображатьСтатусы.Пометка;
	Элементы.ТО.Видимость									 = Пометка;
	Элементы.ПросроченныеДокументы.Видимость				 = Пометка;
	Элементы.СтатусЗагрузкиДанныхИзМониторинга.Видимость	 = Пометка;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор()
	
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", ОтборОрганизация,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация",,,, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Подразделение", ОтборПодразделение,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Подразделение",,,, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборКолонна) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Колонна", ОтборКолонна,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Колонна",,,, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборМодельТС) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Модель", ОтборМодельТС,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Модель",,,, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборТипТС) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ТипТС", ОтборТипТС,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ТипТС",,,, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ВладелецТС", ОтборКонтрагент,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ВладелецТС",,,, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыОтбора()
	
	Элементы.ОтборКонтрагент.Видимость = Ложь;
	Для Каждого ТекОтбор Из Список.Отбор.Элементы Цикл 
		Если ТипЗнч(ТекОтбор) = Тип("ЭлементОтбораКомпоновкиДанных") 
				И ТекОтбор.Использование = Истина 
				И ТекОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда 
			Если ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда 
				ОтборОрганизация = ТекОтбор.ПравоеЗначение;
			ИначеЕсли ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение") Тогда 
				ОтборПодразделение = ТекОтбор.ПравоеЗначение;
			ИначеЕсли ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Колонна") Тогда 
				ОтборКолонна = ТекОтбор.ПравоеЗначение;
			ИначеЕсли ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Модель") Тогда 
				ОтборМодельТС = ТекОтбор.ПравоеЗначение;
			ИначеЕсли ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипТС") Тогда 
				ОтборТипТС = ТекОтбор.ПравоеЗначение;
			ИначеЕсли ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВладелецТС") Тогда 
				ОтборКонтрагент = ТекОтбор.ПравоеЗначение;
				Элементы.ОтборКонтрагент.Видимость = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	ОтобразитьСкрытьДопИнформацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСкрытьДопИнформацию()
	
	флПоказатьДопИнфо = Элементы.ФормаПоказатьДопИнформацию.Пометка;
	Если флПоказатьДопИнфо И Не Элементы.ПанельДопИнформации.Видимость Тогда
		Элементы.ПанельДопИнформации.Видимость = Истина;
		
	ИначеЕсли Не флПоказатьДопИнфо И Элементы.ПанельДопИнформации.Видимость Тогда 
		Элементы.ПанельДопИнформации.Видимость = Ложь;
	КонецЕсли;
	
	Если флПоказатьДопИнфо Тогда
		Если Элементы.Список.ТекущаяСтрока = Неопределено Или ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			ПанельДопИнформации = "";
			Возврат;
		КонецЕсли;
		
		ПанельДопИнформации = уатОбщегоНазначения.СформироватьТекстДопИнформацииПоТС(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкрытьКомандыФормыПриСуществовании(МассивИменКоманд)
	Для Каждого ТекИмяКоманды Из МассивИменКоманд Цикл
		ТекущийЭлементФормы = Элементы.Найти(ТекИмяКоманды);
		Если ТекущийЭлементФормы <> Неопределено Тогда
			ТекущийЭлементФормы.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
