#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		
		// Заполнение реквизитов по умолчанию.
		Если Ссылка.Пустая() Тогда
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ЕдиницаИзмерения) Тогда
				ЭтотОбъект.ЕдиницаИзмерения = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
					ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяЕдиницаПоКлассификатору");
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СтавкаНДС) Тогда
				ЭтотОбъект.СтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
					ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ДатаСоздания) Тогда
				ДатаСоздания = ТекущаяДата();
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			Услуга = ВидНоменклатуры.Услуга;
		КонецЕсли;
		
		Если Не Услуга И Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить единицу измерения",, "Объект.ЕдиницаИзмерения",, Отказ);
		Иначе
			// Препятствует поиску и удалению дублей. Задача (С000459724)
			
			// Проверка владельца единицы хранения остатков.
			//Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
			//		И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
			//	ТекстНСТР = НСтр("en='Storage unit for the remains of products and services ""%1"" is incorrectly specified owner!';ru='У единицы хранения остатков номенклатуры ""%1"" неверно указан владелец!'");
			//	ТекстСообщения = СтрШаблон(ТекстНСТР, СокрЛП(Ссылка));
			//	уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
			//КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
	// Подстановка единицы хранения остатков. 
	// Выполнится в данном событии, когда объект был ранее записан в ИБ. 
	Если НЕ ЭтоГруппа Тогда
		ПроверитьЕдиницуХраненияОстатков(Отказ, "ПередЗаписью");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Подстановка единицы хранения остатков
	// выполнится в данном событии, когда запись объекта происходит впервые
	Если НЕ ЭтоГруппа Тогда
		ПроверитьЕдиницуХраненияОстатков(Отказ, "ПриЗаписи");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ЭтоГруппа Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидНоменклатуры");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Родитель") Тогда
		ВидНоменклатурыРодителя = ДанныеЗаполнения.Родитель.ВидНоменклатуры;
		Если ЗначениеЗаполнено(ВидНоменклатурыРодителя) Тогда
			ВидНоменклатуры = ВидНоменклатурыРодителя;
			Услуга          = ВидНоменклатурыРодителя.Услуга;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура записывает единицу хранения остатков номенклатуры.
//
Процедура ПроверитьЕдиницуХраненияОстатков(Отказ, Событие = "ПередЗаписью")
	
	// Если единица хранения остатков заполнена, ничего делать не нужно.
	Если ЗначениеЗаполнено(ЭтотОбъект.ЕдиницаХраненияОстатков) Тогда
		Возврат;
	КонецЕсли;

	// Для услуг единица измерения не является обязательным реквизитов.
	Если Услуга И НЕ ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		Возврат;
	КонецЕсли;
	
	// До записи в ИБ ссылка еще не существует, поэтому единица хранения остатков не может быть создана.	
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	// Поиск существующего элемента в базе данных по владельцу.
	ВыборкаЕдиниц = Справочники.ЕдиницыИзмерения.Выбрать(, Ссылка);
	
	Если ВыборкаЕдиниц.Следующий() Тогда
		НайденнаяЕдиница = ВыборкаЕдиниц.Ссылка;
	Иначе
		НайденнаяЕдиницаОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		НайденнаяЕдиницаОбъект.Наименование            = ЕдиницаИзмерения.Наименование;
		НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору = ЕдиницаИзмерения;
		НайденнаяЕдиницаОбъект.Коэффициент             = 1;
		НайденнаяЕдиницаОбъект.Владелец                = Ссылка;

		Попытка
			НайденнаяЕдиницаОбъект.Записать();
		Исключение
			ТекстНСТР = НСтр("en='Failed to record unit of storage of remains:';ru='Не удалось записать единицу хранения остатков:'") + " ";
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстНСТР + ОписаниеОшибки(), Отказ);
			Возврат;
		КонецПопытки;

		НайденнаяЕдиница = НайденнаяЕдиницаОбъект.Ссылка;
	КонецЕсли;    
	
	// Подстановка новой единицы хранения остатков в реквизит текущего объекта.
	ЕдиницаХраненияОстатков = НайденнаяЕдиница;
	
	// Событие "ПриЗаписи" вызывается после записи объекта в базу данных.
	// Необходимо записать объект повторно, чтобы новая единица хранения остатков записалась в БД.
	Если Событие = "ПриЗаписи" Тогда 
		Попытка
			Записать();	
		Исключение
			ТекстНСТР = НСтр("en='Failed to write products and services:';ru='Не удалось записать номенклатуру:'") + " ";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНСТР + ОписаниеОшибки());
			Отказ = Истина;
		КонецПопытки; 
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЕдиницуХраненияОстатков()

#КонецОбласти

#КонецЕсли