
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если АвторизованВнешнийПеревозчик() Тогда
		ЭлементОтбора                  = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ВидНоменклатуры.Услуга");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение   = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.Использование    = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АвторизованВнешнийПеревозчик()
	
	АвторизованВнешнийПользователь = Ложь;
	АвторизованныйКонтрагент = уатЗащищенныеФункцииСервер_проф.АвторизованныйКонтрагент(АвторизованВнешнийПользователь);
	
	Если АвторизованВнешнийПользователь И ЗначениеЗаполнено(АвторизованныйКонтрагент) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	уатСведенияОКонтрагентах_уэ.Перевозчик КАК Перевозчик
		|ИЗ
		|	РегистрСведений.уатСведенияОКонтрагентах_уэ КАК уатСведенияОКонтрагентах_уэ
		|ГДЕ
		|	уатСведенияОКонтрагентах_уэ.Контрагент = &Контрагент");
		Запрос.УстановитьПараметр("Контрагент", АвторизованныйКонтрагент);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Перевозчик;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
