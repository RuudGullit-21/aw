#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатКлассификаторВидыТранспортныхСредств) Тогда 
		Элементы.ФормаЗаполнить2013.Видимость = Ложь;
		Элементы.ФормаЗаполнить2019.Видимость = Ложь;
		Элементы.ФормаОчистить.Видимость      = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Очистить(Команда)
	Если СправочникНеПустой() Тогда
		Ответ = Неопределено;
		
		ТекстНСТР = НСтр("en='The directory is not empty. Items in use will be marked for delition, others will be deleted. Continue?';ru='Справочник не пуст. Неиспользуемые элементы будут удалены, используемые - помечены на удаление. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьЗавершение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат; 
	КонецЕсли;
	
	ОчиститьФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ОчиститьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФрагмент()
	
	ОчиститьСервер();
	
	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура Заполнить2013(Команда)
	Если СправочникНеПустой() Тогда
		Ответ = Неопределено;
		
		ТекстНСТР = НСтр("en='The directory is not empty. Items in use will be marked for delition, others will be deleted. Continue?';ru='Справочник не пуст. Неиспользуемые элементы будут удалены, используемые - помечены на удаление. Если используемый элемент присутствует в новом классификаторе - пометка на удаление будет снята. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение2013", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат; 
	КонецЕсли; 
	
	ЗаполнитьФрагмент2013();
КонецПроцедуры

&НаКлиенте
Процедура Заполнить2019(Команда)
	Если СправочникНеПустой() Тогда
		Ответ = Неопределено;
		
		ТекстНСТР = НСтр("en='The directory is not empty. Items in use will be marked for delition, others will be deleted. Continue?';ru='Справочник не пуст. Неиспользуемые элементы будут удалены, используемые - помечены на удаление. Если используемый элемент присутствует в новом классификаторе - пометка на удаление будет снята. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение2019", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат; 
	КонецЕсли; 
	
	ЗаполнитьФрагмент2019();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение2013(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОчиститьСервер();
	Иначе
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьФрагмент2013();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение2019(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОчиститьСервер();
	Иначе
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьФрагмент2019();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФрагмент2013()
	
	ЗаполнитьСервер2013();
	
	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФрагмент2019()
	
	ЗаполнитьСервер2019();
	
	Элементы.Список.Обновить();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СправочникНеПустой()
	Выборка = Справочники.уатКлассификаторВидыТранспортныхСредств.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОчиститьСервер()
	
	РезультатПроверки = ПроверкаСсылочнойЦелостности();
	
	Если ТипЗнч(РезультатПроверки) = Тип("Булево") И РезультатПроверки Тогда
		Выборка = Справочники.уатКлассификаторВидыТранспортныхСредств.Выбрать();
		Пока Выборка.Следующий() Цикл			
			СпрОбъект = Выборка.ПолучитьОбъект();
			СпрОбъект.Удалить();			
		КонецЦикла;
	Иначе
		Пока РезультатПроверки.Следующий() Цикл
			ЭлементСправочника = Справочники.уатКлассификаторВидыТранспортныхСредств.НайтиПоКоду(РезультатПроверки.КодПоКлассификатору);
			Если Не ЭлементСправочника.Пустая() Тогда
				ЭлементСправочника.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);	
			КонецЕсли;
		КонецЦикла;	
		
		Выборка = Справочники.уатКлассификаторВидыТранспортныхСредств.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ПометкаУдаления Тогда
			СпрОбъект = Выборка.ПолучитьОбъект();
			СпрОбъект.Удалить();	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер2013()
		
	Макет = Справочники.уатКлассификаторВидыТранспортныхСредств.ПолучитьМакет("Списки2006Кв1");
	ТекОбласть = Макет.Области.Найти("ВидыТранспортныхСредств2013");
	
	МакетВидыКатегории = Справочники.уатКлассификаторВидыТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
	тблВидыКатегории = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетВидыКатегории.ПолучитьТекст()).Данные;
		
	Если ТекОбласть <> Неопределено Тогда
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// Перебираем строки макета.
			КодПоказателя = СокрП(Макет.Область(Ном, 1).Текст);
			Название = СокрП(Макет.Область(Ном, 2).Текст);
			
			Если КодПоказателя = "" Тогда
				Продолжить;
			КонецЕсли;
			
			ТекКатегория = Неопределено;
			СтрокаВидКатегория = тблВидыКатегории.Найти(КодПоказателя, "КодВида");
			Если СтрокаВидКатегория <> Неопределено Тогда
				Если Метаданные.Перечисления.уатВидыТСТранспортныйНалог.ЗначенияПеречисления.Найти(СтрокаВидКатегория.Категория) <> Неопределено Тогда
					ТекКатегория = Перечисления.уатВидыТСТранспортныйНалог[СтрокаВидКатегория.Категория];
				КонецЕсли;
			КонецЕсли;
			
			эл = Справочники.уатКлассификаторВидыТранспортныхСредств.НайтиПоКоду(КодПоказателя);
			Если Не эл.Пустая() Тогда
				Объект = эл.ПолучитьОбъект();
				Объект.Наименование = Название;
				Объект.КатегорияТС = ТекКатегория;
				Объект.Записать();
				Если эл.ПометкаУдаления Тогда
					эл.ПолучитьОбъект().УстановитьПометкуУдаления(Ложь);
					Продолжить;
				КонецЕсли;
			Иначе
				эл = Справочники.уатКлассификаторВидыТранспортныхСредств.СоздатьЭлемент();
				эл.Код = КодПоказателя;
				эл.Наименование = Название;
				эл.КатегорияТС = ТекКатегория;
				эл.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер2019()
	
	Макет = Справочники.уатКлассификаторВидыТранспортныхСредств.ПолучитьМакет("Списки2006Кв1");
	ТекОбласть = Макет.Области.Найти("ВидыТранспортныхСредств2019");
	
	МакетВидыКатегории = Справочники.уатКлассификаторВидыТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
	тблВидыКатегории = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетВидыКатегории.ПолучитьТекст()).Данные;
	
	Если ТекОбласть <> Неопределено Тогда
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// Перебираем строки макета.
			КодПоказателя = СокрП(Макет.Область(Ном, 1).Текст);
			Название = СокрП(Макет.Область(Ном, 2).Текст);
			
			Если КодПоказателя = "" Тогда
				Продолжить;
			КонецЕсли;
			
			ТекКатегория = Неопределено;
			СтрокаВидКатегория = тблВидыКатегории.Найти(КодПоказателя, "КодВида");
			Если СтрокаВидКатегория <> Неопределено Тогда
				Если Метаданные.Перечисления.уатВидыТСТранспортныйНалог.ЗначенияПеречисления.Найти(СтрокаВидКатегория.Категория) <> Неопределено Тогда
					ТекКатегория = Перечисления.уатВидыТСТранспортныйНалог[СтрокаВидКатегория.Категория];
				КонецЕсли;
			КонецЕсли;
			
			эл = Справочники.уатКлассификаторВидыТранспортныхСредств.НайтиПоКоду(КодПоказателя);
			Если Не эл.Пустая() Тогда
				Объект = эл.ПолучитьОбъект();
				Объект.Наименование = Название;
				Объект.КатегорияТС = ТекКатегория;
				Объект.Записать();
				Если эл.ПометкаУдаления Тогда
					эл.ПолучитьОбъект().УстановитьПометкуУдаления(Ложь);
					Продолжить;
				КонецЕсли;
			Иначе
				эл = Справочники.уатКлассификаторВидыТранспортныхСредств.СоздатьЭлемент();
				эл.Код = КодПоказателя;
				эл.Наименование = Название;
				эл.КатегорияТС = ТекКатегория;
				эл.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСсылочнойЦелостности()
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	уатТС.КодПоКлассификатору КАК КодПоКлассификатору,
	               |	уатТС.Ссылка КАК СсылкаНаТС,
	               |	уатКлассификаторВидыТранспортныхСредств.Наименование КАК НаименованиеВидаТС
	               |ИЗ
	               |	Справочник.уатТС КАК уатТС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.уатКлассификаторВидыТранспортныхСредств КАК уатКлассификаторВидыТранспортныхСредств
	               |		ПО уатТС.КодПоКлассификатору = уатКлассификаторВидыТранспортныхСредств.Ссылка
	               |ГДЕ
	               |	уатТС.КодПоКлассификатору <> НЕОПРЕДЕЛЕНО
	               |	И уатТС.КодПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.уатКлассификаторВидыТранспортныхСредств.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = Запрос.Выполнить().Выбрать();
		Возврат Выборка;
	Иначе
		СсылкиНеИспользуются = Истина;
		Возврат СсылкиНеИспользуются;	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

