
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПроверкаЗаполненияПараметровОбработчика() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(СсылкаНаФайл) Тогда
		ДвоичныеДанныеОбработки = ПолучитьИзВременногоХранилища(СсылкаНаФайл);
		ТекущийОбъект.ХранилищеОбработки = Новый ХранилищеЗначения(ДвоичныеДанныеОбработки, Новый СжатиеДанных(9));
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьИмяОбработки();
	СсылкаНаФайл = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеОбработки");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Предопределенный Тогда
		Элементы.ФормаЗагрузитьИзФайла.Доступность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.Фильтр = "Обработка географического сервиса (*.epf)|*.epf";
	Диалог.Показать(Новый ОписаниеОповещения("ЗагрузитьИзФайлаДиалогЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	
	Если Объект.ИмяОбработки = "" Тогда
		Возврат;
	КонецЕсли;
	
	Файл = Новый ОписаниеПередаваемогоФайла(Объект.ИмяОбработки, СсылкаНаФайл);
	
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Файл);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = "Обработка географического сервиса (*.epf)|*.epf";
	
	НачатьПолучениеФайлов(Новый ОписаниеОповещения("ВыгрузитьВФайлЗавершение", ЭтотОбъект), ПолучаемыеФайлы, Диалог, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитов(Команда)
	Элементы.ФормаЗагрузитьИзФайла.Доступность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьИзФайлаДиалогЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект, 
									Новый Структура("ПолноеИмяФайла, Каталог", Диалог.ПолноеИмяФайла, Диалог.Каталог)),, 
									Диалог.ПолноеИмяФайла, Ложь, УникальныйИдентификатор);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПрежняяСсылка = СсылкаНаФайл;
	
	СсылкаНаФайл = Адрес;
	
	Если Не ВыполнитьИнициализацию() Тогда
		СсылкаНаФайл = ПрежняяСсылка;
	Иначе
		Объект.ИмяОбработки = Сред(ДополнительныеПараметры.ПолноеИмяФайла, СтрДлина(ДополнительныеПараметры.Каталог) + 1);
		ОбновитьИмяОбработки();
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайлЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	Заглушка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИмяОбработки()
	
	Если ЗначениеЗаполнено(Объект.ИмяОбработки) Тогда
		Элементы.ДекорацияИмяОбработки.Видимость = Истина;
		Элементы.ДекорацияИмяОбработки.Заголовок = Объект.ИмяОбработки;
	Иначе
		Элементы.ДекорацияИмяОбработки.Видимость = Ложь;
		Элементы.ДекорацияИмяОбработки.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьИнициализацию()
	
	ИмяОбработки 			= ВнешниеОбработки.Подключить(СсылкаНаФайл, ИмяОбработки, Ложь);
	ОбработчикГеоСервисов 	= ВнешниеОбработки.Создать(ИмяОбработки);
	
	Отказ = Ложь;
	
	Попытка
		ПараметрыИнициализации = ОбработчикГеоСервисов.ВернутьПараметрыИнициализации();
	Исключение
		ItobРаботаС_БСП_КлиентСервер.СообщитьПользователю("У обработчика не задан метод возвращающий его параметры!" + ОписаниеОшибки());
		Отказ = Истина; 
	КонецПопытки;
	
	Попытка
		Если ПараметрыИнициализации.Свойство("Версия") Тогда
			Объект.Версия = ПараметрыИнициализации.Версия;
		КонецЕсли;
		
		Если ПараметрыИнициализации.Свойство("СервисПрямогоГеокодирования") Тогда
			Объект.СервисПрямогоГеокодирования = ПараметрыИнициализации.СервисПрямогоГеокодирования;
		КонецЕсли;
		
		Если ПараметрыИнициализации.Свойство("СервисОбратногоГеокодирования") Тогда
			Объект.СервисОбратногоГеокодирования = ПараметрыИнициализации.СервисОбратногоГеокодирования;
		КонецЕсли;
		
		Если ПараметрыИнициализации.Свойство("СервисРасчетаМаршрута") Тогда
			Объект.СервисРасчетаМаршрута = ПараметрыИнициализации.СервисРасчетаМаршрута;
		КонецЕсли;
		
		Если ПараметрыИнициализации.Свойство("СервисРасчетаРасстояния") Тогда
			Объект.СервисРасчетаРасстояния = ПараметрыИнициализации.СервисРасчетаРасстояния;
		КонецЕсли;
		
		Если ПараметрыИнициализации.Свойство("ТаблицаПараметров") Тогда
			ТаблицаПараметров = ПараметрыИнициализации.ТаблицаПараметров;
			Объект.Параметры.Очистить();
			Для Каждого Стр Из ТаблицаПараметров Цикл
				
				НовСтр = Объект.Параметры.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Стр);
				
			КонецЦикла;
		КонецЕсли;
	Исключение
		ItobРаботаС_БСП_КлиентСервер.СообщитьПользователю("Ошибка загрузки данных: " + ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Функция ПроверкаЗаполненияПараметровОбработчика()

	Отказ = Ложь;
	
	Для Каждого Параметр Из Объект.Параметры Цикл
		Если Параметр.Обязательный И Не ЗначениеЗаполнено(Параметр.Значение) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен параметр " + Параметр.Имя + "!";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не Отказ;
	
КонецФункции	
	
#КонецОбласти
