
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// Позволяет определить список заблокированных реквизитов.
// 
// Возвращаемое значение:
//  Массив - из Строка - строки в формате "ИмяРеквизита[;ИмяЭлементаФормы,...]",
//  где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы -
//  имя элемента формы, связанного с реквизитом. Например: "Объект.Автор", "ПолеАвтор".
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив();
	
	БлокируемыеРеквизиты.Добавить("ДатаПоследнегоОбмена");
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// Процедура - Обработать данные для перехода на новую версию
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатУчетныеЗаписиПЦ.Ссылка КАК Ссылка,
	|	уатУчетныеЗаписиПЦ.УдалитьПароль КАК Пароль
	|ИЗ
	|	Справочник.уатУчетныеЗаписиПЦ КАК уатУчетныеЗаписиПЦ
	|ГДЕ
	|	(ВЫРАЗИТЬ(уатУчетныеЗаписиПЦ.УдалитьПароль КАК СТРОКА(100))) <> """"";
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		УчетнаяЗапись = Выборка.Ссылка.ПолучитьОбъект();
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(УчетнаяЗапись.Ссылка, Выборка.Пароль);
		УстановитьПривилегированныйРежим(Ложь);
		УчетнаяЗапись.УдалитьПароль = "";
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(УчетнаяЗапись);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли