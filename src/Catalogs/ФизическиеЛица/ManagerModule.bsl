#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	ЗащитаПерсональныхДанных.ДобавитьКомандуПечатиСогласияНаОбработкуПерсональныхДанных(КомандыПечати);
	// Конец СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Процедура-обработчик изменения ИНН физического лица
//
// Параметры:
//  ИНН		 - Строка	 - ИНН
//  Элемент	 - 			 - Элемент формы ИНН
//  Форма	 - 			 - Управляемая форма - Форма-владелец элемента ИНН
//
Процедура ФизическиеЛицаИННПриИзменении(ИНН, Элемент, Форма) Экспорт 
	
	СообщенияПроверки = "";
	Форма.ИННУказанПравильно = Ложь;
	
	Если НЕ ПустаяСтрока(ИНН) Тогда
		Форма.ИННУказанПравильно = РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, Ложь, СообщенияПроверки);
		Если Форма.ИННУказанПравильно Тогда
			ЭлементЦветТекста = Форма.ЦветСтиляЦветТекстаПоля;
		Иначе
			ЭлементЦветТекста = Форма.ЦветСтиляПоясняющийОшибкуТекст;
		КонецЕсли;
	Иначе
		СообщенияПроверки = НСтр("en='TIN not specified (used in form 2-NDFL)';ru='Не указан ИНН (используется, например, в отчетности по форме 2-НДФЛ)'");
		ЭлементЦветТекста = Форма.ЦветСтиляЦветТекстаПоля;
	КонецЕсли;
	
	ЭлементФормы = Форма.Элементы.Найти(Элемент.Имя);
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.РасширеннаяПодсказка.Заголовок = СообщенияПроверки;
	КонецЕсли;
	
	Элемент.ЦветТекста = ЭлементЦветТекста;
	
КонецПроцедуры

// Процедура-обработчик изменения Страхового номера ПФР физического лица
//
// Параметры:
//  СтраховойНомерПФР	 - Строка	 - Страховой номер ПФР
//  Элемент				 - 			 - Элемент формы
//  Форма				 - 			 - Управляемая форма - Форма-владелец элемента
//
Процедура СтраховойНомерПФРПриИзменении(СтраховойНомерПФР, Элемент, Форма) Экспорт
	
	СообщенияПроверки = "";
	Форма.СНИЛСУказанПравильно = Ложь;
	
	Если НЕ ПустаяСтрока(СтрЗаменить(СтраховойНомерПФР, "-", "")) Тогда
		Форма.СНИЛСУказанПравильно = РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомерПФР, СообщенияПроверки);
		Если Форма.СНИЛСУказанПравильно Тогда
			ЭлементЦветТекста = Форма.ЦветСтиляЦветТекстаПоля;
		Иначе
			ЭлементЦветТекста = Форма.ЦветСтиляПоясняющийОшибкуТекст;
		КонецЕсли;
	Иначе
		ЭлементЦветТекста = Форма.ЦветСтиляЦветТекстаПоля;
	КонецЕсли;
	
	ЭлементФормы = Форма.Элементы.Найти(Элемент.Имя);
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.РасширеннаяПодсказка.Заголовок = СообщенияПроверки;
	КонецЕсли;
	
	Элемент.ЦветТекста = ЭлементЦветТекста;
	 
КонецПроцедуры

// Возвращает объект справочника ФизическиеЛица, созданный по переданным фамилии,
//  имени, отчеству и другим данным (см. параметр ДанныеФизическогоЛица)
//
// Параметры:
//  ФИО						 - 	 - Строка, содержит фамилию, имя и отчество
//  	- Структура с ключами:
//  	* Фамилия	- Строка
//  	* Имя		- Строка
//  	* Отчество	- Строка
//  ДанныеФизическогоЛица	 - 	 - Структура, содержащая ключи одноименные реквизитам (включая стандартные)
//  	справочника ФизическиеЛица, за исключением реквизитов:
//  	Наименование, ФИО, УточнениеНаименования
//  	ПериодДанных			- Дата, дата на которую будет зарегистрирована запись о ФИО
// 
// Возвращаемое значение:
//  СправочникОбъект.ФизическиеЛица - 
//
Функция НовоеФизическоеЛицо(Знач ФИО, Знач ДанныеФизическогоЛица = Неопределено) Экспорт
	
	Если ТипЗнч(ФИО) = Тип("Строка") Тогда
		ФамилияИмяОтчество = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФИО);
	Иначе
		ФамилияИмяОтчество = Новый Структура("Фамилия,Имя,Отчество");
		ЗаполнитьЗначенияСвойств(ФамилияИмяОтчество, ФИО);
	КонецЕсли;
	
	Наименование = ПолноеНаименованиеФизЛица(ФамилияИмяОтчество.Фамилия, ФамилияИмяОтчество.Имя, ФамилияИмяОтчество.Отчество);
	
	ФизическоеЛицоОбъект = Справочники.ФизическиеЛица.СоздатьЭлемент();
	
	ФизическоеЛицоОбъект.Наименование = Наименование;
	
	ФизическоеЛицоОбъект.ФИО = Наименование;
	
	Если ДанныеФизическогоЛица <> Неопределено Тогда
		ИсключаемыеСвойства = "";
		Если ДанныеФизическогоЛица.Свойство("Наименование") Тогда
			ИсключаемыеСвойства = "Наименование";
		КонецЕсли; 
		
		Если ДанныеФизическогоЛица.Свойство("ФИО")Тогда
			ИсключаемыеСвойства = ?(ПустаяСтрока(ИсключаемыеСвойства), "", ИсключаемыеСвойства + ",") + "ФИО";
		КонецЕсли; 
		
		Если ДанныеФизическогоЛица.Свойство("Ссылка")Тогда
			ИсключаемыеСвойства = ?(ПустаяСтрока(ИсключаемыеСвойства), "", ИсключаемыеСвойства + ",") + "Ссылка";
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(ФизическоеЛицоОбъект, ДанныеФизическогоЛица, , ИсключаемыеСвойства);
	КонецЕсли;
	
	ФизическоеЛицоОбъект.Записать();
	
	Если Не ПустаяСтрока(Наименование) Тогда
		Набор = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
		Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоОбъект.Ссылка);
		
		Запись = Набор.Добавить();
		Запись.Фамилия        = ФамилияИмяОтчество.Фамилия;
		Запись.Имя            = ФамилияИмяОтчество.Имя;
		Запись.Отчество       = ФамилияИмяОтчество.Отчество;
		Запись.ФизическоеЛицо = ФизическоеЛицоОбъект.Ссылка;
		Запись.Период         = '18991231000000';
		
		Набор.Записать();
	КонецЕсли; 
	
	Возврат ФизическоеЛицоОбъект;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И уатОбщегоНазначения.ПроверкаВнешнегоПользователя() Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаСотрудникаКонтрагента";
	ИначеЕсли ВидФормы = "ФормаСписка" И уатОбщегоНазначения.ПроверкаВнешнегоПользователя() Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаСпискаСотрудниковКонтрагента";
	ИначеЕсли ВидФормы = "ФормаВыбора" И уатОбщегоНазначения.ПроверкаВнешнегоПользователя() Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаВыбораСотрудниковКонтрагента";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолноеНаименованиеФизЛица(Фамилия, Имя, Отчество)
	
	ПолноеНаименование = Строка(Фамилия);
	
	Если ЗначениеЗаполнено(Имя) Тогда
		ПолноеНаименование = ПолноеНаименование + " " + Имя;
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчество) Тогда
		ПолноеНаименование = ПолноеНаименование + " " + Отчество;
	КонецЕсли;
	
	Возврат ПолноеНаименование;
	
КонецФункции

#КонецОбласти

#КонецЕсли