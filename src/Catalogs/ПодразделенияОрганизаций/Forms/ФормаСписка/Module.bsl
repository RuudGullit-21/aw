
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = ПолучитьОрганизацию();
	КонецЕсли;
	
	УстановитьОтбор();
	ОбновитьЗаголовок();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтбор();
	ОбновитьЗаголовок();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьОрганизацию()
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), 
		"ОсновнаяОрганизация");	
	Возврат Организация;
КонецФункции

&НаКлиенте
Процедура УстановитьОтбор()
	уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, Новый ПолеКомпоновкиДанных("Владелец"), Организация, 
		ВидСравненияКомпоновкиДанных.Равно);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовок()
	ТекстНСТР = НСтр("en='List of company departments of ""%1""';ru='Список подразделений организации ""%1""'");
	Заголовок = СтрШаблон(ТекстНСТР, уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Организация, "Наименование"));
	
	ЭтоЮрЛицо = (уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Организация, "ЮридическоеФизическоеЛицо") =
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Если НЕ ЭтоЮрЛицо Тогда
		Элементы.КодПоОКАТО.Видимость = Ложь;
		Элементы.КПП.Видимость        = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
