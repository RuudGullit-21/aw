#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТС") Тогда
		ДатаСтарта           = Параметры.ДатаСтарта;
		ТС                   = Параметры.ТС; 
		ОбновитьНастройки();
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

&НаКлиенте
Процедура ДатаСтартаПриИзменении(Элемент)
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "entryPass";
	НоваяСтрока.Значение    = ЕстьПропускВГорода;
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "avoidToll";
	НоваяСтрока.Значение    = ИзбегатьПлатныхДорог;

	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "useCarRouter";
	НоваяСтрока.Значение    = ЛегковоеТС;
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "startVol";
	НоваяСтрока.Значение    = ?(ИсточникЗаполненияГСМ = 2, -1, ОстатокТопливаВыезд);
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "litersEndPath";
	НоваяСтрока.Значение    = ОстатокТопливаВозврат;
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "options.arrDates";
	НоваяСтрока.Значение    = ФиксированноеВремяПрибытия;
	
	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "options.tankVol";
	НоваяСтрока.Значение    = ОбъемБака;

	НоваяСтрока = НастройкиMultiGo.Добавить();
	НоваяСтрока.ПараметрAPI = "options.avgVolPer100";
	НоваяСтрока.Значение    = СреднийРасход;

	Настройки = ПреобразоватьТаблицуВМассивДляПередачиНаКлиент();
	Закрыть(Новый Структура("ДатаСтарта, Настройки", ДатаСтарта, Настройки));
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПрофильОбменаНажатие(Элемент)
	Оповещение = Новый ОписаниеОповещения("ДекорацияПрофильОбменаНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.уатТС.Форма.ФормаЭлемента",Новый Структура("Ключ, Режим", ТС, "MultiGo"),ЭтотОбъект,,,,Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНачальныеОстатки(Команда)   
	ИсточникЗаполненияГСМ = 1;
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоМониторингуMultiGo(Команда)   
	ИсточникЗаполненияГСМ = 2;
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоМониторингуПриВыезде(Команда)   
	ИсточникЗаполненияГСМ = 4;
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиMultiGoПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НастройкиMultiGo.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Значение = Неопределено Тогда
		 ТекущиеДанные.Значение = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПреобразоватьТаблицуВМассивДляПередачиНаКлиент()
	Настройки = уатАРМ.ПреобразоватьТаблицуВМассивДляПередачиНаКлиент(НастройкиMultiGo.Выгрузить());
	Возврат Настройки;
	
КонецФункции

&НаКлиенте
Процедура ДекорацияПрофильОбменаНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	ОбновитьНастройки(); 
	УстановитьПометкуИсточникаЗаполненияГСМ();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройки()
	
	ОсновноеТопливо      = ТС.Модель.ОсновноеТопливо;
	УчетнаяЗаписьMultiGo = ТС.УчетнаяЗаписьMultiGo;
	ТекНастройкиMultiGo  = ТС.НастройкиMultiGo;
	
	НастройкиMultiGo.Очистить();
	Для Каждого ТекНастройка Из ТекНастройкиMultiGo Цикл 
		Если ТекНастройка.ПараметрAPI = "entryPass" Тогда
			ЕстьПропускВГорода   = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "avoidToll" Тогда
			ИзбегатьПлатныхДорог = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "useCarRouter" Тогда
			ЛегковоеТС = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "startVol" Тогда
			ОстатокТопливаВыезд = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "litersEndPath" Тогда
			ОстатокТопливаВозврат = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "options.arrDates" Тогда
			ФиксированноеВремяПрибытия = ТекНастройка.Значение; 
		ИначеЕсли ТекНастройка.ПараметрAPI = "options.tankVol" Тогда
			ОбъемБака = ТекНастройка.Значение;
		ИначеЕсли ТекНастройка.ПараметрAPI = "options.avgVolPer100" Тогда
			СреднийРасход = ТекНастройка.Значение;
		Иначе
			НоваяСтрока = НастройкиMultiGo.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекНастройка);
		КонецЕсли;
	КонецЦикла;
	
	Если НастройкиMultiGo.Количество() = 0 Тогда
		МакетДанных = Справочники.уатТС.ПолучитьМакет("НастройкиMultiGo");
		КолСтрок    = МакетДанных.ВысотаТаблицы;
		Для Сч = 1 По КолСтрок Цикл 
			ПараметрAPI = МакетДанных.Область(сч,2,сч,2).Текст; 
			Значение    = МакетДанных.Область(сч,3,сч,3).Текст;
            ТипЗначения = МакетДанных.Область(сч,4,сч,4).ТипЗначения;
			Если Тип(ТипЗначения) = Тип("Булево") Тогда
				Значение = ?(Значение = "Истина", Истина, Ложь);
			ИначеЕсли Тип(ТипЗначения) = Тип("Число") Тогда
				Попытка
					Значение = Число(Значение);
				Исключение
					Значение = 0;
				КонецПопытки;
			Иначе
				Значение = Значение;
			КонецЕсли; 
			
			Если ПараметрAPI = "entryPass" Тогда
				ЕстьПропускВГорода   = Значение;
			ИначеЕсли ПараметрAPI = "avoidToll" Тогда
				ИзбегатьПлатныхДорог = Значение;
			ИначеЕсли ПараметрAPI = "useCarRouter" Тогда
				ЛегковоеТС = Значение;
			ИначеЕсли ПараметрAPI = "startVol" Тогда
				ОстатокТопливаВыезд = Значение;
			ИначеЕсли ПараметрAPI = "litersEndPath" Тогда
				ОстатокТопливаВозврат = Значение;
			ИначеЕсли ПараметрAPI = "options.arrDates" Тогда
				ФиксированноеВремяПрибытия = Значение;
			ИначеЕсли ТекНастройка.ПараметрAPI = "options.tankVol" Тогда
				ОбъемБака     = Значение;
			ИначеЕсли ТекНастройка.ПараметрAPI = "options.avgVolPer100" Тогда
				СреднийРасход = Значение;
			Иначе
				НоваяСтрока = НастройкиMultiGo.Добавить();
				НоваяСтрока.Наименование = МакетДанных.Область(сч,1,сч,1).Текст;
				НоваяСтрока.ПараметрAPI  = ПараметрAPI;
				НоваяСтрока.Описание     = МакетДанных.Область(сч,5,сч,5).Текст;
				НоваяСтрока.Значение     = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ИсточникЗаполненияГСМ = 3;

	СтрокиГСМ = ТекНастройкиMultiGo.НайтиСтроки(Новый Структура("ПараметрAPI", "startVol"));
	Если СтрокиГСМ.Количество() <> 0 Тогда 
		Значение = СтрокиГСМ[0].Значение;
		Если Значение = 0 Тогда
			ИсточникЗаполненияГСМ = 1;
		ИначеЕсли Значение = -1 Тогда
			ИсточникЗаполненияГСМ = 2;
		Иначе
			ИсточникЗаполненияГСМ = 3;
		КонецЕсли;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ОбъемБака) Тогда
		ОбъемБака = ТС.Модель.ОбъемБака + ТС.Модель.ОбъемДопБака;
	КонецЕсли;
	
	Элементы.ДекорацияПрофильОбмена.Заголовок = ТС;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуИсточникаЗаполненияГСМ() 
	Если ИсточникЗаполненияГСМ = 1 Тогда
		Элементы.ЗаполнитьПоМониторингуMultiGo.Пометка = Ложь;
		Элементы.ОстатокТопливаВыезд.Доступность       = Истина;
		
		ОстатокТопливаВыезд = уатОбщегоНазначения.уатОстатокГСМнаТС(ДатаСтарта, ТС,
			ОсновноеТопливо);
	ИначеЕсли ИсточникЗаполненияГСМ = 2 Тогда
		Элементы.ЗаполнитьПоМониторингуMultiGo.Пометка = НЕ Элементы.ЗаполнитьПоМониторингуMultiGo.Пометка;
		Элементы.ОстатокТопливаВыезд.Доступность       = НЕ Элементы.ЗаполнитьПоМониторингуMultiGo.Пометка;
		ОстатокТопливаВыезд = 0;

	ИначеЕсли ИсточникЗаполненияГСМ = 4 Тогда  
		Элементы.ЗаполнитьПоМониторингуMultiGo.Пометка = Ложь;
		Элементы.ОстатокТопливаВыезд.Доступность       = Истина;

		мсвОбъектыКЗапросу = Новый Массив();
		мсвОбъектыКЗапросу.Добавить(ТС);
		
		СводныеДанные = уатМониторинг.ПолучитьСводныеДанныеМониторинга(ДатаСтарта - 86400,
		ДатаСтарта, мсвОбъектыКЗапросу); 
		Если СводныеДанные.Количество() > 0 Тогда
			СтруктураДанных = СводныеДанные.Получить(ТС); 
			Если СтруктураДанных <> Неопределено Тогда
				ОстатокТопливаВыезд = СтруктураДанных.КонечныйУровеньТоплива;
			КонецЕсли;
		Иначе
			ОстатокТопливаВыезд = 0;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры;

#КонецОбласти
