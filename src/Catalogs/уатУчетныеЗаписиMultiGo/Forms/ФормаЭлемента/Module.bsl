#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаЛогированиеЗапросов.Пометка = Объект.ЛогированиеЗапросов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	ТекстОшибки = "";
	ОшибкаЗаполнения = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.АдресСервиса) Тогда 
		ТекстОшибки = НСтр("ru='Необходимо указать адрес сервиса.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.АдресСервиса",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ТокенАвторизации) Тогда 
		ТекстОшибки = НСтр("ru='Необходимо заполнить токен авторизации.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ТокенАвторизации",, ОшибкаЗаполнения);
	КонецЕсли;
	
	Если ОшибкаЗаполнения Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ПодключениеКMultiGoДоступно() Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьПредупреждение(, НСтр("en='Connection check is completed successfully.';ru='Проверка подключения успешно завершена.'"));
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроксиСервера(Команда)
	
	ПараметрыФормы = Неопределено;
	Если ОбщегоНазначенияКлиент.ИнформационнаяБазаФайловая() Тогда
		ПараметрыФормы = Новый Структура("НастройкаПроксиНаКлиенте", Истина);
	КонецЕсли;
	
	ПолучениеФайловИзИнтернетаКлиент.ОткрытьФормуПараметровПроксиСервера(ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЛогированиеЗапросов(Команда)
	Элементы.ФормаЛогированиеЗапросов.Пометка = НЕ Элементы.ФормаЛогированиеЗапросов.Пометка;
	Объект.ЛогированиеЗапросов                = НЕ Объект.ЛогированиеЗапросов;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдресПоУмолчанию(Команда)
	Объект.АдресСервиса = Элементы.АдресСервиса.ПодсказкаВвода;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТипыТочек(Команда)
	Если Объект.ТипыТочек.Количество() > 0 Тогда
		ТекстНСТР = НСтр("en='Do you want to clear the table before filling?';ru='Очистить таблицу перед заполнением?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьТипыТочекПродолжение", ЭтотОбъект), ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет);
	Иначе
		ЗагрузитьТипыТочекСервер();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПодключениеКMultiGoДоступно()
	
	ТекстОшибки = "";
	ТочкаДоступна = уатИнтеграции_проф.MultiGo_ПроверкаПодключения(Объект, ТекстОшибки);
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат ТочкаДоступна;
	Иначе 
		ПоказатьПредупреждение(,ТекстОшибки); 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьТипыТочекПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ТипыТочек.Очистить();
	КонецЕсли;
	
	ЗагрузитьТипыТочекСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТипыТочекСервер()
	МакетДанных = Справочники.уатУчетныеЗаписиMultiGo.ПолучитьМакет("ТипыТочек");
	КолСтрок = МакетДанных.ВысотаТаблицы;
	Для Сч = 1 По КолСтрок Цикл
		НоваяСтрока = Объект.ТипыТочек.Добавить();
		НоваяСтрока.ТипТочкиAPI              = МакетДанных.Область(сч,1,сч,1).Текст;
		НоваяСтрока.ТипТочкиAPIНаименование  = МакетДанных.Область(сч,2,сч,2).Текст;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

