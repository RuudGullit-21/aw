
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проброс флага создания нового элемента в обработчик ПриЗаписи() для установки статуса
	Если НЕ ЭтоГруппа И Ссылка.Пустая() Тогда
		ДополнительныеСвойства.Вставить("НовыйЭлемент", Истина);
	КонецЕсли;
	
	// Уведомления
	Если НЕ Отказ 
		И НЕ ПометкаУдаления
		И НЕ ЭтоГруппа
		И ПолучитьФункциональнуюОпцию("уатИспользоватьУведомления_уэ") Тогда
		// Заполнение ТЧ "Получатели уведомлений"
		Если Модифицированность() Тогда
			тблПолучатели = уатОбщегоНазначения_уэ.СформироватьСписокПолучателейУведомлений(ЭтотОбъект);
			ПолучателиУведомлений.Загрузить(тблПолучатели);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// если новый - запускаем установку статуса автоматом
	Если НЕ ЭтоГруппа И НЕ Шаблон Тогда
		Если ДополнительныеСвойства.Свойство("НовыйЭлемент") Тогда
			Справочники.уатСопроводительныеДокументы.УстановитьСтатусДокумента(Ссылка);
		КонецЕсли;
		СкорректироватьРучнуюДатуОбработки();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЭтоГруппа И НЕ Шаблон
		И ВидДокумента.ВидВладельца = Перечисления.уатВидыВладельцевСопроводительныхДокументов.ДокументыЗаказчика Тогда
		
		ПроверяемыеРеквизиты.Добавить("ВладелецДокумента");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СкорректироватьРучнуюДатуОбработки()
	
	Если НЕ ПлановаяДатаОбработкиВручную
		ИЛИ НЕ ЗначениеЗаполнено(ПлановаяДатаОбработки)
		ИЛИ НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	НЗДатыОбработки = РегистрыСведений.уатДатыОбработкиДокументов.СоздатьНаборЗаписей();
	НЗДатыОбработки.Отбор.Регистратор.Установить(Основание);
	НЗДатыОбработки.Прочитать();
	
	тблНЗ = НЗДатыОбработки.Выгрузить();
	мсвСтрокСД = тблНЗ.НайтиСтроки(Новый Структура("СопроводительныйДокумент", Ссылка));
	Для Каждого ТекСтрокаУдалить Из мсвСтрокСД Цикл
		тблНЗ.Удалить(ТекСтрокаУдалить);
	КонецЦикла;
		
	СтруктураДополнительныеСвойства = Новый Структура;
	СтруктураДополнительныеСвойства.Вставить("СопроводительныйДокумент", Ссылка);
	СтруктураДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	уатПроведение_проф.СформироватьТаблицуДатыОбработкиДокументов(Основание, СтруктураДополнительныеСвойства);
	
	Если СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаДатыОбработкиДокументов") Тогда
		Для Каждого ТекСтрока Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыОбработкиДокументов Цикл
			НоваяЗапись = тблНЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекСтрока);
			НоваяЗапись.Активность = Истина;
		КонецЦикла;
	КонецЕсли;
	
	НЗДатыОбработки.Загрузить(тблНЗ);
	НЗДатыОбработки.Записать();
	
КонецПроцедуры

#КонецОбласти
