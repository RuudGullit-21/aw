#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипПункта) 
		И НЕ ЭтоГруппа Тогда
		ТипПункта = Справочники.уатТипыПунктов.Адрес;
	КонецЕсли;
	
	Если Не ЭтоГруппа И НЕ ЗначениеЗаполнено(ЗначениеАдреса) Тогда
		КонтактнаяИнформацияXML = ЗначенияПолейАдреса.Получить();
		Если ЗначениеЗаполнено(КонтактнаяИнформацияXML) 
			И УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВXML(КонтактнаяИнформацияXML) Тогда
			
			ЗначениеАдреса = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(КонтактнаяИнформацияXML, Перечисления.ТипыКонтактнойИнформации.Адрес);
		ИначеЕсли ЗначениеЗаполнено(Адрес) Тогда
			СтруктураАдреса = УправлениеКонтактнойИнформациейКлиентСервер.ОписаниеНовойКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес);
			СтруктураАдреса.country = Строка(Справочники.СтраныМира.Россия);
			СтруктураАдреса.value = Адрес;
			
			ЗначениеАдреса = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(СтруктураАдреса);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда 
		Наименование = уатНастройкиШаблонов.СформироватьНаименованиеПоШаблону("Справочник_уатПунктыНазначения", ЭтотОбъект);
		Если НЕ ЗначениеЗаполнено(Наименование)
			И ЗначениеЗаполнено(Адрес) Тогда
			Наименование = Адрес;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа
		И НЕ ЗначениеЗаполнено(РадиусПоиска) Тогда
		РадиусПоиска = 100;
		
		ЗначениеУстановлено = Ложь;
		ТекПользователь     = Пользователи.АвторизованныйПользователь();
		ПодразделениеПользователь = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновноеПодразделениеОрганизации");
		Если ЗначениеЗаполнено(ПодразделениеПользователь) Тогда 
			ЗначениеНастройки = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ПодразделениеПользователь, ПланыВидовХарактеристик.уатПраваИНастройки.РадиусПоискаВПунктеМетров);
			Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда 
				РадиусПоиска        = ЗначениеНастройки;
				ЗначениеУстановлено = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеУстановлено Тогда 
			ОрганизацияПользователь = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация");
			Если ЗначениеЗаполнено(ОрганизацияПользователь) Тогда 
				ЗначениеНастройки = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ОрганизацияПользователь, ПланыВидовХарактеристик.уатПраваИНастройки.РадиусПоискаВПунктеМетров);
				Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда 
					РадиусПоиска = ЗначениеНастройки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа
		И НЕ ЗначениеЗаполнено(ПробегВнеГеозоны) 
		И Лат <> 0
		И Лон <> 0 Тогда 
		ПробегВнеГеозоны = уатОбщегоНазначения_уэ.ПолучитьПробегВнеГеозоны(Лат, Лон);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьСлучайныйЦветПункта() Экспорт
	ЦветНаКарте = уатЗащищенныеФункцииСервер_проф.СлучайноеЧисло(, 15);
	
	Если ЦветНаКарте = 0 Тогда 
		ЦветНаКарте = 16;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли