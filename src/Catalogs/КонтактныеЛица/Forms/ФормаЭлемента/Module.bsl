
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Автотест = Истина;
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Взаимодействия
	Взаимодействия.ПодготовитьОповещения(ЭтотОбъект, Параметры, Ложь);
	// Конец СтандартныеПодсистемы.Взаимодействия
	
	текФамилия  = Объект.Фамилия;
	текИмя      = Объект.Имя;
	текОтчество = Объект.Отчество;
	ПриИзмененииВидаКонтактногоЛица();
	ВидимостьДопонительнойИнформации(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента")
		И Параметры.Ключ.Пустая() Тогда
		Элементы.ВидКонтактногоЛица.Доступность    = Ложь;
		Элементы.ВидКонтактногоЛица.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	РазместитьРеквизитыЗапретУведомлений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если АвтоТест Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Взаимодействия
	ВзаимодействияКлиент.КонтактПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи, "КонтактныеЛица");
	// Конец СтандартныеПодсистемы.Взаимодействия
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура ВидКонтактногоЛицаПриИзменении(Элемент)

 	ПриИзмененииВидаКонтактногоЛица();
	ВидимостьДопонительнойИнформации(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента Фамилия.
//
&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	ПозицииПробелов = ОпределитьПозицииПробелов();

	Если ПозицииПробелов[0] > 0 Тогда

		ФамилияИзНаименования = Сред(Объект.Наименование, 1, (ПозицииПробелов[0] - 1));

		Если ФамилияИзНаименования <> текФамилия И НЕ ПустаяСтрока(ФамилияИзНаименования) Тогда
			
			текФамилия = СокрЛП(Объект.Фамилия);
			Возврат;

		КонецЕсли;

		Объект.Наименование = СокрЛП(Объект.Фамилия) + Сред(Объект.Наименование, ПозицииПробелов[0]);

	Иначе

		Если ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = СокрЛП(Объект.Фамилия);

		Иначе

			Если СокрЛП(Объект.Наименование) = текФамилия Тогда

				Объект.Наименование = СокрЛП(Объект.Фамилия);

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	текФамилия = СокрЛП(Объект.Фамилия);

КонецПроцедуры

// Обработчик события ПриИзменении элемента Имя.
//
&НаКлиенте
Процедура ИмяПриИзменении(Элемент)

	ПозицииПробелов = ОпределитьПозицииПробелов();

	Если ПозицииПробелов[0] > 0 И ПозицииПробелов[1] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1), 
			(ПозицииПробелов[1] - ПозицииПробелов[0] - 1));

		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			текИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя) 
			+ Сред(Объект.Наименование, ПозицииПробелов[1]);

	ИначеЕсли ПозицииПробелов[0] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1));

		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			текИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли; 

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Имя);

		Иначе

			Объект.Наименование = " " + СокрЛП(Объект.Имя);

		КонецЕсли; 

	КонецЕсли;

	текИмя = СокрЛП(Объект.Имя);

КонецПроцедуры

// Обработчик события ПриИзменении элемента Отчество.
//
&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)

	ПозицииПробелов = ОпределитьПозицииПробелов();

	Если ПозицииПробелов[1] > 0 Тогда

		ОтчествоИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[1] + 1));

		Если ОтчествоИзНаименования <> текОтчество И НЕ ПустаяСтрока(ОтчествоИзНаименования) Тогда

			текОтчество = СокрЛП(Объект.Отчество);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[1]) + СокрЛП(Объект.Отчество);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Отчество);

		Иначе

			Объект.Наименование = "  " + СокрЛП(Объект.Отчество);

		КонецЕсли;

	КонецЕсли;

	текОтчество = СокрЛП(Объект.Отчество);

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СписокВыбора = Новый Массив;

	Если НЕ ПустаяСтрока(Объект.Фамилия) Тогда
		СписокВыбора.Добавить(СокрЛП(Объект.Фамилия));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "."));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) И НЕ ПустаяСтрока(Объект.Отчество) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя) + " " + СокрЛП(Объект.Отчество)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "." 
			+ СокрЛП(Сред(Объект.Отчество,1,1)) + "."));
	КонецЕсли;

	Элементы.Наименование.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаСервере
Процедура ПриИзмененииВидаКонтактногоЛица()

	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт;
	КонецЕсли;

	Если Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента Тогда

		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.ОбъектВладелец = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		
	ИначеЕсли Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт Тогда

		Если Объект.ОбъектВладелец <> ПользователиКлиентСервер.ТекущийПользователь() Тогда
			Объект.ОбъектВладелец = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;
		
	Иначе

		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Пользователи") Тогда
			Объект.ОбъектВладелец = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект 	 = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидКонтактногоЛица = 
			ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда

		Элементы.ОбъектВладелец.Заголовок 	   = НСтр("en='Counterpartу';ru='Контрагент'");
		Элементы.ОбъектВладелец.Доступность	   = Истина;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Ложь;
			
	ИначеЕсли Объект.ВидКонтактногоЛица = 
			ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда

		Элементы.ОбъектВладелец.Заголовок 	   = НСтр("en='Responsible person';ru='Ответственный'");
		Элементы.ОбъектВладелец.Доступность	   = Ложь;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Истина
		
	Иначе
		
		Элементы.ОбъектВладелец.Заголовок 	   = НСтр("en='Responsible person';ru='Ответственный'");
		Элементы.ОбъектВладелец.Доступность	   = Истина;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Ложь;
    		
	КонецЕсли;
		
КонецПроцедуры	

&НаКлиенте
Функция ОпределитьПозицииПробелов()

	Пробелы = Новый Массив;

	Для а = 1 По 2 Цикл

		Пробелы.Добавить(0);

	КонецЦикла; 

	КолПробелов = 0;

	Для а = 1 По СтрДлина(Объект.Наименование) Цикл

		Если Сред(Объект.Наименование, а, 1) = " " Тогда

			Пробелы[КолПробелов] = а;
			КолПробелов = КолПробелов + 1;

		КонецЕсли;

		Если КолПробелов = 2 Тогда

			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат Пробелы;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДопонительнойИнформации(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидКонтактногоЛица = 
			ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
		Элементы.ГруппаРеквизитыКонтрагента.Видимость = Истина;
	Иначе
		Элементы.ГруппаРеквизитыКонтрагента.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура РазместитьРеквизитыЗапретУведомлений()
	
	Если Не уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП()
		Или Не ПолучитьФункциональнуюОпцию("уатИспользоватьУведомления_уэ") Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаКонтактнаяИнформация = Элементы.Найти("ГруппаКонтактнаяИнформация");
	Если ГруппаКонтактнаяИнформация <> Неопределено Тогда
		уатГруппаЗапретОтправкиУведомлений = Элементы.Добавить("уатГруппаЗапретОтправкиУведомлений", Тип("ГруппаФормы"), ГруппаКонтактнаяИнформация);
		уатГруппаЗапретОтправкиУведомлений.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		уатГруппаЗапретОтправкиУведомлений.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		уатГруппаЗапретОтправкиУведомлений.Отображение = ОтображениеОбычнойГруппы.Нет;
		уатГруппаЗапретОтправкиУведомлений.ОтображатьЗаголовок = Ложь;
		Элементы.Переместить(уатГруппаЗапретОтправкиУведомлений, ГруппаКонтактнаяИнформация,ГруппаКонтактнаяИнформация);
		
		уатЗапретОтправкиSMS = Элементы.Добавить("уатЗапретОтправкиSMS", Тип("ПолеФормы"), уатГруппаЗапретОтправкиУведомлений);
		уатЗапретОтправкиSMS.Вид = ВидПоляФормы.ПолеФлажка;
		уатЗапретОтправкиSMS.ПутьКДанным = "Объект.ЗапретОтправкиSMS";
		уатЗапретОтправкиЭлектроннойПочты = Элементы.Добавить("уатЗапретОтправкиЭлектроннойПочты", Тип("ПолеФормы"), уатГруппаЗапретОтправкиУведомлений);
		уатЗапретОтправкиЭлектроннойПочты.Вид = ВидПоляФормы.ПолеФлажка;
		уатЗапретОтправкиЭлектроннойПочты.ПутьКДанным = "Объект.ЗапретОтправкиЭлектроннойПочты";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
