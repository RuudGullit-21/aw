
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособРасчетаДнейПриИзменении(Элемент)
	
	Если Объект.СпособРасчетаДней = 0 Тогда
		Объект.ПроизводственныйКалендарь = Неопределено;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()

	Элементы.ПроизводственныйКалендарь.Видимость = (Объект.СпособРасчетаДней = 1);
	Элементы.ГруппаСобствТранспорт.Видимость = (Объект.ВидВладельца
		<> ПредопределенноеЗначение("Перечисление.уатВидыВладельцевСопроводительныхДокументов.ДокументыПеревозчика"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДокументаПриИзменении(Элемент)
	Если Объект.ВидВладельца
		= ПредопределенноеЗначение("Перечисление.уатВидыВладельцевСопроводительныхДокументов.ДокументыПеревозчика") Тогда
		
		Объект.УсловиеКонтроля = Неопределено;
		Объект.КоличествоДнейНаОбработку = 0;
		Объект.СпособРасчетаДней = 0;
		Объект.ПроизводственныйКалендарь = Неопределено;
	КонецЕсли;
	
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти
