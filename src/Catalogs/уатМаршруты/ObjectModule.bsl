#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа И ПредставлениеМаршрутаОднимПунктом
		И (уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() ИЛИ уатОбщегоНазначенияПовтИсп.ВариантПоставкиПРОФ()) Тогда
		ПунктПогрузки  = Ложь;
		ПунктРазгрузки = Ложь;
		
		Для Каждого ТекСтрока Из Этапы Цикл
			Если ПунктПогрузки = Ложь
				И ТекСтрока.ТипТочиМаршрута = Перечисления.уатТипыТочекМаршрута.Разгрузка Тогда
				ТекстНстр = Нстр("ru = 'Точка погрузки должна быть выше точки разгрузки.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНстр,,,,Отказ);
				Прервать;
			ИначеЕсли ПунктПогрузки = Ложь И ТекСтрока.ТипТочиМаршрута = Перечисления.уатТипыТочекМаршрута.Погрузка Тогда
				ПунктПогрузки = Истина;
			ИначеЕсли ТекСтрока.ТипТочиМаршрута = Перечисления.уатТипыТочекМаршрута.Разгрузка Тогда
				ПунктРазгрузки = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Отказ И Этапы.Количество() Тогда
			Если НЕ ПунктПогрузки ИЛИ НЕ ПунктРазгрузки Тогда
				ТекстНстр = Нстр("ru = 'В маршруте должна быть хотя бы 1 точка погрузки и 1 точка разгрузки.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНстр,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоГруппа И уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() И ИспользоватьДляПланированияВАРМЛогиста И Этапы.Количество() > 0 Тогда
		ОшибкаЗаполнения = Ложь;
		Если Этапы[0].ТипТочиМаршрута = Перечисления.уатТипыТочекМаршрута.Погрузка Тогда
			Сч = 1;
			Пока Сч <> Этапы.Количество() Цикл
				Если Этапы[Сч].ТипТочиМаршрута = Перечисления.уатТипыТочекМаршрута.Разгрузка Тогда
					Сч = Сч +1;
				Иначе
					ОшибкаЗаполнения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ОшибкаЗаполнения = Истина;
		КонецЕсли;
		
		Если ОшибкаЗаполнения Тогда
			Отказ = Истина;
			ТекстНстр = НСтр("ru='Маршрут для планирования в АРМ Логиста заполнен некорректно. Проверьте заполнение операций.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНстр,,,,Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЭтоГруппа И уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() И ИспользоватьДляПланированияВАРМЛогиста Тогда
		КоличествоТС = ТранспортныеСредства.Количество();
		ТаблицаТС = ТранспортныеСредства.Выгрузить(, "ТС");
		ТаблицаТС.Свернуть("ТС");
		КоличествоРазличныхТС = ТаблицаТС.Количество();
		Если КоличествоТС <> КоличествоРазличныхТС Тогда
			Отказ = Истина;
			ТекстНстр = НСтр("ru='Необходимо удалить дубликаты из списка закрепленных за маршрутом ТС.'; 
				|en = 'All duplicate vehicles should be removed.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстНстр,,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли