
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	РаскраситьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФильтрПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Не Копирование И НЕ Группа Тогда
		Отказ = Истина;
		
		СтруктураОтбора = Новый Структура;
		Если ЗначениеЗаполнено(Фильтр) Тогда		
			СтруктураОтбора.Вставить("ВидСостояния", Фильтр);
		КонецЕсли;
		ОткрытьФорму("Справочник.уатСостояниеТС.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", СтруктураОтбора));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьФильтр()
	Если ЗначениеЗаполнено(Фильтр) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, Новый ПолеКомпоновкиДанных("ВидСостояния"), 
			Фильтр, ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, Новый ПолеКомпоновкиДанных("ВидСостояния"), 
			Фильтр, ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РаскраситьСписок()  
	
	СписокУдаляемыхЭлементов = Новый СписокЗначений;
	Для Каждого ЭлементУсловногоОформления Из Список.УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный" Тогда
			СписокУдаляемыхЭлементов.Добавить(ЭлементУсловногоОформления);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из СписокУдаляемыхЭлементов Цикл
		Список.УсловноеОформление.Элементы.Удалить(Элемент.Значение);
	КонецЦикла;
	
	ВыборкаСостоянияТС = Справочники.уатСостояниеТС.Выбрать();
	
	Пока ВыборкаСостоянияТС.Следующий() Цикл  
		
		ЦветСостояния = ?(ЗначениеЗаполнено(ВыборкаСостоянияТС.ЦветСостояния), ВыборкаСостоянияТС.ЦветСостояния.Получить(), Неопределено);
		
		ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
		
		ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ВыборкаСостоянияТС.Ссылка;
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветСостояния); 
		ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный";
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолеЦветСостояния");
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


