
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	ТипЗначенияСтарый = Объект.ТипЗначенияТребования;
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Справочники.уатШаблоныТребованийКонтроляТСиВодителей) Тогда
		Элементы.ТипЗначенияТребования.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьОграничениеТипаЗначения();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипЗначенияТребованияПриИзменении(Элемент)
	
	Если Объект.ДоступныеЗначения.Количество() > 0 Тогда
		Оповещ = Новый ОписаниеОповещения("ТипЗначенияВопросОчистка", ЭтотОбъект);
		ПоказатьВопрос(Оповещ, "Список доступных значений будет очищен! Продолжить?", РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ТипЗначенияСтарый = Объект.ТипЗначенияТребования;
	УстановитьОграничениеТипаЗначения();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияВопросОчистка(Рез, ДопПараметры) Экспорт
	
	Если Рез = КодВозвратаДиалога.ОК Тогда
	    Объект.ДоступныеЗначения.Очистить();
		ТипЗначенияСтарый = Объект.ТипЗначенияТребования;
	Иначе
		Объект.ТипЗначенияТребования = ТипЗначенияСтарый;
	КонецЕсли;
	
	УстановитьОграничениеТипаЗначения();
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ДоступныеЗначения.Видимость = (Объект.ТипЗначенияТребования
		= ПредопределенноеЗначение("Перечисление.уатТипыЗначенийТребованийКонтроляТСиВодителей.Строка")
		ИЛИ Объект.ТипЗначенияТребования
		= ПредопределенноеЗначение("Перечисление.уатТипыЗначенийТребованийКонтроляТСиВодителей.Число"));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаЗначения()
	Если Объект.ТипЗначенияТребования
		= ПредопределенноеЗначение("Перечисление.уатТипыЗначенийТребованийКонтроляТСиВодителей.Строка") Тогда
		
		Элементы.ДоступныеЗначенияЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		
	ИначеЕсли Объект.ТипЗначенияТребования
		= ПредопределенноеЗначение("Перечисление.уатТипыЗначенийТребованийКонтроляТСиВодителей.Число") Тогда
		
		Элементы.ДоступныеЗначенияЗначение.ОграничениеТипа = Новый ОписаниеТипов("Число");
		
	Иначе
		Элементы.ДоступныеЗначенияЗначение.ОграничениеТипа = Новый ОписаниеТипов(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
