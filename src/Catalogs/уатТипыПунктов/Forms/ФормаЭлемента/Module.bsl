
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьКартографию = Константы.уатИспользоватьЭлектронныеКарты.Получить();

	Если Объект.НаименованиеКартинки = "" Тогда
		Объект.НаименованиеКартинки = 0;
	КонецЕсли;
	
	Если ИспользоватьКартографию Тогда
		УстановитьСписокВыбораСтандартныхКартинокТиповПунктов(); 
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) 
			И Параметры.Свойство("ЗначениеКопирования") Тогда
			ДанныеКартинки = Параметры.ЗначениеКопирования.Картинка.Получить();
		Иначе
			ДанныеКартинки = Объект.Ссылка.Картинка.Получить();  
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ДанныеКартинки) Тогда
			КартинкаНаКарте = 0;
			Изображение = СписокКартинок.НайтиПоИдентификатору(0);
		Иначе
			ИмяФайла = ПолучитьИмяВременногоФайла("cvg");
			ДанныеКартинки.Записать(ИмяФайла);
			
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.Прочитать(ИмяФайла);
			ТекстМакета = ТекстовыйДокумент.ПолучитьТекст();
			ДвоичныеДанныеМакета = ПолучитьДвоичныеДанныеИзСтроки(ТекстМакета);
			АдресКартинки        = ПоместитьВоВременноеХранилище(ДвоичныеДанныеМакета, Новый УникальныйИдентификатор);
			СписокКартинок.Добавить(АдресКартинки);
			Изображение  = АдресКартинки;
			
			Попытка
				КартинкаНаКарте = Число(Объект.НаименованиеКартинки);
			Исключение
				Элементы.Картинка.СписокВыбора.Добавить(13, Объект.НаименованиеКартинки);
				СписокКартинок.Добавить(АдресКартинки);
				КартинкаНаКарте = 13;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаКартинка.Видимость = ИспользоватьКартографию;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИспользоватьКартографию Тогда
		Если ЭтоАдресВременногоХранилища(Изображение) Тогда
			ТекущийОбъект.Картинка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Изображение), Новый СжатиеДанных(9));
		Иначе
			ТекущийОбъект.Картинка = Новый ХранилищеЗначения(Неопределено);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") Тогда
		Если ИсточникВыбора.ИмяФормы = "Справочник.уатТипыПунктов.Форма.ПодборТиповПунктов" Тогда
			Элементы.Список.Обновить();
			Элементы.Список.ТекущаяСтрока = ВыбранноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтоянкаПРПриИзменении(Элемент)
	
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(Объект.СтоянкаПР);
	
КонецПроцедуры

&НаКлиенте
Процедура СтоянкаДопПриИзменении(Элемент)
	
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(Объект.СтоянкаДоп);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	
	ПараметрыДиалога = Новый Структура("Режим, Фильтр, ИндексФильтра, Заголовок");
	ПараметрыДиалога.Режим         = РежимДиалогаВыбораФайла.Открытие;
	ПараметрыДиалога.Фильтр        = НСтр("ru = 'Формат SVG(*.svg)|*.svg'");
	ПараметрыДиалога.ИндексФильтра = 0;
	ПараметрыДиалога.Заголовок     = НСтр("en='Select image file';ru='Выберите файл изображения'");

	ПараметрыЗагрузкиФайла = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузкиФайла.ИдентификаторФормы = УникальныйИдентификатор;
	ЗаполнитьЗначенияСвойств(ПараметрыЗагрузкиФайла.Диалог, ПараметрыДиалога);

	ОбработчикВыбораФайлаОбработки = Новый ОписаниеОповещения("ВыбратьФайлПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект);
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОбработчикВыбораФайлаОбработки, ПараметрыЗагрузкиФайла);
	
КонецПроцедуры


#Область ОбработчикиСобытийЭлементовТаблицыФормы_РазрешенныеТипыТС

&НаКлиенте
Процедура РазрешенныеТипыТССтоянкаДопПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РазрешенныеТипыТС.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(ТекущиеДанные.СтоянкаДоп);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Процедура предназначена для формирования списка выбора в поле формы.
//
// Параметры:
//  ЭлементПолеВыбора - элемент формы, для которого необходимо заполнить список выбора.
//
&НаСервере
Процедура УстановитьСписокВыбораСтандартныхКартинокТиповПунктов()
	
	мсвМакетов = Новый Массив();
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаАдрес", "Адрес", 0));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаАвтосервис", "Автосервис", 1));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаАЗС", "АЗС", 2));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаГараж", "Гараж", 3));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаЗавод", "Завод", 4));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаКонтрагент", "Контрагент", 5));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаМагазин", "Магазин", 6));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаМестоДТП", "Место ДТП", 7));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаМестоНарушенияПДД", "Место нарушения ПДД", 8));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаМестоОтдыха", "Место отдыха", 9));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаПарковка", "Парковка", 10));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаПочта", "Почта", 11));
	мсвМакетов.Добавить(Новый Структура("Макет, Наименование, Индекс", "КартинкаСклад", "Склад", 12));
	
	уатТипыПунктов = Справочники.уатТипыПунктов;
	Для Каждого ТекСтрока Из мсвМакетов Цикл
		ТекМакет             = уатТипыПунктов.ПолучитьМакет(ТекСтрока.Макет);
		Итератор             = ТекСтрока.Индекс;
		Наименование         = ТекСтрока.Наименование;
		
		ТекстМакета          = ТекМакет.ПолучитьТекст();
		
		ДвоичныеДанныеМакета = ПолучитьДвоичныеДанныеИзСтроки(ТекстМакета);
		АдресКартинки        = ПоместитьВоВременноеХранилище(ДвоичныеДанныеМакета, Новый УникальныйИдентификатор);

		СписокКартинок.Добавить(АдресКартинки);
		
		ПоменятьРазмерыИзображения(ТекстМакета, 20, 20);
		ДвоичныеДанныеМакета = ПолучитьДвоичныеДанныеИзСтроки(ТекстМакета);
		
		ИзображениеИзМакета  = Новый Картинка(ДвоичныеДанныеМакета);
		Элементы.Картинка.СписокВыбора.Добавить(Итератор, Наименование,,ИзображениеИзМакета);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоменятьРазмерыИзображения(ТекстМакета, ШиринаОбласти, ВысотаОбласти)
	
	widthОбласти = СтрНайти(ТекстМакета, "width=");
	Если widthОбласти = 0 Тогда
		НачальнаяПозиция = СтрНайти(ТекстМакета, "svg ");
		НачалоСтроки        = Лев(ТекстМакета, НачальнаяПозиция + 3) 
			+ СтрШаблон("width=""%1""", ШиринаОбласти);
		ОкончаниеСтроки = Сред(ТекстМакета, НачальнаяПозиция + 3, СтрДлина(ТекстМакета));
		ТекстМакета = НачалоСтроки + ОкончаниеСтроки;
	Иначе
		НачальнаяПозицияШирины       = СтрНайти(ТекстМакета, "width=");
		НачальнаяПозицияКонцаШирины1 = СтрНайти(ТекстМакета, """",,НачальнаяПозицияШирины);
		НачальнаяПозицияКонцаШирины2 = СтрНайти(ТекстМакета, """",,НачальнаяПозицияКонцаШирины1 + 1);
		
		НачалоСтроки = Лев(ТекстМакета, НачальнаяПозицияКонцаШирины1) + ШиринаОбласти + "px";
		ОкончаниеСтроки = Сред(ТекстМакета, НачальнаяПозицияКонцаШирины2, СтрДлина(ТекстМакета));
		
		ТекстМакета = НачалоСтроки + ОкончаниеСтроки;
	КонецЕсли;
	
	heightОбласти = СтрНайти(ТекстМакета, "height=");
	Если heightОбласти = 0 Тогда
		НачальнаяПозиция = СтрНайти(ТекстМакета, "svg ");
		НачалоСтроки        = Лев(ТекстМакета, НачальнаяПозиция + 3) 
		+ СтрШаблон("height=""%1""", ШиринаОбласти);
		ОкончаниеСтроки = Сред(ТекстМакета, НачальнаяПозиция + 3, СтрДлина(ТекстМакета));
		ТекстМакета = НачалоСтроки + ОкончаниеСтроки;
	Иначе
		НачальнаяПозицияВысоты       = СтрНайти(ТекстМакета, "height=");
		НачальнаяПозицияКонцаВысоты1 = СтрНайти(ТекстМакета, """",,НачальнаяПозицияВысоты);
		НачальнаяПозицияКонцаВысоты2 = СтрНайти(ТекстМакета, """",,НачальнаяПозицияКонцаВысоты1 + 1);
		
		НачалоСтроки = Лев(ТекстМакета, НачальнаяПозицияКонцаВысоты1) + ВысотаОбласти + "px";
		ОкончаниеСтроки = Сред(ТекстМакета, НачальнаяПозицияКонцаВысоты2, СтрДлина(ТекстМакета));
		
		ТекстМакета = НачалоСтроки + ОкончаниеСтроки;
	КонецЕсли;
	
	viewBox = СтрНайти(ТекстМакета, "viewBox=");
	Если viewBox = 0 Тогда
		НачальнаяПозицияsvg = СтрНайти(ТекстМакета, "svg ");
		НачалоСтроки        = Лев(ТекстМакета, НачальнаяПозицияsvg + 3) 
			+ СтрШаблон("viewBox=""0 0 %1 %2""", ШиринаОбласти, ВысотаОбласти);
		ОкончаниеСтроки = Сред(ТекстМакета, НачальнаяПозицияsvg + 3, СтрДлина(ТекстМакета));
		ТекстМакета = НачалоСтроки + ОкончаниеСтроки;
	КонецЕсли;
	Возврат ТекстМакета;
КонецФункции

&НаСервере
Процедура ВыбратьФайлПослеПодключенияРасширенияРаботыСФайлами(Результат, СоответсвиеКартинок) Экспорт
	
	Если Результат <> Неопределено Тогда 
		
		ФайлКартинки = ПолучитьИзВременногоХранилища(Результат.Хранение);
		ИмяФайла = ПолучитьИмяВременногоФайла("cvg");
		ФайлКартинки.Записать(ИмяФайла);
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяФайла);
		ТекстСvg = ТекстовыйДокумент.ПолучитьТекст();
		
		ДвоичныеДанные = ПолучитьДвоичныеДанныеИзСтроки(ТекстСvg);
		Изображение    = Результат.Хранение;
		
		ИмяФайла = Результат.Имя;
		Если СтрНайти(ИмяФайла, "/") > 0 Тогда
			ПозицияРазделителя = СтрНайти(ИмяФайла, "/", НаправлениеПоиска.СКонца);
		ИначеЕсли СтрНайти(ИмяФайла, "\") > 0 Тогда
			ПозицияРазделителя = СтрНайти(ИмяФайла, "\", НаправлениеПоиска.СКонца);
		Иначе
			ПозицияРазделителя = 0;
		КонецЕсли;
		СтрИмяФайла = Сред(ИмяФайла, ПозицияРазделителя + 1);

		Если СписокКартинок.НайтиПоИдентификатору(13) <> Неопределено Тогда
			СписокКартинок.Вставить(13, Результат.Хранение);
			Элементы.Картинка.СписокВыбора.Вставить(13, 13, СтрИмяФайла);
		Иначе
			СписокКартинок.Добавить(Результат.Хранение);
			Элементы.Картинка.СписокВыбора.Добавить(13, СтрИмяФайла,,Новый Картинка());
		КонецЕсли;
		
		Объект.НаименованиеКартинки = СтрИмяФайла;
		КартинкаНаКарте   = 13;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяКартинкаПриИзменении(Элемент)
	Изображение = СписокКартинок.НайтиПоИдентификатору(КартинкаНаКарте);

	Если Элементы.Картинка.СписокВыбора.НайтиПоЗначению(КартинкаНаКарте).Значение = 13 Тогда
		Объект.НаименованиеКартинки = Элементы.Картинка.СписокВыбора.НайтиПоЗначению(КартинкаНаКарте).Представление;
	Иначе
		Объект.НаименованиеКартинки = Элементы.Картинка.СписокВыбора.НайтиПоЗначению(КартинкаНаКарте).Значение;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
