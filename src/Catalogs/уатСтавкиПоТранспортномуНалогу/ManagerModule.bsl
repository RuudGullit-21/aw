#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Загружает в фоне актуальные ставки транспортного налога из сервиса классификаторов
// Параметры см. в комментарии к ДлительныеОперации.ВыполнитьВФоне() 
//
Процедура ЗагрузитьСтавкиИзСервисаКлассификаторов(Параметры, АдресРезультата) Экспорт 

	Классификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторВСервисеКлассификаторов());
	РезультатЗагрузкиСтавок = РаботаСКлассификаторами.ОбновитьКлассификаторы(Классификаторы);
		
	Если НЕ ПустаяСтрока(РезультатЗагрузкиСтавок.КодОшибки) Тогда
		
		ШаблонСообщения = НСтр("ru = 'При загрузке ставок транспортного налога с сервиса классификаторов возникла ошибка:
								|%1'", ОбщегоНазначения.КодОсновногоЯзыка());
		ТекстСообщения = СтрШаблон(ШаблонСообщения, РезультатЗагрузкиСтавок.ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Обновление ставок транспортного налога'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.уатСтавкиПоТранспортномуНалогу,, 
			ТекстСообщения);
						
	КонецЕсли;	

КонецПроцедуры

// Определяет, есть ли в ИБ ставки транспортного налога
// 
// Возвращаемое значение:
//   - Булево - Истина, если есть хотя бы одна запись
//
Функция СтавкиНеЗаполнены() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтавкиТранспортногоНалога.Ставка КАК НалоговаяСтавка
	|ИЗ
	|	Справочник.уатСтавкиПоТранспортномуНалогу КАК СтавкиТранспортногоНалога
	|ГДЕ
	|	НЕ СтавкиТранспортногоНалога.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции 

// Возвращает идентификатор классификатора ставок транспортного налога в сервисе классификаторов
// 
Функция ИдентификаторВСервисеКлассификаторов() Экспорт 

	Возврат "RegionalTransportTaxRates";

КонецФункции
 
#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// ИнтернетПоддержкаПользователей.РаботаСКлассификаторами

// См. РаботаСКлассификаторамиПереопределяемый.ПриДобавленииКлассификаторов.
Процедура ПриДобавленииКлассификаторов(Классификаторы) Экспорт
	
	Описатель = РаботаСКлассификаторами.ОписаниеКлассификатора();
	Описатель.Наименование           = НСтр("ru = 'Региональные ставки транспортного налога'");
	Описатель.Идентификатор          = ИдентификаторВСервисеКлассификаторов();
	Описатель.ОбновлятьАвтоматически = Истина;
	Описатель.ОбщиеДанные            = Истина;

	Классификаторы.Добавить(Описатель);
	
КонецПроцедуры

// См. РаботаСКлассификаторамиПереопределяемый.ПриЗагрузкеКлассификатора.
Процедура ПриЗагрузкеКлассификатора(Идентификатор, Версия, Адрес, Обработан) Экспорт
	
	Если Идентификатор <> ИдентификаторВСервисеКлассификаторов() Тогда
		Возврат;
	КонецЕсли;
	
	Ставки = Новый ТаблицаЗначений;
	
	Ставки.Колонки.Добавить("НалоговыйПериод", ОбщегоНазначения.ОписаниеТипаЧисло(4,0, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("НомерРегиона",    ОбщегоНазначения.ОписаниеТипаЧисло(2,0, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("КатегорияТС",     ОбщегоНазначения.ОписаниеТипаСтрока(3));
    Ставки.Колонки.Добавить("МощностьМин",     ОбщегоНазначения.ОписаниеТипаЧисло(5,2, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("МощностьМакс",    ОбщегоНазначения.ОписаниеТипаЧисло(5,2, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("ВозрастТСМин",    ОбщегоНазначения.ОписаниеТипаЧисло(2,0, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("ВозрастТСМакс",   ОбщегоНазначения.ОписаниеТипаЧисло(2,0, ДопустимыйЗнак.Неотрицательный));
    Ставки.Колонки.Добавить("НалоговаяСтавка", ОбщегоНазначения.ОписаниеТипаЧисло(10,2, ДопустимыйЗнак.Неотрицательный));

	ПутьКФайлу = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ПутьКФайлу);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПутьКФайлу);
	ЧтениеXML.ПерейтиКСодержимому();
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Ставка" Тогда
			НоваяСтавка = Ставки.Добавить();
			Пока ЧтениеXML.Прочитать() Цикл
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
					ИмяКолонки = ЧтениеXML.Имя;
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда	
					Колонка = Ставки.Колонки.Найти(ИмяКолонки);
					// В файле есть данные, которые пока не используются
					Если Колонка = Неопределено Тогда
						Продолжить;
					КонецЕсли;	
					ТипЗначения = Колонка.ТипЗначения;
					НоваяСтавка[ИмяКолонки] = XMLЗначение(ТипЗначения.Типы()[0], ЧтениеXML.Значение);
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Ставка" Тогда
					Прервать;
				КонецЕсли;	
			
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
		
	ЧтениеXML.Закрыть();
	УдалитьФайлы(ПутьКФайлу);
	
	ПоляКлюча = "НалоговыйПериод, НомерРегиона, КатегорияТС";
	
	Ставки.Индексы.Добавить(ПоляКлюча);
	
	Группировки = Ставки.Скопировать(, ПоляКлюча);
	Группировки.Свернуть(ПоляКлюча);
	
	// Таблица ОКТМО регионов
	Макет = Справочники.уатСтавкиПоТранспортномуНалогу.ПолучитьМакет("КодыОКТМОСубъектовРФ");
	КодыОКТМОСубъектовРФ = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	ОКТМОРегионов = Новый Соответствие;
	
	Отбор = Новый Структура(ПоляКлюча);
	//Набор = РегистрыСведений.СтавкиТранспортногоНалога.СоздатьНаборЗаписей();
	
	ЕстьОшибки = Ложь;
	
	ТаблицаРегионов = АдресныйКлассификатор.СубъектыРФ();  // вспомогательная таблица для вывода наименования региона в сообщениях
	ШаблонПредставленияРегиона = НСтр("ru='%1 %2'"); //например: "Москва г"
	
	КолСтрок = Группировки.Количество();
	Инд       = 0;
	Записано  = 0;
	Обновлено = 0;
	Пропущено = 0;
	СписокРегионов = Неопределено;
	
	ТаблицаСтавки = СохраненныеСтавкиТранспортногоНалога();
	
	// Обновляем все ставки для отдельной категории ТС в одном регионе единой порцией (набором записей).
	// Так как мы рассматриваем ставки по отдельной категории ТС, как неделимую порцию данных, то это гарантирует, 
	// что при изменении интервалов мощности и/или возраста ТС внутри отдельной категории ТС обновление пройдет корректно.
	Для каждого Группировка Из Группировки Цикл
		Попытка
		    КатегорияТС = Перечисления.уатВидыТСТранспортныйНалог[Группировка.КатегорияТС];
			
			КодОКТМО = ОКТМОРегионов.Получить(Группировка.НомерРегиона);
			Если КодОКТМО = Неопределено Тогда
				СтрокаСоответствия = КодыОКТМОСубъектовРФ.Найти(Строка(Группировка.НомерРегиона), "КодСубъектаРФ");
				Если СтрокаСоответствия = Неопределено Тогда
					
					ОтменитьТранзакцию();
										
					СтрокаРегиона = ТаблицаРегионов.Найти(Группировка.НомерРегиона, "КодСубъектаРФ");
					НаименованиеРегиона = Группировка.НомерРегиона;
					Если СтрокаРегиона <> Неопределено Тогда
						НаименованиеРегиона = СтрШаблон(ШаблонПредставленияРегиона, СтрокаРегиона.Наименование, СтрокаРегиона.Сокращение);
					КонецЕсли;	
					
					ШаблонСообщения = НСтр("ru = 'Не выполнено обновление ставок транспортного налога в регионе ""%1"" по категории ""%2"" за %3 год:
					                        |не найден код ОКТМО региона'");
					
					ТекстСообщения = СтрШаблон(ШаблонСообщения,
						НаименованиеРегиона,
						КатегорияТС,
						Формат(Группировка.НалоговыйПериод, "ЧГ=0"));
						
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'Обновление ставок транспортного налога'", ОбщегоНазначения.КодОсновногоЯзыка()), 
						УровеньЖурналаРегистрации.Ошибка,
						Метаданные.Справочники.уатСтавкиПоТранспортномуНалогу,, 
						ТекстСообщения);
					
					ЕстьОшибки = Истина;
					Продолжить;
					
				КонецЕсли;	

				КодОКТМО = СтрокаСоответствия.КодОКТМО;
				ОКТМОРегионов.Вставить(Группировка.НомерРегиона, КодОКТМО);
			КонецЕсли;	
			
			Период = Дата(Группировка.НалоговыйПериод, 1, 1);
			
			//// Устанавливаем исключительную блокировку на записи регистра сведений, чтобы предотвратить
			//// параллельный запуск обновления ставок из другого сеанса.
			//БлокировкаДанных = Новый БлокировкаДанных;
			//ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.СтавкиТранспортногоНалога");
			//ЭлементБлокировки.УстановитьЗначение("Период", Период);
			//ЭлементБлокировки.УстановитьЗначение("ОКТМО", КодОКТМО);
			//ЭлементБлокировки.УстановитьЗначение("НаименованиеОбъектаНалогообложения", КатегорияТС);
			//
			//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			//БлокировкаДанных.Заблокировать();
			
			//Набор.Очистить();
			//
			//Набор.Отбор.Период.Установить(Период);
			//Набор.Отбор.ОКТМО.Установить(КодОКТМО);
			//Набор.Отбор.НаименованиеОбъектаНалогообложения.Установить(КатегорияТС);
			
			ЗаполнитьЗначенияСвойств(Отбор, Группировка);
			СтавкиПоКатегории = Ставки.НайтиСтроки(Отбор);
			
			Для каждого Ставка Из СтавкиПоКатегории Цикл
				//НоваяЗапись = Набор.Добавить();
				//
				//НоваяЗапись.Период = Период;
				//НоваяЗапись.ОКТМО = КодОКТМО;
				//НоваяЗапись.НаименованиеОбъектаНалогообложения = КатегорияТС;
				//
				//НоваяЗапись.МинимальноеЗначениеМощности = Ставка.МощностьМин;
				//НоваяЗапись.МаксимальноеЗначениеМощности = Ставка.МощностьМакс;
				//НоваяЗапись.МинимальноеКоличествоЛетСГодаВыпускаТС = Ставка.ВозрастТСМин;
				//НоваяЗапись.МаксимальноеКоличествоЛетСГодаВыпускаТС = Ставка.ВозрастТСМакс;
				//НоваяЗапись.НалоговаяСтавка = Ставка.НалоговаяСтавка;
				
				Рез = НайтиСоздатьСтавкуТранспортногоНалога(ТаблицаСтавки,
					Период, КодОКТМО, КатегорияТС,
					Ставка.МощностьМин, Ставка.МощностьМакс,
					Ставка.ВозрастТСМин, Ставка.ВозрастТСМакс,
					Ставка.НалоговаяСтавка, СписокРегионов);
					
				Если Рез.Записан Тогда
					Записано = Записано + 1;
				ИначеЕсли Рез.Обновлен Тогда
					Обновлено = Обновлено + 1;
				ИначеЕсли Рез.Пропущен Тогда
					Пропущено = Пропущено + 1;
				КонецЕсли;
			КонецЦикла; 
				
		Исключение
			СтрокаРегиона = ТаблицаРегионов.Найти(Группировка.НомерРегиона, "КодСубъектаРФ");
			НаименованиеРегиона = Группировка.НомерРегиона;
			Если СтрокаРегиона <> Неопределено Тогда
				НаименованиеРегиона = СтрШаблон(ШаблонПредставленияРегиона, СтрокаРегиона.Наименование, СтрокаРегиона.Сокращение);
			КонецЕсли;	
	
			ШаблонСообщения = НСтр("ru = 'Не выполнено обновление ставок транспортного налога в регионе ""%1"" (ОКТМО %2) по категории ""%3"" за %4 год:
			                        |%5'");
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения,
				НаименованиеРегиона,
				КодОКТМО,
				КатегорияТС,
				Формат(Группировка.НалоговыйПериод, "ЧГ=0"),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление ставок транспортного налога'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.уатСтавкиПоТранспортномуНалогу,, 
				ТекстСообщения);
				
			ЕстьОшибки = Истина;
			
		КонецПопытки;
		
		Инд = Инд + 1;
		ДлительныеОперации.СообщитьПрогресс(Окр(Инд/КолСтрок*100),
			СтрШаблон(НСтр("ru = 'Обновление ставок транспортного налога (добавлено %1, обновлено %2, загружено ранее %3)'"),
				Записано, Обновлено, Пропущено));
		
	КонецЦикла;  
	
	Обработан = НЕ ЕстьОшибки;
		
КонецПроцедуры

// Конец ИнтернетПоддержкаПользователей.РаботаСКлассификаторами

Функция СохраненныеСтавкиТранспортногоНалога()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	уатСтавкиПоТранспортномуНалогу.Ссылка КАК Ссылка,
	|	уатСтавкиПоТранспортномуНалогу.Вид КАК Вид,
	|	уатСтавкиПоТранспортномуНалогу.ОКТМО КАК ОКТМО,
	|	уатСтавкиПоТранспортномуНалогу.Период КАК Период,
	|	уатСтавкиПоТранспортномуНалогу.ЛСилОт КАК МощностьМин,
	|	уатСтавкиПоТранспортномуНалогу.ЛСилДо КАК МощностьМакс,
	|	уатСтавкиПоТранспортномуНалогу.МинимальноеКоличествоЛетСГодаВыпускаТС КАК ВозрастТСМин,
	|	уатСтавкиПоТранспортномуНалогу.МаксимальноеКоличествоЛетСГодаВыпускаТС КАК ВозрастТСМакс,
	|	уатСтавкиПоТранспортномуНалогу.Ставка КАК Ставка
	|ИЗ
	|	Справочник.уатСтавкиПоТранспортномуНалогу КАК уатСтавкиПоТранспортномуНалогу
	|ГДЕ
	|	НЕ уатСтавкиПоТранспортномуНалогу.ПометкаУдаления");
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция НайтиСоздатьСтавкуТранспортногоНалога(ТаблицаСтавки, Период, КодОКТМО, КатегорияТС,
	МощностьМин, МощностьМакс, ВозрастТСМин, ВозрастТСМакс, НалоговаяСтавка, СписокРегионов = Неопределено)

	Рез = Новый Структура("Записан, Обновлен, Пропущен", Ложь, Ложь, Ложь);

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Период", Период);
	СтруктураПоиска.Вставить("ОКТМО", КодОКТМО);
	СтруктураПоиска.Вставить("Вид", КатегорияТС);
	СтруктураПоиска.Вставить("МощностьМин", МощностьМин);
	СтруктураПоиска.Вставить("МощностьМакс", МощностьМакс);
	СтруктураПоиска.Вставить("ВозрастТСМин", ВозрастТСМин);
	СтруктураПоиска.Вставить("ВозрастТСМакс", ВозрастТСМакс);
	
	мсвСтрокиПоиск = ТаблицаСтавки.НайтиСтроки(СтруктураПоиска);
	
	Если мсвСтрокиПоиск.Количество() = 0 Тогда
		СтавкаОбъект = Справочники.уатСтавкиПоТранспортномуНалогу.СоздатьЭлемент();
		СтавкаОбъект.УстановитьНовыйКод();
		СтавкаОбъект.Наименование = НаименованиеПоУмолчанию(Период, КодОКТМО, КатегорияТС, МощностьМин, МощностьМакс,
			ВозрастТСМин, ВозрастТСМакс, СписокРегионов);
		СтавкаОбъект.Период = Период;
		СтавкаОбъект.ОКТМО = КодОКТМО;
		СтавкаОбъект.Вид = КатегорияТС;
		СтавкаОбъект.ЛСилОт = МощностьМин;
		СтавкаОбъект.ЛСилДо = МощностьМакс;
		СтавкаОбъект.МинимальноеКоличествоЛетСГодаВыпускаТС = ВозрастТСМин;
		СтавкаОбъект.МаксимальноеКоличествоЛетСГодаВыпускаТС = ВозрастТСМакс;
		СтавкаОбъект.Ставка = НалоговаяСтавка;
		
		СтавкаОбъект.Записать();
		Рез.Записан = Истина;
	Иначе
		СтавкаОбъект = мсвСтрокиПоиск[0].Ссылка.ПолучитьОбъект();
		
		Если СтавкаОбъект.Ставка <> НалоговаяСтавка Тогда
			СтавкаОбъект.Ставка = НалоговаяСтавка;
			
			СтавкаОбъект.Записать();
			Рез.Обновлен = Истина;
		Иначе
			Рез.Пропущен = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Рез;
	
КонецФункции

Функция НаименованиеПоУмолчанию(Период, КодОКТМО, КатегорияТС, МощностьМин, МощностьМакс,
	ВозрастТСМин, ВозрастТСМакс, СписокРегионов = Неопределено) Экспорт
	
	Если СписокРегионов	= Неопределено Тогда
		СписокРегионов = Новый СписокЗначений;
		
		Макет = Справочники.уатСтавкиПоТранспортномуНалогу.ПолучитьМакет("КодыОКТМОСубъектовРФ");
		КодыОКТМОСубъектовРФ = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
		
		ТаблицаРегионов = АдресныйКлассификатор.СубъектыРФ();
		
		ШаблонПредставления = НСтр("ru='%1 %2'"); //например: "Москва г"
		Для Каждого Регион Из ТаблицаРегионов Цикл
			
			СтрокаСоответствия = КодыОКТМОСубъектовРФ.Найти(Строка(Регион.КодСубъектаРФ), "КодСубъектаРФ");
			
			Если СтрокаСоответствия <> Неопределено Тогда
			
				Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
					Регион.Наименование,
					Регион.Сокращение);
				СписокРегионов.Добавить(СтрокаСоответствия.КодОКТМО, Представление);
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Сортируем по наименованию региона
		СписокРегионов.СортироватьПоПредставлению();
	КонецЕсли;
	
	НазваниеРегиона = СписокРегионов.НайтиПоЗначению(КодОКТМО).Представление;
	
	СтавкаНаименование = Метаданные.Перечисления.уатВидыТСТранспортныйНалог.ЗначенияПеречисления[
		Перечисления.уатВидыТСТранспортныйНалог.Индекс(КатегорияТС)].Имя;
	
	Если ЗначениеЗаполнено(МощностьМин) Тогда
		СтавкаНаименование = СтавкаНаименование + " от " + МощностьМин;
		Если НЕ ЗначениеЗаполнено(МощностьМакс) Тогда
			СтавкаНаименование = СтавкаНаименование + " л.с.";
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(МощностьМакс) Тогда
		СтавкаНаименование = СтавкаНаименование + " до " + МощностьМакс + " л.с.";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВозрастТСМин) Тогда
		СтавкаНаименование = СтавкаНаименование + " от " + ВозрастТСМин;
		Если НЕ ЗначениеЗаполнено(ВозрастТСМакс) Тогда
			СтавкаНаименование = СтавкаНаименование + " лет";
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ВозрастТСМакс) Тогда
		СтавкаНаименование = СтавкаНаименование + " до " + ВозрастТСМакс + " лет";
	КонецЕсли;
	
	СтавкаНаименование = СтавкаНаименование + " / " + НазваниеРегиона + " / " + Формат(Период, "ДФ=yyyy");

	Возврат СтавкаНаименование;
	
КонецФункции

#КонецОбласти

#КонецЕсли
