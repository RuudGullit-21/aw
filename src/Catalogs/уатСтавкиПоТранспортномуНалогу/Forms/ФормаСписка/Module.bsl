
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатСтавкиПоТранспортномуНалогу) Тогда
		Элементы.ФормаЗагрузитьСтавки.Видимость = Ложь;
	КонецЕсли;
	
	СведенияОДлительнойОперации = Новый Структура;
	СведенияОДлительнойОперации.Вставить("Имя", "");
	СведенияОДлительнойОперации.Вставить("ДлительнаяОперация", Неопределено);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьСтавки(Команда)
	
	НачатьОбновлениеСтавокНалога();
	ОжидатьЗавершениеОбновленияСтавокНалога();
	
	// Если Интернет-поддержка не подключена, то загрузка ставок не начнется, и будет взведен флаг ТребуетсяПодключениеИнтернетПоддержки.
	// В этом случае позже повторно запустим загрузку ставок, если пользователь введет данные авторизации.
	Если ТребуетсяПодключениеИнтернетПоддержки Тогда
		
		ТекстСообщения = НСтр("ru = 'Для автоматического обновления ставок транспортного налога необходимо подключить Интернет-поддержку пользователей.'");
		
		Если ИнтернетПоддержкаПользователейКлиент.ДоступноПодключениеИнтернетПоддержки() Тогда
			ТекстСообщения = ТекстСообщения + Символы.ПС + НСтр("ru = 'Подключить Интернет-поддержку?'");
			ОбработчикЗавершения = Новый ОписаниеОповещения("ПриОтветеНаВопросПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикЗавершения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстСообщения = ТекстСообщения + Символы.ПС + НСтр("ru = 'Обратитесь к администратору.'");
			ПоказатьПредупреждение(ОбработчикЗавершения, ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Макет = Справочники.уатСтавкиПоТранспортномуНалогу.ПолучитьМакет("КодыОКТМОСубъектовРФ");
	КодыОКТМОСубъектовРФ = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	
	ТаблицаРегионов = АдресныйКлассификатор.СубъектыРФ();
	
	ШаблонПредставления = НСтр("ru='%1 %2'"); //например: "Москва г"
	Для Каждого Регион Из ТаблицаРегионов Цикл
		
		СтрокаСоответствия = КодыОКТМОСубъектовРФ.Найти(Строка(Регион.КодСубъектаРФ), "КодСубъектаРФ");
		
		Если СтрокаСоответствия <> Неопределено Тогда
		
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
				Регион.Наименование,
				Регион.Сокращение);
				
			ЭлементУО = УсловноеОформление.Элементы.Добавить();

			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОКТМО");

			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
				"Список.ОКТМО", ВидСравненияКомпоновкиДанных.Равно, СтрокаСоответствия.КодОКТМО);

			ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Представление);
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

#Область ОбновлениеСтавокНалогаССервисаКлассификаторов

&НаСервере
Процедура НачатьОбновлениеСтавокНалога()

	ТребуетсяПодключениеИнтернетПоддержки = Ложь;
	
	// В режиме сервиса или АРМ ставки налога обновляются менеджером сервиса, т.к. это общие данные
	Если ОбщегоНазначения.РазделениеВключено() ИЛИ ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме") Тогда
		Возврат;
	КонецЕсли; 
	
	Классификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.уатСтавкиПоТранспортномуНалогу.ИдентификаторВСервисеКлассификаторов());
	ПроверкаАктуальностиСтавокНалога = РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов(Классификаторы);
		
	Если ЗначениеЗаполнено(ПроверкаАктуальностиСтавокНалога.КодОшибки) Тогда
		
		Если ПроверкаАктуальностиСтавокНалога.КодОшибки = "НеверныйЛогинИлиПароль" Тогда
			// Перед следующей попыткой загрузки запросим данные подключения к ИПП 
			ТребуетсяПодключениеИнтернетПоддержки = Истина;
		Иначе	
			ШаблонСообщения = НСтр("ru = 'При загрузке ставок транспортного налога с сервиса классификаторов возникла ошибка:
									|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверкаАктуальностиСтавокНалога.ИнформацияОбОшибке);
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление ставок транспортного налога'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.уатСтавкиПоТранспортномуНалогу,, 
				ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		Возврат;
		
	КонецЕсли;	
	
	Если ПроверкаАктуальностиСтавокНалога.ДоступныеВерсии.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Загружены актуальные ставки налога'"));
		Возврат;
	КонецЕсли;	
			
	Если СведенияОДлительнойОперации.ДлительнаяОперация <> Неопределено Тогда
		// Не завершено предыдущее фоновое задание, новое не запускаем.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0; // Не ждем завершения.
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление ставок транспортного налога'");
	
	СведенияОДлительнойОперации.Имя = "ОбновитьСтавкиТранспортногоНалога";
	СведенияОДлительнойОперации.ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"Справочники.уатСтавкиПоТранспортномуНалогу.ЗагрузитьСтавкиИзСервисаКлассификаторов",
		Новый Структура(),
		ПараметрыВыполнения);
				
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеОбновленияСтавокНалога()

	Если СведенияОДлительнойОперации.ДлительнаяОперация = Неопределено Тогда
		// Фоновое задание не запущено или обновление ставок не требуется.
		Возврат;
	КонецЕсли;
		
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru='Идет загрузка ставок транспортного налога.'");
	
	ОповещенияОЗавершении = Новый ОписаниеОповещения("ОбновлениеСтавокНалогаЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		СведенияОДлительнойОперации.ДлительнаяОперация,
		ОповещенияОЗавершении,
		ПараметрыОжидания);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСтавокНалогаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Успешно = Истина;
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Статус", "") = "Ошибка" Тогда
		Успешно = Ложь;
		ШаблонСообщения = НСтр("ru = 'При загрузке ставок транспортного налога с сервиса классификаторов возникла ошибка:
								|%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Результат.КраткоеПредставлениеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

	СведенияОДлительнойОперации.ДлительнаяОперация = Неопределено; // Сбросим признак выполнения.
	
	Если Успешно Тогда
		// Обновим ставки на форме
		Элементы.Список.Обновить();
		Оповестить("ЗагруженыСтавкиТранспортногоНалога");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросПодключитьИнтернетПоддержку(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект);	
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Получаем ставки транспортного налога и обновляем ставку на форме.
		НачатьОбновлениеСтавокНалога();
		ОжидатьЗавершениеОбновленияСтавокНалога();
		
		ТребуетсяПодключениеИнтернетПоддержки = Ложь;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
