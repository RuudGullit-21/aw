
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
		
	// СтандартныеПодсистемы.Взаимодействия
	Взаимодействия.ПодготовитьОповещения(ЭтотОбъект, Параметры, Ложь);
	// Конец СтандартныеПодсистемы.Взаимодействия

	Если НЕ ЗначениеЗаполнено(Объект.ВладелецДокументов) И Параметры.Свойство("ВладелецДокументов") Тогда
		Объект.ВладелецДокументов = Параметры.ВладелецДокументов;
	КонецЕсли;

	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.ВладелецДокументов) Тогда
		ЗаполнитьРеквизитыПоВладельцу();
		Если ТипЗнч(Объект.ВладелецДокументов) = Тип("СправочникСсылка.Сотрудники") Тогда
			Объект.ПринадлежностьДокументов = ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыВодителя");
		ИначеЕсли ТипЗнч(Объект.ВладелецДокументов) = Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.ПринадлежностьДокументов = ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыКонтрагента");
		Иначе
			Объект.ПринадлежностьДокументов = ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыТС");
		КонецЕсли;
	Конецесли;
	
	НаименованиеПоШаблону = СформироватьНаименованиеСервер();
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Картинка = ПолучитьНавигационнуюСсылкуКартинки(ТекущийОбъект.ОсновнаяКартинка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Взаимодействия
	ВзаимодействияКлиент.КонтактПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи, "уатРегистрационныеДокументы");
	// Конец СтандартныеПодсистемы.Взаимодействия
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не Объект.ЭтоГруппа Тогда
		Если ЗначениеЗаполнено(Объект.Наименование)
			И Объект.Наименование = НаименованиеПоШаблону 
			И НЕ ВопросСформироватьНаименование Тогда
			
			НовоеНаименование              = СформироватьНаименованиеСервер();
			Если НовоеНаименование <> НаименованиеПоШаблону Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, НовоеНаименование), "Измененить наименование на новое по шаблону?",
				РежимДиалогаВопрос.ДаНет,60,КодВозвратаДиалога.Нет);
			Иначе
				ВопросСформироватьНаименование = Истина;
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(Объект.Наименование) Тогда
			Объект.Наименование = СформироватьНаименованиеСервер();
			Модифицированность             = Истина;
			ВопросСформироватьНаименование = Истина;
		КонецЕсли;
	Иначе
		ВопросСформироватьНаименование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ВопросСформироватьНаименование 
		И ЗначениеЗаполнено(Объект.Наименование)
		И Объект.Наименование = НаименованиеПоШаблону Тогда
		СтандартнаяОбработка			 = Ложь;
		ЗавершениеРаботы				 = Ложь;
		Отказ							 = Истина;
		ВопросСформироватьНаименование	 = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьДокументовПриИзменении(Элемент)
	Если Объект.ПринадлежностьДокументов = ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыВодителя") Тогда
		Элементы.Владелец.Заголовок = Нстр("en = 'Employee'; ru = 'Сотрудник'");
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	ИначеЕсли Объект.ПринадлежностьДокументов = ПредопределенноеЗначение("Перечисление.уатПринадлежностьДокументов.ДокументыКонтрагента") Тогда
		Элементы.Владелец.Заголовок = Нстр("en = 'Counterpartie'; ru = 'Контрагент'");
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	Иначе
		Элементы.Владелец.Заголовок = Нстр("en = 'Vehicle'; ru = 'ТС'");
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.уатТС"); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяКартинкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.ОсновнаяКартинка = ВыбранноеЗначение;
	Картинка = ПолучитьНавигационнуюСсылкуКартинки(Объект.ОсновнаяКартинка, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура КартинкаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.ОсновнаяКартинка) Тогда
		КартинкаНажатиеЗавершение = Новый ОписаниеОповещения("КартинкаНажатиеЗавершение", ЭтотОбъект);
		РаботаСФайламиКлиент.ОткрытьФормуФайла(Объект.ОсновнаяКартинка, СтандартнаяОбработка,,КартинкаНажатиеЗавершение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ЗаполнитьКатегорииПоВидуДокумента(Неопределено);
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ЗаполнитьРеквизитыПоВладельцу();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗагрузитьКартинку(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ТекстНСТР = НСтр("en='To perform this operation, you must record the item. The document will be recorded.';ru='Для выполнения данной операции необходимо записать элемент. Данные будут записаны.'");
		ОповещениеЗаписатьОбъект = Новый ОписаниеОповещения("ЗагрузитьКартинкуВопрос", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеЗаписатьОбъект, ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ОбработчикРезультата = Новый ОписаниеОповещения("ВыбратьФайлЗавершение", ЭтотОбъект);
	РаботаСФайламиКлиент.ДобавитьФайл(ОбработчикРезультата, Объект.Ссылка, ЭтотОбъект, 2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинку(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ТекстНСТР = НСтр("en='To perform this operation, you must record the item. The document will be recorded.';ru='Для выполнения данной операции необходимо записать элемент. Данные будут записаны.'");
		ОповещениеЗаписатьОбъект = Новый ОписаниеОповещения("ВыбратьФайлЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеЗаписатьОбъект, ТекстНСТР, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Объект.Ссылка, Элементы.ОсновнаяКартинка);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	Объект.Наименование   = СформироватьНаименованиеСервер();
	НаименованиеПоШаблону = Объект.Наименование;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьШаблон(Команда)
	
	ПараметрыФормы = Новый Структура("ОбъектНастройки", "Справочник_уатРегистрационныеДокументы");
	ОткрытьФорму("ОбщаяФорма.уатНастройкаШаблона", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКатегорииПоВидуДокумента(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ПоказатьПредупреждение(Неопределено, "Не указан вид документа");
		Возврат;
	КонецЕсли;
	
	Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ВидДокумента, "УчетКатегорий") = Истина Тогда
		Если Объект.Категории.Количество() = 0 Тогда
			ЗаполнитьКатегорииПоВидуДокументаЗавершение();
		Иначе
			Оповещ = Новый ОписаниеОповещения("ЗаполнитьКатегорииПоВидуДокументаВопрос", ЭтотОбъект);
			ТекстВопроса = "Табличная часть ""Категории"" будет перезаполнена по виду документа. Продолжить?";
			ПоказатьВопрос(Оповещ, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		КонецЕсли;
	Иначе
		Объект.Категории.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКатегорииПоВидуДокументаВопрос(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ЗаполнитьКатегорииПоВидуДокументаЗавершение();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКатегорииПоВидуДокументаЗавершение()
	мсвОткрытыеКатегории = Новый Массив;
	Для Каждого ТекСтрока Из Объект.Категории Цикл
		Если ТекСтрока.Открыта Тогда
			мсвОткрытыеКатегории.Добавить(ТекСтрока.Категория);
		КонецЕсли;
	КонецЦикла;
	
	Объект.Категории.Очистить();
	
	мсвКатегорииПоВиду = ПолучитьКатегорииПоВидуДокумента(Объект.ВидДокумента);
	Если мсвКатегорииПоВиду.Количество() = 0 Тогда
		ПоказатьПредупреждение(Неопределено, "Для вида документа """ + Объект.ВидДокумента + """ не указаны категории!");
	Иначе
		Для Каждого ТекКатегория Из мсвКатегорииПоВиду Цикл
			НоваяСтрока = Объект.Категории.Добавить();
			НоваяСтрока.Категория = ТекКатегория;
			Если мсвОткрытыеКатегории.Найти(ТекКатегория) <> Неопределено Тогда
				НоваяСтрока.Открыта = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКатегорииПоВидуДокумента(ВидДокумента)
	Возврат ВидДокумента.Категории.Выгрузить().ВыгрузитьКолонку("Категория");
КонецФункции

&НаКлиенте
Процедура ОчиститьКартинку(Команда)	
	ТекстНСТР = СтрШаблон(НСтр("ru='Удалить файл ""%1"" без возможности восстановления? Да - удалить, Нет - сохранить в Присоединенных файлах';en='Remove file ""%1"" without recovery? Yes - remove, No - save in Attached files'"),ИмяОсновногоИзображения(Объект.ОсновнаяКартинка));
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьПрисоединенныйФайлВопрос",ЭтотОбъект),ТекстНСТР, РежимДиалогаВопрос.ДаНетОтмена);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// Продолжение процедуры ЗагрузитьКартинку.
&НаКлиенте
Процедура ВыбратьФайлЗавершение(Результат, ДопПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Свойство("ФайлДобавлен") И Результат.ФайлДобавлен Тогда
			Если Результат.Свойство("ФайлСсылка") Тогда
				Объект.ОсновнаяКартинка = Результат.ФайлСсылка;
				Картинка = ПолучитьНавигационнуюСсылкуКартинки(Объект.ОсновнаяКартинка, УникальныйИдентификатор);
			КонецЕсли;
		ИначеЕсли Результат.Свойство("ТекстОшибки") И ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Продолжение процедуры ЗагрузитьКартинку.
&НаКлиенте
Процедура ЗагрузитьКартинкуВопрос(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Не ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			Записать();
		Исключение
			ТекстСообщения = ИнформацияОбОшибке();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
		ОбработчикРезультата = Новый ОписаниеОповещения("ВыбратьФайлЗавершение", ЭтотОбъект);
		РаботаСФайламиКлиент.ДобавитьФайл(ОбработчикРезультата, Объект.Ссылка, ЭтотОбъект, 2, Истина);
	КонецЕсли;
КонецПроцедуры

// Продолжение процедуры КартинкаНажатие.
&НаКлиенте
Процедура КартинкаНажатиеЗавершение(Результат, ДопПараметры) Экспорт
	Картинка = ПолучитьНавигационнуюСсылкуКартинки(Объект.ОсновнаяКартинка, УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Функция СформироватьНаименованиеСервер()
	
	СпрОб = РеквизитФормыВЗначение("Объект");
	Возврат уатНастройкиШаблонов.СформироватьНаименованиеПоШаблону("Справочник_уатРегистрационныеДокументы", СпрОб);
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость()
	ДокументПросрочен = ЗначениеЗаполнено(Объект.ДатаОкончания) И Объект.ДатаОкончания < НачалоДня(ТекущаяДата());
	Элементы.ГруппаСтатус.Видимость = ДокументПросрочен ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.уатСтатусыдействия.НеДействует");
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.уатСтатусыдействия.НеДействует") Тогда
		Элементы.СтатусНадпись.Заголовок = Нстр("ru = 'Документ не действует!'");
	ИначеЕсли ДокументПросрочен Тогда
		Элементы.СтатусНадпись.Заголовок = Нстр("ru = 'Срок действия документа истек!'");
	Иначе
		Элементы.СтатусНадпись.Заголовок = "";
	КонецЕсли;

	Элементы.ГруппаСтраницаКатегории.Видимость = (уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ВидДокумента, "УчетКатегорий") = Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, НовоеНаименование) Экспорт
	
	ВопросСформироватьНаименование = Истина;
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Наименование   = СформироватьНаименованиеСервер();
		НаименованиеПоШаблону = Объект.Наименование;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Если Не ЗначениеЗаполнено(ФайлКартинки) Тогда
		Возврат "";
	КонецЕсли;
	
	Попытка
		
		ПараметрыФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
		ПараметрыФайла.ИдентификаторФормы = ИдентификаторФормы;
		ПараметрыФайла.ВызыватьИсключение = Ложь;
		Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ПараметрыФайла).СсылкаНаДвоичныеДанныеФайла;
		
	Исключение
		Возврат "";
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыПоВладельцу()
	
	Если ТипЗнч(Объект.ВладелецДокументов) = Тип("СправочникСсылка.уатТС") Тогда
		Объект.Организация   = Объект.ВладелецДокументов.Организация;
		Объект.Подразделение = Объект.ВладелецДокументов.Подразделение;
	ИначеЕсли ТипЗнч(Объект.ВладелецДокументов) = Тип("СправочникСсылка.Сотрудники") Тогда
		СведенияВодитель = уатОбщегоНазначения.уатПрочитатьРеквизитыВодителя(Объект.ВладелецДокументов,
			ТекущаяДатаСеанса());

		Объект.Организация   = СведенияВодитель.Организация;
		Объект.Подразделение = СведенияВодитель.ПодразделениеОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьАдресКартинки()
	
	Если Объект.ОсновнаяКартинка.Пустая() Тогда
		Картинка = "";
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		Попытка
			Картинка = РаботаСФайлами.ДанныеФайла(Объект.ОсновнаяКартинка, УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла;
		Исключение
			Картинка = "";
		КонецПопытки;
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура УдалитьПрисоединенныйФайлВопрос(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		УдалитьПрисоединенныйФайлЗавершение(Объект.ОсновнаяКартинка);
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
	Иначе
		Модифицированность = Ложь;
		Возврат;
	КонецЕсли;
	
	Объект.ОсновнаяКартинка = ПредопределенноеЗначение("Справочник.уатРегистрационныеДокументыПрисоединенныеФайлы.ПустаяСсылка");
	ОбновитьАдресКартинки();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПрисоединенныйФайлЗавершение(ФайлНаУдаление = Неопределено)
	
	Если Не ФайлНаУдаление.Пустая() Тогда
		
		Попытка
			ФайлНаУдаление.ПолучитьОбъект().Удалить();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяОсновногоИзображения(Картинка)
	
	Возврат Картинка.Наименование;
	
КонецФункции

#КонецОбласти
