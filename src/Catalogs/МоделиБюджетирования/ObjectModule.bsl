#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
	
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ШагиБюджетныхПроцессов.Ссылка
		|ИЗ
		|	Справочник.ШагиБюджетныхПроцессов КАК ШагиБюджетныхПроцессов
		|ГДЕ
		|	ШагиБюджетныхПроцессов.Владелец = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если Не ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			СправочникОбъект = Справочники.ШагиБюджетныхПроцессов.СоздатьГруппу();
			СправочникОбъект.Владелец = Ссылка;
			СправочникОбъект.Периодичность = Периодичность;
			СправочникОбъект.ПорядокВыполненияШагов = Перечисления.ПорядокВыполненияШаговБюджетногоПроцесса.Параллельно;
			СправочникОбъект.УсловиеЗапуска = Перечисления.ТипыУсловийЗапускаШаговБюджетногоПроцесса.ДоНачалаПериода;
			СправочникОбъект.ТипСрока = Перечисления.ТипыСроковШаговБюджетногоПроцесса.ВКалендарныхДнях;
			СправочникОбъект.Записать();
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если Справочники.МоделиБюджетирования.МодельБюджетированияДействует(Ссылка) Тогда
		Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			УстановитьПривилегированныйРежим(Истина);
			Задачи.БюджетнаяЗадача.ФормированиеБюджетныхЗадач();
			УстановитьПривилегированныйРежим(Ложь);
		Иначе
			ФоновыеЗадания.Выполнить("БюджетированиеСервер.ФормированиеБюджетныхЗадач");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Статус = Перечисления.СтатусыМоделейБюджетирования.Действует Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МоделиБюджетирования.Ссылка
		|ИЗ
		|	Справочник.МоделиБюджетирования КАК МоделиБюджетирования
		|ГДЕ
		|	МоделиБюджетирования.Ссылка <> &Ссылка
		|	И МоделиБюджетирования.Статус = &Действует
		|	И НЕ МоделиБюджетирования.ПометкаУдаления
		|	И (МоделиБюджетирования.НачалоДействия МЕЖДУ &НачалоДействия И &КонецДействия
		|		ИЛИ МоделиБюджетирования.КонецДействия МЕЖДУ &НачалоДействия И &КонецДействия
		|		ИЛИ (МоделиБюджетирования.НачалоДействия <= &НачалоДействия 
		|				И (МоделиБюджетирования.КонецДействия >= &КонецДействия ИЛИ МоделиБюджетирования.КонецДействия = &ПустаяДата))
		|		ИЛИ (&КонецДействия = &ПустаяДата И МоделиБюджетирования.КонецДействия >= &НачалоДействия))";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Действует", Перечисления.СтатусыМоделейБюджетирования.Действует);
		Запрос.УстановитьПараметр("НачалоДействия", НачалоДействия);
		Запрос.УстановитьПараметр("КонецДействия", КонецДействия);
		Запрос.УстановитьПараметр("ПустаяДата", '00010101000000');
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрЗаменить(НСтр("en='Модель пересекается по периоду действия с моделью ""%Модель%""';ru='Модель пересекается по периоду действия с моделью ""%Модель%""'"), "%Модель%", Выборка.Ссылка), 
				ЭтотОбъект, "НачалоДействия", , Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ИспользоватьДляЗаполненияЛимитовРасходаДС Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СценарийДляЗаполненияЛимитовРасходаДС");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьиБюджетовДляЗаполненияЛимитовРасходаДС");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ИспользоватьДляЗаполненияЛимитовРасходаДС Тогда
		СценарийДляЗаполненияЛимитовРасходаДС = Неопределено;
		СтатьиБюджетовДляЗаполненияЛимитовРасходаДС.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли