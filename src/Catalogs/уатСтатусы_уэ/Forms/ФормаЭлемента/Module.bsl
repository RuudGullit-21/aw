
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Объект, ЭтотОбъект, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	ЦветТекста = ?(ЗначениеЗаполнено(ЭлементСправочника.ЦветТекстаПоУмолчанию), ЭлементСправочника.ЦветТекстаПоУмолчанию.Получить(), Новый Цвет(0, 0, 0));
	ЦветФона   = ?(ЗначениеЗаполнено(ЭлементСправочника.ЦветФонаПоУмолчанию), ЭлементСправочника.ЦветФонаПоУмолчанию.Получить(), Новый Цвет(255, 255, 255));
	
	// установка цвета фона по умолчанию для нового объекта
	Если Параметры.Ключ.Пустая() Тогда
	    ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;	
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.уатСтатусы_уэ) Тогда 
		Элементы.ЦветФона.ТолькоПросмотр     = Истина;
		Элементы.ЦветТекста.ТолькоПросмотр   = Истина;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
	Элементы.ГруппаСопрДокументы.Видимость = ПолучитьФункциональнуюОпцию("уатИспользоватьДокументооборот");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ЦветТекстаПоУмолчанию = Новый ХранилищеЗначения(ЦветТекста);
	ТекущийОбъект.ЦветФонаПоУмолчанию = Новый ХранилищеЗначения(ЦветФона);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписанЭлементСтатусДокумента", Объект.Ссылка);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура ДействуетНаСопроводительныеДокументыПриИзменении(Элемент)
	Если Объект.ДействуетНаСопроводительныеДокументы И Объект.ВидВладельца.Пустая() Тогда
		Объект.ВидВладельца = ПредопределенноеЗначение("Перечисление.уатВидыВладельцевСопроводительныхДокументов.ОбщиеДокументы");
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	// shmi: отключил 
	//Если Объект.Предопределенный Тогда 
	//	Элементы.ДействуетНаЗаказыГрузоотправителей.Доступность = Ложь;
	//	Элементы.ДействуетНаЗаказыПеревозчику.Доступность       = Ложь;
	//	Элементы.ДействуетНаПотребностиВПеревозке.Доступность   = Ложь;
	//КонецЕсли;
	
	Если уатОбщегоНазначенияПовтИсп.ВариантПоставкиКОРП() Тогда
		Элементы.ДействуетНаАктыОтгрузки.Видимость = Истина;
		Элементы.ДействуетНаАктыПриемки.Видимость = Истина;
		Элементы.ДействуетНаОперацииСГрузами.Видимость = Истина;
	Иначе
		Элементы.ДействуетНаАктыОтгрузки.Видимость = Ложь;
		Элементы.ДействуетНаАктыПриемки.Видимость = Ложь;
		Элементы.ДействуетНаОперацииСГрузами.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ВидВладельца.Видимость = Объект.ДействуетНаСопроводительныеДокументы;
	
КонецПроцедуры

#КонецОбласти
